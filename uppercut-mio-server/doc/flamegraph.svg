<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1350" onload="init(evt)" viewBox="0 0 1200 1350" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1350" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1333.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1333.00"> </text><svg id="frames" x="10" width="1180" total_samples="476744"><g><title>__libc_malloc (60 samples, 0.01%)</title><rect x="0.0076%" y="757" width="0.0126%" height="15" fill="rgb(227,0,7)" fg:x="36" fg:w="60"/><text x="0.2576%" y="767.50"></text></g><g><title>alloc::string::String::with_capacity (65 samples, 0.01%)</title><rect x="0.0073%" y="885" width="0.0136%" height="15" fill="rgb(217,0,24)" fg:x="35" fg:w="65"/><text x="0.2573%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (64 samples, 0.01%)</title><rect x="0.0076%" y="869" width="0.0134%" height="15" fill="rgb(221,193,54)" fg:x="36" fg:w="64"/><text x="0.2576%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (64 samples, 0.01%)</title><rect x="0.0076%" y="853" width="0.0134%" height="15" fill="rgb(248,212,6)" fg:x="36" fg:w="64"/><text x="0.2576%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (64 samples, 0.01%)</title><rect x="0.0076%" y="837" width="0.0134%" height="15" fill="rgb(208,68,35)" fg:x="36" fg:w="64"/><text x="0.2576%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (64 samples, 0.01%)</title><rect x="0.0076%" y="821" width="0.0134%" height="15" fill="rgb(232,128,0)" fg:x="36" fg:w="64"/><text x="0.2576%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (64 samples, 0.01%)</title><rect x="0.0076%" y="805" width="0.0134%" height="15" fill="rgb(207,160,47)" fg:x="36" fg:w="64"/><text x="0.2576%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (64 samples, 0.01%)</title><rect x="0.0076%" y="789" width="0.0134%" height="15" fill="rgb(228,23,34)" fg:x="36" fg:w="64"/><text x="0.2576%" y="799.50"></text></g><g><title>alloc::alloc::alloc (64 samples, 0.01%)</title><rect x="0.0076%" y="773" width="0.0134%" height="15" fill="rgb(218,30,26)" fg:x="36" fg:w="64"/><text x="0.2576%" y="783.50"></text></g><g><title>alloc::fmt::format (132 samples, 0.03%)</title><rect x="0.0067%" y="901" width="0.0277%" height="15" fill="rgb(220,122,19)" fg:x="32" fg:w="132"/><text x="0.2567%" y="911.50"></text></g><g><title>core::fmt::Write::write_fmt (60 samples, 0.01%)</title><rect x="0.0218%" y="885" width="0.0126%" height="15" fill="rgb(250,228,42)" fg:x="104" fg:w="60"/><text x="0.2718%" y="895.50"></text></g><g><title>core::fmt::write (59 samples, 0.01%)</title><rect x="0.0220%" y="869" width="0.0124%" height="15" fill="rgb(240,193,28)" fg:x="105" fg:w="59"/><text x="0.2720%" y="879.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (75 samples, 0.02%)</title><rect x="0.0558%" y="837" width="0.0157%" height="15" fill="rgb(216,20,37)" fg:x="266" fg:w="75"/><text x="0.3058%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (50 samples, 0.01%)</title><rect x="0.0610%" y="821" width="0.0105%" height="15" fill="rgb(206,188,39)" fg:x="291" fg:w="50"/><text x="0.3110%" y="831.50"></text></g><g><title>alloc::string::String::push_str (50 samples, 0.01%)</title><rect x="0.0610%" y="805" width="0.0105%" height="15" fill="rgb(217,207,13)" fg:x="291" fg:w="50"/><text x="0.3110%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (50 samples, 0.01%)</title><rect x="0.0610%" y="789" width="0.0105%" height="15" fill="rgb(231,73,38)" fg:x="291" fg:w="50"/><text x="0.3110%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (50 samples, 0.01%)</title><rect x="0.0610%" y="773" width="0.0105%" height="15" fill="rgb(225,20,46)" fg:x="291" fg:w="50"/><text x="0.3110%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (50 samples, 0.01%)</title><rect x="0.0610%" y="757" width="0.0105%" height="15" fill="rgb(210,31,41)" fg:x="291" fg:w="50"/><text x="0.3110%" y="767.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (63 samples, 0.01%)</title><rect x="0.0837%" y="837" width="0.0132%" height="15" fill="rgb(221,200,47)" fg:x="399" fg:w="63"/><text x="0.3337%" y="847.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (60 samples, 0.01%)</title><rect x="0.0843%" y="821" width="0.0126%" height="15" fill="rgb(226,26,5)" fg:x="402" fg:w="60"/><text x="0.3343%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (210 samples, 0.04%)</title><rect x="0.0537%" y="869" width="0.0440%" height="15" fill="rgb(249,33,26)" fg:x="256" fg:w="210"/><text x="0.3037%" y="879.50"></text></g><g><title>core::fmt::write (208 samples, 0.04%)</title><rect x="0.0541%" y="853" width="0.0436%" height="15" fill="rgb(235,183,28)" fg:x="258" fg:w="208"/><text x="0.3041%" y="863.50"></text></g><g><title>alloc::fmt::format (252 samples, 0.05%)</title><rect x="0.0451%" y="885" width="0.0529%" height="15" fill="rgb(221,5,38)" fg:x="215" fg:w="252"/><text x="0.2951%" y="895.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (312 samples, 0.07%)</title><rect x="0.0428%" y="901" width="0.0654%" height="15" fill="rgb(247,18,42)" fg:x="204" fg:w="312"/><text x="0.2928%" y="911.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (590 samples, 0.12%)</title><rect x="0.0002%" y="933" width="0.1238%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="590"/><text x="0.2502%" y="943.50"></text></g><g><title>parsed::parser::single::{{closure}} (590 samples, 0.12%)</title><rect x="0.0002%" y="917" width="0.1238%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="590"/><text x="0.2502%" y="927.50"></text></g><g><title>parsed::stream::ByteStream::next (75 samples, 0.02%)</title><rect x="0.1082%" y="901" width="0.0157%" height="15" fill="rgb(225,111,53)" fg:x="516" fg:w="75"/><text x="0.3582%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (73 samples, 0.02%)</title><rect x="0.1324%" y="869" width="0.0153%" height="15" fill="rgb(238,160,17)" fg:x="631" fg:w="73"/><text x="0.3824%" y="879.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (71 samples, 0.01%)</title><rect x="0.1328%" y="853" width="0.0149%" height="15" fill="rgb(214,148,48)" fg:x="633" fg:w="71"/><text x="0.3828%" y="863.50"></text></g><g><title>parsed::stream::ByteStream::get (70 samples, 0.01%)</title><rect x="0.1330%" y="837" width="0.0147%" height="15" fill="rgb(232,36,49)" fg:x="634" fg:w="70"/><text x="0.3830%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (49 samples, 0.01%)</title><rect x="0.1374%" y="821" width="0.0103%" height="15" fill="rgb(209,103,24)" fg:x="655" fg:w="49"/><text x="0.3874%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (49 samples, 0.01%)</title><rect x="0.1374%" y="805" width="0.0103%" height="15" fill="rgb(229,88,8)" fg:x="655" fg:w="49"/><text x="0.3874%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (54 samples, 0.01%)</title><rect x="0.1477%" y="869" width="0.0113%" height="15" fill="rgb(213,181,19)" fg:x="704" fg:w="54"/><text x="0.3977%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::matcher::MatchError&gt; (50 samples, 0.01%)</title><rect x="0.1485%" y="853" width="0.0105%" height="15" fill="rgb(254,191,54)" fg:x="708" fg:w="50"/><text x="0.3985%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (50 samples, 0.01%)</title><rect x="0.1485%" y="837" width="0.0105%" height="15" fill="rgb(241,83,37)" fg:x="708" fg:w="50"/><text x="0.3985%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (50 samples, 0.01%)</title><rect x="0.1485%" y="821" width="0.0105%" height="15" fill="rgb(233,36,39)" fg:x="708" fg:w="50"/><text x="0.3985%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (50 samples, 0.01%)</title><rect x="0.1485%" y="805" width="0.0105%" height="15" fill="rgb(226,3,54)" fg:x="708" fg:w="50"/><text x="0.3985%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.01%)</title><rect x="0.1485%" y="789" width="0.0105%" height="15" fill="rgb(245,192,40)" fg:x="708" fg:w="50"/><text x="0.3985%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (50 samples, 0.01%)</title><rect x="0.1485%" y="773" width="0.0105%" height="15" fill="rgb(238,167,29)" fg:x="708" fg:w="50"/><text x="0.3985%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (50 samples, 0.01%)</title><rect x="0.1485%" y="757" width="0.0105%" height="15" fill="rgb(232,182,51)" fg:x="708" fg:w="50"/><text x="0.3985%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (50 samples, 0.01%)</title><rect x="0.1768%" y="805" width="0.0105%" height="15" fill="rgb(231,60,39)" fg:x="843" fg:w="50"/><text x="0.4268%" y="815.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (79 samples, 0.02%)</title><rect x="0.1882%" y="805" width="0.0166%" height="15" fill="rgb(208,69,12)" fg:x="897" fg:w="79"/><text x="0.4382%" y="815.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (67 samples, 0.01%)</title><rect x="0.1907%" y="789" width="0.0141%" height="15" fill="rgb(235,93,37)" fg:x="909" fg:w="67"/><text x="0.4407%" y="799.50"></text></g><g><title>alloc::fmt::format (218 samples, 0.05%)</title><rect x="0.1594%" y="853" width="0.0457%" height="15" fill="rgb(213,116,39)" fg:x="760" fg:w="218"/><text x="0.4094%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (157 samples, 0.03%)</title><rect x="0.1722%" y="837" width="0.0329%" height="15" fill="rgb(222,207,29)" fg:x="821" fg:w="157"/><text x="0.4222%" y="847.50"></text></g><g><title>core::fmt::write (152 samples, 0.03%)</title><rect x="0.1733%" y="821" width="0.0319%" height="15" fill="rgb(206,96,30)" fg:x="826" fg:w="152"/><text x="0.4233%" y="831.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (222 samples, 0.05%)</title><rect x="0.1590%" y="869" width="0.0466%" height="15" fill="rgb(218,138,4)" fg:x="758" fg:w="222"/><text x="0.4090%" y="879.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (367 samples, 0.08%)</title><rect x="0.1296%" y="901" width="0.0770%" height="15" fill="rgb(250,191,14)" fg:x="618" fg:w="367"/><text x="0.3796%" y="911.50"></text></g><g><title>parsed::parser::before::{{closure}} (355 samples, 0.07%)</title><rect x="0.1321%" y="885" width="0.0745%" height="15" fill="rgb(239,60,40)" fg:x="630" fg:w="355"/><text x="0.3821%" y="895.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (404 samples, 0.08%)</title><rect x="0.1275%" y="917" width="0.0847%" height="15" fill="rgb(206,27,48)" fg:x="608" fg:w="404"/><text x="0.3775%" y="927.50"></text></g><g><title>alloc::string::String::reserve (62 samples, 0.01%)</title><rect x="0.2163%" y="837" width="0.0130%" height="15" fill="rgb(225,35,8)" fg:x="1031" fg:w="62"/><text x="0.4663%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (62 samples, 0.01%)</title><rect x="0.2163%" y="821" width="0.0130%" height="15" fill="rgb(250,213,24)" fg:x="1031" fg:w="62"/><text x="0.4663%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (62 samples, 0.01%)</title><rect x="0.2163%" y="805" width="0.0130%" height="15" fill="rgb(247,123,22)" fg:x="1031" fg:w="62"/><text x="0.4663%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (59 samples, 0.01%)</title><rect x="0.2169%" y="789" width="0.0124%" height="15" fill="rgb(231,138,38)" fg:x="1034" fg:w="59"/><text x="0.4669%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (56 samples, 0.01%)</title><rect x="0.2175%" y="773" width="0.0117%" height="15" fill="rgb(231,145,46)" fg:x="1037" fg:w="56"/><text x="0.4675%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (118 samples, 0.02%)</title><rect x="0.2144%" y="853" width="0.0248%" height="15" fill="rgb(251,118,11)" fg:x="1022" fg:w="118"/><text x="0.4644%" y="863.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1253" width="0.2400%" height="15" fill="rgb(217,147,25)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1263.50"></text></g><g><title>uppercut_mio_server::protocol::process (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1237" width="0.2400%" height="15" fill="rgb(247,81,37)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1247.50"></text></g><g><title>parsed::http::parse_http_request (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1221" width="0.2400%" height="15" fill="rgb(209,12,38)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1231.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1205" width="0.2400%" height="15" fill="rgb(227,1,9)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1215.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1189" width="0.2400%" height="15" fill="rgb(248,47,43)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1199.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1173" width="0.2400%" height="15" fill="rgb(221,10,30)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1183.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1157" width="0.2400%" height="15" fill="rgb(210,229,1)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1167.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1141" width="0.2400%" height="15" fill="rgb(222,148,37)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1151.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1125" width="0.2400%" height="15" fill="rgb(234,67,33)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1135.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1109" width="0.2400%" height="15" fill="rgb(247,98,35)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1119.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1093" width="0.2400%" height="15" fill="rgb(247,138,52)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1103.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1077" width="0.2400%" height="15" fill="rgb(213,79,30)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1087.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1061" width="0.2400%" height="15" fill="rgb(246,177,23)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1071.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1045" width="0.2400%" height="15" fill="rgb(230,62,27)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1055.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1029" width="0.2400%" height="15" fill="rgb(216,154,8)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1039.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="1013" width="0.2400%" height="15" fill="rgb(244,35,45)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1023.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="997" width="0.2400%" height="15" fill="rgb(251,115,12)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="1007.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="981" width="0.2400%" height="15" fill="rgb(240,54,50)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="991.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="965" width="0.2400%" height="15" fill="rgb(233,84,52)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,144 samples, 0.24%)</title><rect x="0.0002%" y="949" width="0.2400%" height="15" fill="rgb(207,117,47)" fg:x="1" fg:w="1144"/><text x="0.2502%" y="959.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (554 samples, 0.12%)</title><rect x="0.1240%" y="933" width="0.1162%" height="15" fill="rgb(249,43,39)" fg:x="591" fg:w="554"/><text x="0.3740%" y="943.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (133 samples, 0.03%)</title><rect x="0.2123%" y="917" width="0.0279%" height="15" fill="rgb(209,38,44)" fg:x="1012" fg:w="133"/><text x="0.4623%" y="927.50"></text></g><g><title>parsed::http::as_string (129 samples, 0.03%)</title><rect x="0.2131%" y="901" width="0.0271%" height="15" fill="rgb(236,212,23)" fg:x="1016" fg:w="129"/><text x="0.4631%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (129 samples, 0.03%)</title><rect x="0.2131%" y="885" width="0.0271%" height="15" fill="rgb(242,79,21)" fg:x="1016" fg:w="129"/><text x="0.4631%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (126 samples, 0.03%)</title><rect x="0.2137%" y="869" width="0.0264%" height="15" fill="rgb(211,96,35)" fg:x="1019" fg:w="126"/><text x="0.4637%" y="879.50"></text></g><g><title>alloc::fmt::format (50 samples, 0.01%)</title><rect x="0.2473%" y="565" width="0.0105%" height="15" fill="rgb(253,215,40)" fg:x="1179" fg:w="50"/><text x="0.4973%" y="575.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (147 samples, 0.03%)</title><rect x="0.2473%" y="597" width="0.0308%" height="15" fill="rgb(211,81,21)" fg:x="1179" fg:w="147"/><text x="0.4973%" y="607.50"></text></g><g><title>parsed::parser::single::{{closure}} (147 samples, 0.03%)</title><rect x="0.2473%" y="581" width="0.0308%" height="15" fill="rgb(208,190,38)" fg:x="1179" fg:w="147"/><text x="0.4973%" y="591.50"></text></g><g><title>parsed::stream::ByteStream::next (52 samples, 0.01%)</title><rect x="0.2672%" y="565" width="0.0109%" height="15" fill="rgb(235,213,38)" fg:x="1274" fg:w="52"/><text x="0.5172%" y="575.50"></text></g><g><title>start_thread (178 samples, 0.04%)</title><rect x="0.2473%" y="1253" width="0.0373%" height="15" fill="rgb(237,122,38)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1263.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (178 samples, 0.04%)</title><rect x="0.2473%" y="1237" width="0.0373%" height="15" fill="rgb(244,218,35)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (178 samples, 0.04%)</title><rect x="0.2473%" y="1221" width="0.0373%" height="15" fill="rgb(240,68,47)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (178 samples, 0.04%)</title><rect x="0.2473%" y="1205" width="0.0373%" height="15" fill="rgb(210,16,53)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (178 samples, 0.04%)</title><rect x="0.2473%" y="1189" width="0.0373%" height="15" fill="rgb(235,124,12)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1199.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (178 samples, 0.04%)</title><rect x="0.2473%" y="1173" width="0.0373%" height="15" fill="rgb(224,169,11)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (178 samples, 0.04%)</title><rect x="0.2473%" y="1157" width="0.0373%" height="15" fill="rgb(250,166,2)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1167.50"></text></g><g><title>std::panicking::try (178 samples, 0.04%)</title><rect x="0.2473%" y="1141" width="0.0373%" height="15" fill="rgb(242,216,29)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (178 samples, 0.04%)</title><rect x="0.2473%" y="1125" width="0.0373%" height="15" fill="rgb(230,116,27)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (178 samples, 0.04%)</title><rect x="0.2473%" y="1109" width="0.0373%" height="15" fill="rgb(228,99,48)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (178 samples, 0.04%)</title><rect x="0.2473%" y="1093" width="0.0373%" height="15" fill="rgb(253,11,6)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1103.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (178 samples, 0.04%)</title><rect x="0.2473%" y="1077" width="0.0373%" height="15" fill="rgb(247,143,39)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1087.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (178 samples, 0.04%)</title><rect x="0.2473%" y="1061" width="0.0373%" height="15" fill="rgb(236,97,10)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (178 samples, 0.04%)</title><rect x="0.2473%" y="1045" width="0.0373%" height="15" fill="rgb(233,208,19)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1055.50"></text></g><g><title>std::panicking::try (178 samples, 0.04%)</title><rect x="0.2473%" y="1029" width="0.0373%" height="15" fill="rgb(216,164,2)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (178 samples, 0.04%)</title><rect x="0.2473%" y="1013" width="0.0373%" height="15" fill="rgb(220,129,5)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (178 samples, 0.04%)</title><rect x="0.2473%" y="997" width="0.0373%" height="15" fill="rgb(242,17,10)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="1007.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (178 samples, 0.04%)</title><rect x="0.2473%" y="981" width="0.0373%" height="15" fill="rgb(242,107,0)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (178 samples, 0.04%)</title><rect x="0.2473%" y="965" width="0.0373%" height="15" fill="rgb(251,28,31)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="975.50"></text></g><g><title>uppercut::core::worker_loop (178 samples, 0.04%)</title><rect x="0.2473%" y="949" width="0.0373%" height="15" fill="rgb(233,223,10)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="959.50"></text></g><g><title>std::panic::catch_unwind (178 samples, 0.04%)</title><rect x="0.2473%" y="933" width="0.0373%" height="15" fill="rgb(215,21,27)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="943.50"></text></g><g><title>std::panicking::try (178 samples, 0.04%)</title><rect x="0.2473%" y="917" width="0.0373%" height="15" fill="rgb(232,23,21)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="927.50"></text></g><g><title>std::panicking::try::do_call (178 samples, 0.04%)</title><rect x="0.2473%" y="901" width="0.0373%" height="15" fill="rgb(244,5,23)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (178 samples, 0.04%)</title><rect x="0.2473%" y="885" width="0.0373%" height="15" fill="rgb(226,81,46)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="895.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (178 samples, 0.04%)</title><rect x="0.2473%" y="869" width="0.0373%" height="15" fill="rgb(247,70,30)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="879.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (178 samples, 0.04%)</title><rect x="0.2473%" y="853" width="0.0373%" height="15" fill="rgb(212,68,19)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="863.50"></text></g><g><title>uppercut_mio_server::protocol::process (178 samples, 0.04%)</title><rect x="0.2473%" y="837" width="0.0373%" height="15" fill="rgb(240,187,13)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="847.50"></text></g><g><title>parsed::http::parse_http_request (178 samples, 0.04%)</title><rect x="0.2473%" y="821" width="0.0373%" height="15" fill="rgb(223,113,26)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="831.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (178 samples, 0.04%)</title><rect x="0.2473%" y="805" width="0.0373%" height="15" fill="rgb(206,192,2)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="815.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (178 samples, 0.04%)</title><rect x="0.2473%" y="789" width="0.0373%" height="15" fill="rgb(241,108,4)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="799.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (178 samples, 0.04%)</title><rect x="0.2473%" y="773" width="0.0373%" height="15" fill="rgb(247,173,49)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="783.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (178 samples, 0.04%)</title><rect x="0.2473%" y="757" width="0.0373%" height="15" fill="rgb(224,114,35)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="767.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (178 samples, 0.04%)</title><rect x="0.2473%" y="741" width="0.0373%" height="15" fill="rgb(245,159,27)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="751.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (178 samples, 0.04%)</title><rect x="0.2473%" y="725" width="0.0373%" height="15" fill="rgb(245,172,44)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="735.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (178 samples, 0.04%)</title><rect x="0.2473%" y="709" width="0.0373%" height="15" fill="rgb(236,23,11)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="719.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (178 samples, 0.04%)</title><rect x="0.2473%" y="693" width="0.0373%" height="15" fill="rgb(205,117,38)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="703.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (178 samples, 0.04%)</title><rect x="0.2473%" y="677" width="0.0373%" height="15" fill="rgb(237,72,25)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="687.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (178 samples, 0.04%)</title><rect x="0.2473%" y="661" width="0.0373%" height="15" fill="rgb(244,70,9)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="671.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (178 samples, 0.04%)</title><rect x="0.2473%" y="645" width="0.0373%" height="15" fill="rgb(217,125,39)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="655.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (178 samples, 0.04%)</title><rect x="0.2473%" y="629" width="0.0373%" height="15" fill="rgb(235,36,10)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (178 samples, 0.04%)</title><rect x="0.2473%" y="613" width="0.0373%" height="15" fill="rgb(251,123,47)" fg:x="1179" fg:w="178"/><text x="0.4973%" y="623.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (72 samples, 0.02%)</title><rect x="0.2846%" y="613" width="0.0151%" height="15" fill="rgb(221,13,13)" fg:x="1357" fg:w="72"/><text x="0.5346%" y="623.50"></text></g><g><title>parsed::parser::single::{{closure}} (72 samples, 0.02%)</title><rect x="0.2846%" y="597" width="0.0151%" height="15" fill="rgb(238,131,9)" fg:x="1357" fg:w="72"/><text x="0.5346%" y="607.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (51 samples, 0.01%)</title><rect x="0.2890%" y="581" width="0.0107%" height="15" fill="rgb(211,50,8)" fg:x="1378" fg:w="51"/><text x="0.5390%" y="591.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (101 samples, 0.02%)</title><rect x="0.2846%" y="1253" width="0.0212%" height="15" fill="rgb(245,182,24)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (101 samples, 0.02%)</title><rect x="0.2846%" y="1237" width="0.0212%" height="15" fill="rgb(242,14,37)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (101 samples, 0.02%)</title><rect x="0.2846%" y="1221" width="0.0212%" height="15" fill="rgb(246,228,12)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (101 samples, 0.02%)</title><rect x="0.2846%" y="1205" width="0.0212%" height="15" fill="rgb(213,55,15)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1215.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (101 samples, 0.02%)</title><rect x="0.2846%" y="1189" width="0.0212%" height="15" fill="rgb(209,9,3)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (101 samples, 0.02%)</title><rect x="0.2846%" y="1173" width="0.0212%" height="15" fill="rgb(230,59,30)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1183.50"></text></g><g><title>std::panicking::try (101 samples, 0.02%)</title><rect x="0.2846%" y="1157" width="0.0212%" height="15" fill="rgb(209,121,21)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (101 samples, 0.02%)</title><rect x="0.2846%" y="1141" width="0.0212%" height="15" fill="rgb(220,109,13)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (101 samples, 0.02%)</title><rect x="0.2846%" y="1125" width="0.0212%" height="15" fill="rgb(232,18,1)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (101 samples, 0.02%)</title><rect x="0.2846%" y="1109" width="0.0212%" height="15" fill="rgb(215,41,42)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (101 samples, 0.02%)</title><rect x="0.2846%" y="1093" width="0.0212%" height="15" fill="rgb(224,123,36)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1103.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (101 samples, 0.02%)</title><rect x="0.2846%" y="1077" width="0.0212%" height="15" fill="rgb(240,125,3)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (101 samples, 0.02%)</title><rect x="0.2846%" y="1061" width="0.0212%" height="15" fill="rgb(205,98,50)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1071.50"></text></g><g><title>std::panicking::try (101 samples, 0.02%)</title><rect x="0.2846%" y="1045" width="0.0212%" height="15" fill="rgb(205,185,37)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (101 samples, 0.02%)</title><rect x="0.2846%" y="1029" width="0.0212%" height="15" fill="rgb(238,207,15)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (101 samples, 0.02%)</title><rect x="0.2846%" y="1013" width="0.0212%" height="15" fill="rgb(213,199,42)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1023.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (101 samples, 0.02%)</title><rect x="0.2846%" y="997" width="0.0212%" height="15" fill="rgb(235,201,11)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (101 samples, 0.02%)</title><rect x="0.2846%" y="981" width="0.0212%" height="15" fill="rgb(207,46,11)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="991.50"></text></g><g><title>uppercut::core::worker_loop (101 samples, 0.02%)</title><rect x="0.2846%" y="965" width="0.0212%" height="15" fill="rgb(241,35,35)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="975.50"></text></g><g><title>std::panic::catch_unwind (101 samples, 0.02%)</title><rect x="0.2846%" y="949" width="0.0212%" height="15" fill="rgb(243,32,47)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="959.50"></text></g><g><title>std::panicking::try (101 samples, 0.02%)</title><rect x="0.2846%" y="933" width="0.0212%" height="15" fill="rgb(247,202,23)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="943.50"></text></g><g><title>std::panicking::try::do_call (101 samples, 0.02%)</title><rect x="0.2846%" y="917" width="0.0212%" height="15" fill="rgb(219,102,11)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (101 samples, 0.02%)</title><rect x="0.2846%" y="901" width="0.0212%" height="15" fill="rgb(243,110,44)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="911.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (101 samples, 0.02%)</title><rect x="0.2846%" y="885" width="0.0212%" height="15" fill="rgb(222,74,54)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="895.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (101 samples, 0.02%)</title><rect x="0.2846%" y="869" width="0.0212%" height="15" fill="rgb(216,99,12)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="879.50"></text></g><g><title>uppercut_mio_server::protocol::process (101 samples, 0.02%)</title><rect x="0.2846%" y="853" width="0.0212%" height="15" fill="rgb(226,22,26)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="863.50"></text></g><g><title>parsed::http::parse_http_request (101 samples, 0.02%)</title><rect x="0.2846%" y="837" width="0.0212%" height="15" fill="rgb(217,163,10)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="847.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (101 samples, 0.02%)</title><rect x="0.2846%" y="821" width="0.0212%" height="15" fill="rgb(213,25,53)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="831.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (101 samples, 0.02%)</title><rect x="0.2846%" y="805" width="0.0212%" height="15" fill="rgb(252,105,26)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="815.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (101 samples, 0.02%)</title><rect x="0.2846%" y="789" width="0.0212%" height="15" fill="rgb(220,39,43)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="799.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (101 samples, 0.02%)</title><rect x="0.2846%" y="773" width="0.0212%" height="15" fill="rgb(229,68,48)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="783.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (101 samples, 0.02%)</title><rect x="0.2846%" y="757" width="0.0212%" height="15" fill="rgb(252,8,32)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="767.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (101 samples, 0.02%)</title><rect x="0.2846%" y="741" width="0.0212%" height="15" fill="rgb(223,20,43)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="751.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (101 samples, 0.02%)</title><rect x="0.2846%" y="725" width="0.0212%" height="15" fill="rgb(229,81,49)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="735.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (101 samples, 0.02%)</title><rect x="0.2846%" y="709" width="0.0212%" height="15" fill="rgb(236,28,36)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="719.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (101 samples, 0.02%)</title><rect x="0.2846%" y="693" width="0.0212%" height="15" fill="rgb(249,185,26)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="703.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (101 samples, 0.02%)</title><rect x="0.2846%" y="677" width="0.0212%" height="15" fill="rgb(249,174,33)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="687.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (101 samples, 0.02%)</title><rect x="0.2846%" y="661" width="0.0212%" height="15" fill="rgb(233,201,37)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="671.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (101 samples, 0.02%)</title><rect x="0.2846%" y="645" width="0.0212%" height="15" fill="rgb(221,78,26)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="655.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (101 samples, 0.02%)</title><rect x="0.2846%" y="629" width="0.0212%" height="15" fill="rgb(250,127,30)" fg:x="1357" fg:w="101"/><text x="0.5346%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (72 samples, 0.02%)</title><rect x="0.3077%" y="677" width="0.0151%" height="15" fill="rgb(230,49,44)" fg:x="1467" fg:w="72"/><text x="0.5577%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (49 samples, 0.01%)</title><rect x="0.3125%" y="661" width="0.0103%" height="15" fill="rgb(229,67,23)" fg:x="1490" fg:w="49"/><text x="0.5625%" y="671.50"></text></g><g><title>alloc::string::String::push_str (49 samples, 0.01%)</title><rect x="0.3125%" y="645" width="0.0103%" height="15" fill="rgb(249,83,47)" fg:x="1490" fg:w="49"/><text x="0.5625%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (49 samples, 0.01%)</title><rect x="0.3125%" y="629" width="0.0103%" height="15" fill="rgb(215,43,3)" fg:x="1490" fg:w="49"/><text x="0.5625%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (49 samples, 0.01%)</title><rect x="0.3125%" y="613" width="0.0103%" height="15" fill="rgb(238,154,13)" fg:x="1490" fg:w="49"/><text x="0.5625%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (49 samples, 0.01%)</title><rect x="0.3125%" y="597" width="0.0103%" height="15" fill="rgb(219,56,2)" fg:x="1490" fg:w="49"/><text x="0.5625%" y="607.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (154 samples, 0.03%)</title><rect x="0.3058%" y="773" width="0.0323%" height="15" fill="rgb(233,0,4)" fg:x="1458" fg:w="154"/><text x="0.5558%" y="783.50"></text></g><g><title>parsed::parser::single::{{closure}} (154 samples, 0.03%)</title><rect x="0.3058%" y="757" width="0.0323%" height="15" fill="rgb(235,30,7)" fg:x="1458" fg:w="154"/><text x="0.5558%" y="767.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (154 samples, 0.03%)</title><rect x="0.3058%" y="741" width="0.0323%" height="15" fill="rgb(250,79,13)" fg:x="1458" fg:w="154"/><text x="0.5558%" y="751.50"></text></g><g><title>alloc::fmt::format (154 samples, 0.03%)</title><rect x="0.3058%" y="725" width="0.0323%" height="15" fill="rgb(211,146,34)" fg:x="1458" fg:w="154"/><text x="0.5558%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (154 samples, 0.03%)</title><rect x="0.3058%" y="709" width="0.0323%" height="15" fill="rgb(228,22,38)" fg:x="1458" fg:w="154"/><text x="0.5558%" y="719.50"></text></g><g><title>core::fmt::write (154 samples, 0.03%)</title><rect x="0.3058%" y="693" width="0.0323%" height="15" fill="rgb(235,168,5)" fg:x="1458" fg:w="154"/><text x="0.5558%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (171 samples, 0.04%)</title><rect x="0.3058%" y="1253" width="0.0359%" height="15" fill="rgb(221,155,16)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1263.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (171 samples, 0.04%)</title><rect x="0.3058%" y="1237" width="0.0359%" height="15" fill="rgb(215,215,53)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (171 samples, 0.04%)</title><rect x="0.3058%" y="1221" width="0.0359%" height="15" fill="rgb(223,4,10)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1231.50"></text></g><g><title>std::panicking::try (171 samples, 0.04%)</title><rect x="0.3058%" y="1205" width="0.0359%" height="15" fill="rgb(234,103,6)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (171 samples, 0.04%)</title><rect x="0.3058%" y="1189" width="0.0359%" height="15" fill="rgb(227,97,0)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (171 samples, 0.04%)</title><rect x="0.3058%" y="1173" width="0.0359%" height="15" fill="rgb(234,150,53)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1183.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (171 samples, 0.04%)</title><rect x="0.3058%" y="1157" width="0.0359%" height="15" fill="rgb(228,201,54)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (171 samples, 0.04%)</title><rect x="0.3058%" y="1141" width="0.0359%" height="15" fill="rgb(222,22,37)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1151.50"></text></g><g><title>uppercut::core::worker_loop (171 samples, 0.04%)</title><rect x="0.3058%" y="1125" width="0.0359%" height="15" fill="rgb(237,53,32)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (171 samples, 0.04%)</title><rect x="0.3058%" y="1109" width="0.0359%" height="15" fill="rgb(233,25,53)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1119.50"></text></g><g><title>std::panicking::try (171 samples, 0.04%)</title><rect x="0.3058%" y="1093" width="0.0359%" height="15" fill="rgb(210,40,34)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (171 samples, 0.04%)</title><rect x="0.3058%" y="1077" width="0.0359%" height="15" fill="rgb(241,220,44)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (171 samples, 0.04%)</title><rect x="0.3058%" y="1061" width="0.0359%" height="15" fill="rgb(235,28,35)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1071.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (171 samples, 0.04%)</title><rect x="0.3058%" y="1045" width="0.0359%" height="15" fill="rgb(210,56,17)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1055.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (171 samples, 0.04%)</title><rect x="0.3058%" y="1029" width="0.0359%" height="15" fill="rgb(224,130,29)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1039.50"></text></g><g><title>uppercut_mio_server::protocol::process (171 samples, 0.04%)</title><rect x="0.3058%" y="1013" width="0.0359%" height="15" fill="rgb(235,212,8)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1023.50"></text></g><g><title>parsed::http::parse_http_request (171 samples, 0.04%)</title><rect x="0.3058%" y="997" width="0.0359%" height="15" fill="rgb(223,33,50)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="1007.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (171 samples, 0.04%)</title><rect x="0.3058%" y="981" width="0.0359%" height="15" fill="rgb(219,149,13)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="991.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (171 samples, 0.04%)</title><rect x="0.3058%" y="965" width="0.0359%" height="15" fill="rgb(250,156,29)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (171 samples, 0.04%)</title><rect x="0.3058%" y="949" width="0.0359%" height="15" fill="rgb(216,193,19)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="959.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (171 samples, 0.04%)</title><rect x="0.3058%" y="933" width="0.0359%" height="15" fill="rgb(216,135,14)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="943.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (171 samples, 0.04%)</title><rect x="0.3058%" y="917" width="0.0359%" height="15" fill="rgb(241,47,5)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="927.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (171 samples, 0.04%)</title><rect x="0.3058%" y="901" width="0.0359%" height="15" fill="rgb(233,42,35)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="911.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (171 samples, 0.04%)</title><rect x="0.3058%" y="885" width="0.0359%" height="15" fill="rgb(231,13,6)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="895.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (171 samples, 0.04%)</title><rect x="0.3058%" y="869" width="0.0359%" height="15" fill="rgb(207,181,40)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="879.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (171 samples, 0.04%)</title><rect x="0.3058%" y="853" width="0.0359%" height="15" fill="rgb(254,173,49)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="863.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (171 samples, 0.04%)</title><rect x="0.3058%" y="837" width="0.0359%" height="15" fill="rgb(221,1,38)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="847.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (171 samples, 0.04%)</title><rect x="0.3058%" y="821" width="0.0359%" height="15" fill="rgb(206,124,46)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="831.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (171 samples, 0.04%)</title><rect x="0.3058%" y="805" width="0.0359%" height="15" fill="rgb(249,21,11)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="815.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (171 samples, 0.04%)</title><rect x="0.3058%" y="789" width="0.0359%" height="15" fill="rgb(222,201,40)" fg:x="1458" fg:w="171"/><text x="0.5558%" y="799.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (94 samples, 0.02%)</title><rect x="0.3765%" y="773" width="0.0197%" height="15" fill="rgb(235,61,29)" fg:x="1795" fg:w="94"/><text x="0.6265%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (89 samples, 0.02%)</title><rect x="0.3776%" y="757" width="0.0187%" height="15" fill="rgb(219,207,3)" fg:x="1800" fg:w="89"/><text x="0.6276%" y="767.50"></text></g><g><title>alloc::fmt::format (175 samples, 0.04%)</title><rect x="0.3606%" y="821" width="0.0367%" height="15" fill="rgb(222,56,46)" fg:x="1719" fg:w="175"/><text x="0.6106%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (152 samples, 0.03%)</title><rect x="0.3654%" y="805" width="0.0319%" height="15" fill="rgb(239,76,54)" fg:x="1742" fg:w="152"/><text x="0.6154%" y="815.50"></text></g><g><title>core::fmt::write (152 samples, 0.03%)</title><rect x="0.3654%" y="789" width="0.0319%" height="15" fill="rgb(231,124,27)" fg:x="1742" fg:w="152"/><text x="0.6154%" y="799.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (180 samples, 0.04%)</title><rect x="0.3604%" y="837" width="0.0378%" height="15" fill="rgb(249,195,6)" fg:x="1718" fg:w="180"/><text x="0.6104%" y="847.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (245 samples, 0.05%)</title><rect x="0.3471%" y="869" width="0.0514%" height="15" fill="rgb(237,174,47)" fg:x="1655" fg:w="245"/><text x="0.5971%" y="879.50"></text></g><g><title>parsed::parser::before::{{closure}} (237 samples, 0.05%)</title><rect x="0.3488%" y="853" width="0.0497%" height="15" fill="rgb(206,201,31)" fg:x="1663" fg:w="237"/><text x="0.5988%" y="863.50"></text></g><g><title>uppercut::core::worker_loop (347 samples, 0.07%)</title><rect x="0.3417%" y="1253" width="0.0728%" height="15" fill="rgb(231,57,52)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (347 samples, 0.07%)</title><rect x="0.3417%" y="1237" width="0.0728%" height="15" fill="rgb(248,177,22)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1247.50"></text></g><g><title>std::panicking::try (347 samples, 0.07%)</title><rect x="0.3417%" y="1221" width="0.0728%" height="15" fill="rgb(215,211,37)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (347 samples, 0.07%)</title><rect x="0.3417%" y="1205" width="0.0728%" height="15" fill="rgb(241,128,51)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1215.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (347 samples, 0.07%)</title><rect x="0.3417%" y="1189" width="0.0728%" height="15" fill="rgb(227,165,31)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1199.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (347 samples, 0.07%)</title><rect x="0.3417%" y="1173" width="0.0728%" height="15" fill="rgb(228,167,24)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1183.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (347 samples, 0.07%)</title><rect x="0.3417%" y="1157" width="0.0728%" height="15" fill="rgb(228,143,12)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1167.50"></text></g><g><title>uppercut_mio_server::protocol::process (347 samples, 0.07%)</title><rect x="0.3417%" y="1141" width="0.0728%" height="15" fill="rgb(249,149,8)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1151.50"></text></g><g><title>parsed::http::parse_http_request (347 samples, 0.07%)</title><rect x="0.3417%" y="1125" width="0.0728%" height="15" fill="rgb(243,35,44)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1135.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (347 samples, 0.07%)</title><rect x="0.3417%" y="1109" width="0.0728%" height="15" fill="rgb(246,89,9)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1119.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (347 samples, 0.07%)</title><rect x="0.3417%" y="1093" width="0.0728%" height="15" fill="rgb(233,213,13)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1103.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (347 samples, 0.07%)</title><rect x="0.3417%" y="1077" width="0.0728%" height="15" fill="rgb(233,141,41)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1087.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (347 samples, 0.07%)</title><rect x="0.3417%" y="1061" width="0.0728%" height="15" fill="rgb(239,167,4)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1071.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (347 samples, 0.07%)</title><rect x="0.3417%" y="1045" width="0.0728%" height="15" fill="rgb(209,217,16)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1055.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (347 samples, 0.07%)</title><rect x="0.3417%" y="1029" width="0.0728%" height="15" fill="rgb(219,88,35)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1039.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (347 samples, 0.07%)</title><rect x="0.3417%" y="1013" width="0.0728%" height="15" fill="rgb(220,193,23)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1023.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (347 samples, 0.07%)</title><rect x="0.3417%" y="997" width="0.0728%" height="15" fill="rgb(230,90,52)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="1007.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (347 samples, 0.07%)</title><rect x="0.3417%" y="981" width="0.0728%" height="15" fill="rgb(252,106,19)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="991.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (347 samples, 0.07%)</title><rect x="0.3417%" y="965" width="0.0728%" height="15" fill="rgb(206,74,20)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (347 samples, 0.07%)</title><rect x="0.3417%" y="949" width="0.0728%" height="15" fill="rgb(230,138,44)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="959.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (347 samples, 0.07%)</title><rect x="0.3417%" y="933" width="0.0728%" height="15" fill="rgb(235,182,43)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="943.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (347 samples, 0.07%)</title><rect x="0.3417%" y="917" width="0.0728%" height="15" fill="rgb(242,16,51)" fg:x="1629" fg:w="347"/><text x="0.5917%" y="927.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (334 samples, 0.07%)</title><rect x="0.3444%" y="901" width="0.0701%" height="15" fill="rgb(248,9,4)" fg:x="1642" fg:w="334"/><text x="0.5944%" y="911.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (334 samples, 0.07%)</title><rect x="0.3444%" y="885" width="0.0701%" height="15" fill="rgb(210,31,22)" fg:x="1642" fg:w="334"/><text x="0.5944%" y="895.50"></text></g><g><title>[unknown] (2,005 samples, 0.42%)</title><rect x="0.0002%" y="1269" width="0.4206%" height="15" fill="rgb(239,54,39)" fg:x="1" fg:w="2005"/><text x="0.2502%" y="1279.50"></text></g><g><title>__libc_malloc (61 samples, 0.01%)</title><rect x="0.5791%" y="757" width="0.0128%" height="15" fill="rgb(230,99,41)" fg:x="2761" fg:w="61"/><text x="0.8291%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (69 samples, 0.01%)</title><rect x="0.5787%" y="853" width="0.0145%" height="15" fill="rgb(253,106,12)" fg:x="2759" fg:w="69"/><text x="0.8287%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (69 samples, 0.01%)</title><rect x="0.5787%" y="837" width="0.0145%" height="15" fill="rgb(213,46,41)" fg:x="2759" fg:w="69"/><text x="0.8287%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (69 samples, 0.01%)</title><rect x="0.5787%" y="821" width="0.0145%" height="15" fill="rgb(215,133,35)" fg:x="2759" fg:w="69"/><text x="0.8287%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (69 samples, 0.01%)</title><rect x="0.5787%" y="805" width="0.0145%" height="15" fill="rgb(213,28,5)" fg:x="2759" fg:w="69"/><text x="0.8287%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (69 samples, 0.01%)</title><rect x="0.5787%" y="789" width="0.0145%" height="15" fill="rgb(215,77,49)" fg:x="2759" fg:w="69"/><text x="0.8287%" y="799.50"></text></g><g><title>alloc::alloc::alloc (68 samples, 0.01%)</title><rect x="0.5789%" y="773" width="0.0143%" height="15" fill="rgb(248,100,22)" fg:x="2760" fg:w="68"/><text x="0.8289%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (167 samples, 0.04%)</title><rect x="0.5764%" y="933" width="0.0350%" height="15" fill="rgb(208,67,9)" fg:x="2748" fg:w="167"/><text x="0.8264%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (156 samples, 0.03%)</title><rect x="0.5787%" y="917" width="0.0327%" height="15" fill="rgb(219,133,21)" fg:x="2759" fg:w="156"/><text x="0.8287%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (156 samples, 0.03%)</title><rect x="0.5787%" y="901" width="0.0327%" height="15" fill="rgb(246,46,29)" fg:x="2759" fg:w="156"/><text x="0.8287%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (156 samples, 0.03%)</title><rect x="0.5787%" y="885" width="0.0327%" height="15" fill="rgb(246,185,52)" fg:x="2759" fg:w="156"/><text x="0.8287%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (156 samples, 0.03%)</title><rect x="0.5787%" y="869" width="0.0327%" height="15" fill="rgb(252,136,11)" fg:x="2759" fg:w="156"/><text x="0.8287%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (87 samples, 0.02%)</title><rect x="0.5932%" y="853" width="0.0182%" height="15" fill="rgb(219,138,53)" fg:x="2828" fg:w="87"/><text x="0.8432%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (87 samples, 0.02%)</title><rect x="0.5932%" y="837" width="0.0182%" height="15" fill="rgb(211,51,23)" fg:x="2828" fg:w="87"/><text x="0.8432%" y="847.50"></text></g><g><title>[libc-2.31.so] (85 samples, 0.02%)</title><rect x="0.5936%" y="821" width="0.0178%" height="15" fill="rgb(247,221,28)" fg:x="2830" fg:w="85"/><text x="0.8436%" y="831.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (456 samples, 0.10%)</title><rect x="1.7252%" y="917" width="0.0956%" height="15" fill="rgb(251,222,45)" fg:x="8225" fg:w="456"/><text x="1.9752%" y="927.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::counter (456 samples, 0.10%)</title><rect x="1.7252%" y="901" width="0.0956%" height="15" fill="rgb(217,162,53)" fg:x="8225" fg:w="456"/><text x="1.9752%" y="911.50"></text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (818 samples, 0.17%)</title><rect x="3.0882%" y="901" width="0.1716%" height="15" fill="rgb(229,93,14)" fg:x="14723" fg:w="818"/><text x="3.3382%" y="911.50"></text></g><g><title>&lt;crossbeam_channel::flavors::zero::ZeroToken as core::default::Default&gt;::default (591 samples, 0.12%)</title><rect x="3.1359%" y="885" width="0.1240%" height="15" fill="rgb(209,67,49)" fg:x="14950" fg:w="591"/><text x="3.3859%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (67 samples, 0.01%)</title><rect x="3.2749%" y="885" width="0.0141%" height="15" fill="rgb(213,87,29)" fg:x="15613" fg:w="67"/><text x="3.5249%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_or (67 samples, 0.01%)</title><rect x="3.2749%" y="869" width="0.0141%" height="15" fill="rgb(205,151,52)" fg:x="15613" fg:w="67"/><text x="3.5249%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (250 samples, 0.05%)</title><rect x="3.2617%" y="901" width="0.0524%" height="15" fill="rgb(253,215,39)" fg:x="15550" fg:w="250"/><text x="3.5117%" y="911.50"></text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (117 samples, 0.02%)</title><rect x="3.2896%" y="885" width="0.0245%" height="15" fill="rgb(221,220,41)" fg:x="15683" fg:w="117"/><text x="3.5396%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (661 samples, 0.14%)</title><rect x="5.0006%" y="885" width="0.1386%" height="15" fill="rgb(218,133,21)" fg:x="23840" fg:w="661"/><text x="5.2506%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (661 samples, 0.14%)</title><rect x="5.0006%" y="869" width="0.1386%" height="15" fill="rgb(221,193,43)" fg:x="23840" fg:w="661"/><text x="5.2506%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17,978 samples, 3.77%)</title><rect x="5.1392%" y="885" width="3.7710%" height="15" fill="rgb(240,128,52)" fg:x="24501" fg:w="17978"/><text x="5.3892%" y="895.50">core..</text></g><g><title>core::sync::atomic::atomic_load (17,978 samples, 3.77%)</title><rect x="5.1392%" y="869" width="3.7710%" height="15" fill="rgb(253,114,12)" fg:x="24501" fg:w="17978"/><text x="5.3892%" y="879.50">core..</text></g><g><title>core::sync::atomic::fence (471 samples, 0.10%)</title><rect x="8.9102%" y="885" width="0.0988%" height="15" fill="rgb(215,223,47)" fg:x="42479" fg:w="471"/><text x="9.1602%" y="895.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (40,054 samples, 8.40%)</title><rect x="0.6207%" y="933" width="8.4016%" height="15" fill="rgb(248,225,23)" fg:x="2959" fg:w="40054"/><text x="0.8707%" y="943.50">crossbeam_ch..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (34,329 samples, 7.20%)</title><rect x="1.8215%" y="917" width="7.2007%" height="15" fill="rgb(250,108,0)" fg:x="8684" fg:w="34329"/><text x="2.0715%" y="927.50">crossbeam_..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (27,213 samples, 5.71%)</title><rect x="3.3141%" y="901" width="5.7081%" height="15" fill="rgb(228,208,7)" fg:x="15800" fg:w="27213"/><text x="3.5641%" y="911.50">crossbe..</text></g><g><title>[libc-2.31.so] (83 samples, 0.02%)</title><rect x="9.0579%" y="789" width="0.0174%" height="15" fill="rgb(244,45,10)" fg:x="43183" fg:w="83"/><text x="9.3079%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (97 samples, 0.02%)</title><rect x="9.0552%" y="885" width="0.0203%" height="15" fill="rgb(207,125,25)" fg:x="43170" fg:w="97"/><text x="9.3052%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (89 samples, 0.02%)</title><rect x="9.0569%" y="869" width="0.0187%" height="15" fill="rgb(210,195,18)" fg:x="43178" fg:w="89"/><text x="9.3069%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (89 samples, 0.02%)</title><rect x="9.0569%" y="853" width="0.0187%" height="15" fill="rgb(249,80,12)" fg:x="43178" fg:w="89"/><text x="9.3069%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (89 samples, 0.02%)</title><rect x="9.0569%" y="837" width="0.0187%" height="15" fill="rgb(221,65,9)" fg:x="43178" fg:w="89"/><text x="9.3069%" y="847.50"></text></g><g><title>alloc::alloc::alloc (89 samples, 0.02%)</title><rect x="9.0569%" y="821" width="0.0187%" height="15" fill="rgb(235,49,36)" fg:x="43178" fg:w="89"/><text x="9.3069%" y="831.50"></text></g><g><title>__libc_malloc (89 samples, 0.02%)</title><rect x="9.0569%" y="805" width="0.0187%" height="15" fill="rgb(225,32,20)" fg:x="43178" fg:w="89"/><text x="9.3069%" y="815.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (267 samples, 0.06%)</title><rect x="9.0281%" y="901" width="0.0560%" height="15" fill="rgb(215,141,46)" fg:x="43041" fg:w="267"/><text x="9.2781%" y="911.50"></text></g><g><title>do_sched_yield (150 samples, 0.03%)</title><rect x="9.1670%" y="773" width="0.0315%" height="15" fill="rgb(250,160,47)" fg:x="43703" fg:w="150"/><text x="9.4170%" y="783.50"></text></g><g><title>schedule (133 samples, 0.03%)</title><rect x="9.1705%" y="757" width="0.0279%" height="15" fill="rgb(216,222,40)" fg:x="43720" fg:w="133"/><text x="9.4205%" y="767.50"></text></g><g><title>__schedule (133 samples, 0.03%)</title><rect x="9.1705%" y="741" width="0.0279%" height="15" fill="rgb(234,217,39)" fg:x="43720" fg:w="133"/><text x="9.4205%" y="751.50"></text></g><g><title>__x64_sys_sched_yield (151 samples, 0.03%)</title><rect x="9.1670%" y="789" width="0.0317%" height="15" fill="rgb(207,178,40)" fg:x="43703" fg:w="151"/><text x="9.4170%" y="799.50"></text></g><g><title>__sched_yield (399 samples, 0.08%)</title><rect x="9.1152%" y="837" width="0.0837%" height="15" fill="rgb(221,136,13)" fg:x="43456" fg:w="399"/><text x="9.3652%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (229 samples, 0.05%)</title><rect x="9.1508%" y="821" width="0.0480%" height="15" fill="rgb(249,199,10)" fg:x="43626" fg:w="229"/><text x="9.4008%" y="831.50"></text></g><g><title>do_syscall_64 (222 samples, 0.05%)</title><rect x="9.1523%" y="805" width="0.0466%" height="15" fill="rgb(249,222,13)" fg:x="43633" fg:w="222"/><text x="9.4023%" y="815.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (50 samples, 0.01%)</title><rect x="9.2012%" y="837" width="0.0105%" height="15" fill="rgb(244,185,38)" fg:x="43866" fg:w="50"/><text x="9.4512%" y="847.50"></text></g><g><title>core::hint::spin_loop (50 samples, 0.01%)</title><rect x="9.2012%" y="821" width="0.0105%" height="15" fill="rgb(236,202,9)" fg:x="43866" fg:w="50"/><text x="9.4512%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (50 samples, 0.01%)</title><rect x="9.2012%" y="805" width="0.0105%" height="15" fill="rgb(250,229,37)" fg:x="43866" fg:w="50"/><text x="9.4512%" y="815.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (510 samples, 0.11%)</title><rect x="9.1057%" y="869" width="0.1070%" height="15" fill="rgb(206,174,23)" fg:x="43411" fg:w="510"/><text x="9.3557%" y="879.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (469 samples, 0.10%)</title><rect x="9.1143%" y="853" width="0.0984%" height="15" fill="rgb(211,33,43)" fg:x="43452" fg:w="469"/><text x="9.3643%" y="863.50"></text></g><g><title>futex_wake (343 samples, 0.07%)</title><rect x="9.2391%" y="693" width="0.0719%" height="15" fill="rgb(245,58,50)" fg:x="44047" fg:w="343"/><text x="9.4891%" y="703.50"></text></g><g><title>wake_up_q (311 samples, 0.07%)</title><rect x="9.2458%" y="677" width="0.0652%" height="15" fill="rgb(244,68,36)" fg:x="44079" fg:w="311"/><text x="9.4958%" y="687.50"></text></g><g><title>try_to_wake_up (308 samples, 0.06%)</title><rect x="9.2465%" y="661" width="0.0646%" height="15" fill="rgb(232,229,15)" fg:x="44082" fg:w="308"/><text x="9.4965%" y="671.50"></text></g><g><title>__lock_text_start (307 samples, 0.06%)</title><rect x="9.2467%" y="645" width="0.0644%" height="15" fill="rgb(254,30,23)" fg:x="44083" fg:w="307"/><text x="9.4967%" y="655.50"></text></g><g><title>do_futex (367 samples, 0.08%)</title><rect x="9.2358%" y="709" width="0.0770%" height="15" fill="rgb(235,160,14)" fg:x="44031" fg:w="367"/><text x="9.4858%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (471 samples, 0.10%)</title><rect x="9.2144%" y="853" width="0.0988%" height="15" fill="rgb(212,155,44)" fg:x="43929" fg:w="471"/><text x="9.4644%" y="863.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (471 samples, 0.10%)</title><rect x="9.2144%" y="837" width="0.0988%" height="15" fill="rgb(226,2,50)" fg:x="43929" fg:w="471"/><text x="9.4644%" y="847.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (443 samples, 0.09%)</title><rect x="9.2203%" y="821" width="0.0929%" height="15" fill="rgb(234,177,6)" fg:x="43957" fg:w="443"/><text x="9.4703%" y="831.50"></text></g><g><title>std::thread::Thread::unpark (443 samples, 0.09%)</title><rect x="9.2203%" y="805" width="0.0929%" height="15" fill="rgb(217,24,9)" fg:x="43957" fg:w="443"/><text x="9.4703%" y="815.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (443 samples, 0.09%)</title><rect x="9.2203%" y="789" width="0.0929%" height="15" fill="rgb(220,13,46)" fg:x="43957" fg:w="443"/><text x="9.4703%" y="799.50"></text></g><g><title>syscall (440 samples, 0.09%)</title><rect x="9.2209%" y="773" width="0.0923%" height="15" fill="rgb(239,221,27)" fg:x="43960" fg:w="440"/><text x="9.4709%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (387 samples, 0.08%)</title><rect x="9.2320%" y="757" width="0.0812%" height="15" fill="rgb(222,198,25)" fg:x="44013" fg:w="387"/><text x="9.4820%" y="767.50"></text></g><g><title>do_syscall_64 (381 samples, 0.08%)</title><rect x="9.2333%" y="741" width="0.0799%" height="15" fill="rgb(211,99,13)" fg:x="44019" fg:w="381"/><text x="9.4833%" y="751.50"></text></g><g><title>__x64_sys_futex (370 samples, 0.08%)</title><rect x="9.2356%" y="725" width="0.0776%" height="15" fill="rgb(232,111,31)" fg:x="44030" fg:w="370"/><text x="9.4856%" y="735.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1,394 samples, 0.29%)</title><rect x="9.0222%" y="933" width="0.2924%" height="15" fill="rgb(245,82,37)" fg:x="43013" fg:w="1394"/><text x="9.2722%" y="943.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1,378 samples, 0.29%)</title><rect x="9.0256%" y="917" width="0.2890%" height="15" fill="rgb(227,149,46)" fg:x="43029" fg:w="1378"/><text x="9.2756%" y="927.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (1,099 samples, 0.23%)</title><rect x="9.0841%" y="901" width="0.2305%" height="15" fill="rgb(218,36,50)" fg:x="43308" fg:w="1099"/><text x="9.3341%" y="911.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (1,015 samples, 0.21%)</title><rect x="9.1017%" y="885" width="0.2129%" height="15" fill="rgb(226,80,48)" fg:x="43392" fg:w="1015"/><text x="9.3517%" y="895.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (478 samples, 0.10%)</title><rect x="9.2144%" y="869" width="0.1003%" height="15" fill="rgb(238,224,15)" fg:x="43929" fg:w="478"/><text x="9.4644%" y="879.50"></text></g><g><title>apparmor_socket_recvmsg (85 samples, 0.02%)</title><rect x="9.5361%" y="613" width="0.0178%" height="15" fill="rgb(241,136,10)" fg:x="45463" fg:w="85"/><text x="9.7861%" y="623.50"></text></g><g><title>kfree_skbmem (174 samples, 0.04%)</title><rect x="9.5984%" y="565" width="0.0365%" height="15" fill="rgb(208,32,45)" fg:x="45760" fg:w="174"/><text x="9.8484%" y="575.50"></text></g><g><title>kmem_cache_free (174 samples, 0.04%)</title><rect x="9.5984%" y="549" width="0.0365%" height="15" fill="rgb(207,135,9)" fg:x="45760" fg:w="174"/><text x="9.8484%" y="559.50"></text></g><g><title>__slab_free (86 samples, 0.02%)</title><rect x="9.6169%" y="533" width="0.0180%" height="15" fill="rgb(206,86,44)" fg:x="45848" fg:w="86"/><text x="9.8669%" y="543.50"></text></g><g><title>skb_release_data (161 samples, 0.03%)</title><rect x="9.6358%" y="549" width="0.0338%" height="15" fill="rgb(245,177,15)" fg:x="45938" fg:w="161"/><text x="9.8858%" y="559.50"></text></g><g><title>skb_free_head (107 samples, 0.02%)</title><rect x="9.6471%" y="533" width="0.0224%" height="15" fill="rgb(206,64,50)" fg:x="45992" fg:w="107"/><text x="9.8971%" y="543.50"></text></g><g><title>kfree (105 samples, 0.02%)</title><rect x="9.6475%" y="517" width="0.0220%" height="15" fill="rgb(234,36,40)" fg:x="45994" fg:w="105"/><text x="9.8975%" y="527.50"></text></g><g><title>__slab_free (89 samples, 0.02%)</title><rect x="9.6509%" y="501" width="0.0187%" height="15" fill="rgb(213,64,8)" fg:x="46010" fg:w="89"/><text x="9.9009%" y="511.50"></text></g><g><title>skb_release_all (266 samples, 0.06%)</title><rect x="9.6352%" y="565" width="0.0558%" height="15" fill="rgb(210,75,36)" fg:x="45935" fg:w="266"/><text x="9.8852%" y="575.50"></text></g><g><title>sock_rfree (98 samples, 0.02%)</title><rect x="9.6704%" y="549" width="0.0206%" height="15" fill="rgb(229,88,21)" fg:x="46103" fg:w="98"/><text x="9.9204%" y="559.50"></text></g><g><title>__kfree_skb (446 samples, 0.09%)</title><rect x="9.5980%" y="581" width="0.0936%" height="15" fill="rgb(252,204,47)" fg:x="45758" fg:w="446"/><text x="9.8480%" y="591.50"></text></g><g><title>_raw_spin_lock_bh (76 samples, 0.02%)</title><rect x="9.6920%" y="581" width="0.0159%" height="15" fill="rgb(208,77,27)" fg:x="46206" fg:w="76"/><text x="9.9420%" y="591.50"></text></g><g><title>__check_object_size (129 samples, 0.03%)</title><rect x="9.7226%" y="533" width="0.0271%" height="15" fill="rgb(221,76,26)" fg:x="46352" fg:w="129"/><text x="9.9726%" y="543.50"></text></g><g><title>copy_user_generic_unrolled (109 samples, 0.02%)</title><rect x="9.7556%" y="517" width="0.0229%" height="15" fill="rgb(225,139,18)" fg:x="46509" fg:w="109"/><text x="10.0056%" y="527.50"></text></g><g><title>_copy_to_iter (139 samples, 0.03%)</title><rect x="9.7503%" y="533" width="0.0292%" height="15" fill="rgb(230,137,11)" fg:x="46484" fg:w="139"/><text x="10.0003%" y="543.50"></text></g><g><title>skb_copy_datagram_iter (315 samples, 0.07%)</title><rect x="9.7174%" y="581" width="0.0661%" height="15" fill="rgb(212,28,1)" fg:x="46327" fg:w="315"/><text x="9.9674%" y="591.50"></text></g><g><title>__skb_datagram_iter (310 samples, 0.07%)</title><rect x="9.7184%" y="565" width="0.0650%" height="15" fill="rgb(248,164,17)" fg:x="46332" fg:w="310"/><text x="9.9684%" y="575.50"></text></g><g><title>simple_copy_to_iter (297 samples, 0.06%)</title><rect x="9.7212%" y="549" width="0.0623%" height="15" fill="rgb(222,171,42)" fg:x="46345" fg:w="297"/><text x="9.9712%" y="559.50"></text></g><g><title>tcp_cleanup_rbuf (65 samples, 0.01%)</title><rect x="9.7843%" y="581" width="0.0136%" height="15" fill="rgb(243,84,45)" fg:x="46646" fg:w="65"/><text x="10.0343%" y="591.50"></text></g><g><title>ktime_get (95 samples, 0.02%)</title><rect x="9.8141%" y="549" width="0.0199%" height="15" fill="rgb(252,49,23)" fg:x="46788" fg:w="95"/><text x="10.0641%" y="559.50"></text></g><g><title>kvm_clock_get_cycles (74 samples, 0.02%)</title><rect x="9.8185%" y="533" width="0.0155%" height="15" fill="rgb(215,19,7)" fg:x="46809" fg:w="74"/><text x="10.0685%" y="543.50"></text></g><g><title>pvclock_clocksource_read (69 samples, 0.01%)</title><rect x="9.8195%" y="517" width="0.0145%" height="15" fill="rgb(238,81,41)" fg:x="46814" fg:w="69"/><text x="10.0695%" y="527.50"></text></g><g><title>tcp_rcv_space_adjust (189 samples, 0.04%)</title><rect x="9.7994%" y="581" width="0.0396%" height="15" fill="rgb(210,199,37)" fg:x="46718" fg:w="189"/><text x="10.0494%" y="591.50"></text></g><g><title>tcp_mstamp_refresh (121 samples, 0.03%)</title><rect x="9.8137%" y="565" width="0.0254%" height="15" fill="rgb(244,192,49)" fg:x="46786" fg:w="121"/><text x="10.0637%" y="575.50"></text></g><g><title>tcp_recv_timestamp (56 samples, 0.01%)</title><rect x="9.8390%" y="581" width="0.0117%" height="15" fill="rgb(226,211,11)" fg:x="46907" fg:w="56"/><text x="10.0890%" y="591.50"></text></g><g><title>inet_recvmsg (1,436 samples, 0.30%)</title><rect x="9.5540%" y="613" width="0.3012%" height="15" fill="rgb(236,162,54)" fg:x="45548" fg:w="1436"/><text x="9.8040%" y="623.50"></text></g><g><title>tcp_recvmsg (1,401 samples, 0.29%)</title><rect x="9.5613%" y="597" width="0.2939%" height="15" fill="rgb(220,229,9)" fg:x="45583" fg:w="1401"/><text x="9.8113%" y="607.50"></text></g><g><title>sock_recvmsg (1,565 samples, 0.33%)</title><rect x="9.5345%" y="629" width="0.3283%" height="15" fill="rgb(250,87,22)" fg:x="45455" fg:w="1565"/><text x="9.7845%" y="639.50"></text></g><g><title>__fdget (151 samples, 0.03%)</title><rect x="9.8640%" y="613" width="0.0317%" height="15" fill="rgb(239,43,17)" fg:x="47026" fg:w="151"/><text x="10.1140%" y="623.50"></text></g><g><title>__fget_light (149 samples, 0.03%)</title><rect x="9.8644%" y="597" width="0.0313%" height="15" fill="rgb(231,177,25)" fg:x="47028" fg:w="149"/><text x="10.1144%" y="607.50"></text></g><g><title>__fget (149 samples, 0.03%)</title><rect x="9.8644%" y="581" width="0.0313%" height="15" fill="rgb(219,179,1)" fg:x="47028" fg:w="149"/><text x="10.1144%" y="591.50"></text></g><g><title>__sys_recvfrom (1,788 samples, 0.38%)</title><rect x="9.5259%" y="645" width="0.3750%" height="15" fill="rgb(238,219,53)" fg:x="45414" fg:w="1788"/><text x="9.7759%" y="655.50"></text></g><g><title>sockfd_lookup_light (182 samples, 0.04%)</title><rect x="9.8627%" y="629" width="0.0382%" height="15" fill="rgb(232,167,36)" fg:x="47020" fg:w="182"/><text x="10.1127%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2,647 samples, 0.56%)</title><rect x="9.3541%" y="837" width="0.5552%" height="15" fill="rgb(244,19,51)" fg:x="44595" fg:w="2647"/><text x="9.6041%" y="847.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2,641 samples, 0.55%)</title><rect x="9.3553%" y="821" width="0.5540%" height="15" fill="rgb(224,6,22)" fg:x="44601" fg:w="2641"/><text x="9.6053%" y="831.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (2,641 samples, 0.55%)</title><rect x="9.3553%" y="805" width="0.5540%" height="15" fill="rgb(224,145,5)" fg:x="44601" fg:w="2641"/><text x="9.6053%" y="815.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (2,641 samples, 0.55%)</title><rect x="9.3553%" y="789" width="0.5540%" height="15" fill="rgb(234,130,49)" fg:x="44601" fg:w="2641"/><text x="9.6053%" y="799.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2,641 samples, 0.55%)</title><rect x="9.3553%" y="773" width="0.5540%" height="15" fill="rgb(254,6,2)" fg:x="44601" fg:w="2641"/><text x="9.6053%" y="783.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2,641 samples, 0.55%)</title><rect x="9.3553%" y="757" width="0.5540%" height="15" fill="rgb(208,96,46)" fg:x="44601" fg:w="2641"/><text x="9.6053%" y="767.50"></text></g><g><title>std::sys::unix::net::Socket::read (2,641 samples, 0.55%)</title><rect x="9.3553%" y="741" width="0.5540%" height="15" fill="rgb(239,3,39)" fg:x="44601" fg:w="2641"/><text x="9.6053%" y="751.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2,641 samples, 0.55%)</title><rect x="9.3553%" y="725" width="0.5540%" height="15" fill="rgb(233,210,1)" fg:x="44601" fg:w="2641"/><text x="9.6053%" y="735.50"></text></g><g><title>__libc_recv (2,636 samples, 0.55%)</title><rect x="9.3564%" y="709" width="0.5529%" height="15" fill="rgb(244,137,37)" fg:x="44606" fg:w="2636"/><text x="9.6064%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,074 samples, 0.44%)</title><rect x="9.4743%" y="693" width="0.4350%" height="15" fill="rgb(240,136,2)" fg:x="45168" fg:w="2074"/><text x="9.7243%" y="703.50"></text></g><g><title>do_syscall_64 (2,032 samples, 0.43%)</title><rect x="9.4831%" y="677" width="0.4262%" height="15" fill="rgb(239,18,37)" fg:x="45210" fg:w="2032"/><text x="9.7331%" y="687.50"></text></g><g><title>__x64_sys_recvfrom (1,828 samples, 0.38%)</title><rect x="9.5259%" y="661" width="0.3834%" height="15" fill="rgb(218,185,22)" fg:x="45414" fg:w="1828"/><text x="9.7759%" y="671.50"></text></g><g><title>[libc-2.31.so] (131 samples, 0.03%)</title><rect x="9.9223%" y="757" width="0.0275%" height="15" fill="rgb(225,218,4)" fg:x="47304" fg:w="131"/><text x="10.1723%" y="767.50"></text></g><g><title>alloc::alloc::box_free (247 samples, 0.05%)</title><rect x="9.9217%" y="805" width="0.0518%" height="15" fill="rgb(230,182,32)" fg:x="47301" fg:w="247"/><text x="10.1717%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (247 samples, 0.05%)</title><rect x="9.9217%" y="789" width="0.0518%" height="15" fill="rgb(242,56,43)" fg:x="47301" fg:w="247"/><text x="10.1717%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (244 samples, 0.05%)</title><rect x="9.9223%" y="773" width="0.0512%" height="15" fill="rgb(233,99,24)" fg:x="47304" fg:w="244"/><text x="10.1723%" y="783.50"></text></g><g><title>cfree (101 samples, 0.02%)</title><rect x="9.9523%" y="757" width="0.0212%" height="15" fill="rgb(234,209,42)" fg:x="47447" fg:w="101"/><text x="10.2023%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt; (271 samples, 0.06%)</title><rect x="9.9200%" y="821" width="0.0568%" height="15" fill="rgb(227,7,12)" fg:x="47293" fg:w="271"/><text x="10.1700%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;uppercut::api::Envelope&gt; (280 samples, 0.06%)</title><rect x="9.9183%" y="837" width="0.0587%" height="15" fill="rgb(245,203,43)" fg:x="47285" fg:w="280"/><text x="10.1683%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (186 samples, 0.04%)</title><rect x="9.9936%" y="821" width="0.0390%" height="15" fill="rgb(238,205,33)" fg:x="47644" fg:w="186"/><text x="10.2436%" y="831.50"></text></g><g><title>parsed::stream::ByteStream::put (301 samples, 0.06%)</title><rect x="9.9819%" y="837" width="0.0631%" height="15" fill="rgb(231,56,7)" fg:x="47588" fg:w="301"/><text x="10.2319%" y="847.50"></text></g><g><title>parsed::stream::ByteStream::cap (59 samples, 0.01%)</title><rect x="10.0326%" y="821" width="0.0124%" height="15" fill="rgb(244,186,29)" fg:x="47830" fg:w="59"/><text x="10.2826%" y="831.50"></text></g><g><title>copy_user_enhanced_fast_string (110 samples, 0.02%)</title><rect x="10.3638%" y="565" width="0.0231%" height="15" fill="rgb(234,111,31)" fg:x="49409" fg:w="110"/><text x="10.6138%" y="575.50"></text></g><g><title>_copy_from_iter_full (135 samples, 0.03%)</title><rect x="10.3626%" y="581" width="0.0283%" height="15" fill="rgb(241,149,10)" fg:x="49403" fg:w="135"/><text x="10.6126%" y="591.50"></text></g><g><title>sk_page_frag_refill (83 samples, 0.02%)</title><rect x="10.3936%" y="581" width="0.0174%" height="15" fill="rgb(249,206,44)" fg:x="49551" fg:w="83"/><text x="10.6436%" y="591.50"></text></g><g><title>skb_page_frag_refill (78 samples, 0.02%)</title><rect x="10.3947%" y="565" width="0.0164%" height="15" fill="rgb(251,153,30)" fg:x="49556" fg:w="78"/><text x="10.6447%" y="575.50"></text></g><g><title>__kmalloc_node_track_caller (162 samples, 0.03%)</title><rect x="10.4245%" y="533" width="0.0340%" height="15" fill="rgb(239,152,38)" fg:x="49698" fg:w="162"/><text x="10.6745%" y="543.50"></text></g><g><title>memset_erms (80 samples, 0.02%)</title><rect x="10.4670%" y="533" width="0.0168%" height="15" fill="rgb(249,139,47)" fg:x="49901" fg:w="80"/><text x="10.7170%" y="543.50"></text></g><g><title>__kmalloc_reserve.isra.0 (294 samples, 0.06%)</title><rect x="10.4232%" y="549" width="0.0617%" height="15" fill="rgb(244,64,35)" fg:x="49692" fg:w="294"/><text x="10.6732%" y="559.50"></text></g><g><title>kmem_cache_alloc_node (137 samples, 0.03%)</title><rect x="10.4866%" y="549" width="0.0287%" height="15" fill="rgb(216,46,15)" fg:x="49994" fg:w="137"/><text x="10.7366%" y="559.50"></text></g><g><title>ksize (73 samples, 0.02%)</title><rect x="10.5153%" y="549" width="0.0153%" height="15" fill="rgb(250,74,19)" fg:x="50131" fg:w="73"/><text x="10.7653%" y="559.50"></text></g><g><title>__ksize (73 samples, 0.02%)</title><rect x="10.5153%" y="533" width="0.0153%" height="15" fill="rgb(249,42,33)" fg:x="50131" fg:w="73"/><text x="10.7653%" y="543.50"></text></g><g><title>__alloc_skb (581 samples, 0.12%)</title><rect x="10.4148%" y="565" width="0.1219%" height="15" fill="rgb(242,149,17)" fg:x="49652" fg:w="581"/><text x="10.6648%" y="575.50"></text></g><g><title>sk_stream_alloc_skb (625 samples, 0.13%)</title><rect x="10.4110%" y="581" width="0.1311%" height="15" fill="rgb(244,29,21)" fg:x="49634" fg:w="625"/><text x="10.6610%" y="591.50"></text></g><g><title>skb_entail (76 samples, 0.02%)</title><rect x="10.5421%" y="581" width="0.0159%" height="15" fill="rgb(220,130,37)" fg:x="50259" fg:w="76"/><text x="10.7921%" y="591.50"></text></g><g><title>__ip_local_out (52 samples, 0.01%)</title><rect x="10.6619%" y="469" width="0.0109%" height="15" fill="rgb(211,67,2)" fg:x="50830" fg:w="52"/><text x="10.9119%" y="479.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (78 samples, 0.02%)</title><rect x="10.6831%" y="437" width="0.0164%" height="15" fill="rgb(235,68,52)" fg:x="50931" fg:w="78"/><text x="10.9331%" y="447.50"></text></g><g><title>dequeue_func (76 samples, 0.02%)</title><rect x="10.8089%" y="325" width="0.0159%" height="15" fill="rgb(246,142,3)" fg:x="51531" fg:w="76"/><text x="11.0589%" y="335.50"></text></g><g><title>codel_dequeue.constprop.0 (134 samples, 0.03%)</title><rect x="10.8048%" y="341" width="0.0281%" height="15" fill="rgb(241,25,7)" fg:x="51511" fg:w="134"/><text x="11.0548%" y="351.50"></text></g><g><title>fq_codel_dequeue (357 samples, 0.07%)</title><rect x="10.7584%" y="357" width="0.0749%" height="15" fill="rgb(242,119,39)" fg:x="51290" fg:w="357"/><text x="11.0084%" y="367.50"></text></g><g><title>free_old_xmit_skbs (96 samples, 0.02%)</title><rect x="10.8522%" y="309" width="0.0201%" height="15" fill="rgb(241,98,45)" fg:x="51737" fg:w="96"/><text x="11.1022%" y="319.50"></text></g><g><title>virtqueue_get_buf (52 samples, 0.01%)</title><rect x="10.8614%" y="293" width="0.0109%" height="15" fill="rgb(254,28,30)" fg:x="51781" fg:w="52"/><text x="11.1114%" y="303.50"></text></g><g><title>virtqueue_get_buf_ctx (52 samples, 0.01%)</title><rect x="10.8614%" y="277" width="0.0109%" height="15" fill="rgb(241,142,54)" fg:x="51781" fg:w="52"/><text x="11.1114%" y="287.50"></text></g><g><title>virtqueue_add_outbuf (76 samples, 0.02%)</title><rect x="10.8830%" y="309" width="0.0159%" height="15" fill="rgb(222,85,15)" fg:x="51884" fg:w="76"/><text x="11.1330%" y="319.50"></text></g><g><title>iowrite16 (243 samples, 0.05%)</title><rect x="10.9111%" y="293" width="0.0510%" height="15" fill="rgb(210,85,47)" fg:x="52018" fg:w="243"/><text x="11.1611%" y="303.50"></text></g><g><title>virtqueue_notify (250 samples, 0.05%)</title><rect x="10.9100%" y="309" width="0.0524%" height="15" fill="rgb(224,206,25)" fg:x="52013" fg:w="250"/><text x="11.1600%" y="319.50"></text></g><g><title>start_xmit (563 samples, 0.12%)</title><rect x="10.8459%" y="325" width="0.1181%" height="15" fill="rgb(243,201,19)" fg:x="51707" fg:w="563"/><text x="11.0959%" y="335.50"></text></g><g><title>dev_hard_start_xmit (578 samples, 0.12%)</title><rect x="10.8436%" y="341" width="0.1212%" height="15" fill="rgb(236,59,4)" fg:x="51696" fg:w="578"/><text x="11.0936%" y="351.50"></text></g><g><title>__qdisc_run (1,121 samples, 0.24%)</title><rect x="10.7471%" y="373" width="0.2351%" height="15" fill="rgb(254,179,45)" fg:x="51236" fg:w="1121"/><text x="10.9971%" y="383.50"></text></g><g><title>sch_direct_xmit (710 samples, 0.15%)</title><rect x="10.8333%" y="357" width="0.1489%" height="15" fill="rgb(226,14,10)" fg:x="51647" fg:w="710"/><text x="11.0833%" y="367.50"></text></g><g><title>validate_xmit_skb_list (80 samples, 0.02%)</title><rect x="10.9654%" y="341" width="0.0168%" height="15" fill="rgb(244,27,41)" fg:x="52277" fg:w="80"/><text x="11.2154%" y="351.50"></text></g><g><title>validate_xmit_skb (73 samples, 0.02%)</title><rect x="10.9669%" y="325" width="0.0153%" height="15" fill="rgb(235,35,32)" fg:x="52284" fg:w="73"/><text x="11.2169%" y="335.50"></text></g><g><title>_raw_spin_lock (183 samples, 0.04%)</title><rect x="10.9824%" y="373" width="0.0384%" height="15" fill="rgb(218,68,31)" fg:x="52358" fg:w="183"/><text x="11.2324%" y="383.50"></text></g><g><title>native_queued_spin_lock_slowpath (112 samples, 0.02%)</title><rect x="10.9973%" y="357" width="0.0235%" height="15" fill="rgb(207,120,37)" fg:x="52429" fg:w="112"/><text x="11.2473%" y="367.50"></text></g><g><title>fq_codel_enqueue (100 samples, 0.02%)</title><rect x="11.0235%" y="373" width="0.0210%" height="15" fill="rgb(227,98,0)" fg:x="52554" fg:w="100"/><text x="11.2735%" y="383.50"></text></g><g><title>_raw_spin_lock (65 samples, 0.01%)</title><rect x="11.0495%" y="357" width="0.0136%" height="15" fill="rgb(207,7,3)" fg:x="52678" fg:w="65"/><text x="11.2995%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath (65 samples, 0.01%)</title><rect x="11.0495%" y="341" width="0.0136%" height="15" fill="rgb(206,98,19)" fg:x="52678" fg:w="65"/><text x="11.2995%" y="351.50"></text></g><g><title>napi_consume_skb (57 samples, 0.01%)</title><rect x="11.0883%" y="309" width="0.0120%" height="15" fill="rgb(217,5,26)" fg:x="52863" fg:w="57"/><text x="11.3383%" y="319.50"></text></g><g><title>__dev_kfree_skb_any (56 samples, 0.01%)</title><rect x="11.0886%" y="293" width="0.0117%" height="15" fill="rgb(235,190,38)" fg:x="52864" fg:w="56"/><text x="11.3386%" y="303.50"></text></g><g><title>consume_skb (55 samples, 0.01%)</title><rect x="11.0888%" y="277" width="0.0115%" height="15" fill="rgb(247,86,24)" fg:x="52865" fg:w="55"/><text x="11.3388%" y="287.50"></text></g><g><title>virtqueue_get_buf (104 samples, 0.02%)</title><rect x="11.1003%" y="309" width="0.0218%" height="15" fill="rgb(205,101,16)" fg:x="52920" fg:w="104"/><text x="11.3503%" y="319.50"></text></g><g><title>virtqueue_get_buf_ctx (104 samples, 0.02%)</title><rect x="11.1003%" y="293" width="0.0218%" height="15" fill="rgb(246,168,33)" fg:x="52920" fg:w="104"/><text x="11.3503%" y="303.50"></text></g><g><title>free_old_xmit_skbs (200 samples, 0.04%)</title><rect x="11.0812%" y="325" width="0.0420%" height="15" fill="rgb(231,114,1)" fg:x="52829" fg:w="200"/><text x="11.3312%" y="335.50"></text></g><g><title>virtqueue_add_outbuf (138 samples, 0.03%)</title><rect x="11.1286%" y="325" width="0.0289%" height="15" fill="rgb(207,184,53)" fg:x="53055" fg:w="138"/><text x="11.3786%" y="335.50"></text></g><g><title>kmalloc_array (59 samples, 0.01%)</title><rect x="11.1452%" y="309" width="0.0124%" height="15" fill="rgb(224,95,51)" fg:x="53134" fg:w="59"/><text x="11.3952%" y="319.50"></text></g><g><title>virtqueue_kick_prepare (62 samples, 0.01%)</title><rect x="11.1674%" y="325" width="0.0130%" height="15" fill="rgb(212,188,45)" fg:x="53240" fg:w="62"/><text x="11.4174%" y="335.50"></text></g><g><title>iowrite16 (2,153 samples, 0.45%)</title><rect x="11.1825%" y="309" width="0.4516%" height="15" fill="rgb(223,154,38)" fg:x="53312" fg:w="2153"/><text x="11.4325%" y="319.50"></text></g><g><title>virtqueue_notify (2,180 samples, 0.46%)</title><rect x="11.1804%" y="325" width="0.4573%" height="15" fill="rgb(251,22,52)" fg:x="53302" fg:w="2180"/><text x="11.4304%" y="335.50"></text></g><g><title>start_xmit (2,751 samples, 0.58%)</title><rect x="11.0672%" y="341" width="0.5770%" height="15" fill="rgb(229,209,22)" fg:x="52762" fg:w="2751"/><text x="11.3172%" y="351.50"></text></g><g><title>dev_hard_start_xmit (2,776 samples, 0.58%)</title><rect x="11.0632%" y="357" width="0.5823%" height="15" fill="rgb(234,138,34)" fg:x="52743" fg:w="2776"/><text x="11.3132%" y="367.50"></text></g><g><title>validate_xmit_skb (74 samples, 0.02%)</title><rect x="11.6522%" y="341" width="0.0155%" height="15" fill="rgb(212,95,11)" fg:x="55551" fg:w="74"/><text x="11.9022%" y="351.50"></text></g><g><title>sch_direct_xmit (2,975 samples, 0.62%)</title><rect x="11.0460%" y="373" width="0.6240%" height="15" fill="rgb(240,179,47)" fg:x="52661" fg:w="2975"/><text x="11.2960%" y="383.50"></text></g><g><title>validate_xmit_skb_list (100 samples, 0.02%)</title><rect x="11.6490%" y="357" width="0.0210%" height="15" fill="rgb(240,163,11)" fg:x="55536" fg:w="100"/><text x="11.8990%" y="367.50"></text></g><g><title>__dev_queue_xmit (4,539 samples, 0.95%)</title><rect x="10.7181%" y="389" width="0.9521%" height="15" fill="rgb(236,37,12)" fg:x="51098" fg:w="4539"/><text x="10.9681%" y="399.50"></text></g><g><title>_raw_spin_lock (71 samples, 0.01%)</title><rect x="11.6734%" y="389" width="0.0149%" height="15" fill="rgb(232,164,16)" fg:x="55652" fg:w="71"/><text x="11.9234%" y="399.50"></text></g><g><title>ip_finish_output2 (4,713 samples, 0.99%)</title><rect x="10.7026%" y="421" width="0.9886%" height="15" fill="rgb(244,205,15)" fg:x="51024" fg:w="4713"/><text x="10.9526%" y="431.50"></text></g><g><title>dev_queue_xmit (4,639 samples, 0.97%)</title><rect x="10.7181%" y="405" width="0.9731%" height="15" fill="rgb(223,117,47)" fg:x="51098" fg:w="4639"/><text x="10.9681%" y="415.50"></text></g><g><title>__ip_finish_output (4,733 samples, 0.99%)</title><rect x="10.6995%" y="437" width="0.9928%" height="15" fill="rgb(244,107,35)" fg:x="51009" fg:w="4733"/><text x="10.9495%" y="447.50"></text></g><g><title>ip_output (4,876 samples, 1.02%)</title><rect x="10.6730%" y="469" width="1.0228%" height="15" fill="rgb(205,140,8)" fg:x="50883" fg:w="4876"/><text x="10.9230%" y="479.50"></text></g><g><title>ip_finish_output (4,839 samples, 1.02%)</title><rect x="10.6808%" y="453" width="1.0150%" height="15" fill="rgb(228,84,46)" fg:x="50920" fg:w="4839"/><text x="10.9308%" y="463.50"></text></g><g><title>ip_local_out (4,948 samples, 1.04%)</title><rect x="10.6590%" y="485" width="1.0379%" height="15" fill="rgb(254,188,9)" fg:x="50816" fg:w="4948"/><text x="10.9090%" y="495.50"></text></g><g><title>ipv4_dst_check (53 samples, 0.01%)</title><rect x="11.6998%" y="485" width="0.0111%" height="15" fill="rgb(206,112,54)" fg:x="55778" fg:w="53"/><text x="11.9498%" y="495.50"></text></g><g><title>__ip_queue_xmit (5,126 samples, 1.08%)</title><rect x="10.6359%" y="501" width="1.0752%" height="15" fill="rgb(216,84,49)" fg:x="50706" fg:w="5126"/><text x="10.8859%" y="511.50"></text></g><g><title>ip_queue_xmit (5,146 samples, 1.08%)</title><rect x="10.6359%" y="517" width="1.0794%" height="15" fill="rgb(214,194,35)" fg:x="50706" fg:w="5146"/><text x="10.8859%" y="527.50"></text></g><g><title>skb_clone (60 samples, 0.01%)</title><rect x="11.7153%" y="517" width="0.0126%" height="15" fill="rgb(249,28,3)" fg:x="55852" fg:w="60"/><text x="11.9653%" y="527.50"></text></g><g><title>__tcp_transmit_skb (5,432 samples, 1.14%)</title><rect x="10.5971%" y="533" width="1.1394%" height="15" fill="rgb(222,56,52)" fg:x="50521" fg:w="5432"/><text x="10.8471%" y="543.50"></text></g><g><title>kvm_clock_get_cycles (71 samples, 0.01%)</title><rect x="11.7562%" y="517" width="0.0149%" height="15" fill="rgb(245,217,50)" fg:x="56047" fg:w="71"/><text x="12.0062%" y="527.50"></text></g><g><title>pvclock_clocksource_read (62 samples, 0.01%)</title><rect x="11.7581%" y="501" width="0.0130%" height="15" fill="rgb(213,201,24)" fg:x="56056" fg:w="62"/><text x="12.0081%" y="511.50"></text></g><g><title>ktime_get (97 samples, 0.02%)</title><rect x="11.7522%" y="533" width="0.0203%" height="15" fill="rgb(248,116,28)" fg:x="56028" fg:w="97"/><text x="12.0022%" y="543.50"></text></g><g><title>tcp_event_new_data_sent (178 samples, 0.04%)</title><rect x="11.7862%" y="533" width="0.0373%" height="15" fill="rgb(219,72,43)" fg:x="56190" fg:w="178"/><text x="12.0362%" y="543.50"></text></g><g><title>tcp_rearm_rto (102 samples, 0.02%)</title><rect x="11.8021%" y="517" width="0.0214%" height="15" fill="rgb(209,138,14)" fg:x="56266" fg:w="102"/><text x="12.0521%" y="527.50"></text></g><g><title>sk_reset_timer (77 samples, 0.02%)</title><rect x="11.8074%" y="501" width="0.0162%" height="15" fill="rgb(222,18,33)" fg:x="56291" fg:w="77"/><text x="12.0574%" y="511.50"></text></g><g><title>mod_timer (74 samples, 0.02%)</title><rect x="11.8080%" y="485" width="0.0155%" height="15" fill="rgb(213,199,7)" fg:x="56294" fg:w="74"/><text x="12.0580%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (6,161 samples, 1.29%)</title><rect x="10.5598%" y="565" width="1.2923%" height="15" fill="rgb(250,110,10)" fg:x="50343" fg:w="6161"/><text x="10.8098%" y="575.50"></text></g><g><title>tcp_write_xmit (6,097 samples, 1.28%)</title><rect x="10.5732%" y="549" width="1.2789%" height="15" fill="rgb(248,123,6)" fg:x="50407" fg:w="6097"/><text x="10.8232%" y="559.50"></text></g><g><title>tcp_push (6,166 samples, 1.29%)</title><rect x="10.5595%" y="581" width="1.2934%" height="15" fill="rgb(206,91,31)" fg:x="50342" fg:w="6166"/><text x="10.8095%" y="591.50"></text></g><g><title>tcp_send_mss (141 samples, 0.03%)</title><rect x="11.8577%" y="581" width="0.0296%" height="15" fill="rgb(211,154,13)" fg:x="56531" fg:w="141"/><text x="12.1077%" y="591.50"></text></g><g><title>tcp_current_mss (110 samples, 0.02%)</title><rect x="11.8642%" y="565" width="0.0231%" height="15" fill="rgb(225,148,7)" fg:x="56562" fg:w="110"/><text x="12.1142%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (7,527 samples, 1.58%)</title><rect x="10.3087%" y="597" width="1.5788%" height="15" fill="rgb(220,160,43)" fg:x="49146" fg:w="7527"/><text x="10.5587%" y="607.50"></text></g><g><title>tcp_sendmsg (7,745 samples, 1.62%)</title><rect x="10.2718%" y="613" width="1.6246%" height="15" fill="rgb(213,52,39)" fg:x="48970" fg:w="7745"/><text x="10.5218%" y="623.50"></text></g><g><title>inet_sendmsg (7,783 samples, 1.63%)</title><rect x="10.2648%" y="629" width="1.6325%" height="15" fill="rgb(243,137,7)" fg:x="48937" fg:w="7783"/><text x="10.5148%" y="639.50"></text></g><g><title>security_socket_sendmsg (71 samples, 0.01%)</title><rect x="11.8974%" y="629" width="0.0149%" height="15" fill="rgb(230,79,13)" fg:x="56720" fg:w="71"/><text x="12.1474%" y="639.50"></text></g><g><title>apparmor_socket_sendmsg (56 samples, 0.01%)</title><rect x="11.9005%" y="613" width="0.0117%" height="15" fill="rgb(247,105,23)" fg:x="56735" fg:w="56"/><text x="12.1505%" y="623.50"></text></g><g><title>aa_sk_perm (54 samples, 0.01%)</title><rect x="11.9009%" y="597" width="0.0113%" height="15" fill="rgb(223,179,41)" fg:x="56737" fg:w="54"/><text x="12.1509%" y="607.50"></text></g><g><title>sock_sendmsg (7,911 samples, 1.66%)</title><rect x="10.2541%" y="645" width="1.6594%" height="15" fill="rgb(218,9,34)" fg:x="48886" fg:w="7911"/><text x="10.5041%" y="655.50"></text></g><g><title>__fdget (58 samples, 0.01%)</title><rect x="11.9139%" y="629" width="0.0122%" height="15" fill="rgb(222,106,8)" fg:x="56799" fg:w="58"/><text x="12.1639%" y="639.50"></text></g><g><title>__fget_light (55 samples, 0.01%)</title><rect x="11.9146%" y="613" width="0.0115%" height="15" fill="rgb(211,220,0)" fg:x="56802" fg:w="55"/><text x="12.1646%" y="623.50"></text></g><g><title>__fget (54 samples, 0.01%)</title><rect x="11.9148%" y="597" width="0.0113%" height="15" fill="rgb(229,52,16)" fg:x="56803" fg:w="54"/><text x="12.1648%" y="607.50"></text></g><g><title>__sys_sendto (8,056 samples, 1.69%)</title><rect x="10.2401%" y="661" width="1.6898%" height="15" fill="rgb(212,155,18)" fg:x="48819" fg:w="8056"/><text x="10.4901%" y="671.50"></text></g><g><title>sockfd_lookup_light (78 samples, 0.02%)</title><rect x="11.9135%" y="645" width="0.0164%" height="15" fill="rgb(242,21,14)" fg:x="56797" fg:w="78"/><text x="12.1635%" y="655.50"></text></g><g><title>__x64_sys_sendto (8,092 samples, 1.70%)</title><rect x="10.2399%" y="677" width="1.6973%" height="15" fill="rgb(222,19,48)" fg:x="48818" fg:w="8092"/><text x="10.4899%" y="687.50"></text></g><g><title>__libc_send (8,969 samples, 1.88%)</title><rect x="10.0561%" y="725" width="1.8813%" height="15" fill="rgb(232,45,27)" fg:x="47942" fg:w="8969"/><text x="10.3061%" y="735.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (8,380 samples, 1.76%)</title><rect x="10.1797%" y="709" width="1.7578%" height="15" fill="rgb(249,103,42)" fg:x="48531" fg:w="8380"/><text x="10.4297%" y="719.50"></text></g><g><title>do_syscall_64 (8,345 samples, 1.75%)</title><rect x="10.1870%" y="693" width="1.7504%" height="15" fill="rgb(246,81,33)" fg:x="48566" fg:w="8345"/><text x="10.4370%" y="703.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (9,007 samples, 1.89%)</title><rect x="10.0484%" y="821" width="1.8893%" height="15" fill="rgb(252,33,42)" fg:x="47905" fg:w="9007"/><text x="10.2984%" y="831.50">&lt;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (8,988 samples, 1.89%)</title><rect x="10.0524%" y="805" width="1.8853%" height="15" fill="rgb(209,212,41)" fg:x="47924" fg:w="8988"/><text x="10.3024%" y="815.50">m..</text></g><g><title>mio::sys::unix::IoSourceState::do_io (8,988 samples, 1.89%)</title><rect x="10.0524%" y="789" width="1.8853%" height="15" fill="rgb(207,154,6)" fg:x="47924" fg:w="8988"/><text x="10.3024%" y="799.50">m..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (8,988 samples, 1.89%)</title><rect x="10.0524%" y="773" width="1.8853%" height="15" fill="rgb(223,64,47)" fg:x="47924" fg:w="8988"/><text x="10.3024%" y="783.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (8,988 samples, 1.89%)</title><rect x="10.0524%" y="757" width="1.8853%" height="15" fill="rgb(211,161,38)" fg:x="47924" fg:w="8988"/><text x="10.3024%" y="767.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (8,976 samples, 1.88%)</title><rect x="10.0549%" y="741" width="1.8828%" height="15" fill="rgb(219,138,40)" fg:x="47936" fg:w="8976"/><text x="10.3049%" y="751.50">s..</text></g><g><title>std::io::Write::write_all (9,031 samples, 1.89%)</title><rect x="10.0450%" y="837" width="1.8943%" height="15" fill="rgb(241,228,46)" fg:x="47889" fg:w="9031"/><text x="10.2950%" y="847.50">s..</text></g><g><title>[libc-2.31.so] (190 samples, 0.04%)</title><rect x="11.9834%" y="565" width="0.0399%" height="15" fill="rgb(223,209,38)" fg:x="57130" fg:w="190"/><text x="12.2334%" y="575.50"></text></g><g><title>[libc-2.31.so] (224 samples, 0.05%)</title><rect x="11.9767%" y="581" width="0.0470%" height="15" fill="rgb(236,164,45)" fg:x="57098" fg:w="224"/><text x="12.2267%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (326 samples, 0.07%)</title><rect x="11.9555%" y="645" width="0.0684%" height="15" fill="rgb(231,15,5)" fg:x="56997" fg:w="326"/><text x="12.2055%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (326 samples, 0.07%)</title><rect x="11.9555%" y="629" width="0.0684%" height="15" fill="rgb(252,35,15)" fg:x="56997" fg:w="326"/><text x="12.2055%" y="639.50"></text></g><g><title>alloc::alloc::realloc (326 samples, 0.07%)</title><rect x="11.9555%" y="613" width="0.0684%" height="15" fill="rgb(248,181,18)" fg:x="56997" fg:w="326"/><text x="12.2055%" y="623.50"></text></g><g><title>realloc (316 samples, 0.07%)</title><rect x="11.9576%" y="597" width="0.0663%" height="15" fill="rgb(233,39,42)" fg:x="57007" fg:w="316"/><text x="12.2076%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (337 samples, 0.07%)</title><rect x="11.9534%" y="661" width="0.0707%" height="15" fill="rgb(238,110,33)" fg:x="56987" fg:w="337"/><text x="12.2034%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (363 samples, 0.08%)</title><rect x="11.9490%" y="725" width="0.0761%" height="15" fill="rgb(233,195,10)" fg:x="56966" fg:w="363"/><text x="12.1990%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (363 samples, 0.08%)</title><rect x="11.9490%" y="709" width="0.0761%" height="15" fill="rgb(254,105,3)" fg:x="56966" fg:w="363"/><text x="12.1990%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (359 samples, 0.08%)</title><rect x="11.9498%" y="693" width="0.0753%" height="15" fill="rgb(221,225,9)" fg:x="56970" fg:w="359"/><text x="12.1998%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (359 samples, 0.08%)</title><rect x="11.9498%" y="677" width="0.0753%" height="15" fill="rgb(224,227,45)" fg:x="56970" fg:w="359"/><text x="12.1998%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (396 samples, 0.08%)</title><rect x="11.9456%" y="805" width="0.0831%" height="15" fill="rgb(229,198,43)" fg:x="56950" fg:w="396"/><text x="12.1956%" y="815.50"></text></g><g><title>alloc::string::String::push_str (383 samples, 0.08%)</title><rect x="11.9483%" y="789" width="0.0803%" height="15" fill="rgb(206,209,35)" fg:x="56963" fg:w="383"/><text x="12.1983%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (383 samples, 0.08%)</title><rect x="11.9483%" y="773" width="0.0803%" height="15" fill="rgb(245,195,53)" fg:x="56963" fg:w="383"/><text x="12.1983%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (383 samples, 0.08%)</title><rect x="11.9483%" y="757" width="0.0803%" height="15" fill="rgb(240,92,26)" fg:x="56963" fg:w="383"/><text x="12.1983%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (383 samples, 0.08%)</title><rect x="11.9483%" y="741" width="0.0803%" height="15" fill="rgb(207,40,23)" fg:x="56963" fg:w="383"/><text x="12.1983%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (168 samples, 0.04%)</title><rect x="12.0476%" y="581" width="0.0352%" height="15" fill="rgb(223,111,35)" fg:x="57436" fg:w="168"/><text x="12.2976%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (168 samples, 0.04%)</title><rect x="12.0476%" y="565" width="0.0352%" height="15" fill="rgb(229,147,28)" fg:x="57436" fg:w="168"/><text x="12.2976%" y="575.50"></text></g><g><title>alloc::alloc::realloc (167 samples, 0.04%)</title><rect x="12.0478%" y="549" width="0.0350%" height="15" fill="rgb(211,29,28)" fg:x="57437" fg:w="167"/><text x="12.2978%" y="559.50"></text></g><g><title>realloc (156 samples, 0.03%)</title><rect x="12.0501%" y="533" width="0.0327%" height="15" fill="rgb(228,72,33)" fg:x="57448" fg:w="156"/><text x="12.3001%" y="543.50"></text></g><g><title>[libc-2.31.so] (62 samples, 0.01%)</title><rect x="12.0698%" y="517" width="0.0130%" height="15" fill="rgb(205,214,31)" fg:x="57542" fg:w="62"/><text x="12.3198%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (194 samples, 0.04%)</title><rect x="12.0450%" y="597" width="0.0407%" height="15" fill="rgb(224,111,15)" fg:x="57424" fg:w="194"/><text x="12.2950%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (219 samples, 0.05%)</title><rect x="12.0417%" y="661" width="0.0459%" height="15" fill="rgb(253,21,26)" fg:x="57408" fg:w="219"/><text x="12.2917%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (217 samples, 0.05%)</title><rect x="12.0421%" y="645" width="0.0455%" height="15" fill="rgb(245,139,43)" fg:x="57410" fg:w="217"/><text x="12.2921%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (214 samples, 0.04%)</title><rect x="12.0427%" y="629" width="0.0449%" height="15" fill="rgb(252,170,7)" fg:x="57413" fg:w="214"/><text x="12.2927%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (211 samples, 0.04%)</title><rect x="12.0434%" y="613" width="0.0443%" height="15" fill="rgb(231,118,14)" fg:x="57416" fg:w="211"/><text x="12.2934%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (274 samples, 0.06%)</title><rect x="12.0358%" y="757" width="0.0575%" height="15" fill="rgb(238,83,0)" fg:x="57380" fg:w="274"/><text x="12.2858%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (250 samples, 0.05%)</title><rect x="12.0408%" y="741" width="0.0524%" height="15" fill="rgb(221,39,39)" fg:x="57404" fg:w="250"/><text x="12.2908%" y="751.50"></text></g><g><title>alloc::string::String::push_str (250 samples, 0.05%)</title><rect x="12.0408%" y="725" width="0.0524%" height="15" fill="rgb(222,119,46)" fg:x="57404" fg:w="250"/><text x="12.2908%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (250 samples, 0.05%)</title><rect x="12.0408%" y="709" width="0.0524%" height="15" fill="rgb(222,165,49)" fg:x="57404" fg:w="250"/><text x="12.2908%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (250 samples, 0.05%)</title><rect x="12.0408%" y="693" width="0.0524%" height="15" fill="rgb(219,113,52)" fg:x="57404" fg:w="250"/><text x="12.2908%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (250 samples, 0.05%)</title><rect x="12.0408%" y="677" width="0.0524%" height="15" fill="rgb(214,7,15)" fg:x="57404" fg:w="250"/><text x="12.2908%" y="687.50"></text></g><g><title>alloc::fmt::format (378 samples, 0.08%)</title><rect x="12.0293%" y="805" width="0.0793%" height="15" fill="rgb(235,32,4)" fg:x="57349" fg:w="378"/><text x="12.2793%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (364 samples, 0.08%)</title><rect x="12.0322%" y="789" width="0.0764%" height="15" fill="rgb(238,90,54)" fg:x="57363" fg:w="364"/><text x="12.2822%" y="799.50"></text></g><g><title>core::fmt::write (360 samples, 0.08%)</title><rect x="12.0331%" y="773" width="0.0755%" height="15" fill="rgb(213,208,19)" fg:x="57367" fg:w="360"/><text x="12.2831%" y="783.50"></text></g><g><title>alloc::str::join_generic_copy (106 samples, 0.02%)</title><rect x="12.1086%" y="773" width="0.0222%" height="15" fill="rgb(233,156,4)" fg:x="57727" fg:w="106"/><text x="12.3586%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (109 samples, 0.02%)</title><rect x="12.1086%" y="805" width="0.0229%" height="15" fill="rgb(207,194,5)" fg:x="57727" fg:w="109"/><text x="12.3586%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (109 samples, 0.02%)</title><rect x="12.1086%" y="789" width="0.0229%" height="15" fill="rgb(206,111,30)" fg:x="57727" fg:w="109"/><text x="12.3586%" y="799.50"></text></g><g><title>[libc-2.31.so] (163 samples, 0.03%)</title><rect x="12.2338%" y="341" width="0.0342%" height="15" fill="rgb(243,70,54)" fg:x="58324" fg:w="163"/><text x="12.4838%" y="351.50"></text></g><g><title>[libc-2.31.so] (214 samples, 0.04%)</title><rect x="12.2233%" y="357" width="0.0449%" height="15" fill="rgb(242,28,8)" fg:x="58274" fg:w="214"/><text x="12.4733%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (430 samples, 0.09%)</title><rect x="12.1782%" y="421" width="0.0902%" height="15" fill="rgb(219,106,18)" fg:x="58059" fg:w="430"/><text x="12.4282%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (430 samples, 0.09%)</title><rect x="12.1782%" y="405" width="0.0902%" height="15" fill="rgb(244,222,10)" fg:x="58059" fg:w="430"/><text x="12.4282%" y="415.50"></text></g><g><title>alloc::alloc::realloc (430 samples, 0.09%)</title><rect x="12.1782%" y="389" width="0.0902%" height="15" fill="rgb(236,179,52)" fg:x="58059" fg:w="430"/><text x="12.4282%" y="399.50"></text></g><g><title>realloc (400 samples, 0.08%)</title><rect x="12.1845%" y="373" width="0.0839%" height="15" fill="rgb(213,23,39)" fg:x="58089" fg:w="400"/><text x="12.4345%" y="383.50"></text></g><g><title>__libc_malloc (48 samples, 0.01%)</title><rect x="12.2684%" y="421" width="0.0101%" height="15" fill="rgb(238,48,10)" fg:x="58489" fg:w="48"/><text x="12.5184%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (526 samples, 0.11%)</title><rect x="12.1726%" y="437" width="0.1103%" height="15" fill="rgb(251,196,23)" fg:x="58032" fg:w="526"/><text x="12.4226%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (588 samples, 0.12%)</title><rect x="12.1638%" y="501" width="0.1233%" height="15" fill="rgb(250,152,24)" fg:x="57990" fg:w="588"/><text x="12.4138%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (581 samples, 0.12%)</title><rect x="12.1652%" y="485" width="0.1219%" height="15" fill="rgb(209,150,17)" fg:x="57997" fg:w="581"/><text x="12.4152%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (579 samples, 0.12%)</title><rect x="12.1656%" y="469" width="0.1214%" height="15" fill="rgb(234,202,34)" fg:x="57999" fg:w="579"/><text x="12.4156%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (572 samples, 0.12%)</title><rect x="12.1671%" y="453" width="0.1200%" height="15" fill="rgb(253,148,53)" fg:x="58006" fg:w="572"/><text x="12.4171%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (64 samples, 0.01%)</title><rect x="12.2871%" y="501" width="0.0134%" height="15" fill="rgb(218,129,16)" fg:x="58578" fg:w="64"/><text x="12.5371%" y="511.50"></text></g><g><title>[libc-2.31.so] (56 samples, 0.01%)</title><rect x="12.2888%" y="485" width="0.0117%" height="15" fill="rgb(216,85,19)" fg:x="58586" fg:w="56"/><text x="12.5388%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (690 samples, 0.14%)</title><rect x="12.1564%" y="597" width="0.1447%" height="15" fill="rgb(235,228,7)" fg:x="57955" fg:w="690"/><text x="12.4064%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (660 samples, 0.14%)</title><rect x="12.1627%" y="581" width="0.1384%" height="15" fill="rgb(245,175,0)" fg:x="57985" fg:w="660"/><text x="12.4127%" y="591.50"></text></g><g><title>alloc::string::String::push_str (660 samples, 0.14%)</title><rect x="12.1627%" y="565" width="0.1384%" height="15" fill="rgb(208,168,36)" fg:x="57985" fg:w="660"/><text x="12.4127%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (660 samples, 0.14%)</title><rect x="12.1627%" y="549" width="0.1384%" height="15" fill="rgb(246,171,24)" fg:x="57985" fg:w="660"/><text x="12.4127%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (660 samples, 0.14%)</title><rect x="12.1627%" y="533" width="0.1384%" height="15" fill="rgb(215,142,24)" fg:x="57985" fg:w="660"/><text x="12.4127%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (660 samples, 0.14%)</title><rect x="12.1627%" y="517" width="0.1384%" height="15" fill="rgb(250,187,7)" fg:x="57985" fg:w="660"/><text x="12.4127%" y="527.50"></text></g><g><title>alloc::fmt::format (849 samples, 0.18%)</title><rect x="12.1394%" y="645" width="0.1781%" height="15" fill="rgb(228,66,33)" fg:x="57874" fg:w="849"/><text x="12.3894%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (808 samples, 0.17%)</title><rect x="12.1480%" y="629" width="0.1695%" height="15" fill="rgb(234,215,21)" fg:x="57915" fg:w="808"/><text x="12.3980%" y="639.50"></text></g><g><title>core::fmt::write (793 samples, 0.17%)</title><rect x="12.1512%" y="613" width="0.1663%" height="15" fill="rgb(222,191,20)" fg:x="57930" fg:w="793"/><text x="12.4012%" y="623.50"></text></g><g><title>[libc-2.31.so] (156 samples, 0.03%)</title><rect x="12.3202%" y="533" width="0.0327%" height="15" fill="rgb(245,79,54)" fg:x="58736" fg:w="156"/><text x="12.5702%" y="543.50"></text></g><g><title>&lt;parsed::http::Response as core::convert::Into&lt;alloc::string::String&gt;&gt;::into::{{closure}} (1,072 samples, 0.22%)</title><rect x="12.1378%" y="661" width="0.2249%" height="15" fill="rgb(240,10,37)" fg:x="57866" fg:w="1072"/><text x="12.3878%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Header&gt; (208 samples, 0.04%)</title><rect x="12.3190%" y="645" width="0.0436%" height="15" fill="rgb(214,192,32)" fg:x="58730" fg:w="208"/><text x="12.5690%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (208 samples, 0.04%)</title><rect x="12.3190%" y="629" width="0.0436%" height="15" fill="rgb(209,36,54)" fg:x="58730" fg:w="208"/><text x="12.5690%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (208 samples, 0.04%)</title><rect x="12.3190%" y="613" width="0.0436%" height="15" fill="rgb(220,10,11)" fg:x="58730" fg:w="208"/><text x="12.5690%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (208 samples, 0.04%)</title><rect x="12.3190%" y="597" width="0.0436%" height="15" fill="rgb(221,106,17)" fg:x="58730" fg:w="208"/><text x="12.5690%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (208 samples, 0.04%)</title><rect x="12.3190%" y="581" width="0.0436%" height="15" fill="rgb(251,142,44)" fg:x="58730" fg:w="208"/><text x="12.5690%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (203 samples, 0.04%)</title><rect x="12.3200%" y="565" width="0.0426%" height="15" fill="rgb(238,13,15)" fg:x="58735" fg:w="203"/><text x="12.5700%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (203 samples, 0.04%)</title><rect x="12.3200%" y="549" width="0.0426%" height="15" fill="rgb(208,107,27)" fg:x="58735" fg:w="203"/><text x="12.5700%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,076 samples, 0.23%)</title><rect x="12.1378%" y="677" width="0.2257%" height="15" fill="rgb(205,136,37)" fg:x="57866" fg:w="1076"/><text x="12.3878%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,132 samples, 0.24%)</title><rect x="12.1342%" y="741" width="0.2374%" height="15" fill="rgb(250,205,27)" fg:x="57849" fg:w="1132"/><text x="12.3842%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,132 samples, 0.24%)</title><rect x="12.1342%" y="725" width="0.2374%" height="15" fill="rgb(210,80,43)" fg:x="57849" fg:w="1132"/><text x="12.3842%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,130 samples, 0.24%)</title><rect x="12.1346%" y="709" width="0.2370%" height="15" fill="rgb(247,160,36)" fg:x="57851" fg:w="1130"/><text x="12.3846%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,127 samples, 0.24%)</title><rect x="12.1352%" y="693" width="0.2364%" height="15" fill="rgb(234,13,49)" fg:x="57854" fg:w="1127"/><text x="12.3852%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,171 samples, 0.25%)</title><rect x="12.1321%" y="805" width="0.2456%" height="15" fill="rgb(234,122,0)" fg:x="57839" fg:w="1171"/><text x="12.3821%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,171 samples, 0.25%)</title><rect x="12.1321%" y="789" width="0.2456%" height="15" fill="rgb(207,146,38)" fg:x="57839" fg:w="1171"/><text x="12.3821%" y="799.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1,170 samples, 0.25%)</title><rect x="12.1323%" y="773" width="0.2454%" height="15" fill="rgb(207,177,25)" fg:x="57840" fg:w="1170"/><text x="12.3823%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,162 samples, 0.24%)</title><rect x="12.1340%" y="757" width="0.2437%" height="15" fill="rgb(211,178,42)" fg:x="57848" fg:w="1162"/><text x="12.3840%" y="767.50"></text></g><g><title>[libc-2.31.so] (78 samples, 0.02%)</title><rect x="12.3779%" y="709" width="0.0164%" height="15" fill="rgb(230,69,54)" fg:x="59011" fg:w="78"/><text x="12.6279%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (138 samples, 0.03%)</title><rect x="12.3779%" y="741" width="0.0289%" height="15" fill="rgb(214,135,41)" fg:x="59011" fg:w="138"/><text x="12.6279%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (138 samples, 0.03%)</title><rect x="12.3779%" y="725" width="0.0289%" height="15" fill="rgb(237,67,25)" fg:x="59011" fg:w="138"/><text x="12.6279%" y="735.50"></text></g><g><title>cfree (50 samples, 0.01%)</title><rect x="12.3964%" y="709" width="0.0105%" height="15" fill="rgb(222,189,50)" fg:x="59099" fg:w="50"/><text x="12.6464%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (141 samples, 0.03%)</title><rect x="12.3777%" y="805" width="0.0296%" height="15" fill="rgb(245,148,34)" fg:x="59010" fg:w="141"/><text x="12.6277%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (141 samples, 0.03%)</title><rect x="12.3777%" y="789" width="0.0296%" height="15" fill="rgb(222,29,6)" fg:x="59010" fg:w="141"/><text x="12.6277%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (141 samples, 0.03%)</title><rect x="12.3777%" y="773" width="0.0296%" height="15" fill="rgb(221,189,43)" fg:x="59010" fg:w="141"/><text x="12.6277%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (141 samples, 0.03%)</title><rect x="12.3777%" y="757" width="0.0296%" height="15" fill="rgb(207,36,27)" fg:x="59010" fg:w="141"/><text x="12.6277%" y="767.50"></text></g><g><title>[libc-2.31.so] (62 samples, 0.01%)</title><rect x="12.4088%" y="661" width="0.0130%" height="15" fill="rgb(217,90,24)" fg:x="59158" fg:w="62"/><text x="12.6588%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (86 samples, 0.02%)</title><rect x="12.4085%" y="693" width="0.0180%" height="15" fill="rgb(224,66,35)" fg:x="59157" fg:w="86"/><text x="12.6585%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (86 samples, 0.02%)</title><rect x="12.4085%" y="677" width="0.0180%" height="15" fill="rgb(221,13,50)" fg:x="59157" fg:w="86"/><text x="12.6585%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.02%)</title><rect x="12.4073%" y="789" width="0.0197%" height="15" fill="rgb(236,68,49)" fg:x="59151" fg:w="94"/><text x="12.6573%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (94 samples, 0.02%)</title><rect x="12.4073%" y="773" width="0.0197%" height="15" fill="rgb(229,146,28)" fg:x="59151" fg:w="94"/><text x="12.6573%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (94 samples, 0.02%)</title><rect x="12.4073%" y="757" width="0.0197%" height="15" fill="rgb(225,31,38)" fg:x="59151" fg:w="94"/><text x="12.6573%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (94 samples, 0.02%)</title><rect x="12.4073%" y="741" width="0.0197%" height="15" fill="rgb(250,208,3)" fg:x="59151" fg:w="94"/><text x="12.6573%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (94 samples, 0.02%)</title><rect x="12.4073%" y="725" width="0.0197%" height="15" fill="rgb(246,54,23)" fg:x="59151" fg:w="94"/><text x="12.6573%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.02%)</title><rect x="12.4073%" y="709" width="0.0197%" height="15" fill="rgb(243,76,11)" fg:x="59151" fg:w="94"/><text x="12.6573%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (137 samples, 0.03%)</title><rect x="12.4073%" y="805" width="0.0287%" height="15" fill="rgb(245,21,50)" fg:x="59151" fg:w="137"/><text x="12.6573%" y="815.50"></text></g><g><title>&lt;parsed::http::Response as core::convert::Into&lt;alloc::string::String&gt;&gt;::into (2,447 samples, 0.51%)</title><rect x="11.9425%" y="821" width="0.5133%" height="15" fill="rgb(228,9,43)" fg:x="56935" fg:w="2447"/><text x="12.1925%" y="831.50"></text></g><g><title>parsed::http::as_string (94 samples, 0.02%)</title><rect x="12.4360%" y="805" width="0.0197%" height="15" fill="rgb(208,100,47)" fg:x="59288" fg:w="94"/><text x="12.6860%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (94 samples, 0.02%)</title><rect x="12.4360%" y="789" width="0.0197%" height="15" fill="rgb(232,26,8)" fg:x="59288" fg:w="94"/><text x="12.6860%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (94 samples, 0.02%)</title><rect x="12.4360%" y="773" width="0.0197%" height="15" fill="rgb(216,166,38)" fg:x="59288" fg:w="94"/><text x="12.6860%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (91 samples, 0.02%)</title><rect x="12.4367%" y="757" width="0.0191%" height="15" fill="rgb(251,202,51)" fg:x="59291" fg:w="91"/><text x="12.6867%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (54 samples, 0.01%)</title><rect x="12.4444%" y="741" width="0.0113%" height="15" fill="rgb(254,216,34)" fg:x="59328" fg:w="54"/><text x="12.6944%" y="751.50"></text></g><g><title>[libc-2.31.so] (98 samples, 0.02%)</title><rect x="12.4719%" y="709" width="0.0206%" height="15" fill="rgb(251,32,27)" fg:x="59459" fg:w="98"/><text x="12.7219%" y="719.50"></text></g><g><title>[libc-2.31.so] (175 samples, 0.04%)</title><rect x="12.4560%" y="725" width="0.0367%" height="15" fill="rgb(208,127,28)" fg:x="59383" fg:w="175"/><text x="12.7060%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (193 samples, 0.04%)</title><rect x="12.4560%" y="821" width="0.0405%" height="15" fill="rgb(224,137,22)" fg:x="59383" fg:w="193"/><text x="12.7060%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (193 samples, 0.04%)</title><rect x="12.4560%" y="805" width="0.0405%" height="15" fill="rgb(254,70,32)" fg:x="59383" fg:w="193"/><text x="12.7060%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (193 samples, 0.04%)</title><rect x="12.4560%" y="789" width="0.0405%" height="15" fill="rgb(229,75,37)" fg:x="59383" fg:w="193"/><text x="12.7060%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (193 samples, 0.04%)</title><rect x="12.4560%" y="773" width="0.0405%" height="15" fill="rgb(252,64,23)" fg:x="59383" fg:w="193"/><text x="12.7060%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (193 samples, 0.04%)</title><rect x="12.4560%" y="757" width="0.0405%" height="15" fill="rgb(232,162,48)" fg:x="59383" fg:w="193"/><text x="12.7060%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (193 samples, 0.04%)</title><rect x="12.4560%" y="741" width="0.0405%" height="15" fill="rgb(246,160,12)" fg:x="59383" fg:w="193"/><text x="12.7060%" y="751.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (97 samples, 0.02%)</title><rect x="12.5401%" y="661" width="0.0203%" height="15" fill="rgb(247,166,0)" fg:x="59784" fg:w="97"/><text x="12.7901%" y="671.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (81 samples, 0.02%)</title><rect x="12.5434%" y="645" width="0.0170%" height="15" fill="rgb(249,219,21)" fg:x="59800" fg:w="81"/><text x="12.7934%" y="655.50"></text></g><g><title>alloc::fmt::format (199 samples, 0.04%)</title><rect x="12.5193%" y="709" width="0.0417%" height="15" fill="rgb(205,209,3)" fg:x="59685" fg:w="199"/><text x="12.7693%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (160 samples, 0.03%)</title><rect x="12.5275%" y="693" width="0.0336%" height="15" fill="rgb(243,44,1)" fg:x="59724" fg:w="160"/><text x="12.7775%" y="703.50"></text></g><g><title>core::fmt::write (158 samples, 0.03%)</title><rect x="12.5279%" y="677" width="0.0331%" height="15" fill="rgb(206,159,16)" fg:x="59726" fg:w="158"/><text x="12.7779%" y="687.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (206 samples, 0.04%)</title><rect x="12.5189%" y="725" width="0.0432%" height="15" fill="rgb(244,77,30)" fg:x="59683" fg:w="206"/><text x="12.7689%" y="735.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (261 samples, 0.05%)</title><rect x="12.5105%" y="757" width="0.0547%" height="15" fill="rgb(218,69,12)" fg:x="59643" fg:w="261"/><text x="12.7605%" y="767.50"></text></g><g><title>parsed::parser::bytes::{{closure}} (255 samples, 0.05%)</title><rect x="12.5117%" y="741" width="0.0535%" height="15" fill="rgb(212,87,7)" fg:x="59649" fg:w="255"/><text x="12.7617%" y="751.50"></text></g><g><title>__libc_malloc (48 samples, 0.01%)</title><rect x="12.5917%" y="517" width="0.0101%" height="15" fill="rgb(245,114,25)" fg:x="60030" fg:w="48"/><text x="12.8417%" y="527.50"></text></g><g><title>alloc::string::String::with_capacity (63 samples, 0.01%)</title><rect x="12.5906%" y="645" width="0.0132%" height="15" fill="rgb(210,61,42)" fg:x="60025" fg:w="63"/><text x="12.8406%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (61 samples, 0.01%)</title><rect x="12.5910%" y="629" width="0.0128%" height="15" fill="rgb(211,52,33)" fg:x="60027" fg:w="61"/><text x="12.8410%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (61 samples, 0.01%)</title><rect x="12.5910%" y="613" width="0.0128%" height="15" fill="rgb(234,58,33)" fg:x="60027" fg:w="61"/><text x="12.8410%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (61 samples, 0.01%)</title><rect x="12.5910%" y="597" width="0.0128%" height="15" fill="rgb(220,115,36)" fg:x="60027" fg:w="61"/><text x="12.8410%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (61 samples, 0.01%)</title><rect x="12.5910%" y="581" width="0.0128%" height="15" fill="rgb(243,153,54)" fg:x="60027" fg:w="61"/><text x="12.8410%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (61 samples, 0.01%)</title><rect x="12.5910%" y="565" width="0.0128%" height="15" fill="rgb(251,47,18)" fg:x="60027" fg:w="61"/><text x="12.8410%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (61 samples, 0.01%)</title><rect x="12.5910%" y="549" width="0.0128%" height="15" fill="rgb(242,102,42)" fg:x="60027" fg:w="61"/><text x="12.8410%" y="559.50"></text></g><g><title>alloc::alloc::alloc (58 samples, 0.01%)</title><rect x="12.5917%" y="533" width="0.0122%" height="15" fill="rgb(234,31,38)" fg:x="60030" fg:w="58"/><text x="12.8417%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (106 samples, 0.02%)</title><rect x="12.6061%" y="645" width="0.0222%" height="15" fill="rgb(221,117,51)" fg:x="60099" fg:w="106"/><text x="12.8561%" y="655.50"></text></g><g><title>core::fmt::write (101 samples, 0.02%)</title><rect x="12.6072%" y="629" width="0.0212%" height="15" fill="rgb(212,20,18)" fg:x="60104" fg:w="101"/><text x="12.8572%" y="639.50"></text></g><g><title>alloc::fmt::format (190 samples, 0.04%)</title><rect x="12.5887%" y="661" width="0.0399%" height="15" fill="rgb(245,133,36)" fg:x="60016" fg:w="190"/><text x="12.8387%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (61 samples, 0.01%)</title><rect x="12.6783%" y="501" width="0.0128%" height="15" fill="rgb(212,6,19)" fg:x="60443" fg:w="61"/><text x="12.9283%" y="511.50"></text></g><g><title>[libc-2.31.so] (56 samples, 0.01%)</title><rect x="12.6793%" y="485" width="0.0117%" height="15" fill="rgb(218,1,36)" fg:x="60448" fg:w="56"/><text x="12.9293%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (122 samples, 0.03%)</title><rect x="12.6657%" y="597" width="0.0256%" height="15" fill="rgb(246,84,54)" fg:x="60383" fg:w="122"/><text x="12.9157%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (84 samples, 0.02%)</title><rect x="12.6737%" y="581" width="0.0176%" height="15" fill="rgb(242,110,6)" fg:x="60421" fg:w="84"/><text x="12.9237%" y="591.50"></text></g><g><title>alloc::string::String::push_str (84 samples, 0.02%)</title><rect x="12.6737%" y="565" width="0.0176%" height="15" fill="rgb(214,47,5)" fg:x="60421" fg:w="84"/><text x="12.9237%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (84 samples, 0.02%)</title><rect x="12.6737%" y="549" width="0.0176%" height="15" fill="rgb(218,159,25)" fg:x="60421" fg:w="84"/><text x="12.9237%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (84 samples, 0.02%)</title><rect x="12.6737%" y="533" width="0.0176%" height="15" fill="rgb(215,211,28)" fg:x="60421" fg:w="84"/><text x="12.9237%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (84 samples, 0.02%)</title><rect x="12.6737%" y="517" width="0.0176%" height="15" fill="rgb(238,59,32)" fg:x="60421" fg:w="84"/><text x="12.9237%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (76 samples, 0.02%)</title><rect x="12.7009%" y="597" width="0.0159%" height="15" fill="rgb(226,82,3)" fg:x="60551" fg:w="76"/><text x="12.9509%" y="607.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (72 samples, 0.02%)</title><rect x="12.7018%" y="581" width="0.0151%" height="15" fill="rgb(240,164,32)" fg:x="60555" fg:w="72"/><text x="12.9518%" y="591.50"></text></g><g><title>alloc::fmt::format (361 samples, 0.08%)</title><rect x="12.6433%" y="645" width="0.0757%" height="15" fill="rgb(232,46,7)" fg:x="60276" fg:w="361"/><text x="12.8933%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (292 samples, 0.06%)</title><rect x="12.6577%" y="629" width="0.0612%" height="15" fill="rgb(229,129,53)" fg:x="60345" fg:w="292"/><text x="12.9077%" y="639.50"></text></g><g><title>core::fmt::write (286 samples, 0.06%)</title><rect x="12.6590%" y="613" width="0.0600%" height="15" fill="rgb(234,188,29)" fg:x="60351" fg:w="286"/><text x="12.9090%" y="623.50"></text></g><g><title>[libc-2.31.so] (55 samples, 0.01%)</title><rect x="12.7202%" y="549" width="0.0115%" height="15" fill="rgb(246,141,4)" fg:x="60643" fg:w="55"/><text x="12.9702%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (100 samples, 0.02%)</title><rect x="12.7198%" y="581" width="0.0210%" height="15" fill="rgb(229,23,39)" fg:x="60641" fg:w="100"/><text x="12.9698%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (100 samples, 0.02%)</title><rect x="12.7198%" y="565" width="0.0210%" height="15" fill="rgb(206,12,3)" fg:x="60641" fg:w="100"/><text x="12.9698%" y="575.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (488 samples, 0.10%)</title><rect x="12.6386%" y="661" width="0.1024%" height="15" fill="rgb(252,226,20)" fg:x="60254" fg:w="488"/><text x="12.8886%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (103 samples, 0.02%)</title><rect x="12.7194%" y="645" width="0.0216%" height="15" fill="rgb(216,123,35)" fg:x="60639" fg:w="103"/><text x="12.9694%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (103 samples, 0.02%)</title><rect x="12.7194%" y="629" width="0.0216%" height="15" fill="rgb(212,68,40)" fg:x="60639" fg:w="103"/><text x="12.9694%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (103 samples, 0.02%)</title><rect x="12.7194%" y="613" width="0.0216%" height="15" fill="rgb(254,125,32)" fg:x="60639" fg:w="103"/><text x="12.9694%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (103 samples, 0.02%)</title><rect x="12.7194%" y="597" width="0.0216%" height="15" fill="rgb(253,97,22)" fg:x="60639" fg:w="103"/><text x="12.9694%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (61 samples, 0.01%)</title><rect x="12.7431%" y="645" width="0.0128%" height="15" fill="rgb(241,101,14)" fg:x="60752" fg:w="61"/><text x="12.9931%" y="655.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (899 samples, 0.19%)</title><rect x="12.5764%" y="693" width="0.1886%" height="15" fill="rgb(238,103,29)" fg:x="59957" fg:w="899"/><text x="12.8264%" y="703.50"></text></g><g><title>parsed::parser::single::{{closure}} (888 samples, 0.19%)</title><rect x="12.5787%" y="677" width="0.1863%" height="15" fill="rgb(233,195,47)" fg:x="59968" fg:w="888"/><text x="12.8287%" y="687.50"></text></g><g><title>parsed::stream::ByteStream::next (114 samples, 0.02%)</title><rect x="12.7410%" y="661" width="0.0239%" height="15" fill="rgb(246,218,30)" fg:x="60742" fg:w="114"/><text x="12.9910%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (48 samples, 0.01%)</title><rect x="12.7739%" y="693" width="0.0101%" height="15" fill="rgb(219,145,47)" fg:x="60899" fg:w="48"/><text x="13.0239%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (48 samples, 0.01%)</title><rect x="12.7739%" y="677" width="0.0101%" height="15" fill="rgb(243,12,26)" fg:x="60899" fg:w="48"/><text x="13.0239%" y="687.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,006 samples, 0.21%)</title><rect x="12.5732%" y="725" width="0.2110%" height="15" fill="rgb(214,87,16)" fg:x="59942" fg:w="1006"/><text x="12.8232%" y="735.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,004 samples, 0.21%)</title><rect x="12.5736%" y="709" width="0.2106%" height="15" fill="rgb(208,99,42)" fg:x="59944" fg:w="1004"/><text x="12.8236%" y="719.50"></text></g><g><title>[libc-2.31.so] (225 samples, 0.05%)</title><rect x="12.8465%" y="389" width="0.0472%" height="15" fill="rgb(253,99,2)" fg:x="61245" fg:w="225"/><text x="13.0965%" y="399.50"></text></g><g><title>__libc_malloc (334 samples, 0.07%)</title><rect x="12.8239%" y="405" width="0.0701%" height="15" fill="rgb(220,168,23)" fg:x="61137" fg:w="334"/><text x="13.0739%" y="415.50"></text></g><g><title>alloc::string::String::with_capacity (342 samples, 0.07%)</title><rect x="12.8230%" y="533" width="0.0717%" height="15" fill="rgb(242,38,24)" fg:x="61133" fg:w="342"/><text x="13.0730%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (341 samples, 0.07%)</title><rect x="12.8232%" y="517" width="0.0715%" height="15" fill="rgb(225,182,9)" fg:x="61134" fg:w="341"/><text x="13.0732%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (341 samples, 0.07%)</title><rect x="12.8232%" y="501" width="0.0715%" height="15" fill="rgb(243,178,37)" fg:x="61134" fg:w="341"/><text x="13.0732%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (341 samples, 0.07%)</title><rect x="12.8232%" y="485" width="0.0715%" height="15" fill="rgb(232,139,19)" fg:x="61134" fg:w="341"/><text x="13.0732%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (341 samples, 0.07%)</title><rect x="12.8232%" y="469" width="0.0715%" height="15" fill="rgb(225,201,24)" fg:x="61134" fg:w="341"/><text x="13.0732%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (341 samples, 0.07%)</title><rect x="12.8232%" y="453" width="0.0715%" height="15" fill="rgb(221,47,46)" fg:x="61134" fg:w="341"/><text x="13.0732%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (341 samples, 0.07%)</title><rect x="12.8232%" y="437" width="0.0715%" height="15" fill="rgb(249,23,13)" fg:x="61134" fg:w="341"/><text x="13.0732%" y="447.50"></text></g><g><title>alloc::alloc::alloc (338 samples, 0.07%)</title><rect x="12.8239%" y="421" width="0.0709%" height="15" fill="rgb(219,9,5)" fg:x="61137" fg:w="338"/><text x="13.0739%" y="431.50"></text></g><g><title>alloc::fmt::format (448 samples, 0.09%)</title><rect x="12.8224%" y="549" width="0.0940%" height="15" fill="rgb(254,171,16)" fg:x="61130" fg:w="448"/><text x="13.0724%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (94 samples, 0.02%)</title><rect x="12.8966%" y="533" width="0.0197%" height="15" fill="rgb(230,171,20)" fg:x="61484" fg:w="94"/><text x="13.1466%" y="543.50"></text></g><g><title>core::fmt::write (89 samples, 0.02%)</title><rect x="12.8977%" y="517" width="0.0187%" height="15" fill="rgb(210,71,41)" fg:x="61489" fg:w="89"/><text x="13.1477%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (65 samples, 0.01%)</title><rect x="12.9678%" y="389" width="0.0136%" height="15" fill="rgb(206,173,20)" fg:x="61823" fg:w="65"/><text x="13.2178%" y="399.50"></text></g><g><title>[libc-2.31.so] (62 samples, 0.01%)</title><rect x="12.9684%" y="373" width="0.0130%" height="15" fill="rgb(233,88,34)" fg:x="61826" fg:w="62"/><text x="13.2184%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (140 samples, 0.03%)</title><rect x="12.9522%" y="485" width="0.0294%" height="15" fill="rgb(223,209,46)" fg:x="61749" fg:w="140"/><text x="13.2022%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (89 samples, 0.02%)</title><rect x="12.9629%" y="469" width="0.0187%" height="15" fill="rgb(250,43,18)" fg:x="61800" fg:w="89"/><text x="13.2129%" y="479.50"></text></g><g><title>alloc::string::String::push_str (89 samples, 0.02%)</title><rect x="12.9629%" y="453" width="0.0187%" height="15" fill="rgb(208,13,10)" fg:x="61800" fg:w="89"/><text x="13.2129%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (89 samples, 0.02%)</title><rect x="12.9629%" y="437" width="0.0187%" height="15" fill="rgb(212,200,36)" fg:x="61800" fg:w="89"/><text x="13.2129%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (89 samples, 0.02%)</title><rect x="12.9629%" y="421" width="0.0187%" height="15" fill="rgb(225,90,30)" fg:x="61800" fg:w="89"/><text x="13.2129%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (89 samples, 0.02%)</title><rect x="12.9629%" y="405" width="0.0187%" height="15" fill="rgb(236,182,39)" fg:x="61800" fg:w="89"/><text x="13.2129%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (263 samples, 0.06%)</title><rect x="12.9441%" y="517" width="0.0552%" height="15" fill="rgb(212,144,35)" fg:x="61710" fg:w="263"/><text x="13.1941%" y="527.50"></text></g><g><title>core::fmt::write (255 samples, 0.05%)</title><rect x="12.9457%" y="501" width="0.0535%" height="15" fill="rgb(228,63,44)" fg:x="61718" fg:w="255"/><text x="13.1957%" y="511.50"></text></g><g><title>alloc::fmt::format (323 samples, 0.07%)</title><rect x="12.9317%" y="533" width="0.0678%" height="15" fill="rgb(228,109,6)" fg:x="61651" fg:w="323"/><text x="13.1817%" y="543.50"></text></g><g><title>[libc-2.31.so] (80 samples, 0.02%)</title><rect x="13.0028%" y="437" width="0.0168%" height="15" fill="rgb(238,117,24)" fg:x="61990" fg:w="80"/><text x="13.2528%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (117 samples, 0.02%)</title><rect x="13.0026%" y="469" width="0.0245%" height="15" fill="rgb(242,26,26)" fg:x="61989" fg:w="117"/><text x="13.2526%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (117 samples, 0.02%)</title><rect x="13.0026%" y="453" width="0.0245%" height="15" fill="rgb(221,92,48)" fg:x="61989" fg:w="117"/><text x="13.2526%" y="463.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (483 samples, 0.10%)</title><rect x="12.9260%" y="549" width="0.1013%" height="15" fill="rgb(209,209,32)" fg:x="61624" fg:w="483"/><text x="13.1760%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (126 samples, 0.03%)</title><rect x="13.0009%" y="533" width="0.0264%" height="15" fill="rgb(221,70,22)" fg:x="61981" fg:w="126"/><text x="13.2509%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (126 samples, 0.03%)</title><rect x="13.0009%" y="517" width="0.0264%" height="15" fill="rgb(248,145,5)" fg:x="61981" fg:w="126"/><text x="13.2509%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (126 samples, 0.03%)</title><rect x="13.0009%" y="501" width="0.0264%" height="15" fill="rgb(226,116,26)" fg:x="61981" fg:w="126"/><text x="13.2509%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (126 samples, 0.03%)</title><rect x="13.0009%" y="485" width="0.0264%" height="15" fill="rgb(244,5,17)" fg:x="61981" fg:w="126"/><text x="13.2509%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (50 samples, 0.01%)</title><rect x="13.0428%" y="517" width="0.0105%" height="15" fill="rgb(252,159,33)" fg:x="62181" fg:w="50"/><text x="13.2928%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (50 samples, 0.01%)</title><rect x="13.0428%" y="501" width="0.0105%" height="15" fill="rgb(206,71,0)" fg:x="62181" fg:w="50"/><text x="13.2928%" y="511.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,167 samples, 0.24%)</title><rect x="12.8088%" y="581" width="0.2448%" height="15" fill="rgb(233,118,54)" fg:x="61065" fg:w="1167"/><text x="13.0588%" y="591.50"></text></g><g><title>parsed::parser::single::{{closure}} (1,158 samples, 0.24%)</title><rect x="12.8106%" y="565" width="0.2429%" height="15" fill="rgb(234,83,48)" fg:x="61074" fg:w="1158"/><text x="13.0606%" y="575.50"></text></g><g><title>parsed::stream::ByteStream::next (125 samples, 0.03%)</title><rect x="13.0273%" y="549" width="0.0262%" height="15" fill="rgb(228,3,54)" fg:x="62107" fg:w="125"/><text x="13.2773%" y="559.50"></text></g><g><title>parsed::stream::ByteStream::get (73 samples, 0.02%)</title><rect x="13.0382%" y="533" width="0.0153%" height="15" fill="rgb(226,155,13)" fg:x="62159" fg:w="73"/><text x="13.2882%" y="543.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,306 samples, 0.27%)</title><rect x="12.8039%" y="613" width="0.2739%" height="15" fill="rgb(241,28,37)" fg:x="61042" fg:w="1306"/><text x="13.0539%" y="623.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,299 samples, 0.27%)</title><rect x="12.8054%" y="597" width="0.2725%" height="15" fill="rgb(233,93,10)" fg:x="61049" fg:w="1299"/><text x="13.0554%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (64 samples, 0.01%)</title><rect x="13.0645%" y="581" width="0.0134%" height="15" fill="rgb(225,113,19)" fg:x="62284" fg:w="64"/><text x="13.3145%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (64 samples, 0.01%)</title><rect x="13.0645%" y="565" width="0.0134%" height="15" fill="rgb(241,2,18)" fg:x="62284" fg:w="64"/><text x="13.3145%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (64 samples, 0.01%)</title><rect x="13.0645%" y="549" width="0.0134%" height="15" fill="rgb(228,207,21)" fg:x="62284" fg:w="64"/><text x="13.3145%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (79 samples, 0.02%)</title><rect x="13.0825%" y="549" width="0.0166%" height="15" fill="rgb(213,211,35)" fg:x="62370" fg:w="79"/><text x="13.3325%" y="559.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (79 samples, 0.02%)</title><rect x="13.0825%" y="533" width="0.0166%" height="15" fill="rgb(209,83,10)" fg:x="62370" fg:w="79"/><text x="13.3325%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::get (79 samples, 0.02%)</title><rect x="13.0825%" y="517" width="0.0166%" height="15" fill="rgb(209,164,1)" fg:x="62370" fg:w="79"/><text x="13.3325%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (103 samples, 0.02%)</title><rect x="13.1215%" y="485" width="0.0216%" height="15" fill="rgb(213,184,43)" fg:x="62556" fg:w="103"/><text x="13.3715%" y="495.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (89 samples, 0.02%)</title><rect x="13.1244%" y="469" width="0.0187%" height="15" fill="rgb(231,61,34)" fg:x="62570" fg:w="89"/><text x="13.3744%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (156 samples, 0.03%)</title><rect x="13.1112%" y="517" width="0.0327%" height="15" fill="rgb(235,75,3)" fg:x="62507" fg:w="156"/><text x="13.3612%" y="527.50"></text></g><g><title>core::fmt::write (154 samples, 0.03%)</title><rect x="13.1116%" y="501" width="0.0323%" height="15" fill="rgb(220,106,47)" fg:x="62509" fg:w="154"/><text x="13.3616%" y="511.50"></text></g><g><title>alloc::fmt::format (186 samples, 0.04%)</title><rect x="13.1056%" y="533" width="0.0390%" height="15" fill="rgb(210,196,33)" fg:x="62480" fg:w="186"/><text x="13.3556%" y="543.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (191 samples, 0.04%)</title><rect x="13.1047%" y="549" width="0.0401%" height="15" fill="rgb(229,154,42)" fg:x="62476" fg:w="191"/><text x="13.3547%" y="559.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (331 samples, 0.07%)</title><rect x="13.0812%" y="581" width="0.0694%" height="15" fill="rgb(228,114,26)" fg:x="62364" fg:w="331"/><text x="13.3312%" y="591.50"></text></g><g><title>parsed::parser::before::{{closure}} (325 samples, 0.07%)</title><rect x="13.0825%" y="565" width="0.0682%" height="15" fill="rgb(208,144,1)" fg:x="62370" fg:w="325"/><text x="13.3325%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (52 samples, 0.01%)</title><rect x="13.1641%" y="501" width="0.0109%" height="15" fill="rgb(239,112,37)" fg:x="62759" fg:w="52"/><text x="13.4141%" y="511.50"></text></g><g><title>core::fmt::write (52 samples, 0.01%)</title><rect x="13.1641%" y="485" width="0.0109%" height="15" fill="rgb(210,96,50)" fg:x="62759" fg:w="52"/><text x="13.4141%" y="495.50"></text></g><g><title>alloc::fmt::format (81 samples, 0.02%)</title><rect x="13.1582%" y="517" width="0.0170%" height="15" fill="rgb(222,178,2)" fg:x="62731" fg:w="81"/><text x="13.4082%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (50 samples, 0.01%)</title><rect x="13.1911%" y="453" width="0.0105%" height="15" fill="rgb(226,74,18)" fg:x="62888" fg:w="50"/><text x="13.4411%" y="463.50"></text></g><g><title>alloc::fmt::format (158 samples, 0.03%)</title><rect x="13.1815%" y="501" width="0.0331%" height="15" fill="rgb(225,67,54)" fg:x="62842" fg:w="158"/><text x="13.4315%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (129 samples, 0.03%)</title><rect x="13.1876%" y="485" width="0.0271%" height="15" fill="rgb(251,92,32)" fg:x="62871" fg:w="129"/><text x="13.4376%" y="495.50"></text></g><g><title>core::fmt::write (128 samples, 0.03%)</title><rect x="13.1878%" y="469" width="0.0268%" height="15" fill="rgb(228,149,22)" fg:x="62872" fg:w="128"/><text x="13.4378%" y="479.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (214 samples, 0.04%)</title><rect x="13.1796%" y="517" width="0.0449%" height="15" fill="rgb(243,54,13)" fg:x="62833" fg:w="214"/><text x="13.4296%" y="527.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (408 samples, 0.09%)</title><rect x="13.1519%" y="549" width="0.0856%" height="15" fill="rgb(243,180,28)" fg:x="62701" fg:w="408"/><text x="13.4019%" y="559.50"></text></g><g><title>parsed::parser::single::{{closure}} (398 samples, 0.08%)</title><rect x="13.1540%" y="533" width="0.0835%" height="15" fill="rgb(208,167,24)" fg:x="62711" fg:w="398"/><text x="13.4040%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::next (62 samples, 0.01%)</title><rect x="13.2245%" y="517" width="0.0130%" height="15" fill="rgb(245,73,45)" fg:x="63047" fg:w="62"/><text x="13.4745%" y="527.50"></text></g><g><title>alloc::fmt::format (87 samples, 0.02%)</title><rect x="13.2438%" y="485" width="0.0182%" height="15" fill="rgb(237,203,48)" fg:x="63139" fg:w="87"/><text x="13.4938%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (51 samples, 0.01%)</title><rect x="13.2513%" y="469" width="0.0107%" height="15" fill="rgb(211,197,16)" fg:x="63175" fg:w="51"/><text x="13.5013%" y="479.50"></text></g><g><title>core::fmt::write (50 samples, 0.01%)</title><rect x="13.2516%" y="453" width="0.0105%" height="15" fill="rgb(243,99,51)" fg:x="63176" fg:w="50"/><text x="13.5016%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (74 samples, 0.02%)</title><rect x="13.2811%" y="421" width="0.0155%" height="15" fill="rgb(215,123,29)" fg:x="63317" fg:w="74"/><text x="13.5311%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (51 samples, 0.01%)</title><rect x="13.2860%" y="405" width="0.0107%" height="15" fill="rgb(239,186,37)" fg:x="63340" fg:w="51"/><text x="13.5360%" y="415.50"></text></g><g><title>alloc::string::String::push_str (51 samples, 0.01%)</title><rect x="13.2860%" y="389" width="0.0107%" height="15" fill="rgb(252,136,39)" fg:x="63340" fg:w="51"/><text x="13.5360%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (51 samples, 0.01%)</title><rect x="13.2860%" y="373" width="0.0107%" height="15" fill="rgb(223,213,32)" fg:x="63340" fg:w="51"/><text x="13.5360%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (51 samples, 0.01%)</title><rect x="13.2860%" y="357" width="0.0107%" height="15" fill="rgb(233,115,5)" fg:x="63340" fg:w="51"/><text x="13.5360%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (51 samples, 0.01%)</title><rect x="13.2860%" y="341" width="0.0107%" height="15" fill="rgb(207,226,44)" fg:x="63340" fg:w="51"/><text x="13.5360%" y="351.50"></text></g><g><title>core::fmt::Write::write_fmt (140 samples, 0.03%)</title><rect x="13.2780%" y="453" width="0.0294%" height="15" fill="rgb(208,126,0)" fg:x="63302" fg:w="140"/><text x="13.5280%" y="463.50"></text></g><g><title>core::fmt::write (137 samples, 0.03%)</title><rect x="13.2786%" y="437" width="0.0287%" height="15" fill="rgb(244,66,21)" fg:x="63305" fg:w="137"/><text x="13.5286%" y="447.50"></text></g><g><title>alloc::fmt::format (182 samples, 0.04%)</title><rect x="13.2694%" y="469" width="0.0382%" height="15" fill="rgb(222,97,12)" fg:x="63261" fg:w="182"/><text x="13.5194%" y="479.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (241 samples, 0.05%)</title><rect x="13.2669%" y="485" width="0.0506%" height="15" fill="rgb(219,213,19)" fg:x="63249" fg:w="241"/><text x="13.5169%" y="495.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (437 samples, 0.09%)</title><rect x="13.2377%" y="517" width="0.0917%" height="15" fill="rgb(252,169,30)" fg:x="63110" fg:w="437"/><text x="13.4877%" y="527.50"></text></g><g><title>parsed::parser::single::{{closure}} (427 samples, 0.09%)</title><rect x="13.2398%" y="501" width="0.0896%" height="15" fill="rgb(206,32,51)" fg:x="63120" fg:w="427"/><text x="13.4898%" y="511.50"></text></g><g><title>parsed::stream::ByteStream::next (57 samples, 0.01%)</title><rect x="13.3174%" y="485" width="0.0120%" height="15" fill="rgb(250,172,42)" fg:x="63490" fg:w="57"/><text x="13.5674%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (49 samples, 0.01%)</title><rect x="13.3390%" y="453" width="0.0103%" height="15" fill="rgb(209,34,43)" fg:x="63593" fg:w="49"/><text x="13.5890%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (80 samples, 0.02%)</title><rect x="13.3690%" y="389" width="0.0168%" height="15" fill="rgb(223,11,35)" fg:x="63736" fg:w="80"/><text x="13.6190%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (54 samples, 0.01%)</title><rect x="13.3745%" y="373" width="0.0113%" height="15" fill="rgb(251,219,26)" fg:x="63762" fg:w="54"/><text x="13.6245%" y="383.50"></text></g><g><title>alloc::string::String::push_str (54 samples, 0.01%)</title><rect x="13.3745%" y="357" width="0.0113%" height="15" fill="rgb(231,119,3)" fg:x="63762" fg:w="54"/><text x="13.6245%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (54 samples, 0.01%)</title><rect x="13.3745%" y="341" width="0.0113%" height="15" fill="rgb(216,97,11)" fg:x="63762" fg:w="54"/><text x="13.6245%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (54 samples, 0.01%)</title><rect x="13.3745%" y="325" width="0.0113%" height="15" fill="rgb(223,59,9)" fg:x="63762" fg:w="54"/><text x="13.6245%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (54 samples, 0.01%)</title><rect x="13.3745%" y="309" width="0.0113%" height="15" fill="rgb(233,93,31)" fg:x="63762" fg:w="54"/><text x="13.6245%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (67 samples, 0.01%)</title><rect x="13.3990%" y="357" width="0.0141%" height="15" fill="rgb(239,81,33)" fg:x="63879" fg:w="67"/><text x="13.6490%" y="367.50"></text></g><g><title>core::fmt::Formatter::pad_integral (95 samples, 0.02%)</title><rect x="13.4131%" y="357" width="0.0199%" height="15" fill="rgb(213,120,34)" fg:x="63946" fg:w="95"/><text x="13.6631%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (232 samples, 0.05%)</title><rect x="13.3877%" y="389" width="0.0487%" height="15" fill="rgb(243,49,53)" fg:x="63825" fg:w="232"/><text x="13.6377%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (200 samples, 0.04%)</title><rect x="13.3944%" y="373" width="0.0420%" height="15" fill="rgb(247,216,33)" fg:x="63857" fg:w="200"/><text x="13.6444%" y="383.50"></text></g><g><title>alloc::fmt::format (414 samples, 0.09%)</title><rect x="13.3510%" y="437" width="0.0868%" height="15" fill="rgb(226,26,14)" fg:x="63650" fg:w="414"/><text x="13.6010%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (359 samples, 0.08%)</title><rect x="13.3625%" y="421" width="0.0753%" height="15" fill="rgb(215,49,53)" fg:x="63705" fg:w="359"/><text x="13.6125%" y="431.50"></text></g><g><title>core::fmt::write (358 samples, 0.08%)</title><rect x="13.3627%" y="405" width="0.0751%" height="15" fill="rgb(245,162,40)" fg:x="63706" fg:w="358"/><text x="13.6127%" y="415.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (430 samples, 0.09%)</title><rect x="13.3493%" y="453" width="0.0902%" height="15" fill="rgb(229,68,17)" fg:x="63642" fg:w="430"/><text x="13.5993%" y="463.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (531 samples, 0.11%)</title><rect x="13.3308%" y="485" width="0.1114%" height="15" fill="rgb(213,182,10)" fg:x="63554" fg:w="531"/><text x="13.5808%" y="495.50"></text></g><g><title>parsed::parser::before::{{closure}} (524 samples, 0.11%)</title><rect x="13.3323%" y="469" width="0.1099%" height="15" fill="rgb(245,125,30)" fg:x="63561" fg:w="524"/><text x="13.5823%" y="479.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (539 samples, 0.11%)</title><rect x="13.3300%" y="501" width="0.1131%" height="15" fill="rgb(232,202,2)" fg:x="63550" fg:w="539"/><text x="13.5800%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (73 samples, 0.02%)</title><rect x="13.4519%" y="437" width="0.0153%" height="15" fill="rgb(237,140,51)" fg:x="64131" fg:w="73"/><text x="13.7019%" y="447.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,853 samples, 0.39%)</title><rect x="13.0787%" y="597" width="0.3887%" height="15" fill="rgb(236,157,25)" fg:x="62352" fg:w="1853"/><text x="13.3287%" y="607.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,509 samples, 0.32%)</title><rect x="13.1509%" y="581" width="0.3165%" height="15" fill="rgb(219,209,0)" fg:x="62696" fg:w="1509"/><text x="13.4009%" y="591.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,509 samples, 0.32%)</title><rect x="13.1509%" y="565" width="0.3165%" height="15" fill="rgb(240,116,54)" fg:x="62696" fg:w="1509"/><text x="13.4009%" y="575.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,096 samples, 0.23%)</title><rect x="13.2375%" y="549" width="0.2299%" height="15" fill="rgb(216,10,36)" fg:x="63109" fg:w="1096"/><text x="13.4875%" y="559.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,096 samples, 0.23%)</title><rect x="13.2375%" y="533" width="0.2299%" height="15" fill="rgb(222,72,44)" fg:x="63109" fg:w="1096"/><text x="13.4875%" y="543.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (658 samples, 0.14%)</title><rect x="13.3294%" y="517" width="0.1380%" height="15" fill="rgb(232,159,9)" fg:x="63547" fg:w="658"/><text x="13.5794%" y="527.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (116 samples, 0.02%)</title><rect x="13.4431%" y="501" width="0.0243%" height="15" fill="rgb(210,39,32)" fg:x="64089" fg:w="116"/><text x="13.6931%" y="511.50"></text></g><g><title>parsed::http::as_string (77 samples, 0.02%)</title><rect x="13.4512%" y="485" width="0.0162%" height="15" fill="rgb(216,194,45)" fg:x="64128" fg:w="77"/><text x="13.7012%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (77 samples, 0.02%)</title><rect x="13.4512%" y="469" width="0.0162%" height="15" fill="rgb(218,18,35)" fg:x="64128" fg:w="77"/><text x="13.7012%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (75 samples, 0.02%)</title><rect x="13.4517%" y="453" width="0.0157%" height="15" fill="rgb(207,83,51)" fg:x="64130" fg:w="75"/><text x="13.7017%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (56 samples, 0.01%)</title><rect x="13.4794%" y="501" width="0.0117%" height="15" fill="rgb(225,63,43)" fg:x="64262" fg:w="56"/><text x="13.7294%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (51 samples, 0.01%)</title><rect x="13.4804%" y="485" width="0.0107%" height="15" fill="rgb(207,57,36)" fg:x="64267" fg:w="51"/><text x="13.7304%" y="495.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (3,299 samples, 0.69%)</title><rect x="12.8035%" y="629" width="0.6920%" height="15" fill="rgb(216,99,33)" fg:x="61040" fg:w="3299"/><text x="13.0535%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,987 samples, 0.42%)</title><rect x="13.0787%" y="613" width="0.4168%" height="15" fill="rgb(225,42,16)" fg:x="62352" fg:w="1987"/><text x="13.3287%" y="623.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (134 samples, 0.03%)</title><rect x="13.4674%" y="597" width="0.0281%" height="15" fill="rgb(220,201,45)" fg:x="64205" fg:w="134"/><text x="13.7174%" y="607.50"></text></g><g><title>parsed::http::as_string (129 samples, 0.03%)</title><rect x="13.4684%" y="581" width="0.0271%" height="15" fill="rgb(225,33,4)" fg:x="64210" fg:w="129"/><text x="13.7184%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (129 samples, 0.03%)</title><rect x="13.4684%" y="565" width="0.0271%" height="15" fill="rgb(224,33,50)" fg:x="64210" fg:w="129"/><text x="13.7184%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (127 samples, 0.03%)</title><rect x="13.4689%" y="549" width="0.0266%" height="15" fill="rgb(246,198,51)" fg:x="64212" fg:w="127"/><text x="13.7189%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (124 samples, 0.03%)</title><rect x="13.4695%" y="533" width="0.0260%" height="15" fill="rgb(205,22,4)" fg:x="64215" fg:w="124"/><text x="13.7195%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (81 samples, 0.02%)</title><rect x="13.4785%" y="517" width="0.0170%" height="15" fill="rgb(206,3,8)" fg:x="64258" fg:w="81"/><text x="13.7285%" y="527.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (3,330 samples, 0.70%)</title><rect x="12.8033%" y="645" width="0.6985%" height="15" fill="rgb(251,23,15)" fg:x="61039" fg:w="3330"/><text x="13.0533%" y="655.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (68 samples, 0.01%)</title><rect x="13.5028%" y="629" width="0.0143%" height="15" fill="rgb(252,88,28)" fg:x="64374" fg:w="68"/><text x="13.7528%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (68 samples, 0.01%)</title><rect x="13.5028%" y="613" width="0.0143%" height="15" fill="rgb(212,127,14)" fg:x="64374" fg:w="68"/><text x="13.7528%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.01%)</title><rect x="13.5062%" y="597" width="0.0109%" height="15" fill="rgb(247,145,37)" fg:x="64390" fg:w="52"/><text x="13.7562%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (52 samples, 0.01%)</title><rect x="13.5062%" y="581" width="0.0109%" height="15" fill="rgb(209,117,53)" fg:x="64390" fg:w="52"/><text x="13.7562%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (52 samples, 0.01%)</title><rect x="13.5062%" y="565" width="0.0109%" height="15" fill="rgb(212,90,42)" fg:x="64390" fg:w="52"/><text x="13.7562%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (52 samples, 0.01%)</title><rect x="13.5062%" y="549" width="0.0109%" height="15" fill="rgb(218,164,37)" fg:x="64390" fg:w="52"/><text x="13.7562%" y="559.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (3,510 samples, 0.74%)</title><rect x="12.7987%" y="661" width="0.7362%" height="15" fill="rgb(246,65,34)" fg:x="61017" fg:w="3510"/><text x="13.0487%" y="671.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (158 samples, 0.03%)</title><rect x="13.5018%" y="645" width="0.0331%" height="15" fill="rgb(231,100,33)" fg:x="64369" fg:w="158"/><text x="13.7518%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (76 samples, 0.02%)</title><rect x="13.5190%" y="629" width="0.0159%" height="15" fill="rgb(228,126,14)" fg:x="64451" fg:w="76"/><text x="13.7690%" y="639.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (3,603 samples, 0.76%)</title><rect x="12.7955%" y="693" width="0.7558%" height="15" fill="rgb(215,173,21)" fg:x="61002" fg:w="3603"/><text x="13.0455%" y="703.50"></text></g><g><title>parsed::parser::repeat::{{closure}} (3,597 samples, 0.75%)</title><rect x="12.7968%" y="677" width="0.7545%" height="15" fill="rgb(210,6,40)" fg:x="61008" fg:w="3597"/><text x="13.0468%" y="687.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (48 samples, 0.01%)</title><rect x="13.5708%" y="597" width="0.0101%" height="15" fill="rgb(212,48,18)" fg:x="64698" fg:w="48"/><text x="13.8208%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (48 samples, 0.01%)</title><rect x="13.5708%" y="581" width="0.0101%" height="15" fill="rgb(230,214,11)" fg:x="64698" fg:w="48"/><text x="13.8208%" y="591.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (48 samples, 0.01%)</title><rect x="13.5708%" y="565" width="0.0101%" height="15" fill="rgb(254,105,39)" fg:x="64698" fg:w="48"/><text x="13.8208%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (48 samples, 0.01%)</title><rect x="13.5708%" y="549" width="0.0101%" height="15" fill="rgb(245,158,5)" fg:x="64698" fg:w="48"/><text x="13.8208%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (48 samples, 0.01%)</title><rect x="13.5708%" y="533" width="0.0101%" height="15" fill="rgb(249,208,11)" fg:x="64698" fg:w="48"/><text x="13.8208%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (48 samples, 0.01%)</title><rect x="13.5708%" y="517" width="0.0101%" height="15" fill="rgb(210,39,28)" fg:x="64698" fg:w="48"/><text x="13.8208%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (48 samples, 0.01%)</title><rect x="13.5708%" y="501" width="0.0101%" height="15" fill="rgb(211,56,53)" fg:x="64698" fg:w="48"/><text x="13.8208%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (48 samples, 0.01%)</title><rect x="13.5708%" y="485" width="0.0101%" height="15" fill="rgb(226,201,30)" fg:x="64698" fg:w="48"/><text x="13.8208%" y="495.50"></text></g><g><title>__libc_malloc (98 samples, 0.02%)</title><rect x="13.5817%" y="453" width="0.0206%" height="15" fill="rgb(239,101,34)" fg:x="64750" fg:w="98"/><text x="13.8317%" y="463.50"></text></g><g><title>alloc::string::String::with_capacity (104 samples, 0.02%)</title><rect x="13.5813%" y="581" width="0.0218%" height="15" fill="rgb(226,209,5)" fg:x="64748" fg:w="104"/><text x="13.8313%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (103 samples, 0.02%)</title><rect x="13.5815%" y="565" width="0.0216%" height="15" fill="rgb(250,105,47)" fg:x="64749" fg:w="103"/><text x="13.8315%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (103 samples, 0.02%)</title><rect x="13.5815%" y="549" width="0.0216%" height="15" fill="rgb(230,72,3)" fg:x="64749" fg:w="103"/><text x="13.8315%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (103 samples, 0.02%)</title><rect x="13.5815%" y="533" width="0.0216%" height="15" fill="rgb(232,218,39)" fg:x="64749" fg:w="103"/><text x="13.8315%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (103 samples, 0.02%)</title><rect x="13.5815%" y="517" width="0.0216%" height="15" fill="rgb(248,166,6)" fg:x="64749" fg:w="103"/><text x="13.8315%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (103 samples, 0.02%)</title><rect x="13.5815%" y="501" width="0.0216%" height="15" fill="rgb(247,89,20)" fg:x="64749" fg:w="103"/><text x="13.8315%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (103 samples, 0.02%)</title><rect x="13.5815%" y="485" width="0.0216%" height="15" fill="rgb(248,130,54)" fg:x="64749" fg:w="103"/><text x="13.8315%" y="495.50"></text></g><g><title>alloc::alloc::alloc (102 samples, 0.02%)</title><rect x="13.5817%" y="469" width="0.0214%" height="15" fill="rgb(234,196,4)" fg:x="64750" fg:w="102"/><text x="13.8317%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (97 samples, 0.02%)</title><rect x="13.6037%" y="581" width="0.0203%" height="15" fill="rgb(250,143,31)" fg:x="64855" fg:w="97"/><text x="13.8537%" y="591.50"></text></g><g><title>core::fmt::write (91 samples, 0.02%)</title><rect x="13.6050%" y="565" width="0.0191%" height="15" fill="rgb(211,110,34)" fg:x="64861" fg:w="91"/><text x="13.8550%" y="575.50"></text></g><g><title>alloc::fmt::format (207 samples, 0.04%)</title><rect x="13.5809%" y="597" width="0.0434%" height="15" fill="rgb(215,124,48)" fg:x="64746" fg:w="207"/><text x="13.8309%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (48 samples, 0.01%)</title><rect x="13.6256%" y="597" width="0.0101%" height="15" fill="rgb(216,46,13)" fg:x="64959" fg:w="48"/><text x="13.8756%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (59 samples, 0.01%)</title><rect x="13.6709%" y="437" width="0.0124%" height="15" fill="rgb(205,184,25)" fg:x="65175" fg:w="59"/><text x="13.9209%" y="447.50"></text></g><g><title>[libc-2.31.so] (57 samples, 0.01%)</title><rect x="13.6713%" y="421" width="0.0120%" height="15" fill="rgb(228,1,10)" fg:x="65177" fg:w="57"/><text x="13.9213%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (129 samples, 0.03%)</title><rect x="13.6568%" y="533" width="0.0271%" height="15" fill="rgb(213,116,27)" fg:x="65108" fg:w="129"/><text x="13.9068%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (80 samples, 0.02%)</title><rect x="13.6671%" y="517" width="0.0168%" height="15" fill="rgb(241,95,50)" fg:x="65157" fg:w="80"/><text x="13.9171%" y="527.50"></text></g><g><title>alloc::string::String::push_str (80 samples, 0.02%)</title><rect x="13.6671%" y="501" width="0.0168%" height="15" fill="rgb(238,48,32)" fg:x="65157" fg:w="80"/><text x="13.9171%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (80 samples, 0.02%)</title><rect x="13.6671%" y="485" width="0.0168%" height="15" fill="rgb(235,113,49)" fg:x="65157" fg:w="80"/><text x="13.9171%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (80 samples, 0.02%)</title><rect x="13.6671%" y="469" width="0.0168%" height="15" fill="rgb(205,127,43)" fg:x="65157" fg:w="80"/><text x="13.9171%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (80 samples, 0.02%)</title><rect x="13.6671%" y="453" width="0.0168%" height="15" fill="rgb(250,162,2)" fg:x="65157" fg:w="80"/><text x="13.9171%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (54 samples, 0.01%)</title><rect x="13.6935%" y="533" width="0.0113%" height="15" fill="rgb(220,13,41)" fg:x="65283" fg:w="54"/><text x="13.9435%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (48 samples, 0.01%)</title><rect x="13.6948%" y="517" width="0.0101%" height="15" fill="rgb(249,221,25)" fg:x="65289" fg:w="48"/><text x="13.9448%" y="527.50"></text></g><g><title>alloc::fmt::format (314 samples, 0.07%)</title><rect x="13.6400%" y="581" width="0.0659%" height="15" fill="rgb(215,208,19)" fg:x="65028" fg:w="314"/><text x="13.8900%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (268 samples, 0.06%)</title><rect x="13.6497%" y="565" width="0.0562%" height="15" fill="rgb(236,175,2)" fg:x="65074" fg:w="268"/><text x="13.8997%" y="575.50"></text></g><g><title>core::fmt::write (262 samples, 0.05%)</title><rect x="13.6509%" y="549" width="0.0550%" height="15" fill="rgb(241,52,2)" fg:x="65080" fg:w="262"/><text x="13.9009%" y="559.50"></text></g><g><title>[libc-2.31.so] (63 samples, 0.01%)</title><rect x="13.7086%" y="485" width="0.0132%" height="15" fill="rgb(248,140,14)" fg:x="65355" fg:w="63"/><text x="13.9586%" y="495.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (441 samples, 0.09%)</title><rect x="13.6356%" y="597" width="0.0925%" height="15" fill="rgb(253,22,42)" fg:x="65007" fg:w="441"/><text x="13.8856%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (97 samples, 0.02%)</title><rect x="13.7078%" y="581" width="0.0203%" height="15" fill="rgb(234,61,47)" fg:x="65351" fg:w="97"/><text x="13.9578%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (97 samples, 0.02%)</title><rect x="13.7078%" y="565" width="0.0203%" height="15" fill="rgb(208,226,15)" fg:x="65351" fg:w="97"/><text x="13.9578%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (97 samples, 0.02%)</title><rect x="13.7078%" y="549" width="0.0203%" height="15" fill="rgb(217,221,4)" fg:x="65351" fg:w="97"/><text x="13.9578%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.02%)</title><rect x="13.7078%" y="533" width="0.0203%" height="15" fill="rgb(212,174,34)" fg:x="65351" fg:w="97"/><text x="13.9578%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (95 samples, 0.02%)</title><rect x="13.7082%" y="517" width="0.0199%" height="15" fill="rgb(253,83,4)" fg:x="65353" fg:w="95"/><text x="13.9582%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (95 samples, 0.02%)</title><rect x="13.7082%" y="501" width="0.0199%" height="15" fill="rgb(250,195,49)" fg:x="65353" fg:w="95"/><text x="13.9582%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (50 samples, 0.01%)</title><rect x="13.7292%" y="581" width="0.0105%" height="15" fill="rgb(241,192,25)" fg:x="65453" fg:w="50"/><text x="13.9792%" y="591.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (885 samples, 0.19%)</title><rect x="13.5662%" y="629" width="0.1856%" height="15" fill="rgb(208,124,10)" fg:x="64676" fg:w="885"/><text x="13.8162%" y="639.50"></text></g><g><title>parsed::parser::single::{{closure}} (875 samples, 0.18%)</title><rect x="13.5683%" y="613" width="0.1835%" height="15" fill="rgb(222,33,0)" fg:x="64686" fg:w="875"/><text x="13.8183%" y="623.50"></text></g><g><title>parsed::stream::ByteStream::next (113 samples, 0.02%)</title><rect x="13.7281%" y="597" width="0.0237%" height="15" fill="rgb(234,209,28)" fg:x="65448" fg:w="113"/><text x="13.9781%" y="607.50"></text></g><g><title>parsed::stream::ByteStream::get (58 samples, 0.01%)</title><rect x="13.7397%" y="581" width="0.0122%" height="15" fill="rgb(224,11,23)" fg:x="65503" fg:w="58"/><text x="13.9897%" y="591.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,013 samples, 0.21%)</title><rect x="13.5593%" y="661" width="0.2125%" height="15" fill="rgb(232,99,1)" fg:x="64643" fg:w="1013"/><text x="13.8093%" y="671.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,009 samples, 0.21%)</title><rect x="13.5601%" y="645" width="0.2116%" height="15" fill="rgb(237,95,45)" fg:x="64647" fg:w="1009"/><text x="13.8101%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (48 samples, 0.01%)</title><rect x="13.7617%" y="629" width="0.0101%" height="15" fill="rgb(208,109,11)" fg:x="65608" fg:w="48"/><text x="14.0117%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (48 samples, 0.01%)</title><rect x="13.7617%" y="613" width="0.0101%" height="15" fill="rgb(216,190,48)" fg:x="65608" fg:w="48"/><text x="14.0117%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (49 samples, 0.01%)</title><rect x="13.7843%" y="597" width="0.0103%" height="15" fill="rgb(251,171,36)" fg:x="65716" fg:w="49"/><text x="14.0343%" y="607.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (48 samples, 0.01%)</title><rect x="13.7845%" y="581" width="0.0101%" height="15" fill="rgb(230,62,22)" fg:x="65717" fg:w="48"/><text x="14.0345%" y="591.50"></text></g><g><title>parsed::stream::ByteStream::get (48 samples, 0.01%)</title><rect x="13.7845%" y="565" width="0.0101%" height="15" fill="rgb(225,114,35)" fg:x="65717" fg:w="48"/><text x="14.0345%" y="575.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (78 samples, 0.02%)</title><rect x="13.8156%" y="533" width="0.0164%" height="15" fill="rgb(215,118,42)" fg:x="65865" fg:w="78"/><text x="14.0656%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (73 samples, 0.02%)</title><rect x="13.8166%" y="517" width="0.0153%" height="15" fill="rgb(243,119,21)" fg:x="65870" fg:w="73"/><text x="14.0666%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (139 samples, 0.03%)</title><rect x="13.8036%" y="565" width="0.0292%" height="15" fill="rgb(252,177,53)" fg:x="65808" fg:w="139"/><text x="14.0536%" y="575.50"></text></g><g><title>core::fmt::write (138 samples, 0.03%)</title><rect x="13.8038%" y="549" width="0.0289%" height="15" fill="rgb(237,209,29)" fg:x="65809" fg:w="138"/><text x="14.0538%" y="559.50"></text></g><g><title>alloc::fmt::format (163 samples, 0.03%)</title><rect x="13.7988%" y="581" width="0.0342%" height="15" fill="rgb(212,65,23)" fg:x="65785" fg:w="163"/><text x="14.0488%" y="591.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (166 samples, 0.03%)</title><rect x="13.7986%" y="597" width="0.0348%" height="15" fill="rgb(230,222,46)" fg:x="65784" fg:w="166"/><text x="14.0486%" y="607.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (255 samples, 0.05%)</title><rect x="13.7827%" y="629" width="0.0535%" height="15" fill="rgb(215,135,32)" fg:x="65708" fg:w="255"/><text x="14.0327%" y="639.50"></text></g><g><title>parsed::parser::before::{{closure}} (248 samples, 0.05%)</title><rect x="13.7841%" y="613" width="0.0520%" height="15" fill="rgb(246,101,22)" fg:x="65715" fg:w="248"/><text x="14.0341%" y="623.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (61 samples, 0.01%)</title><rect x="13.8422%" y="597" width="0.0128%" height="15" fill="rgb(206,107,13)" fg:x="65992" fg:w="61"/><text x="14.0922%" y="607.50"></text></g><g><title>parsed::parser::single::{{closure}} (53 samples, 0.01%)</title><rect x="13.8439%" y="581" width="0.0111%" height="15" fill="rgb(250,100,44)" fg:x="66000" fg:w="53"/><text x="14.0939%" y="591.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (104 samples, 0.02%)</title><rect x="13.8378%" y="629" width="0.0218%" height="15" fill="rgb(231,147,38)" fg:x="65971" fg:w="104"/><text x="14.0878%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (89 samples, 0.02%)</title><rect x="13.8410%" y="613" width="0.0187%" height="15" fill="rgb(229,8,40)" fg:x="65986" fg:w="89"/><text x="14.0910%" y="623.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (408 samples, 0.09%)</title><rect x="13.7785%" y="645" width="0.0856%" height="15" fill="rgb(221,135,30)" fg:x="65688" fg:w="408"/><text x="14.0285%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (76 samples, 0.02%)</title><rect x="13.8659%" y="581" width="0.0159%" height="15" fill="rgb(249,193,18)" fg:x="66105" fg:w="76"/><text x="14.1159%" y="591.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (519 samples, 0.11%)</title><rect x="13.7736%" y="661" width="0.1089%" height="15" fill="rgb(209,133,39)" fg:x="65665" fg:w="519"/><text x="14.0236%" y="671.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (88 samples, 0.02%)</title><rect x="13.8640%" y="645" width="0.0185%" height="15" fill="rgb(232,100,14)" fg:x="66096" fg:w="88"/><text x="14.1140%" y="655.50"></text></g><g><title>parsed::http::as_string (87 samples, 0.02%)</title><rect x="13.8643%" y="629" width="0.0182%" height="15" fill="rgb(224,185,1)" fg:x="66097" fg:w="87"/><text x="14.1143%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (87 samples, 0.02%)</title><rect x="13.8643%" y="613" width="0.0182%" height="15" fill="rgb(223,139,8)" fg:x="66097" fg:w="87"/><text x="14.1143%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (87 samples, 0.02%)</title><rect x="13.8643%" y="597" width="0.0182%" height="15" fill="rgb(232,213,38)" fg:x="66097" fg:w="87"/><text x="14.1143%" y="607.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,571 samples, 0.33%)</title><rect x="13.5561%" y="677" width="0.3295%" height="15" fill="rgb(207,94,22)" fg:x="64628" fg:w="1571"/><text x="13.8061%" y="687.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,624 samples, 0.34%)</title><rect x="13.5530%" y="693" width="0.3406%" height="15" fill="rgb(219,183,54)" fg:x="64613" fg:w="1624"/><text x="13.8030%" y="703.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (5,283 samples, 1.11%)</title><rect x="12.7926%" y="709" width="1.1081%" height="15" fill="rgb(216,185,54)" fg:x="60988" fg:w="5283"/><text x="13.0426%" y="719.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (5,307 samples, 1.11%)</title><rect x="12.7878%" y="725" width="1.1132%" height="15" fill="rgb(254,217,39)" fg:x="60965" fg:w="5307"/><text x="13.0378%" y="735.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (6,369 samples, 1.34%)</title><rect x="12.5682%" y="741" width="1.3359%" height="15" fill="rgb(240,178,23)" fg:x="59918" fg:w="6369"/><text x="12.8182%" y="751.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (6,405 samples, 1.34%)</title><rect x="12.5657%" y="757" width="1.3435%" height="15" fill="rgb(218,11,47)" fg:x="59906" fg:w="6405"/><text x="12.8157%" y="767.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (6,770 samples, 1.42%)</title><rect x="12.5042%" y="773" width="1.4200%" height="15" fill="rgb(218,51,51)" fg:x="59613" fg:w="6770"/><text x="12.7542%" y="783.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (57 samples, 0.01%)</title><rect x="13.9123%" y="757" width="0.0120%" height="15" fill="rgb(238,126,27)" fg:x="66326" fg:w="57"/><text x="14.1623%" y="767.50"></text></g><g><title>parsed::http::get_content_length (57 samples, 0.01%)</title><rect x="13.9123%" y="741" width="0.0120%" height="15" fill="rgb(249,202,22)" fg:x="66326" fg:w="57"/><text x="14.1623%" y="751.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (6,799 samples, 1.43%)</title><rect x="12.4983%" y="805" width="1.4261%" height="15" fill="rgb(254,195,49)" fg:x="59585" fg:w="6799"/><text x="12.7483%" y="815.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (6,799 samples, 1.43%)</title><rect x="12.4983%" y="789" width="1.4261%" height="15" fill="rgb(208,123,14)" fg:x="59585" fg:w="6799"/><text x="12.7483%" y="799.50"></text></g><g><title>parsed::http::parse_http_request (6,837 samples, 1.43%)</title><rect x="12.4964%" y="821" width="1.4341%" height="15" fill="rgb(224,200,8)" fg:x="59576" fg:w="6837"/><text x="12.7464%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (101 samples, 0.02%)</title><rect x="13.9431%" y="757" width="0.0212%" height="15" fill="rgb(217,61,36)" fg:x="66473" fg:w="101"/><text x="14.1931%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (101 samples, 0.02%)</title><rect x="13.9431%" y="741" width="0.0212%" height="15" fill="rgb(206,35,45)" fg:x="66473" fg:w="101"/><text x="14.1931%" y="751.50"></text></g><g><title>cfree (89 samples, 0.02%)</title><rect x="13.9456%" y="725" width="0.0187%" height="15" fill="rgb(217,65,33)" fg:x="66485" fg:w="89"/><text x="14.1956%" y="735.50"></text></g><g><title>parsed::stream::ByteStream::pull (162 samples, 0.03%)</title><rect x="13.9305%" y="821" width="0.0340%" height="15" fill="rgb(222,158,48)" fg:x="66413" fg:w="162"/><text x="14.1805%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (103 samples, 0.02%)</title><rect x="13.9429%" y="805" width="0.0216%" height="15" fill="rgb(254,2,54)" fg:x="66472" fg:w="103"/><text x="14.1929%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (103 samples, 0.02%)</title><rect x="13.9429%" y="789" width="0.0216%" height="15" fill="rgb(250,143,38)" fg:x="66472" fg:w="103"/><text x="14.1929%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (103 samples, 0.02%)</title><rect x="13.9429%" y="773" width="0.0216%" height="15" fill="rgb(248,25,0)" fg:x="66472" fg:w="103"/><text x="14.1929%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (87 samples, 0.02%)</title><rect x="13.9672%" y="805" width="0.0182%" height="15" fill="rgb(206,152,27)" fg:x="66588" fg:w="87"/><text x="14.2172%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (349 samples, 0.07%)</title><rect x="13.9855%" y="805" width="0.0732%" height="15" fill="rgb(240,77,30)" fg:x="66675" fg:w="349"/><text x="14.2355%" y="815.50"></text></g><g><title>parsed::stream::ByteStream::put (455 samples, 0.10%)</title><rect x="13.9645%" y="821" width="0.0954%" height="15" fill="rgb(231,5,3)" fg:x="66575" fg:w="455"/><text x="14.2145%" y="831.50"></text></g><g><title>[libc-2.31.so] (100 samples, 0.02%)</title><rect x="14.0960%" y="565" width="0.0210%" height="15" fill="rgb(207,226,32)" fg:x="67202" fg:w="100"/><text x="14.3460%" y="575.50"></text></g><g><title>__libc_malloc (240 samples, 0.05%)</title><rect x="14.0669%" y="581" width="0.0503%" height="15" fill="rgb(222,207,47)" fg:x="67063" fg:w="240"/><text x="14.3169%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (261 samples, 0.05%)</title><rect x="14.0660%" y="677" width="0.0547%" height="15" fill="rgb(229,115,45)" fg:x="67059" fg:w="261"/><text x="14.3160%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (261 samples, 0.05%)</title><rect x="14.0660%" y="661" width="0.0547%" height="15" fill="rgb(224,191,6)" fg:x="67059" fg:w="261"/><text x="14.3160%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (261 samples, 0.05%)</title><rect x="14.0660%" y="645" width="0.0547%" height="15" fill="rgb(230,227,24)" fg:x="67059" fg:w="261"/><text x="14.3160%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (261 samples, 0.05%)</title><rect x="14.0660%" y="629" width="0.0547%" height="15" fill="rgb(228,80,19)" fg:x="67059" fg:w="261"/><text x="14.3160%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (261 samples, 0.05%)</title><rect x="14.0660%" y="613" width="0.0547%" height="15" fill="rgb(247,229,0)" fg:x="67059" fg:w="261"/><text x="14.3160%" y="623.50"></text></g><g><title>alloc::alloc::alloc (260 samples, 0.05%)</title><rect x="14.0662%" y="597" width="0.0545%" height="15" fill="rgb(237,194,15)" fg:x="67060" fg:w="260"/><text x="14.3162%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (264 samples, 0.06%)</title><rect x="14.0660%" y="757" width="0.0554%" height="15" fill="rgb(219,203,20)" fg:x="67059" fg:w="264"/><text x="14.3160%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (264 samples, 0.06%)</title><rect x="14.0660%" y="741" width="0.0554%" height="15" fill="rgb(234,128,8)" fg:x="67059" fg:w="264"/><text x="14.3160%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (264 samples, 0.06%)</title><rect x="14.0660%" y="725" width="0.0554%" height="15" fill="rgb(248,202,8)" fg:x="67059" fg:w="264"/><text x="14.3160%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (264 samples, 0.06%)</title><rect x="14.0660%" y="709" width="0.0554%" height="15" fill="rgb(206,104,37)" fg:x="67059" fg:w="264"/><text x="14.3160%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (264 samples, 0.06%)</title><rect x="14.0660%" y="693" width="0.0554%" height="15" fill="rgb(223,8,27)" fg:x="67059" fg:w="264"/><text x="14.3160%" y="703.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (269 samples, 0.06%)</title><rect x="14.0660%" y="805" width="0.0564%" height="15" fill="rgb(216,217,28)" fg:x="67059" fg:w="269"/><text x="14.3160%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (269 samples, 0.06%)</title><rect x="14.0660%" y="789" width="0.0564%" height="15" fill="rgb(249,199,1)" fg:x="67059" fg:w="269"/><text x="14.3160%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (269 samples, 0.06%)</title><rect x="14.0660%" y="773" width="0.0564%" height="15" fill="rgb(240,85,17)" fg:x="67059" fg:w="269"/><text x="14.3160%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 samples, 0.01%)</title><rect x="14.1384%" y="741" width="0.0134%" height="15" fill="rgb(206,108,45)" fg:x="67404" fg:w="64"/><text x="14.3884%" y="751.50"></text></g><g><title>alloc::string::String::push_str (59 samples, 0.01%)</title><rect x="14.1395%" y="725" width="0.0124%" height="15" fill="rgb(245,210,41)" fg:x="67409" fg:w="59"/><text x="14.3895%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (59 samples, 0.01%)</title><rect x="14.1395%" y="709" width="0.0124%" height="15" fill="rgb(206,13,37)" fg:x="67409" fg:w="59"/><text x="14.3895%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (59 samples, 0.01%)</title><rect x="14.1395%" y="693" width="0.0124%" height="15" fill="rgb(250,61,18)" fg:x="67409" fg:w="59"/><text x="14.3895%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (59 samples, 0.01%)</title><rect x="14.1395%" y="677" width="0.0124%" height="15" fill="rgb(235,172,48)" fg:x="67409" fg:w="59"/><text x="14.3895%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (117 samples, 0.02%)</title><rect x="14.1843%" y="677" width="0.0245%" height="15" fill="rgb(249,201,17)" fg:x="67623" fg:w="117"/><text x="14.4343%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (108 samples, 0.02%)</title><rect x="14.1862%" y="661" width="0.0227%" height="15" fill="rgb(219,208,6)" fg:x="67632" fg:w="108"/><text x="14.4362%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad_integral (103 samples, 0.02%)</title><rect x="14.1873%" y="645" width="0.0216%" height="15" fill="rgb(248,31,23)" fg:x="67637" fg:w="103"/><text x="14.4373%" y="655.50"></text></g><g><title>core::fmt::run (153 samples, 0.03%)</title><rect x="14.1770%" y="693" width="0.0321%" height="15" fill="rgb(245,15,42)" fg:x="67588" fg:w="153"/><text x="14.4270%" y="703.50"></text></g><g><title>chrono::format::format_inner::write_local_minus_utc (198 samples, 0.04%)</title><rect x="14.1692%" y="725" width="0.0415%" height="15" fill="rgb(222,217,39)" fg:x="67551" fg:w="198"/><text x="14.4192%" y="735.50"></text></g><g><title>core::fmt::write (175 samples, 0.04%)</title><rect x="14.1741%" y="709" width="0.0367%" height="15" fill="rgb(210,219,27)" fg:x="67574" fg:w="175"/><text x="14.4241%" y="719.50"></text></g><g><title>[libc-2.31.so] (64 samples, 0.01%)</title><rect x="14.2401%" y="453" width="0.0134%" height="15" fill="rgb(252,166,36)" fg:x="67889" fg:w="64"/><text x="14.4901%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (120 samples, 0.03%)</title><rect x="14.2286%" y="517" width="0.0252%" height="15" fill="rgb(245,132,34)" fg:x="67834" fg:w="120"/><text x="14.4786%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (120 samples, 0.03%)</title><rect x="14.2286%" y="501" width="0.0252%" height="15" fill="rgb(236,54,3)" fg:x="67834" fg:w="120"/><text x="14.4786%" y="511.50"></text></g><g><title>alloc::alloc::realloc (120 samples, 0.03%)</title><rect x="14.2286%" y="485" width="0.0252%" height="15" fill="rgb(241,173,43)" fg:x="67834" fg:w="120"/><text x="14.4786%" y="495.50"></text></g><g><title>realloc (116 samples, 0.02%)</title><rect x="14.2294%" y="469" width="0.0243%" height="15" fill="rgb(215,190,9)" fg:x="67838" fg:w="116"/><text x="14.4794%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (129 samples, 0.03%)</title><rect x="14.2269%" y="533" width="0.0271%" height="15" fill="rgb(242,101,16)" fg:x="67826" fg:w="129"/><text x="14.4769%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (147 samples, 0.03%)</title><rect x="14.2240%" y="597" width="0.0308%" height="15" fill="rgb(223,190,21)" fg:x="67812" fg:w="147"/><text x="14.4740%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (141 samples, 0.03%)</title><rect x="14.2252%" y="581" width="0.0296%" height="15" fill="rgb(215,228,25)" fg:x="67818" fg:w="141"/><text x="14.4752%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (135 samples, 0.03%)</title><rect x="14.2265%" y="565" width="0.0283%" height="15" fill="rgb(225,36,22)" fg:x="67824" fg:w="135"/><text x="14.4765%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (135 samples, 0.03%)</title><rect x="14.2265%" y="549" width="0.0283%" height="15" fill="rgb(251,106,46)" fg:x="67824" fg:w="135"/><text x="14.4765%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (195 samples, 0.04%)</title><rect x="14.2231%" y="677" width="0.0409%" height="15" fill="rgb(208,90,1)" fg:x="67808" fg:w="195"/><text x="14.4731%" y="687.50"></text></g><g><title>alloc::string::String::push_str (195 samples, 0.04%)</title><rect x="14.2231%" y="661" width="0.0409%" height="15" fill="rgb(243,10,4)" fg:x="67808" fg:w="195"/><text x="14.4731%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (195 samples, 0.04%)</title><rect x="14.2231%" y="645" width="0.0409%" height="15" fill="rgb(212,137,27)" fg:x="67808" fg:w="195"/><text x="14.4731%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (195 samples, 0.04%)</title><rect x="14.2231%" y="629" width="0.0409%" height="15" fill="rgb(231,220,49)" fg:x="67808" fg:w="195"/><text x="14.4731%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (195 samples, 0.04%)</title><rect x="14.2231%" y="613" width="0.0409%" height="15" fill="rgb(237,96,20)" fg:x="67808" fg:w="195"/><text x="14.4731%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (215 samples, 0.05%)</title><rect x="14.2192%" y="693" width="0.0451%" height="15" fill="rgb(239,229,30)" fg:x="67789" fg:w="215"/><text x="14.4692%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (121 samples, 0.03%)</title><rect x="14.2865%" y="501" width="0.0254%" height="15" fill="rgb(219,65,33)" fg:x="68110" fg:w="121"/><text x="14.5365%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (121 samples, 0.03%)</title><rect x="14.2865%" y="485" width="0.0254%" height="15" fill="rgb(243,134,7)" fg:x="68110" fg:w="121"/><text x="14.5365%" y="495.50"></text></g><g><title>alloc::alloc::realloc (121 samples, 0.03%)</title><rect x="14.2865%" y="469" width="0.0254%" height="15" fill="rgb(216,177,54)" fg:x="68110" fg:w="121"/><text x="14.5365%" y="479.50"></text></g><g><title>realloc (111 samples, 0.02%)</title><rect x="14.2886%" y="453" width="0.0233%" height="15" fill="rgb(211,160,20)" fg:x="68120" fg:w="111"/><text x="14.5386%" y="463.50"></text></g><g><title>[libc-2.31.so] (83 samples, 0.02%)</title><rect x="14.3213%" y="485" width="0.0174%" height="15" fill="rgb(239,85,39)" fg:x="68276" fg:w="83"/><text x="14.5713%" y="495.50"></text></g><g><title>__libc_malloc (129 samples, 0.03%)</title><rect x="14.3119%" y="501" width="0.0271%" height="15" fill="rgb(232,125,22)" fg:x="68231" fg:w="129"/><text x="14.5619%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (280 samples, 0.06%)</title><rect x="14.2833%" y="517" width="0.0587%" height="15" fill="rgb(244,57,34)" fg:x="68095" fg:w="280"/><text x="14.5333%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (296 samples, 0.06%)</title><rect x="14.2815%" y="581" width="0.0621%" height="15" fill="rgb(214,203,32)" fg:x="68086" fg:w="296"/><text x="14.5315%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (295 samples, 0.06%)</title><rect x="14.2817%" y="565" width="0.0619%" height="15" fill="rgb(207,58,43)" fg:x="68087" fg:w="295"/><text x="14.5317%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (292 samples, 0.06%)</title><rect x="14.2823%" y="549" width="0.0612%" height="15" fill="rgb(215,193,15)" fg:x="68090" fg:w="292"/><text x="14.5323%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (292 samples, 0.06%)</title><rect x="14.2823%" y="533" width="0.0612%" height="15" fill="rgb(232,15,44)" fg:x="68090" fg:w="292"/><text x="14.5323%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (333 samples, 0.07%)</title><rect x="14.2800%" y="677" width="0.0698%" height="15" fill="rgb(212,3,48)" fg:x="68079" fg:w="333"/><text x="14.5300%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (330 samples, 0.07%)</title><rect x="14.2806%" y="661" width="0.0692%" height="15" fill="rgb(218,128,7)" fg:x="68082" fg:w="330"/><text x="14.5306%" y="671.50"></text></g><g><title>alloc::string::String::push_str (330 samples, 0.07%)</title><rect x="14.2806%" y="645" width="0.0692%" height="15" fill="rgb(226,216,39)" fg:x="68082" fg:w="330"/><text x="14.5306%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (330 samples, 0.07%)</title><rect x="14.2806%" y="629" width="0.0692%" height="15" fill="rgb(243,47,51)" fg:x="68082" fg:w="330"/><text x="14.5306%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (330 samples, 0.07%)</title><rect x="14.2806%" y="613" width="0.0692%" height="15" fill="rgb(241,183,40)" fg:x="68082" fg:w="330"/><text x="14.5306%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (330 samples, 0.07%)</title><rect x="14.2806%" y="597" width="0.0692%" height="15" fill="rgb(231,217,32)" fg:x="68082" fg:w="330"/><text x="14.5306%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (57 samples, 0.01%)</title><rect x="14.3559%" y="677" width="0.0120%" height="15" fill="rgb(229,61,38)" fg:x="68441" fg:w="57"/><text x="14.6059%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (50 samples, 0.01%)</title><rect x="14.3574%" y="661" width="0.0105%" height="15" fill="rgb(225,210,5)" fg:x="68448" fg:w="50"/><text x="14.6074%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad_integral (133 samples, 0.03%)</title><rect x="14.3805%" y="645" width="0.0279%" height="15" fill="rgb(231,79,45)" fg:x="68558" fg:w="133"/><text x="14.6305%" y="655.50"></text></g><g><title>core::fmt::run (691 samples, 0.14%)</title><rect x="14.2649%" y="693" width="0.1449%" height="15" fill="rgb(224,100,7)" fg:x="68007" fg:w="691"/><text x="14.5149%" y="703.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (200 samples, 0.04%)</title><rect x="14.3679%" y="677" width="0.0420%" height="15" fill="rgb(241,198,18)" fg:x="68498" fg:w="200"/><text x="14.6179%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (187 samples, 0.04%)</title><rect x="14.3706%" y="661" width="0.0392%" height="15" fill="rgb(252,97,53)" fg:x="68511" fg:w="187"/><text x="14.6206%" y="671.50"></text></g><g><title>chrono::format::format_inner (1,230 samples, 0.26%)</title><rect x="14.1531%" y="741" width="0.2580%" height="15" fill="rgb(220,88,7)" fg:x="67474" fg:w="1230"/><text x="14.4031%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (955 samples, 0.20%)</title><rect x="14.2108%" y="725" width="0.2003%" height="15" fill="rgb(213,176,14)" fg:x="67749" fg:w="955"/><text x="14.4608%" y="735.50"></text></g><g><title>core::fmt::write (946 samples, 0.20%)</title><rect x="14.2127%" y="709" width="0.1984%" height="15" fill="rgb(246,73,7)" fg:x="67758" fg:w="946"/><text x="14.4627%" y="719.50"></text></g><g><title>&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (1,361 samples, 0.29%)</title><rect x="14.1353%" y="773" width="0.2855%" height="15" fill="rgb(245,64,36)" fg:x="67389" fg:w="1361"/><text x="14.3853%" y="783.50"></text></g><g><title>chrono::format::format (1,349 samples, 0.28%)</title><rect x="14.1378%" y="757" width="0.2830%" height="15" fill="rgb(245,80,10)" fg:x="67401" fg:w="1349"/><text x="14.3878%" y="767.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,372 samples, 0.29%)</title><rect x="14.1350%" y="789" width="0.2878%" height="15" fill="rgb(232,107,50)" fg:x="67388" fg:w="1372"/><text x="14.3850%" y="799.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::naive_local (97 samples, 0.02%)</title><rect x="14.4233%" y="773" width="0.0203%" height="15" fill="rgb(253,3,0)" fg:x="68762" fg:w="97"/><text x="14.6733%" y="783.50"></text></g><g><title>chrono::offset::fixed::&lt;impl core::ops::arith::Add&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::add (94 samples, 0.02%)</title><rect x="14.4239%" y="757" width="0.0197%" height="15" fill="rgb(212,99,53)" fg:x="68765" fg:w="94"/><text x="14.6739%" y="767.50"></text></g><g><title>chrono::offset::fixed::add_with_leapsecond (94 samples, 0.02%)</title><rect x="14.4239%" y="741" width="0.0197%" height="15" fill="rgb(249,111,54)" fg:x="68765" fg:w="94"/><text x="14.6739%" y="751.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (94 samples, 0.02%)</title><rect x="14.4239%" y="725" width="0.0197%" height="15" fill="rgb(249,55,30)" fg:x="68765" fg:w="94"/><text x="14.6739%" y="735.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (94 samples, 0.02%)</title><rect x="14.4239%" y="709" width="0.0197%" height="15" fill="rgb(237,47,42)" fg:x="68765" fg:w="94"/><text x="14.6739%" y="719.50"></text></g><g><title>__libc_malloc (48 samples, 0.01%)</title><rect x="14.4642%" y="533" width="0.0101%" height="15" fill="rgb(211,20,18)" fg:x="68957" fg:w="48"/><text x="14.7142%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (70 samples, 0.01%)</title><rect x="14.4616%" y="549" width="0.0147%" height="15" fill="rgb(231,203,46)" fg:x="68945" fg:w="70"/><text x="14.7116%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (87 samples, 0.02%)</title><rect x="14.4593%" y="613" width="0.0182%" height="15" fill="rgb(237,142,3)" fg:x="68934" fg:w="87"/><text x="14.7093%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (87 samples, 0.02%)</title><rect x="14.4593%" y="597" width="0.0182%" height="15" fill="rgb(241,107,1)" fg:x="68934" fg:w="87"/><text x="14.7093%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (86 samples, 0.02%)</title><rect x="14.4595%" y="581" width="0.0180%" height="15" fill="rgb(229,83,13)" fg:x="68935" fg:w="86"/><text x="14.7095%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (81 samples, 0.02%)</title><rect x="14.4606%" y="565" width="0.0170%" height="15" fill="rgb(241,91,40)" fg:x="68940" fg:w="81"/><text x="14.7106%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (106 samples, 0.02%)</title><rect x="14.4587%" y="693" width="0.0222%" height="15" fill="rgb(225,3,45)" fg:x="68931" fg:w="106"/><text x="14.7087%" y="703.50"></text></g><g><title>alloc::string::String::push_str (104 samples, 0.02%)</title><rect x="14.4591%" y="677" width="0.0218%" height="15" fill="rgb(244,223,14)" fg:x="68933" fg:w="104"/><text x="14.7091%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (104 samples, 0.02%)</title><rect x="14.4591%" y="661" width="0.0218%" height="15" fill="rgb(224,124,37)" fg:x="68933" fg:w="104"/><text x="14.7091%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (104 samples, 0.02%)</title><rect x="14.4591%" y="645" width="0.0218%" height="15" fill="rgb(251,171,30)" fg:x="68933" fg:w="104"/><text x="14.7091%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (104 samples, 0.02%)</title><rect x="14.4591%" y="629" width="0.0218%" height="15" fill="rgb(236,46,54)" fg:x="68933" fg:w="104"/><text x="14.7091%" y="639.50"></text></g><g><title>&lt;chrono::offset::utc::Utc as core::fmt::Display&gt;::fmt (167 samples, 0.04%)</title><rect x="14.4463%" y="741" width="0.0350%" height="15" fill="rgb(245,213,5)" fg:x="68872" fg:w="167"/><text x="14.6963%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (154 samples, 0.03%)</title><rect x="14.4491%" y="725" width="0.0323%" height="15" fill="rgb(230,144,27)" fg:x="68885" fg:w="154"/><text x="14.6991%" y="735.50"></text></g><g><title>core::fmt::write (136 samples, 0.03%)</title><rect x="14.4528%" y="709" width="0.0285%" height="15" fill="rgb(220,86,6)" fg:x="68903" fg:w="136"/><text x="14.7028%" y="719.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::format_with_items (285 samples, 0.06%)</title><rect x="14.4228%" y="789" width="0.0598%" height="15" fill="rgb(240,20,13)" fg:x="68760" fg:w="285"/><text x="14.6728%" y="799.50"></text></g><g><title>chrono::format::DelayedFormat&lt;I&gt;::new_with_offset (186 samples, 0.04%)</title><rect x="14.4436%" y="773" width="0.0390%" height="15" fill="rgb(217,89,34)" fg:x="68859" fg:w="186"/><text x="14.6936%" y="783.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (175 samples, 0.04%)</title><rect x="14.4459%" y="757" width="0.0367%" height="15" fill="rgb(229,13,5)" fg:x="68870" fg:w="175"/><text x="14.6959%" y="767.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::to_rfc2822 (1,706 samples, 0.36%)</title><rect x="14.1334%" y="805" width="0.3578%" height="15" fill="rgb(244,67,35)" fg:x="67380" fg:w="1706"/><text x="14.3834%" y="815.50"></text></g><g><title>chrono::offset::utc::Utc::now (230 samples, 0.05%)</title><rect x="14.4912%" y="805" width="0.0482%" height="15" fill="rgb(221,40,2)" fg:x="69086" fg:w="230"/><text x="14.7412%" y="815.50"></text></g><g><title>std::time::SystemTime::now (141 samples, 0.03%)</title><rect x="14.5099%" y="789" width="0.0296%" height="15" fill="rgb(237,157,21)" fg:x="69175" fg:w="141"/><text x="14.7599%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (141 samples, 0.03%)</title><rect x="14.5099%" y="773" width="0.0296%" height="15" fill="rgb(222,94,11)" fg:x="69175" fg:w="141"/><text x="14.7599%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::now (141 samples, 0.03%)</title><rect x="14.5099%" y="757" width="0.0296%" height="15" fill="rgb(249,113,6)" fg:x="69175" fg:w="141"/><text x="14.7599%" y="767.50"></text></g><g><title>__clock_gettime (121 samples, 0.03%)</title><rect x="14.5141%" y="741" width="0.0254%" height="15" fill="rgb(238,137,36)" fg:x="69195" fg:w="121"/><text x="14.7641%" y="751.50"></text></g><g><title>__vdso_clock_gettime (100 samples, 0.02%)</title><rect x="14.5185%" y="725" width="0.0210%" height="15" fill="rgb(210,102,26)" fg:x="69216" fg:w="100"/><text x="14.7685%" y="735.50"></text></g><g><title>[[vdso]] (79 samples, 0.02%)</title><rect x="14.5229%" y="709" width="0.0166%" height="15" fill="rgb(218,30,30)" fg:x="69237" fg:w="79"/><text x="14.7729%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (90 samples, 0.02%)</title><rect x="14.5407%" y="789" width="0.0189%" height="15" fill="rgb(214,67,26)" fg:x="69322" fg:w="90"/><text x="14.7907%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (90 samples, 0.02%)</title><rect x="14.5407%" y="773" width="0.0189%" height="15" fill="rgb(251,9,53)" fg:x="69322" fg:w="90"/><text x="14.7907%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (90 samples, 0.02%)</title><rect x="14.5407%" y="757" width="0.0189%" height="15" fill="rgb(228,204,25)" fg:x="69322" fg:w="90"/><text x="14.7907%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (90 samples, 0.02%)</title><rect x="14.5407%" y="741" width="0.0189%" height="15" fill="rgb(207,153,8)" fg:x="69322" fg:w="90"/><text x="14.7907%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (88 samples, 0.02%)</title><rect x="14.5411%" y="725" width="0.0185%" height="15" fill="rgb(242,9,16)" fg:x="69324" fg:w="88"/><text x="14.7911%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (88 samples, 0.02%)</title><rect x="14.5411%" y="709" width="0.0185%" height="15" fill="rgb(217,211,10)" fg:x="69324" fg:w="88"/><text x="14.7911%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (55 samples, 0.01%)</title><rect x="14.5600%" y="661" width="0.0115%" height="15" fill="rgb(219,228,52)" fg:x="69414" fg:w="55"/><text x="14.8100%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (55 samples, 0.01%)</title><rect x="14.5600%" y="645" width="0.0115%" height="15" fill="rgb(231,92,29)" fg:x="69414" fg:w="55"/><text x="14.8100%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.01%)</title><rect x="14.5596%" y="773" width="0.0132%" height="15" fill="rgb(232,8,23)" fg:x="69412" fg:w="63"/><text x="14.8096%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[parsed::http::Header]&gt; (62 samples, 0.01%)</title><rect x="14.5598%" y="757" width="0.0130%" height="15" fill="rgb(216,211,34)" fg:x="69413" fg:w="62"/><text x="14.8098%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Header&gt; (62 samples, 0.01%)</title><rect x="14.5598%" y="741" width="0.0130%" height="15" fill="rgb(236,151,0)" fg:x="69413" fg:w="62"/><text x="14.8098%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (62 samples, 0.01%)</title><rect x="14.5598%" y="725" width="0.0130%" height="15" fill="rgb(209,168,3)" fg:x="69413" fg:w="62"/><text x="14.8098%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (62 samples, 0.01%)</title><rect x="14.5598%" y="709" width="0.0130%" height="15" fill="rgb(208,129,28)" fg:x="69413" fg:w="62"/><text x="14.8098%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (62 samples, 0.01%)</title><rect x="14.5598%" y="693" width="0.0130%" height="15" fill="rgb(229,78,22)" fg:x="69413" fg:w="62"/><text x="14.8098%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.01%)</title><rect x="14.5598%" y="677" width="0.0130%" height="15" fill="rgb(228,187,13)" fg:x="69413" fg:w="62"/><text x="14.8098%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;parsed::http::Header&gt;&gt; (92 samples, 0.02%)</title><rect x="14.5596%" y="789" width="0.0193%" height="15" fill="rgb(240,119,24)" fg:x="69412" fg:w="92"/><text x="14.8096%" y="799.50"></text></g><g><title>uppercut_mio_server::protocol::process (12,585 samples, 2.64%)</title><rect x="11.9393%" y="837" width="2.6398%" height="15" fill="rgb(209,194,42)" fg:x="56920" fg:w="12585"/><text x="12.1893%" y="847.50">up..</text></g><g><title>uppercut_mio_server::protocol::handle (2,475 samples, 0.52%)</title><rect x="14.0600%" y="821" width="0.5191%" height="15" fill="rgb(247,200,46)" fg:x="67030" fg:w="2475"/><text x="14.3100%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Request&gt; (189 samples, 0.04%)</title><rect x="14.5395%" y="805" width="0.0396%" height="15" fill="rgb(218,76,16)" fg:x="69316" fg:w="189"/><text x="14.7895%" y="815.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (25,099 samples, 5.26%)</title><rect x="9.3153%" y="853" width="5.2647%" height="15" fill="rgb(225,21,48)" fg:x="44410" fg:w="25099"/><text x="9.5653%" y="863.50">&lt;upper..</text></g><g><title>__libc_malloc (64 samples, 0.01%)</title><rect x="14.5925%" y="597" width="0.0134%" height="15" fill="rgb(239,223,50)" fg:x="69569" fg:w="64"/><text x="14.8425%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (71 samples, 0.01%)</title><rect x="14.5921%" y="693" width="0.0149%" height="15" fill="rgb(244,45,21)" fg:x="69567" fg:w="71"/><text x="14.8421%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (71 samples, 0.01%)</title><rect x="14.5921%" y="677" width="0.0149%" height="15" fill="rgb(232,33,43)" fg:x="69567" fg:w="71"/><text x="14.8421%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (71 samples, 0.01%)</title><rect x="14.5921%" y="661" width="0.0149%" height="15" fill="rgb(209,8,3)" fg:x="69567" fg:w="71"/><text x="14.8421%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (71 samples, 0.01%)</title><rect x="14.5921%" y="645" width="0.0149%" height="15" fill="rgb(214,25,53)" fg:x="69567" fg:w="71"/><text x="14.8421%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (71 samples, 0.01%)</title><rect x="14.5921%" y="629" width="0.0149%" height="15" fill="rgb(254,186,54)" fg:x="69567" fg:w="71"/><text x="14.8421%" y="639.50"></text></g><g><title>alloc::alloc::alloc (71 samples, 0.01%)</title><rect x="14.5921%" y="613" width="0.0149%" height="15" fill="rgb(208,174,49)" fg:x="69567" fg:w="71"/><text x="14.8421%" y="623.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (77 samples, 0.02%)</title><rect x="14.5921%" y="821" width="0.0162%" height="15" fill="rgb(233,191,51)" fg:x="69567" fg:w="77"/><text x="14.8421%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (77 samples, 0.02%)</title><rect x="14.5921%" y="805" width="0.0162%" height="15" fill="rgb(222,134,10)" fg:x="69567" fg:w="77"/><text x="14.8421%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (77 samples, 0.02%)</title><rect x="14.5921%" y="789" width="0.0162%" height="15" fill="rgb(230,226,20)" fg:x="69567" fg:w="77"/><text x="14.8421%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (77 samples, 0.02%)</title><rect x="14.5921%" y="773" width="0.0162%" height="15" fill="rgb(251,111,25)" fg:x="69567" fg:w="77"/><text x="14.8421%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (77 samples, 0.02%)</title><rect x="14.5921%" y="757" width="0.0162%" height="15" fill="rgb(224,40,46)" fg:x="69567" fg:w="77"/><text x="14.8421%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (77 samples, 0.02%)</title><rect x="14.5921%" y="741" width="0.0162%" height="15" fill="rgb(236,108,47)" fg:x="69567" fg:w="77"/><text x="14.8421%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (77 samples, 0.02%)</title><rect x="14.5921%" y="725" width="0.0162%" height="15" fill="rgb(234,93,0)" fg:x="69567" fg:w="77"/><text x="14.8421%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (77 samples, 0.02%)</title><rect x="14.5921%" y="709" width="0.0162%" height="15" fill="rgb(224,213,32)" fg:x="69567" fg:w="77"/><text x="14.8421%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (52 samples, 0.01%)</title><rect x="14.6374%" y="773" width="0.0109%" height="15" fill="rgb(251,11,48)" fg:x="69783" fg:w="52"/><text x="14.8874%" y="783.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (177 samples, 0.04%)</title><rect x="14.6162%" y="789" width="0.0371%" height="15" fill="rgb(236,173,5)" fg:x="69682" fg:w="177"/><text x="14.8662%" y="799.50"></text></g><g><title>__sched_yield (62 samples, 0.01%)</title><rect x="14.6706%" y="725" width="0.0130%" height="15" fill="rgb(230,95,12)" fg:x="69941" fg:w="62"/><text x="14.9206%" y="735.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (77 samples, 0.02%)</title><rect x="14.6687%" y="757" width="0.0162%" height="15" fill="rgb(232,209,1)" fg:x="69932" fg:w="77"/><text x="14.9187%" y="767.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (69 samples, 0.01%)</title><rect x="14.6703%" y="741" width="0.0145%" height="15" fill="rgb(232,6,1)" fg:x="69940" fg:w="69"/><text x="14.9203%" y="751.50"></text></g><g><title>futex_wake (149 samples, 0.03%)</title><rect x="14.6961%" y="581" width="0.0313%" height="15" fill="rgb(210,224,50)" fg:x="70063" fg:w="149"/><text x="14.9461%" y="591.50"></text></g><g><title>wake_up_q (137 samples, 0.03%)</title><rect x="14.6987%" y="565" width="0.0287%" height="15" fill="rgb(228,127,35)" fg:x="70075" fg:w="137"/><text x="14.9487%" y="575.50"></text></g><g><title>try_to_wake_up (136 samples, 0.03%)</title><rect x="14.6989%" y="549" width="0.0285%" height="15" fill="rgb(245,102,45)" fg:x="70076" fg:w="136"/><text x="14.9489%" y="559.50"></text></g><g><title>__lock_text_start (132 samples, 0.03%)</title><rect x="14.6997%" y="533" width="0.0277%" height="15" fill="rgb(214,1,49)" fg:x="70080" fg:w="132"/><text x="14.9497%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (202 samples, 0.04%)</title><rect x="14.6857%" y="741" width="0.0424%" height="15" fill="rgb(226,163,40)" fg:x="70013" fg:w="202"/><text x="14.9357%" y="751.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (202 samples, 0.04%)</title><rect x="14.6857%" y="725" width="0.0424%" height="15" fill="rgb(239,212,28)" fg:x="70013" fg:w="202"/><text x="14.9357%" y="735.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (189 samples, 0.04%)</title><rect x="14.6884%" y="709" width="0.0396%" height="15" fill="rgb(220,20,13)" fg:x="70026" fg:w="189"/><text x="14.9384%" y="719.50"></text></g><g><title>std::thread::Thread::unpark (189 samples, 0.04%)</title><rect x="14.6884%" y="693" width="0.0396%" height="15" fill="rgb(210,164,35)" fg:x="70026" fg:w="189"/><text x="14.9384%" y="703.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (188 samples, 0.04%)</title><rect x="14.6886%" y="677" width="0.0394%" height="15" fill="rgb(248,109,41)" fg:x="70027" fg:w="188"/><text x="14.9386%" y="687.50"></text></g><g><title>syscall (184 samples, 0.04%)</title><rect x="14.6894%" y="661" width="0.0386%" height="15" fill="rgb(238,23,50)" fg:x="70031" fg:w="184"/><text x="14.9394%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (166 samples, 0.03%)</title><rect x="14.6932%" y="645" width="0.0348%" height="15" fill="rgb(211,48,49)" fg:x="70049" fg:w="166"/><text x="14.9432%" y="655.50"></text></g><g><title>do_syscall_64 (165 samples, 0.03%)</title><rect x="14.6934%" y="629" width="0.0346%" height="15" fill="rgb(223,36,21)" fg:x="70050" fg:w="165"/><text x="14.9434%" y="639.50"></text></g><g><title>__x64_sys_futex (159 samples, 0.03%)</title><rect x="14.6947%" y="613" width="0.0334%" height="15" fill="rgb(207,123,46)" fg:x="70056" fg:w="159"/><text x="14.9447%" y="623.50"></text></g><g><title>do_futex (158 samples, 0.03%)</title><rect x="14.6949%" y="597" width="0.0331%" height="15" fill="rgb(240,218,32)" fg:x="70057" fg:w="158"/><text x="14.9449%" y="607.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (571 samples, 0.12%)</title><rect x="14.6087%" y="821" width="0.1198%" height="15" fill="rgb(252,5,43)" fg:x="69646" fg:w="571"/><text x="14.8587%" y="831.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (549 samples, 0.12%)</title><rect x="14.6133%" y="805" width="0.1152%" height="15" fill="rgb(252,84,19)" fg:x="69668" fg:w="549"/><text x="14.8633%" y="815.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (358 samples, 0.08%)</title><rect x="14.6534%" y="789" width="0.0751%" height="15" fill="rgb(243,152,39)" fg:x="69859" fg:w="358"/><text x="14.9034%" y="799.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (289 samples, 0.06%)</title><rect x="14.6678%" y="773" width="0.0606%" height="15" fill="rgb(234,160,15)" fg:x="69928" fg:w="289"/><text x="14.9178%" y="783.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (204 samples, 0.04%)</title><rect x="14.6857%" y="757" width="0.0428%" height="15" fill="rgb(237,34,20)" fg:x="70013" fg:w="204"/><text x="14.9357%" y="767.50"></text></g><g><title>&lt;uppercut::core::Local as uppercut::api::AnySender&gt;::send (694 samples, 0.15%)</title><rect x="14.5862%" y="837" width="0.1456%" height="15" fill="rgb(229,97,13)" fg:x="69539" fg:w="694"/><text x="14.8362%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (48 samples, 0.01%)</title><rect x="14.7402%" y="661" width="0.0101%" height="15" fill="rgb(234,71,50)" fg:x="70273" fg:w="48"/><text x="14.9902%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (48 samples, 0.01%)</title><rect x="14.7402%" y="645" width="0.0101%" height="15" fill="rgb(253,155,4)" fg:x="70273" fg:w="48"/><text x="14.9902%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 samples, 0.01%)</title><rect x="14.7394%" y="757" width="0.0115%" height="15" fill="rgb(222,185,37)" fg:x="70269" fg:w="55"/><text x="14.9894%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (52 samples, 0.01%)</title><rect x="14.7400%" y="741" width="0.0109%" height="15" fill="rgb(251,177,13)" fg:x="70272" fg:w="52"/><text x="14.9900%" y="751.50"></text></g><g><title>alloc::string::String::push_str (52 samples, 0.01%)</title><rect x="14.7400%" y="725" width="0.0109%" height="15" fill="rgb(250,179,40)" fg:x="70272" fg:w="52"/><text x="14.9900%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (52 samples, 0.01%)</title><rect x="14.7400%" y="709" width="0.0109%" height="15" fill="rgb(242,44,2)" fg:x="70272" fg:w="52"/><text x="14.9900%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (52 samples, 0.01%)</title><rect x="14.7400%" y="693" width="0.0109%" height="15" fill="rgb(216,177,13)" fg:x="70272" fg:w="52"/><text x="14.9900%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (52 samples, 0.01%)</title><rect x="14.7400%" y="677" width="0.0109%" height="15" fill="rgb(216,106,43)" fg:x="70272" fg:w="52"/><text x="14.9900%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (88 samples, 0.02%)</title><rect x="14.7366%" y="789" width="0.0185%" height="15" fill="rgb(216,183,2)" fg:x="70256" fg:w="88"/><text x="14.9866%" y="799.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (81 samples, 0.02%)</title><rect x="14.7381%" y="773" width="0.0170%" height="15" fill="rgb(249,75,3)" fg:x="70263" fg:w="81"/><text x="14.9881%" y="783.50"></text></g><g><title>alloc::fmt::format (115 samples, 0.02%)</title><rect x="14.7318%" y="837" width="0.0241%" height="15" fill="rgb(219,67,39)" fg:x="70233" fg:w="115"/><text x="14.9818%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (106 samples, 0.02%)</title><rect x="14.7337%" y="821" width="0.0222%" height="15" fill="rgb(253,228,2)" fg:x="70242" fg:w="106"/><text x="14.9837%" y="831.50"></text></g><g><title>core::fmt::write (102 samples, 0.02%)</title><rect x="14.7345%" y="805" width="0.0214%" height="15" fill="rgb(235,138,27)" fg:x="70246" fg:w="102"/><text x="14.9845%" y="815.50"></text></g><g><title>tcp_poll (88 samples, 0.02%)</title><rect x="14.9246%" y="645" width="0.0185%" height="15" fill="rgb(236,97,51)" fg:x="71152" fg:w="88"/><text x="15.1746%" y="655.50"></text></g><g><title>sock_poll (307 samples, 0.06%)</title><rect x="14.8916%" y="661" width="0.0644%" height="15" fill="rgb(240,80,30)" fg:x="70995" fg:w="307"/><text x="15.1416%" y="671.50"></text></g><g><title>tcp_stream_memory_free (62 samples, 0.01%)</title><rect x="14.9430%" y="645" width="0.0130%" height="15" fill="rgb(230,178,19)" fg:x="71240" fg:w="62"/><text x="15.1930%" y="655.50"></text></g><g><title>ep_item_poll.isra.0 (389 samples, 0.08%)</title><rect x="14.8759%" y="677" width="0.0816%" height="15" fill="rgb(210,190,27)" fg:x="70920" fg:w="389"/><text x="15.1259%" y="687.50"></text></g><g><title>ep_send_events_proc (481 samples, 0.10%)</title><rect x="14.8604%" y="693" width="0.1009%" height="15" fill="rgb(222,107,31)" fg:x="70846" fg:w="481"/><text x="15.1104%" y="703.50"></text></g><g><title>ep_scan_ready_list.constprop.0 (561 samples, 0.12%)</title><rect x="14.8493%" y="709" width="0.1177%" height="15" fill="rgb(216,127,34)" fg:x="70793" fg:w="561"/><text x="15.0993%" y="719.50"></text></g><g><title>ep_poll (929 samples, 0.19%)</title><rect x="14.8421%" y="725" width="0.1949%" height="15" fill="rgb(234,116,52)" fg:x="70759" fg:w="929"/><text x="15.0921%" y="735.50"></text></g><g><title>schedule_hrtimeout_range (331 samples, 0.07%)</title><rect x="14.9676%" y="709" width="0.0694%" height="15" fill="rgb(222,124,15)" fg:x="71357" fg:w="331"/><text x="15.2176%" y="719.50"></text></g><g><title>schedule_hrtimeout_range_clock (331 samples, 0.07%)</title><rect x="14.9676%" y="693" width="0.0694%" height="15" fill="rgb(231,179,28)" fg:x="71357" fg:w="331"/><text x="15.2176%" y="703.50"></text></g><g><title>schedule (329 samples, 0.07%)</title><rect x="14.9680%" y="677" width="0.0690%" height="15" fill="rgb(226,93,45)" fg:x="71359" fg:w="329"/><text x="15.2180%" y="687.50"></text></g><g><title>__schedule (328 samples, 0.07%)</title><rect x="14.9682%" y="661" width="0.0688%" height="15" fill="rgb(215,8,51)" fg:x="71360" fg:w="328"/><text x="15.2182%" y="671.50"></text></g><g><title>finish_task_switch (319 samples, 0.07%)</title><rect x="14.9701%" y="645" width="0.0669%" height="15" fill="rgb(223,106,5)" fg:x="71369" fg:w="319"/><text x="15.2201%" y="655.50"></text></g><g><title>do_epoll_wait (989 samples, 0.21%)</title><rect x="14.8304%" y="741" width="0.2074%" height="15" fill="rgb(250,191,5)" fg:x="70703" fg:w="989"/><text x="15.0804%" y="751.50"></text></g><g><title>__x64_sys_epoll_wait (991 samples, 0.21%)</title><rect x="14.8302%" y="757" width="0.2079%" height="15" fill="rgb(242,132,44)" fg:x="70702" fg:w="991"/><text x="15.0802%" y="767.50"></text></g><g><title>mio::poll::Poll::poll (1,306 samples, 0.27%)</title><rect x="14.7649%" y="837" width="0.2739%" height="15" fill="rgb(251,152,29)" fg:x="70391" fg:w="1306"/><text x="15.0149%" y="847.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1,306 samples, 0.27%)</title><rect x="14.7649%" y="821" width="0.2739%" height="15" fill="rgb(218,179,5)" fg:x="70391" fg:w="1306"/><text x="15.0149%" y="831.50"></text></g><g><title>epoll_wait (1,284 samples, 0.27%)</title><rect x="14.7696%" y="805" width="0.2693%" height="15" fill="rgb(227,67,19)" fg:x="70413" fg:w="1284"/><text x="15.0196%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,076 samples, 0.23%)</title><rect x="14.8132%" y="789" width="0.2257%" height="15" fill="rgb(233,119,31)" fg:x="70621" fg:w="1076"/><text x="15.0632%" y="799.50"></text></g><g><title>do_syscall_64 (1,058 samples, 0.22%)</title><rect x="14.8170%" y="773" width="0.2219%" height="15" fill="rgb(241,120,22)" fg:x="70639" fg:w="1058"/><text x="15.0670%" y="783.50"></text></g><g><title>std::panic::catch_unwind (27,355 samples, 5.74%)</title><rect x="9.3146%" y="933" width="5.7379%" height="15" fill="rgb(224,102,30)" fg:x="44407" fg:w="27355"/><text x="9.5646%" y="943.50">std::pa..</text></g><g><title>std::panicking::try (27,355 samples, 5.74%)</title><rect x="9.3146%" y="917" width="5.7379%" height="15" fill="rgb(210,164,37)" fg:x="44407" fg:w="27355"/><text x="9.5646%" y="927.50">std::pa..</text></g><g><title>std::panicking::try::do_call (27,355 samples, 5.74%)</title><rect x="9.3146%" y="901" width="5.7379%" height="15" fill="rgb(226,191,16)" fg:x="44407" fg:w="27355"/><text x="9.5646%" y="911.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27,355 samples, 5.74%)</title><rect x="9.3146%" y="885" width="5.7379%" height="15" fill="rgb(214,40,45)" fg:x="44407" fg:w="27355"/><text x="9.5646%" y="895.50">&lt;core::..</text></g><g><title>uppercut::core::worker_loop::{{closure}} (27,355 samples, 5.74%)</title><rect x="9.3146%" y="869" width="5.7379%" height="15" fill="rgb(244,29,26)" fg:x="44407" fg:w="27355"/><text x="9.5646%" y="879.50">uppercu..</text></g><g><title>&lt;uppercut_mio_server::server::Listener as uppercut::api::AnyActor&gt;::receive (2,253 samples, 0.47%)</title><rect x="14.5799%" y="853" width="0.4726%" height="15" fill="rgb(216,16,5)" fg:x="69509" fg:w="2253"/><text x="14.8299%" y="863.50"></text></g><g><title>uppercut::api::Envelope::of (65 samples, 0.01%)</title><rect x="15.0389%" y="837" width="0.0136%" height="15" fill="rgb(249,76,35)" fg:x="71697" fg:w="65"/><text x="15.2889%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (63 samples, 0.01%)</title><rect x="15.0393%" y="821" width="0.0132%" height="15" fill="rgb(207,11,44)" fg:x="71699" fg:w="63"/><text x="15.2893%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (63 samples, 0.01%)</title><rect x="15.0393%" y="805" width="0.0132%" height="15" fill="rgb(228,190,49)" fg:x="71699" fg:w="63"/><text x="15.2893%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (63 samples, 0.01%)</title><rect x="15.0393%" y="789" width="0.0132%" height="15" fill="rgb(214,173,12)" fg:x="71699" fg:w="63"/><text x="15.2893%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (63 samples, 0.01%)</title><rect x="15.0393%" y="773" width="0.0132%" height="15" fill="rgb(218,26,35)" fg:x="71699" fg:w="63"/><text x="15.2893%" y="783.50"></text></g><g><title>alloc::alloc::alloc (62 samples, 0.01%)</title><rect x="15.0395%" y="757" width="0.0130%" height="15" fill="rgb(220,200,19)" fg:x="71700" fg:w="62"/><text x="15.2895%" y="767.50"></text></g><g><title>__libc_malloc (62 samples, 0.01%)</title><rect x="15.0395%" y="741" width="0.0130%" height="15" fill="rgb(239,95,49)" fg:x="71700" fg:w="62"/><text x="15.2895%" y="751.50"></text></g><g><title>worker-0 (71,763 samples, 15.05%)</title><rect x="0.0002%" y="1285" width="15.0527%" height="15" fill="rgb(235,85,53)" fg:x="1" fg:w="71763"/><text x="0.2502%" y="1295.50">worker-0</text></g><g><title>clone (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1269" width="14.6322%" height="15" fill="rgb(233,133,31)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1279.50">clone</text></g><g><title>start_thread (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1253" width="14.6322%" height="15" fill="rgb(218,25,20)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1263.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1237" width="14.6322%" height="15" fill="rgb(252,210,38)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1247.50">std::sys::unix::thread..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1221" width="14.6322%" height="15" fill="rgb(242,134,21)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1231.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1205" width="14.6322%" height="15" fill="rgb(213,28,48)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1215.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1189" width="14.6322%" height="15" fill="rgb(250,196,2)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1199.50">core::ops::function::F..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1173" width="14.6322%" height="15" fill="rgb(227,5,17)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1183.50">std::thread::Builder::..</text></g><g><title>std::panic::catch_unwind (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1157" width="14.6322%" height="15" fill="rgb(221,226,24)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1167.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1141" width="14.6322%" height="15" fill="rgb(211,5,48)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1151.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1125" width="14.6322%" height="15" fill="rgb(219,150,6)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1135.50">std::panicking::try::d..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1109" width="14.6322%" height="15" fill="rgb(251,46,16)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1119.50">&lt;core::panic::unwind_s..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1093" width="14.6322%" height="15" fill="rgb(220,204,40)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1103.50">std::thread::Builder::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1077" width="14.6322%" height="15" fill="rgb(211,85,2)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1087.50">std::sys_common::backt..</text></g><g><title>uppercut::pool::Worker::new::{{closure}} (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1061" width="14.6322%" height="15" fill="rgb(229,17,7)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1071.50">uppercut::pool::Worker..</text></g><g><title>std::panic::catch_unwind (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1045" width="14.6322%" height="15" fill="rgb(239,72,28)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1055.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1029" width="14.6322%" height="15" fill="rgb(230,47,54)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (69,758 samples, 14.63%)</title><rect x="0.4208%" y="1013" width="14.6322%" height="15" fill="rgb(214,50,8)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1023.50">std::panicking::try::d..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (69,758 samples, 14.63%)</title><rect x="0.4208%" y="997" width="14.6322%" height="15" fill="rgb(216,198,43)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="1007.50">&lt;core::panic::unwind_s..</text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (69,758 samples, 14.63%)</title><rect x="0.4208%" y="981" width="14.6322%" height="15" fill="rgb(234,20,35)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="991.50">uppercut::pool::Worker..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69,758 samples, 14.63%)</title><rect x="0.4208%" y="965" width="14.6322%" height="15" fill="rgb(254,45,19)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="975.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>uppercut::core::worker_loop (69,758 samples, 14.63%)</title><rect x="0.4208%" y="949" width="14.6322%" height="15" fill="rgb(219,14,44)" fg:x="2006" fg:w="69758"/><text x="0.6708%" y="959.50">uppercut::core::worker..</text></g><g><title>__libc_malloc (62 samples, 0.01%)</title><rect x="15.0597%" y="757" width="0.0130%" height="15" fill="rgb(217,220,26)" fg:x="71796" fg:w="62"/><text x="15.3097%" y="767.50"></text></g><g><title>alloc::string::String::with_capacity (67 samples, 0.01%)</title><rect x="15.0592%" y="885" width="0.0141%" height="15" fill="rgb(213,158,28)" fg:x="71794" fg:w="67"/><text x="15.3092%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (67 samples, 0.01%)</title><rect x="15.0592%" y="869" width="0.0141%" height="15" fill="rgb(252,51,52)" fg:x="71794" fg:w="67"/><text x="15.3092%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (67 samples, 0.01%)</title><rect x="15.0592%" y="853" width="0.0141%" height="15" fill="rgb(246,89,16)" fg:x="71794" fg:w="67"/><text x="15.3092%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (67 samples, 0.01%)</title><rect x="15.0592%" y="837" width="0.0141%" height="15" fill="rgb(216,158,49)" fg:x="71794" fg:w="67"/><text x="15.3092%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (67 samples, 0.01%)</title><rect x="15.0592%" y="821" width="0.0141%" height="15" fill="rgb(236,107,19)" fg:x="71794" fg:w="67"/><text x="15.3092%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67 samples, 0.01%)</title><rect x="15.0592%" y="805" width="0.0141%" height="15" fill="rgb(228,185,30)" fg:x="71794" fg:w="67"/><text x="15.3092%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 0.01%)</title><rect x="15.0592%" y="789" width="0.0141%" height="15" fill="rgb(246,134,8)" fg:x="71794" fg:w="67"/><text x="15.3092%" y="799.50"></text></g><g><title>alloc::alloc::alloc (65 samples, 0.01%)</title><rect x="15.0597%" y="773" width="0.0136%" height="15" fill="rgb(214,143,50)" fg:x="71796" fg:w="65"/><text x="15.3097%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (49 samples, 0.01%)</title><rect x="15.0750%" y="885" width="0.0103%" height="15" fill="rgb(228,75,8)" fg:x="71869" fg:w="49"/><text x="15.3250%" y="895.50"></text></g><g><title>core::fmt::write (49 samples, 0.01%)</title><rect x="15.0750%" y="869" width="0.0103%" height="15" fill="rgb(207,175,4)" fg:x="71869" fg:w="49"/><text x="15.3250%" y="879.50"></text></g><g><title>alloc::fmt::format (129 samples, 0.03%)</title><rect x="15.0584%" y="901" width="0.0271%" height="15" fill="rgb(205,108,24)" fg:x="71790" fg:w="129"/><text x="15.3084%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 samples, 0.01%)</title><rect x="15.1098%" y="837" width="0.0138%" height="15" fill="rgb(244,120,49)" fg:x="72035" fg:w="66"/><text x="15.3598%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (185 samples, 0.04%)</title><rect x="15.1056%" y="869" width="0.0388%" height="15" fill="rgb(223,47,38)" fg:x="72015" fg:w="185"/><text x="15.3556%" y="879.50"></text></g><g><title>core::fmt::write (183 samples, 0.04%)</title><rect x="15.1060%" y="853" width="0.0384%" height="15" fill="rgb(229,179,11)" fg:x="72017" fg:w="183"/><text x="15.3560%" y="863.50"></text></g><g><title>alloc::fmt::format (226 samples, 0.05%)</title><rect x="15.0972%" y="885" width="0.0474%" height="15" fill="rgb(231,122,1)" fg:x="71975" fg:w="226"/><text x="15.3472%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (50 samples, 0.01%)</title><rect x="15.1450%" y="821" width="0.0105%" height="15" fill="rgb(245,119,9)" fg:x="72203" fg:w="50"/><text x="15.3950%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (50 samples, 0.01%)</title><rect x="15.1450%" y="805" width="0.0105%" height="15" fill="rgb(241,163,25)" fg:x="72203" fg:w="50"/><text x="15.3950%" y="815.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (294 samples, 0.06%)</title><rect x="15.0943%" y="901" width="0.0617%" height="15" fill="rgb(217,214,3)" fg:x="71961" fg:w="294"/><text x="15.3443%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (52 samples, 0.01%)</title><rect x="15.1450%" y="885" width="0.0109%" height="15" fill="rgb(240,86,28)" fg:x="72203" fg:w="52"/><text x="15.3950%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (52 samples, 0.01%)</title><rect x="15.1450%" y="869" width="0.0109%" height="15" fill="rgb(215,47,9)" fg:x="72203" fg:w="52"/><text x="15.3950%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (52 samples, 0.01%)</title><rect x="15.1450%" y="853" width="0.0109%" height="15" fill="rgb(252,25,45)" fg:x="72203" fg:w="52"/><text x="15.3950%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.01%)</title><rect x="15.1450%" y="837" width="0.0109%" height="15" fill="rgb(251,164,9)" fg:x="72203" fg:w="52"/><text x="15.3950%" y="847.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (555 samples, 0.12%)</title><rect x="15.0529%" y="933" width="0.1164%" height="15" fill="rgb(233,194,0)" fg:x="71764" fg:w="555"/><text x="15.3029%" y="943.50"></text></g><g><title>parsed::parser::single::{{closure}} (551 samples, 0.12%)</title><rect x="15.0538%" y="917" width="0.1156%" height="15" fill="rgb(249,111,24)" fg:x="71768" fg:w="551"/><text x="15.3038%" y="927.50"></text></g><g><title>parsed::stream::ByteStream::next (64 samples, 0.01%)</title><rect x="15.1559%" y="901" width="0.0134%" height="15" fill="rgb(250,223,3)" fg:x="72255" fg:w="64"/><text x="15.4059%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (95 samples, 0.02%)</title><rect x="15.1773%" y="869" width="0.0199%" height="15" fill="rgb(236,178,37)" fg:x="72357" fg:w="95"/><text x="15.4273%" y="879.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (89 samples, 0.02%)</title><rect x="15.1786%" y="853" width="0.0187%" height="15" fill="rgb(241,158,50)" fg:x="72363" fg:w="89"/><text x="15.4286%" y="863.50"></text></g><g><title>parsed::stream::ByteStream::get (87 samples, 0.02%)</title><rect x="15.1790%" y="837" width="0.0182%" height="15" fill="rgb(213,121,41)" fg:x="72365" fg:w="87"/><text x="15.4290%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (65 samples, 0.01%)</title><rect x="15.1836%" y="821" width="0.0136%" height="15" fill="rgb(240,92,3)" fg:x="72387" fg:w="65"/><text x="15.4336%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (65 samples, 0.01%)</title><rect x="15.1836%" y="805" width="0.0136%" height="15" fill="rgb(205,123,3)" fg:x="72387" fg:w="65"/><text x="15.4336%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (64 samples, 0.01%)</title><rect x="15.1838%" y="789" width="0.0134%" height="15" fill="rgb(205,97,47)" fg:x="72388" fg:w="64"/><text x="15.4338%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (64 samples, 0.01%)</title><rect x="15.1838%" y="773" width="0.0134%" height="15" fill="rgb(247,152,14)" fg:x="72388" fg:w="64"/><text x="15.4338%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (64 samples, 0.01%)</title><rect x="15.1838%" y="757" width="0.0134%" height="15" fill="rgb(248,195,53)" fg:x="72388" fg:w="64"/><text x="15.4338%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (64 samples, 0.01%)</title><rect x="15.1838%" y="741" width="0.0134%" height="15" fill="rgb(226,201,16)" fg:x="72388" fg:w="64"/><text x="15.4338%" y="751.50"></text></g><g><title>alloc::alloc::alloc (64 samples, 0.01%)</title><rect x="15.1838%" y="725" width="0.0134%" height="15" fill="rgb(205,98,0)" fg:x="72388" fg:w="64"/><text x="15.4338%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (53 samples, 0.01%)</title><rect x="15.1973%" y="869" width="0.0111%" height="15" fill="rgb(214,191,48)" fg:x="72452" fg:w="53"/><text x="15.4473%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::matcher::MatchError&gt; (48 samples, 0.01%)</title><rect x="15.1983%" y="853" width="0.0101%" height="15" fill="rgb(237,112,39)" fg:x="72457" fg:w="48"/><text x="15.4483%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (48 samples, 0.01%)</title><rect x="15.1983%" y="837" width="0.0101%" height="15" fill="rgb(247,203,27)" fg:x="72457" fg:w="48"/><text x="15.4483%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (48 samples, 0.01%)</title><rect x="15.1983%" y="821" width="0.0101%" height="15" fill="rgb(235,124,28)" fg:x="72457" fg:w="48"/><text x="15.4483%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (48 samples, 0.01%)</title><rect x="15.1983%" y="805" width="0.0101%" height="15" fill="rgb(208,207,46)" fg:x="72457" fg:w="48"/><text x="15.4483%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.01%)</title><rect x="15.1983%" y="789" width="0.0101%" height="15" fill="rgb(234,176,4)" fg:x="72457" fg:w="48"/><text x="15.4483%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (48 samples, 0.01%)</title><rect x="15.1983%" y="773" width="0.0101%" height="15" fill="rgb(230,133,28)" fg:x="72457" fg:w="48"/><text x="15.4483%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (48 samples, 0.01%)</title><rect x="15.1983%" y="757" width="0.0101%" height="15" fill="rgb(211,137,40)" fg:x="72457" fg:w="48"/><text x="15.4483%" y="767.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (73 samples, 0.02%)</title><rect x="15.2310%" y="805" width="0.0153%" height="15" fill="rgb(254,35,13)" fg:x="72613" fg:w="73"/><text x="15.4810%" y="815.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (62 samples, 0.01%)</title><rect x="15.2333%" y="789" width="0.0130%" height="15" fill="rgb(225,49,51)" fg:x="72624" fg:w="62"/><text x="15.4833%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (132 samples, 0.03%)</title><rect x="15.2205%" y="837" width="0.0277%" height="15" fill="rgb(251,10,15)" fg:x="72563" fg:w="132"/><text x="15.4705%" y="847.50"></text></g><g><title>core::fmt::write (132 samples, 0.03%)</title><rect x="15.2205%" y="821" width="0.0277%" height="15" fill="rgb(228,207,15)" fg:x="72563" fg:w="132"/><text x="15.4705%" y="831.50"></text></g><g><title>alloc::fmt::format (188 samples, 0.04%)</title><rect x="15.2090%" y="853" width="0.0394%" height="15" fill="rgb(241,99,19)" fg:x="72508" fg:w="188"/><text x="15.4590%" y="863.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (195 samples, 0.04%)</title><rect x="15.2084%" y="869" width="0.0409%" height="15" fill="rgb(207,104,49)" fg:x="72505" fg:w="195"/><text x="15.4584%" y="879.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (363 samples, 0.08%)</title><rect x="15.1744%" y="901" width="0.0761%" height="15" fill="rgb(234,99,18)" fg:x="72343" fg:w="363"/><text x="15.4244%" y="911.50"></text></g><g><title>parsed::parser::before::{{closure}} (349 samples, 0.07%)</title><rect x="15.1773%" y="885" width="0.0732%" height="15" fill="rgb(213,191,49)" fg:x="72357" fg:w="349"/><text x="15.4273%" y="895.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (408 samples, 0.09%)</title><rect x="15.1729%" y="917" width="0.0856%" height="15" fill="rgb(210,226,19)" fg:x="72336" fg:w="408"/><text x="15.4229%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (52 samples, 0.01%)</title><rect x="15.2619%" y="757" width="0.0109%" height="15" fill="rgb(229,97,18)" fg:x="72760" fg:w="52"/><text x="15.5119%" y="767.50"></text></g><g><title>alloc::string::String::reserve (70 samples, 0.01%)</title><rect x="15.2610%" y="837" width="0.0147%" height="15" fill="rgb(211,167,15)" fg:x="72756" fg:w="70"/><text x="15.5110%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (70 samples, 0.01%)</title><rect x="15.2610%" y="821" width="0.0147%" height="15" fill="rgb(210,169,34)" fg:x="72756" fg:w="70"/><text x="15.5110%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (70 samples, 0.01%)</title><rect x="15.2610%" y="805" width="0.0147%" height="15" fill="rgb(241,121,31)" fg:x="72756" fg:w="70"/><text x="15.5110%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (69 samples, 0.01%)</title><rect x="15.2612%" y="789" width="0.0145%" height="15" fill="rgb(232,40,11)" fg:x="72757" fg:w="69"/><text x="15.5112%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (69 samples, 0.01%)</title><rect x="15.2612%" y="773" width="0.0145%" height="15" fill="rgb(205,86,26)" fg:x="72757" fg:w="69"/><text x="15.5112%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (119 samples, 0.02%)</title><rect x="15.2598%" y="853" width="0.0250%" height="15" fill="rgb(231,126,28)" fg:x="72750" fg:w="119"/><text x="15.5098%" y="863.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1253" width="0.2322%" height="15" fill="rgb(219,221,18)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1263.50"></text></g><g><title>uppercut_mio_server::protocol::process (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1237" width="0.2322%" height="15" fill="rgb(211,40,0)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1247.50"></text></g><g><title>parsed::http::parse_http_request (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1221" width="0.2322%" height="15" fill="rgb(239,85,43)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1231.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1205" width="0.2322%" height="15" fill="rgb(231,55,21)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1215.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1189" width="0.2322%" height="15" fill="rgb(225,184,43)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1199.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1173" width="0.2322%" height="15" fill="rgb(251,158,41)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1183.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1157" width="0.2322%" height="15" fill="rgb(234,159,37)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1167.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1141" width="0.2322%" height="15" fill="rgb(216,204,22)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1151.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1125" width="0.2322%" height="15" fill="rgb(214,17,3)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1135.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1109" width="0.2322%" height="15" fill="rgb(212,111,17)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1119.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1093" width="0.2322%" height="15" fill="rgb(221,157,24)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1103.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1077" width="0.2322%" height="15" fill="rgb(252,16,13)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1087.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1061" width="0.2322%" height="15" fill="rgb(221,62,2)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1071.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1045" width="0.2322%" height="15" fill="rgb(247,87,22)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1055.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1029" width="0.2322%" height="15" fill="rgb(215,73,9)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1039.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="1013" width="0.2322%" height="15" fill="rgb(207,175,33)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1023.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="997" width="0.2322%" height="15" fill="rgb(243,129,54)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="1007.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="981" width="0.2322%" height="15" fill="rgb(227,119,45)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="991.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="965" width="0.2322%" height="15" fill="rgb(205,109,36)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,107 samples, 0.23%)</title><rect x="15.0529%" y="949" width="0.2322%" height="15" fill="rgb(205,6,39)" fg:x="71764" fg:w="1107"/><text x="15.3029%" y="959.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (552 samples, 0.12%)</title><rect x="15.1694%" y="933" width="0.1158%" height="15" fill="rgb(221,32,16)" fg:x="72319" fg:w="552"/><text x="15.4194%" y="943.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (127 samples, 0.03%)</title><rect x="15.2585%" y="917" width="0.0266%" height="15" fill="rgb(228,144,50)" fg:x="72744" fg:w="127"/><text x="15.5085%" y="927.50"></text></g><g><title>parsed::http::as_string (125 samples, 0.03%)</title><rect x="15.2589%" y="901" width="0.0262%" height="15" fill="rgb(229,201,53)" fg:x="72746" fg:w="125"/><text x="15.5089%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (125 samples, 0.03%)</title><rect x="15.2589%" y="885" width="0.0262%" height="15" fill="rgb(249,153,27)" fg:x="72746" fg:w="125"/><text x="15.5089%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (124 samples, 0.03%)</title><rect x="15.2591%" y="869" width="0.0260%" height="15" fill="rgb(227,106,25)" fg:x="72747" fg:w="124"/><text x="15.5091%" y="879.50"></text></g><g><title>alloc::fmt::format (61 samples, 0.01%)</title><rect x="15.2916%" y="565" width="0.0128%" height="15" fill="rgb(230,65,29)" fg:x="72902" fg:w="61"/><text x="15.5416%" y="575.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (166 samples, 0.03%)</title><rect x="15.2916%" y="597" width="0.0348%" height="15" fill="rgb(221,57,46)" fg:x="72902" fg:w="166"/><text x="15.5416%" y="607.50"></text></g><g><title>parsed::parser::single::{{closure}} (166 samples, 0.03%)</title><rect x="15.2916%" y="581" width="0.0348%" height="15" fill="rgb(229,161,17)" fg:x="72902" fg:w="166"/><text x="15.5416%" y="591.50"></text></g><g><title>parsed::stream::ByteStream::next (58 samples, 0.01%)</title><rect x="15.3143%" y="565" width="0.0122%" height="15" fill="rgb(222,213,11)" fg:x="73010" fg:w="58"/><text x="15.5643%" y="575.50"></text></g><g><title>start_thread (211 samples, 0.04%)</title><rect x="15.2916%" y="1253" width="0.0443%" height="15" fill="rgb(235,35,13)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1263.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (211 samples, 0.04%)</title><rect x="15.2916%" y="1237" width="0.0443%" height="15" fill="rgb(233,158,34)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (211 samples, 0.04%)</title><rect x="15.2916%" y="1221" width="0.0443%" height="15" fill="rgb(215,151,48)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (211 samples, 0.04%)</title><rect x="15.2916%" y="1205" width="0.0443%" height="15" fill="rgb(229,84,14)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (211 samples, 0.04%)</title><rect x="15.2916%" y="1189" width="0.0443%" height="15" fill="rgb(229,68,14)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1199.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (211 samples, 0.04%)</title><rect x="15.2916%" y="1173" width="0.0443%" height="15" fill="rgb(243,106,26)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (211 samples, 0.04%)</title><rect x="15.2916%" y="1157" width="0.0443%" height="15" fill="rgb(206,45,38)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1167.50"></text></g><g><title>std::panicking::try (211 samples, 0.04%)</title><rect x="15.2916%" y="1141" width="0.0443%" height="15" fill="rgb(226,6,15)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (211 samples, 0.04%)</title><rect x="15.2916%" y="1125" width="0.0443%" height="15" fill="rgb(232,22,54)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (211 samples, 0.04%)</title><rect x="15.2916%" y="1109" width="0.0443%" height="15" fill="rgb(229,222,32)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (211 samples, 0.04%)</title><rect x="15.2916%" y="1093" width="0.0443%" height="15" fill="rgb(228,62,29)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1103.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (211 samples, 0.04%)</title><rect x="15.2916%" y="1077" width="0.0443%" height="15" fill="rgb(251,103,34)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1087.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (211 samples, 0.04%)</title><rect x="15.2916%" y="1061" width="0.0443%" height="15" fill="rgb(233,12,30)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (211 samples, 0.04%)</title><rect x="15.2916%" y="1045" width="0.0443%" height="15" fill="rgb(238,52,0)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1055.50"></text></g><g><title>std::panicking::try (211 samples, 0.04%)</title><rect x="15.2916%" y="1029" width="0.0443%" height="15" fill="rgb(223,98,5)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (211 samples, 0.04%)</title><rect x="15.2916%" y="1013" width="0.0443%" height="15" fill="rgb(228,75,37)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (211 samples, 0.04%)</title><rect x="15.2916%" y="997" width="0.0443%" height="15" fill="rgb(205,115,49)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="1007.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (211 samples, 0.04%)</title><rect x="15.2916%" y="981" width="0.0443%" height="15" fill="rgb(250,154,43)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (211 samples, 0.04%)</title><rect x="15.2916%" y="965" width="0.0443%" height="15" fill="rgb(226,43,29)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="975.50"></text></g><g><title>uppercut::core::worker_loop (211 samples, 0.04%)</title><rect x="15.2916%" y="949" width="0.0443%" height="15" fill="rgb(249,228,39)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="959.50"></text></g><g><title>std::panic::catch_unwind (211 samples, 0.04%)</title><rect x="15.2916%" y="933" width="0.0443%" height="15" fill="rgb(216,79,43)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="943.50"></text></g><g><title>std::panicking::try (211 samples, 0.04%)</title><rect x="15.2916%" y="917" width="0.0443%" height="15" fill="rgb(228,95,12)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="927.50"></text></g><g><title>std::panicking::try::do_call (211 samples, 0.04%)</title><rect x="15.2916%" y="901" width="0.0443%" height="15" fill="rgb(249,221,15)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (211 samples, 0.04%)</title><rect x="15.2916%" y="885" width="0.0443%" height="15" fill="rgb(233,34,13)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="895.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (211 samples, 0.04%)</title><rect x="15.2916%" y="869" width="0.0443%" height="15" fill="rgb(214,103,39)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="879.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (211 samples, 0.04%)</title><rect x="15.2916%" y="853" width="0.0443%" height="15" fill="rgb(251,126,39)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="863.50"></text></g><g><title>uppercut_mio_server::protocol::process (211 samples, 0.04%)</title><rect x="15.2916%" y="837" width="0.0443%" height="15" fill="rgb(214,216,36)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="847.50"></text></g><g><title>parsed::http::parse_http_request (211 samples, 0.04%)</title><rect x="15.2916%" y="821" width="0.0443%" height="15" fill="rgb(220,221,8)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="831.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (211 samples, 0.04%)</title><rect x="15.2916%" y="805" width="0.0443%" height="15" fill="rgb(240,216,3)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="815.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (211 samples, 0.04%)</title><rect x="15.2916%" y="789" width="0.0443%" height="15" fill="rgb(232,218,17)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="799.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (211 samples, 0.04%)</title><rect x="15.2916%" y="773" width="0.0443%" height="15" fill="rgb(229,163,45)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="783.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (211 samples, 0.04%)</title><rect x="15.2916%" y="757" width="0.0443%" height="15" fill="rgb(231,110,42)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="767.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (211 samples, 0.04%)</title><rect x="15.2916%" y="741" width="0.0443%" height="15" fill="rgb(208,170,48)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="751.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (211 samples, 0.04%)</title><rect x="15.2916%" y="725" width="0.0443%" height="15" fill="rgb(239,116,25)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="735.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (211 samples, 0.04%)</title><rect x="15.2916%" y="709" width="0.0443%" height="15" fill="rgb(219,200,50)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="719.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (211 samples, 0.04%)</title><rect x="15.2916%" y="693" width="0.0443%" height="15" fill="rgb(245,200,0)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="703.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (211 samples, 0.04%)</title><rect x="15.2916%" y="677" width="0.0443%" height="15" fill="rgb(245,119,33)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="687.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (211 samples, 0.04%)</title><rect x="15.2916%" y="661" width="0.0443%" height="15" fill="rgb(231,125,12)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="671.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (211 samples, 0.04%)</title><rect x="15.2916%" y="645" width="0.0443%" height="15" fill="rgb(216,96,41)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="655.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (211 samples, 0.04%)</title><rect x="15.2916%" y="629" width="0.0443%" height="15" fill="rgb(248,43,45)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (211 samples, 0.04%)</title><rect x="15.2916%" y="613" width="0.0443%" height="15" fill="rgb(217,222,7)" fg:x="72902" fg:w="211"/><text x="15.5416%" y="623.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (80 samples, 0.02%)</title><rect x="15.3359%" y="613" width="0.0168%" height="15" fill="rgb(233,28,6)" fg:x="73113" fg:w="80"/><text x="15.5859%" y="623.50"></text></g><g><title>parsed::parser::single::{{closure}} (80 samples, 0.02%)</title><rect x="15.3359%" y="597" width="0.0168%" height="15" fill="rgb(231,218,15)" fg:x="73113" fg:w="80"/><text x="15.5859%" y="607.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (64 samples, 0.01%)</title><rect x="15.3393%" y="581" width="0.0134%" height="15" fill="rgb(226,171,48)" fg:x="73129" fg:w="64"/><text x="15.5893%" y="591.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (111 samples, 0.02%)</title><rect x="15.3359%" y="1253" width="0.0233%" height="15" fill="rgb(235,201,9)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (111 samples, 0.02%)</title><rect x="15.3359%" y="1237" width="0.0233%" height="15" fill="rgb(217,80,15)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (111 samples, 0.02%)</title><rect x="15.3359%" y="1221" width="0.0233%" height="15" fill="rgb(219,152,8)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (111 samples, 0.02%)</title><rect x="15.3359%" y="1205" width="0.0233%" height="15" fill="rgb(243,107,38)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1215.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (111 samples, 0.02%)</title><rect x="15.3359%" y="1189" width="0.0233%" height="15" fill="rgb(231,17,5)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (111 samples, 0.02%)</title><rect x="15.3359%" y="1173" width="0.0233%" height="15" fill="rgb(209,25,54)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1183.50"></text></g><g><title>std::panicking::try (111 samples, 0.02%)</title><rect x="15.3359%" y="1157" width="0.0233%" height="15" fill="rgb(219,0,2)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (111 samples, 0.02%)</title><rect x="15.3359%" y="1141" width="0.0233%" height="15" fill="rgb(246,9,5)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (111 samples, 0.02%)</title><rect x="15.3359%" y="1125" width="0.0233%" height="15" fill="rgb(226,159,4)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (111 samples, 0.02%)</title><rect x="15.3359%" y="1109" width="0.0233%" height="15" fill="rgb(219,175,34)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (111 samples, 0.02%)</title><rect x="15.3359%" y="1093" width="0.0233%" height="15" fill="rgb(236,10,46)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1103.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (111 samples, 0.02%)</title><rect x="15.3359%" y="1077" width="0.0233%" height="15" fill="rgb(240,211,16)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (111 samples, 0.02%)</title><rect x="15.3359%" y="1061" width="0.0233%" height="15" fill="rgb(205,3,43)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1071.50"></text></g><g><title>std::panicking::try (111 samples, 0.02%)</title><rect x="15.3359%" y="1045" width="0.0233%" height="15" fill="rgb(245,7,22)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (111 samples, 0.02%)</title><rect x="15.3359%" y="1029" width="0.0233%" height="15" fill="rgb(239,132,32)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (111 samples, 0.02%)</title><rect x="15.3359%" y="1013" width="0.0233%" height="15" fill="rgb(228,202,34)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1023.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (111 samples, 0.02%)</title><rect x="15.3359%" y="997" width="0.0233%" height="15" fill="rgb(254,200,22)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (111 samples, 0.02%)</title><rect x="15.3359%" y="981" width="0.0233%" height="15" fill="rgb(219,10,39)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="991.50"></text></g><g><title>uppercut::core::worker_loop (111 samples, 0.02%)</title><rect x="15.3359%" y="965" width="0.0233%" height="15" fill="rgb(226,210,39)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="975.50"></text></g><g><title>std::panic::catch_unwind (111 samples, 0.02%)</title><rect x="15.3359%" y="949" width="0.0233%" height="15" fill="rgb(208,219,16)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="959.50"></text></g><g><title>std::panicking::try (111 samples, 0.02%)</title><rect x="15.3359%" y="933" width="0.0233%" height="15" fill="rgb(216,158,51)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="943.50"></text></g><g><title>std::panicking::try::do_call (111 samples, 0.02%)</title><rect x="15.3359%" y="917" width="0.0233%" height="15" fill="rgb(233,14,44)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (111 samples, 0.02%)</title><rect x="15.3359%" y="901" width="0.0233%" height="15" fill="rgb(237,97,39)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="911.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (111 samples, 0.02%)</title><rect x="15.3359%" y="885" width="0.0233%" height="15" fill="rgb(218,198,43)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="895.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (111 samples, 0.02%)</title><rect x="15.3359%" y="869" width="0.0233%" height="15" fill="rgb(231,104,20)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="879.50"></text></g><g><title>uppercut_mio_server::protocol::process (111 samples, 0.02%)</title><rect x="15.3359%" y="853" width="0.0233%" height="15" fill="rgb(254,36,13)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="863.50"></text></g><g><title>parsed::http::parse_http_request (111 samples, 0.02%)</title><rect x="15.3359%" y="837" width="0.0233%" height="15" fill="rgb(248,14,50)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="847.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (111 samples, 0.02%)</title><rect x="15.3359%" y="821" width="0.0233%" height="15" fill="rgb(217,107,29)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="831.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (111 samples, 0.02%)</title><rect x="15.3359%" y="805" width="0.0233%" height="15" fill="rgb(251,169,33)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="815.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (111 samples, 0.02%)</title><rect x="15.3359%" y="789" width="0.0233%" height="15" fill="rgb(217,108,32)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="799.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (111 samples, 0.02%)</title><rect x="15.3359%" y="773" width="0.0233%" height="15" fill="rgb(219,66,42)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="783.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (111 samples, 0.02%)</title><rect x="15.3359%" y="757" width="0.0233%" height="15" fill="rgb(206,180,7)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="767.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (111 samples, 0.02%)</title><rect x="15.3359%" y="741" width="0.0233%" height="15" fill="rgb(208,226,31)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="751.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (111 samples, 0.02%)</title><rect x="15.3359%" y="725" width="0.0233%" height="15" fill="rgb(218,26,49)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="735.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (111 samples, 0.02%)</title><rect x="15.3359%" y="709" width="0.0233%" height="15" fill="rgb(233,197,48)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="719.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (111 samples, 0.02%)</title><rect x="15.3359%" y="693" width="0.0233%" height="15" fill="rgb(252,181,51)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="703.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (111 samples, 0.02%)</title><rect x="15.3359%" y="677" width="0.0233%" height="15" fill="rgb(253,90,19)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="687.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (111 samples, 0.02%)</title><rect x="15.3359%" y="661" width="0.0233%" height="15" fill="rgb(215,171,30)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="671.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (111 samples, 0.02%)</title><rect x="15.3359%" y="645" width="0.0233%" height="15" fill="rgb(214,222,9)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="655.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (111 samples, 0.02%)</title><rect x="15.3359%" y="629" width="0.0233%" height="15" fill="rgb(223,3,22)" fg:x="73113" fg:w="111"/><text x="15.5859%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (48 samples, 0.01%)</title><rect x="15.3619%" y="677" width="0.0101%" height="15" fill="rgb(225,196,46)" fg:x="73237" fg:w="48"/><text x="15.6119%" y="687.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (136 samples, 0.03%)</title><rect x="15.3592%" y="773" width="0.0285%" height="15" fill="rgb(209,110,37)" fg:x="73224" fg:w="136"/><text x="15.6092%" y="783.50"></text></g><g><title>parsed::parser::single::{{closure}} (136 samples, 0.03%)</title><rect x="15.3592%" y="757" width="0.0285%" height="15" fill="rgb(249,89,12)" fg:x="73224" fg:w="136"/><text x="15.6092%" y="767.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (136 samples, 0.03%)</title><rect x="15.3592%" y="741" width="0.0285%" height="15" fill="rgb(226,27,33)" fg:x="73224" fg:w="136"/><text x="15.6092%" y="751.50"></text></g><g><title>alloc::fmt::format (136 samples, 0.03%)</title><rect x="15.3592%" y="725" width="0.0285%" height="15" fill="rgb(213,82,22)" fg:x="73224" fg:w="136"/><text x="15.6092%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (136 samples, 0.03%)</title><rect x="15.3592%" y="709" width="0.0285%" height="15" fill="rgb(248,140,0)" fg:x="73224" fg:w="136"/><text x="15.6092%" y="719.50"></text></g><g><title>core::fmt::write (136 samples, 0.03%)</title><rect x="15.3592%" y="693" width="0.0285%" height="15" fill="rgb(228,106,3)" fg:x="73224" fg:w="136"/><text x="15.6092%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (162 samples, 0.03%)</title><rect x="15.3592%" y="1253" width="0.0340%" height="15" fill="rgb(209,23,37)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1263.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (162 samples, 0.03%)</title><rect x="15.3592%" y="1237" width="0.0340%" height="15" fill="rgb(241,93,50)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (162 samples, 0.03%)</title><rect x="15.3592%" y="1221" width="0.0340%" height="15" fill="rgb(253,46,43)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1231.50"></text></g><g><title>std::panicking::try (162 samples, 0.03%)</title><rect x="15.3592%" y="1205" width="0.0340%" height="15" fill="rgb(226,206,43)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (162 samples, 0.03%)</title><rect x="15.3592%" y="1189" width="0.0340%" height="15" fill="rgb(217,54,7)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (162 samples, 0.03%)</title><rect x="15.3592%" y="1173" width="0.0340%" height="15" fill="rgb(223,5,52)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1183.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (162 samples, 0.03%)</title><rect x="15.3592%" y="1157" width="0.0340%" height="15" fill="rgb(206,52,46)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (162 samples, 0.03%)</title><rect x="15.3592%" y="1141" width="0.0340%" height="15" fill="rgb(253,136,11)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1151.50"></text></g><g><title>uppercut::core::worker_loop (162 samples, 0.03%)</title><rect x="15.3592%" y="1125" width="0.0340%" height="15" fill="rgb(208,106,33)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (162 samples, 0.03%)</title><rect x="15.3592%" y="1109" width="0.0340%" height="15" fill="rgb(206,54,4)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1119.50"></text></g><g><title>std::panicking::try (162 samples, 0.03%)</title><rect x="15.3592%" y="1093" width="0.0340%" height="15" fill="rgb(213,3,15)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (162 samples, 0.03%)</title><rect x="15.3592%" y="1077" width="0.0340%" height="15" fill="rgb(252,211,39)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (162 samples, 0.03%)</title><rect x="15.3592%" y="1061" width="0.0340%" height="15" fill="rgb(223,6,36)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1071.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (162 samples, 0.03%)</title><rect x="15.3592%" y="1045" width="0.0340%" height="15" fill="rgb(252,169,45)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1055.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (162 samples, 0.03%)</title><rect x="15.3592%" y="1029" width="0.0340%" height="15" fill="rgb(212,48,26)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1039.50"></text></g><g><title>uppercut_mio_server::protocol::process (162 samples, 0.03%)</title><rect x="15.3592%" y="1013" width="0.0340%" height="15" fill="rgb(251,102,48)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1023.50"></text></g><g><title>parsed::http::parse_http_request (162 samples, 0.03%)</title><rect x="15.3592%" y="997" width="0.0340%" height="15" fill="rgb(243,208,16)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="1007.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (162 samples, 0.03%)</title><rect x="15.3592%" y="981" width="0.0340%" height="15" fill="rgb(219,96,24)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="991.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (162 samples, 0.03%)</title><rect x="15.3592%" y="965" width="0.0340%" height="15" fill="rgb(219,33,29)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (162 samples, 0.03%)</title><rect x="15.3592%" y="949" width="0.0340%" height="15" fill="rgb(223,176,5)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="959.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (162 samples, 0.03%)</title><rect x="15.3592%" y="933" width="0.0340%" height="15" fill="rgb(228,140,14)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="943.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (162 samples, 0.03%)</title><rect x="15.3592%" y="917" width="0.0340%" height="15" fill="rgb(217,179,31)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="927.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (162 samples, 0.03%)</title><rect x="15.3592%" y="901" width="0.0340%" height="15" fill="rgb(230,9,30)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="911.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (162 samples, 0.03%)</title><rect x="15.3592%" y="885" width="0.0340%" height="15" fill="rgb(230,136,20)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="895.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (162 samples, 0.03%)</title><rect x="15.3592%" y="869" width="0.0340%" height="15" fill="rgb(215,210,22)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="879.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (162 samples, 0.03%)</title><rect x="15.3592%" y="853" width="0.0340%" height="15" fill="rgb(218,43,5)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="863.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (162 samples, 0.03%)</title><rect x="15.3592%" y="837" width="0.0340%" height="15" fill="rgb(216,11,5)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="847.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (162 samples, 0.03%)</title><rect x="15.3592%" y="821" width="0.0340%" height="15" fill="rgb(209,82,29)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="831.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (162 samples, 0.03%)</title><rect x="15.3592%" y="805" width="0.0340%" height="15" fill="rgb(244,115,12)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="815.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (162 samples, 0.03%)</title><rect x="15.3592%" y="789" width="0.0340%" height="15" fill="rgb(222,82,18)" fg:x="73224" fg:w="162"/><text x="15.6092%" y="799.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (98 samples, 0.02%)</title><rect x="15.4269%" y="773" width="0.0206%" height="15" fill="rgb(249,227,8)" fg:x="73547" fg:w="98"/><text x="15.6769%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (92 samples, 0.02%)</title><rect x="15.4282%" y="757" width="0.0193%" height="15" fill="rgb(253,141,45)" fg:x="73553" fg:w="92"/><text x="15.6782%" y="767.50"></text></g><g><title>alloc::fmt::format (177 samples, 0.04%)</title><rect x="15.4118%" y="821" width="0.0371%" height="15" fill="rgb(234,184,4)" fg:x="73475" fg:w="177"/><text x="15.6618%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (152 samples, 0.03%)</title><rect x="15.4171%" y="805" width="0.0319%" height="15" fill="rgb(218,194,23)" fg:x="73500" fg:w="152"/><text x="15.6671%" y="815.50"></text></g><g><title>core::fmt::write (150 samples, 0.03%)</title><rect x="15.4175%" y="789" width="0.0315%" height="15" fill="rgb(235,66,41)" fg:x="73502" fg:w="150"/><text x="15.6675%" y="799.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (185 samples, 0.04%)</title><rect x="15.4108%" y="837" width="0.0388%" height="15" fill="rgb(245,217,1)" fg:x="73470" fg:w="185"/><text x="15.6608%" y="847.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (251 samples, 0.05%)</title><rect x="15.3982%" y="869" width="0.0526%" height="15" fill="rgb(229,91,1)" fg:x="73410" fg:w="251"/><text x="15.6482%" y="879.50"></text></g><g><title>parsed::parser::before::{{closure}} (248 samples, 0.05%)</title><rect x="15.3988%" y="853" width="0.0520%" height="15" fill="rgb(207,101,30)" fg:x="73413" fg:w="248"/><text x="15.6488%" y="863.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (49 samples, 0.01%)</title><rect x="15.4534%" y="869" width="0.0103%" height="15" fill="rgb(223,82,49)" fg:x="73673" fg:w="49"/><text x="15.7034%" y="879.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (336 samples, 0.07%)</title><rect x="15.3957%" y="885" width="0.0705%" height="15" fill="rgb(218,167,17)" fg:x="73398" fg:w="336"/><text x="15.6457%" y="895.50"></text></g><g><title>uppercut::core::worker_loop (350 samples, 0.07%)</title><rect x="15.3932%" y="1253" width="0.0734%" height="15" fill="rgb(208,103,14)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (350 samples, 0.07%)</title><rect x="15.3932%" y="1237" width="0.0734%" height="15" fill="rgb(238,20,8)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1247.50"></text></g><g><title>std::panicking::try (350 samples, 0.07%)</title><rect x="15.3932%" y="1221" width="0.0734%" height="15" fill="rgb(218,80,54)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (350 samples, 0.07%)</title><rect x="15.3932%" y="1205" width="0.0734%" height="15" fill="rgb(240,144,17)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1215.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (350 samples, 0.07%)</title><rect x="15.3932%" y="1189" width="0.0734%" height="15" fill="rgb(245,27,50)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1199.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (350 samples, 0.07%)</title><rect x="15.3932%" y="1173" width="0.0734%" height="15" fill="rgb(251,51,7)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1183.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (350 samples, 0.07%)</title><rect x="15.3932%" y="1157" width="0.0734%" height="15" fill="rgb(245,217,29)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1167.50"></text></g><g><title>uppercut_mio_server::protocol::process (350 samples, 0.07%)</title><rect x="15.3932%" y="1141" width="0.0734%" height="15" fill="rgb(221,176,29)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1151.50"></text></g><g><title>parsed::http::parse_http_request (350 samples, 0.07%)</title><rect x="15.3932%" y="1125" width="0.0734%" height="15" fill="rgb(212,180,24)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1135.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (350 samples, 0.07%)</title><rect x="15.3932%" y="1109" width="0.0734%" height="15" fill="rgb(254,24,2)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1119.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (350 samples, 0.07%)</title><rect x="15.3932%" y="1093" width="0.0734%" height="15" fill="rgb(230,100,2)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1103.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (350 samples, 0.07%)</title><rect x="15.3932%" y="1077" width="0.0734%" height="15" fill="rgb(219,142,25)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1087.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (350 samples, 0.07%)</title><rect x="15.3932%" y="1061" width="0.0734%" height="15" fill="rgb(240,73,43)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1071.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (350 samples, 0.07%)</title><rect x="15.3932%" y="1045" width="0.0734%" height="15" fill="rgb(214,114,15)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1055.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (350 samples, 0.07%)</title><rect x="15.3932%" y="1029" width="0.0734%" height="15" fill="rgb(207,130,4)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1039.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (350 samples, 0.07%)</title><rect x="15.3932%" y="1013" width="0.0734%" height="15" fill="rgb(221,25,40)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1023.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (350 samples, 0.07%)</title><rect x="15.3932%" y="997" width="0.0734%" height="15" fill="rgb(241,184,7)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="1007.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (350 samples, 0.07%)</title><rect x="15.3932%" y="981" width="0.0734%" height="15" fill="rgb(235,159,4)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="991.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (350 samples, 0.07%)</title><rect x="15.3932%" y="965" width="0.0734%" height="15" fill="rgb(214,87,48)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (350 samples, 0.07%)</title><rect x="15.3932%" y="949" width="0.0734%" height="15" fill="rgb(246,198,24)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="959.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (350 samples, 0.07%)</title><rect x="15.3932%" y="933" width="0.0734%" height="15" fill="rgb(209,66,40)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="943.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (350 samples, 0.07%)</title><rect x="15.3932%" y="917" width="0.0734%" height="15" fill="rgb(233,147,39)" fg:x="73386" fg:w="350"/><text x="15.6432%" y="927.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (338 samples, 0.07%)</title><rect x="15.3957%" y="901" width="0.0709%" height="15" fill="rgb(231,145,52)" fg:x="73398" fg:w="338"/><text x="15.6457%" y="911.50"></text></g><g><title>[unknown] (2,012 samples, 0.42%)</title><rect x="15.0529%" y="1269" width="0.4220%" height="15" fill="rgb(206,20,26)" fg:x="71764" fg:w="2012"/><text x="15.3029%" y="1279.50"></text></g><g><title>__libc_malloc (73 samples, 0.02%)</title><rect x="15.6556%" y="757" width="0.0153%" height="15" fill="rgb(238,220,4)" fg:x="74637" fg:w="73"/><text x="15.9056%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (77 samples, 0.02%)</title><rect x="15.6554%" y="853" width="0.0162%" height="15" fill="rgb(252,195,42)" fg:x="74636" fg:w="77"/><text x="15.9054%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (77 samples, 0.02%)</title><rect x="15.6554%" y="837" width="0.0162%" height="15" fill="rgb(209,10,6)" fg:x="74636" fg:w="77"/><text x="15.9054%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (77 samples, 0.02%)</title><rect x="15.6554%" y="821" width="0.0162%" height="15" fill="rgb(229,3,52)" fg:x="74636" fg:w="77"/><text x="15.9054%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 0.02%)</title><rect x="15.6554%" y="805" width="0.0162%" height="15" fill="rgb(253,49,37)" fg:x="74636" fg:w="77"/><text x="15.9054%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77 samples, 0.02%)</title><rect x="15.6554%" y="789" width="0.0162%" height="15" fill="rgb(240,103,49)" fg:x="74636" fg:w="77"/><text x="15.9054%" y="799.50"></text></g><g><title>alloc::alloc::alloc (77 samples, 0.02%)</title><rect x="15.6554%" y="773" width="0.0162%" height="15" fill="rgb(250,182,30)" fg:x="74636" fg:w="77"/><text x="15.9054%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (170 samples, 0.04%)</title><rect x="15.6539%" y="933" width="0.0357%" height="15" fill="rgb(248,8,30)" fg:x="74629" fg:w="170"/><text x="15.9039%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (163 samples, 0.03%)</title><rect x="15.6554%" y="917" width="0.0342%" height="15" fill="rgb(237,120,30)" fg:x="74636" fg:w="163"/><text x="15.9054%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (163 samples, 0.03%)</title><rect x="15.6554%" y="901" width="0.0342%" height="15" fill="rgb(221,146,34)" fg:x="74636" fg:w="163"/><text x="15.9054%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (163 samples, 0.03%)</title><rect x="15.6554%" y="885" width="0.0342%" height="15" fill="rgb(242,55,13)" fg:x="74636" fg:w="163"/><text x="15.9054%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (163 samples, 0.03%)</title><rect x="15.6554%" y="869" width="0.0342%" height="15" fill="rgb(242,112,31)" fg:x="74636" fg:w="163"/><text x="15.9054%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (86 samples, 0.02%)</title><rect x="15.6715%" y="853" width="0.0180%" height="15" fill="rgb(249,192,27)" fg:x="74713" fg:w="86"/><text x="15.9215%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (86 samples, 0.02%)</title><rect x="15.6715%" y="837" width="0.0180%" height="15" fill="rgb(208,204,44)" fg:x="74713" fg:w="86"/><text x="15.9215%" y="847.50"></text></g><g><title>[libc-2.31.so] (84 samples, 0.02%)</title><rect x="15.6719%" y="821" width="0.0176%" height="15" fill="rgb(208,93,54)" fg:x="74715" fg:w="84"/><text x="15.9219%" y="831.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (394 samples, 0.08%)</title><rect x="16.7440%" y="917" width="0.0826%" height="15" fill="rgb(242,1,31)" fg:x="79826" fg:w="394"/><text x="16.9940%" y="927.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::counter (394 samples, 0.08%)</title><rect x="16.7440%" y="901" width="0.0826%" height="15" fill="rgb(241,83,25)" fg:x="79826" fg:w="394"/><text x="16.9940%" y="911.50"></text></g><g><title>&lt;crossbeam_channel::flavors::zero::ZeroToken as core::default::Default&gt;::default (559 samples, 0.12%)</title><rect x="18.2331%" y="885" width="0.1173%" height="15" fill="rgb(205,169,50)" fg:x="86925" fg:w="559"/><text x="18.4831%" y="895.50"></text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (822 samples, 0.17%)</title><rect x="18.1785%" y="901" width="0.1724%" height="15" fill="rgb(239,186,37)" fg:x="86665" fg:w="822"/><text x="18.4285%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (74 samples, 0.02%)</title><rect x="18.3637%" y="885" width="0.0155%" height="15" fill="rgb(205,221,10)" fg:x="87548" fg:w="74"/><text x="18.6137%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_or (74 samples, 0.02%)</title><rect x="18.3637%" y="869" width="0.0155%" height="15" fill="rgb(218,196,15)" fg:x="87548" fg:w="74"/><text x="18.6137%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (239 samples, 0.05%)</title><rect x="18.3524%" y="901" width="0.0501%" height="15" fill="rgb(218,196,35)" fg:x="87494" fg:w="239"/><text x="18.6024%" y="911.50"></text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (106 samples, 0.02%)</title><rect x="18.3803%" y="885" width="0.0222%" height="15" fill="rgb(233,63,24)" fg:x="87627" fg:w="106"/><text x="18.6303%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (658 samples, 0.14%)</title><rect x="20.0401%" y="885" width="0.1380%" height="15" fill="rgb(225,8,4)" fg:x="95540" fg:w="658"/><text x="20.2901%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (658 samples, 0.14%)</title><rect x="20.0401%" y="869" width="0.1380%" height="15" fill="rgb(234,105,35)" fg:x="95540" fg:w="658"/><text x="20.2901%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18,969 samples, 3.98%)</title><rect x="20.1781%" y="885" width="3.9789%" height="15" fill="rgb(236,21,32)" fg:x="96198" fg:w="18969"/><text x="20.4281%" y="895.50">core..</text></g><g><title>core::sync::atomic::atomic_load (18,969 samples, 3.98%)</title><rect x="20.1781%" y="869" width="3.9789%" height="15" fill="rgb(228,109,6)" fg:x="96198" fg:w="18969"/><text x="20.4281%" y="879.50">core..</text></g><g><title>core::sync::atomic::fence (458 samples, 0.10%)</title><rect x="24.1570%" y="885" width="0.0961%" height="15" fill="rgb(229,215,31)" fg:x="115167" fg:w="458"/><text x="24.4070%" y="895.50"></text></g><g><title>core::cmp::Ord::min (72 samples, 0.02%)</title><rect x="24.2575%" y="869" width="0.0151%" height="15" fill="rgb(221,52,54)" fg:x="115646" fg:w="72"/><text x="24.5075%" y="879.50"></text></g><g><title>core::cmp::min_by (72 samples, 0.02%)</title><rect x="24.2575%" y="853" width="0.0151%" height="15" fill="rgb(252,129,43)" fg:x="115646" fg:w="72"/><text x="24.5075%" y="863.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (28,001 samples, 5.87%)</title><rect x="18.4025%" y="901" width="5.8734%" height="15" fill="rgb(248,183,27)" fg:x="87733" fg:w="28001"/><text x="18.6525%" y="911.50">crossbe..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (89 samples, 0.02%)</title><rect x="24.2573%" y="885" width="0.0187%" height="15" fill="rgb(250,0,22)" fg:x="115645" fg:w="89"/><text x="24.5073%" y="895.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (40,895 samples, 8.58%)</title><rect x="15.6982%" y="933" width="8.5780%" height="15" fill="rgb(213,166,10)" fg:x="74840" fg:w="40895"/><text x="15.9482%" y="943.50">crossbeam_ch..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (35,511 samples, 7.45%)</title><rect x="16.8275%" y="917" width="7.4487%" height="15" fill="rgb(207,163,36)" fg:x="80224" fg:w="35511"/><text x="17.0775%" y="927.50">crossbeam_..</text></g><g><title>__libc_malloc (90 samples, 0.02%)</title><rect x="24.3124%" y="805" width="0.0189%" height="15" fill="rgb(208,122,22)" fg:x="115908" fg:w="90"/><text x="24.5624%" y="815.50"></text></g><g><title>[libc-2.31.so] (83 samples, 0.02%)</title><rect x="24.3139%" y="789" width="0.0174%" height="15" fill="rgb(207,104,49)" fg:x="115915" fg:w="83"/><text x="24.5639%" y="799.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.01%)</title><rect x="24.3206%" y="773" width="0.0107%" height="15" fill="rgb(248,211,50)" fg:x="115947" fg:w="51"/><text x="24.5706%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (105 samples, 0.02%)</title><rect x="24.3097%" y="885" width="0.0220%" height="15" fill="rgb(217,13,45)" fg:x="115895" fg:w="105"/><text x="24.5597%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (92 samples, 0.02%)</title><rect x="24.3124%" y="869" width="0.0193%" height="15" fill="rgb(211,216,49)" fg:x="115908" fg:w="92"/><text x="24.5624%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (92 samples, 0.02%)</title><rect x="24.3124%" y="853" width="0.0193%" height="15" fill="rgb(221,58,53)" fg:x="115908" fg:w="92"/><text x="24.5624%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (92 samples, 0.02%)</title><rect x="24.3124%" y="837" width="0.0193%" height="15" fill="rgb(220,112,41)" fg:x="115908" fg:w="92"/><text x="24.5624%" y="847.50"></text></g><g><title>alloc::alloc::alloc (92 samples, 0.02%)</title><rect x="24.3124%" y="821" width="0.0193%" height="15" fill="rgb(236,38,28)" fg:x="115908" fg:w="92"/><text x="24.5624%" y="831.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (274 samples, 0.06%)</title><rect x="24.2839%" y="901" width="0.0575%" height="15" fill="rgb(227,195,22)" fg:x="115772" fg:w="274"/><text x="24.5339%" y="911.50"></text></g><g><title>__sched_yield (384 samples, 0.08%)</title><rect x="24.3728%" y="837" width="0.0805%" height="15" fill="rgb(214,55,33)" fg:x="116196" fg:w="384"/><text x="24.6228%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (236 samples, 0.05%)</title><rect x="24.4039%" y="821" width="0.0495%" height="15" fill="rgb(248,80,13)" fg:x="116344" fg:w="236"/><text x="24.6539%" y="831.50"></text></g><g><title>do_syscall_64 (233 samples, 0.05%)</title><rect x="24.4045%" y="805" width="0.0489%" height="15" fill="rgb(238,52,6)" fg:x="116347" fg:w="233"/><text x="24.6545%" y="815.50"></text></g><g><title>__x64_sys_sched_yield (163 samples, 0.03%)</title><rect x="24.4192%" y="789" width="0.0342%" height="15" fill="rgb(224,198,47)" fg:x="116417" fg:w="163"/><text x="24.6692%" y="799.50"></text></g><g><title>do_sched_yield (162 samples, 0.03%)</title><rect x="24.4194%" y="773" width="0.0340%" height="15" fill="rgb(233,171,20)" fg:x="116418" fg:w="162"/><text x="24.6694%" y="783.50"></text></g><g><title>schedule (137 samples, 0.03%)</title><rect x="24.4246%" y="757" width="0.0287%" height="15" fill="rgb(241,30,25)" fg:x="116443" fg:w="137"/><text x="24.6746%" y="767.50"></text></g><g><title>__schedule (134 samples, 0.03%)</title><rect x="24.4253%" y="741" width="0.0281%" height="15" fill="rgb(207,171,38)" fg:x="116446" fg:w="134"/><text x="24.6753%" y="751.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (492 samples, 0.10%)</title><rect x="24.3621%" y="869" width="0.1032%" height="15" fill="rgb(234,70,1)" fg:x="116145" fg:w="492"/><text x="24.6121%" y="879.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (446 samples, 0.09%)</title><rect x="24.3718%" y="853" width="0.0936%" height="15" fill="rgb(232,178,18)" fg:x="116191" fg:w="446"/><text x="24.6218%" y="863.50"></text></g><g><title>__lock_text_start (224 samples, 0.05%)</title><rect x="24.4970%" y="645" width="0.0470%" height="15" fill="rgb(241,78,40)" fg:x="116788" fg:w="224"/><text x="24.7470%" y="655.50"></text></g><g><title>futex_wake (262 samples, 0.05%)</title><rect x="24.4892%" y="693" width="0.0550%" height="15" fill="rgb(222,35,25)" fg:x="116751" fg:w="262"/><text x="24.7392%" y="703.50"></text></g><g><title>wake_up_q (228 samples, 0.05%)</title><rect x="24.4964%" y="677" width="0.0478%" height="15" fill="rgb(207,92,16)" fg:x="116785" fg:w="228"/><text x="24.7464%" y="687.50"></text></g><g><title>try_to_wake_up (227 samples, 0.05%)</title><rect x="24.4966%" y="661" width="0.0476%" height="15" fill="rgb(216,59,51)" fg:x="116786" fg:w="227"/><text x="24.7466%" y="671.50"></text></g><g><title>do_futex (278 samples, 0.06%)</title><rect x="24.4863%" y="709" width="0.0583%" height="15" fill="rgb(213,80,28)" fg:x="116737" fg:w="278"/><text x="24.7363%" y="719.50"></text></g><g><title>__x64_sys_futex (284 samples, 0.06%)</title><rect x="24.4857%" y="725" width="0.0596%" height="15" fill="rgb(220,93,7)" fg:x="116734" fg:w="284"/><text x="24.7357%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (381 samples, 0.08%)</title><rect x="24.4658%" y="853" width="0.0799%" height="15" fill="rgb(225,24,44)" fg:x="116639" fg:w="381"/><text x="24.7158%" y="863.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (381 samples, 0.08%)</title><rect x="24.4658%" y="837" width="0.0799%" height="15" fill="rgb(243,74,40)" fg:x="116639" fg:w="381"/><text x="24.7158%" y="847.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (350 samples, 0.07%)</title><rect x="24.4723%" y="821" width="0.0734%" height="15" fill="rgb(228,39,7)" fg:x="116670" fg:w="350"/><text x="24.7223%" y="831.50"></text></g><g><title>std::thread::Thread::unpark (350 samples, 0.07%)</title><rect x="24.4723%" y="805" width="0.0734%" height="15" fill="rgb(227,79,8)" fg:x="116670" fg:w="350"/><text x="24.7223%" y="815.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (350 samples, 0.07%)</title><rect x="24.4723%" y="789" width="0.0734%" height="15" fill="rgb(236,58,11)" fg:x="116670" fg:w="350"/><text x="24.7223%" y="799.50"></text></g><g><title>syscall (345 samples, 0.07%)</title><rect x="24.4733%" y="773" width="0.0724%" height="15" fill="rgb(249,63,35)" fg:x="116675" fg:w="345"/><text x="24.7233%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (310 samples, 0.07%)</title><rect x="24.4806%" y="757" width="0.0650%" height="15" fill="rgb(252,114,16)" fg:x="116710" fg:w="310"/><text x="24.7306%" y="767.50"></text></g><g><title>do_syscall_64 (303 samples, 0.06%)</title><rect x="24.4821%" y="741" width="0.0636%" height="15" fill="rgb(254,151,24)" fg:x="116717" fg:w="303"/><text x="24.7321%" y="751.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1,288 samples, 0.27%)</title><rect x="24.2761%" y="933" width="0.2702%" height="15" fill="rgb(253,54,39)" fg:x="115735" fg:w="1288"/><text x="24.5261%" y="943.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1,274 samples, 0.27%)</title><rect x="24.2791%" y="917" width="0.2672%" height="15" fill="rgb(243,25,45)" fg:x="115749" fg:w="1274"/><text x="24.5291%" y="927.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (977 samples, 0.20%)</title><rect x="24.3414%" y="901" width="0.2049%" height="15" fill="rgb(234,134,9)" fg:x="116046" fg:w="977"/><text x="24.5914%" y="911.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (898 samples, 0.19%)</title><rect x="24.3579%" y="885" width="0.1884%" height="15" fill="rgb(227,166,31)" fg:x="116125" fg:w="898"/><text x="24.6079%" y="895.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (384 samples, 0.08%)</title><rect x="24.4658%" y="869" width="0.0805%" height="15" fill="rgb(245,143,41)" fg:x="116639" fg:w="384"/><text x="24.7158%" y="879.50"></text></g><g><title>apparmor_socket_recvmsg (81 samples, 0.02%)</title><rect x="24.7458%" y="613" width="0.0170%" height="15" fill="rgb(238,181,32)" fg:x="117974" fg:w="81"/><text x="24.9958%" y="623.50"></text></g><g><title>kfree_skbmem (128 samples, 0.03%)</title><rect x="24.8108%" y="565" width="0.0268%" height="15" fill="rgb(224,113,18)" fg:x="118284" fg:w="128"/><text x="25.0608%" y="575.50"></text></g><g><title>kmem_cache_free (126 samples, 0.03%)</title><rect x="24.8112%" y="549" width="0.0264%" height="15" fill="rgb(240,229,28)" fg:x="118286" fg:w="126"/><text x="25.0612%" y="559.50"></text></g><g><title>skb_release_data (130 samples, 0.03%)</title><rect x="24.8385%" y="549" width="0.0273%" height="15" fill="rgb(250,185,3)" fg:x="118416" fg:w="130"/><text x="25.0885%" y="559.50"></text></g><g><title>skb_free_head (92 samples, 0.02%)</title><rect x="24.8465%" y="533" width="0.0193%" height="15" fill="rgb(212,59,25)" fg:x="118454" fg:w="92"/><text x="25.0965%" y="543.50"></text></g><g><title>kfree (92 samples, 0.02%)</title><rect x="24.8465%" y="517" width="0.0193%" height="15" fill="rgb(221,87,20)" fg:x="118454" fg:w="92"/><text x="25.0965%" y="527.50"></text></g><g><title>__slab_free (72 samples, 0.02%)</title><rect x="24.8507%" y="501" width="0.0151%" height="15" fill="rgb(213,74,28)" fg:x="118474" fg:w="72"/><text x="25.1007%" y="511.50"></text></g><g><title>skb_release_all (235 samples, 0.05%)</title><rect x="24.8376%" y="565" width="0.0493%" height="15" fill="rgb(224,132,34)" fg:x="118412" fg:w="235"/><text x="25.0876%" y="575.50"></text></g><g><title>sock_rfree (98 samples, 0.02%)</title><rect x="24.8664%" y="549" width="0.0206%" height="15" fill="rgb(222,101,24)" fg:x="118549" fg:w="98"/><text x="25.1164%" y="559.50"></text></g><g><title>__kfree_skb (367 samples, 0.08%)</title><rect x="24.8108%" y="581" width="0.0770%" height="15" fill="rgb(254,142,4)" fg:x="118284" fg:w="367"/><text x="25.0608%" y="591.50"></text></g><g><title>_raw_spin_lock_bh (89 samples, 0.02%)</title><rect x="24.8888%" y="581" width="0.0187%" height="15" fill="rgb(230,229,49)" fg:x="118656" fg:w="89"/><text x="25.1388%" y="591.50"></text></g><g><title>__check_object_size (116 samples, 0.02%)</title><rect x="24.9213%" y="533" width="0.0243%" height="15" fill="rgb(238,70,47)" fg:x="118811" fg:w="116"/><text x="25.1713%" y="543.50"></text></g><g><title>copy_user_generic_unrolled (96 samples, 0.02%)</title><rect x="24.9530%" y="517" width="0.0201%" height="15" fill="rgb(231,160,17)" fg:x="118962" fg:w="96"/><text x="25.2030%" y="527.50"></text></g><g><title>_copy_to_iter (134 samples, 0.03%)</title><rect x="24.9459%" y="533" width="0.0281%" height="15" fill="rgb(218,68,53)" fg:x="118928" fg:w="134"/><text x="25.1959%" y="543.50"></text></g><g><title>skb_copy_datagram_iter (290 samples, 0.06%)</title><rect x="24.9163%" y="581" width="0.0608%" height="15" fill="rgb(236,111,10)" fg:x="118787" fg:w="290"/><text x="25.1663%" y="591.50"></text></g><g><title>__skb_datagram_iter (284 samples, 0.06%)</title><rect x="24.9176%" y="565" width="0.0596%" height="15" fill="rgb(224,34,41)" fg:x="118793" fg:w="284"/><text x="25.1676%" y="575.50"></text></g><g><title>simple_copy_to_iter (268 samples, 0.06%)</title><rect x="24.9209%" y="549" width="0.0562%" height="15" fill="rgb(241,118,19)" fg:x="118809" fg:w="268"/><text x="25.1709%" y="559.50"></text></g><g><title>tcp_cleanup_rbuf (75 samples, 0.02%)</title><rect x="24.9776%" y="581" width="0.0157%" height="15" fill="rgb(238,129,25)" fg:x="119079" fg:w="75"/><text x="25.2276%" y="591.50"></text></g><g><title>kvm_clock_get_cycles (75 samples, 0.02%)</title><rect x="25.0136%" y="533" width="0.0157%" height="15" fill="rgb(238,22,31)" fg:x="119251" fg:w="75"/><text x="25.2636%" y="543.50"></text></g><g><title>pvclock_clocksource_read (66 samples, 0.01%)</title><rect x="25.0155%" y="517" width="0.0138%" height="15" fill="rgb(222,174,48)" fg:x="119260" fg:w="66"/><text x="25.2655%" y="527.50"></text></g><g><title>ktime_get (92 samples, 0.02%)</title><rect x="25.0105%" y="549" width="0.0193%" height="15" fill="rgb(206,152,40)" fg:x="119236" fg:w="92"/><text x="25.2605%" y="559.50"></text></g><g><title>tcp_rcv_space_adjust (198 samples, 0.04%)</title><rect x="24.9954%" y="581" width="0.0415%" height="15" fill="rgb(218,99,54)" fg:x="119164" fg:w="198"/><text x="25.2454%" y="591.50"></text></g><g><title>tcp_mstamp_refresh (137 samples, 0.03%)</title><rect x="25.0082%" y="565" width="0.0287%" height="15" fill="rgb(220,174,26)" fg:x="119225" fg:w="137"/><text x="25.2582%" y="575.50"></text></g><g><title>tcp_recv_timestamp (67 samples, 0.01%)</title><rect x="25.0369%" y="581" width="0.0141%" height="15" fill="rgb(245,116,9)" fg:x="119362" fg:w="67"/><text x="25.2869%" y="591.50"></text></g><g><title>inet_recvmsg (1,402 samples, 0.29%)</title><rect x="24.7628%" y="613" width="0.2941%" height="15" fill="rgb(209,72,35)" fg:x="118055" fg:w="1402"/><text x="25.0128%" y="623.50"></text></g><g><title>tcp_recvmsg (1,371 samples, 0.29%)</title><rect x="24.7693%" y="597" width="0.2876%" height="15" fill="rgb(226,126,21)" fg:x="118086" fg:w="1371"/><text x="25.0193%" y="607.50"></text></g><g><title>sock_recvmsg (1,528 samples, 0.32%)</title><rect x="24.7435%" y="629" width="0.3205%" height="15" fill="rgb(227,192,1)" fg:x="117963" fg:w="1528"/><text x="24.9935%" y="639.50"></text></g><g><title>__fdget (142 samples, 0.03%)</title><rect x="25.0644%" y="613" width="0.0298%" height="15" fill="rgb(237,180,29)" fg:x="119493" fg:w="142"/><text x="25.3144%" y="623.50"></text></g><g><title>__fget_light (139 samples, 0.03%)</title><rect x="25.0650%" y="597" width="0.0292%" height="15" fill="rgb(230,197,35)" fg:x="119496" fg:w="139"/><text x="25.3150%" y="607.50"></text></g><g><title>__fget (138 samples, 0.03%)</title><rect x="25.0652%" y="581" width="0.0289%" height="15" fill="rgb(246,193,31)" fg:x="119497" fg:w="138"/><text x="25.3152%" y="591.50"></text></g><g><title>__sys_recvfrom (1,738 samples, 0.36%)</title><rect x="24.7351%" y="645" width="0.3646%" height="15" fill="rgb(241,36,4)" fg:x="117923" fg:w="1738"/><text x="24.9851%" y="655.50"></text></g><g><title>sockfd_lookup_light (170 samples, 0.04%)</title><rect x="25.0640%" y="629" width="0.0357%" height="15" fill="rgb(241,130,17)" fg:x="119491" fg:w="170"/><text x="25.3140%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2,505 samples, 0.53%)</title><rect x="24.5801%" y="837" width="0.5254%" height="15" fill="rgb(206,137,32)" fg:x="117184" fg:w="2505"/><text x="24.8301%" y="847.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2,500 samples, 0.52%)</title><rect x="24.5811%" y="821" width="0.5244%" height="15" fill="rgb(237,228,51)" fg:x="117189" fg:w="2500"/><text x="24.8311%" y="831.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (2,500 samples, 0.52%)</title><rect x="24.5811%" y="805" width="0.5244%" height="15" fill="rgb(243,6,42)" fg:x="117189" fg:w="2500"/><text x="24.8311%" y="815.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (2,500 samples, 0.52%)</title><rect x="24.5811%" y="789" width="0.5244%" height="15" fill="rgb(251,74,28)" fg:x="117189" fg:w="2500"/><text x="24.8311%" y="799.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2,500 samples, 0.52%)</title><rect x="24.5811%" y="773" width="0.5244%" height="15" fill="rgb(218,20,49)" fg:x="117189" fg:w="2500"/><text x="24.8311%" y="783.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2,498 samples, 0.52%)</title><rect x="24.5815%" y="757" width="0.5240%" height="15" fill="rgb(238,28,14)" fg:x="117191" fg:w="2498"/><text x="24.8315%" y="767.50"></text></g><g><title>std::sys::unix::net::Socket::read (2,498 samples, 0.52%)</title><rect x="24.5815%" y="741" width="0.5240%" height="15" fill="rgb(229,40,46)" fg:x="117191" fg:w="2498"/><text x="24.8315%" y="751.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2,498 samples, 0.52%)</title><rect x="24.5815%" y="725" width="0.5240%" height="15" fill="rgb(244,195,20)" fg:x="117191" fg:w="2498"/><text x="24.8315%" y="735.50"></text></g><g><title>__libc_recv (2,495 samples, 0.52%)</title><rect x="24.5822%" y="709" width="0.5233%" height="15" fill="rgb(253,56,35)" fg:x="117194" fg:w="2495"/><text x="24.8322%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,970 samples, 0.41%)</title><rect x="24.6923%" y="693" width="0.4132%" height="15" fill="rgb(210,149,44)" fg:x="117719" fg:w="1970"/><text x="24.9423%" y="703.50"></text></g><g><title>do_syscall_64 (1,937 samples, 0.41%)</title><rect x="24.6992%" y="677" width="0.4063%" height="15" fill="rgb(240,135,12)" fg:x="117752" fg:w="1937"/><text x="24.9492%" y="687.50"></text></g><g><title>__x64_sys_recvfrom (1,766 samples, 0.37%)</title><rect x="24.7351%" y="661" width="0.3704%" height="15" fill="rgb(251,24,50)" fg:x="117923" fg:w="1766"/><text x="24.9851%" y="671.50"></text></g><g><title>[libc-2.31.so] (111 samples, 0.02%)</title><rect x="25.1200%" y="757" width="0.0233%" height="15" fill="rgb(243,200,47)" fg:x="119758" fg:w="111"/><text x="25.3700%" y="767.50"></text></g><g><title>alloc::alloc::box_free (229 samples, 0.05%)</title><rect x="25.1185%" y="805" width="0.0480%" height="15" fill="rgb(224,166,26)" fg:x="119751" fg:w="229"/><text x="25.3685%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (224 samples, 0.05%)</title><rect x="25.1196%" y="789" width="0.0470%" height="15" fill="rgb(233,0,47)" fg:x="119756" fg:w="224"/><text x="25.3696%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (222 samples, 0.05%)</title><rect x="25.1200%" y="773" width="0.0466%" height="15" fill="rgb(253,80,5)" fg:x="119758" fg:w="222"/><text x="25.3700%" y="783.50"></text></g><g><title>cfree (95 samples, 0.02%)</title><rect x="25.1466%" y="757" width="0.0199%" height="15" fill="rgb(214,133,25)" fg:x="119885" fg:w="95"/><text x="25.3966%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;uppercut::api::Envelope&gt; (257 samples, 0.05%)</title><rect x="25.1152%" y="837" width="0.0539%" height="15" fill="rgb(209,27,14)" fg:x="119735" fg:w="257"/><text x="25.3652%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt; (247 samples, 0.05%)</title><rect x="25.1173%" y="821" width="0.0518%" height="15" fill="rgb(219,102,51)" fg:x="119745" fg:w="247"/><text x="25.3673%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (203 samples, 0.04%)</title><rect x="25.1871%" y="821" width="0.0426%" height="15" fill="rgb(237,18,16)" fg:x="120078" fg:w="203"/><text x="25.4371%" y="831.50"></text></g><g><title>parsed::stream::ByteStream::put (305 samples, 0.06%)</title><rect x="25.1743%" y="837" width="0.0640%" height="15" fill="rgb(241,85,17)" fg:x="120017" fg:w="305"/><text x="25.4243%" y="847.50"></text></g><g><title>copy_user_enhanced_fast_string (102 samples, 0.02%)</title><rect x="25.5433%" y="565" width="0.0214%" height="15" fill="rgb(236,90,42)" fg:x="121776" fg:w="102"/><text x="25.7933%" y="575.50"></text></g><g><title>_copy_from_iter_full (125 samples, 0.03%)</title><rect x="25.5412%" y="581" width="0.0262%" height="15" fill="rgb(249,57,21)" fg:x="121766" fg:w="125"/><text x="25.7912%" y="591.50"></text></g><g><title>sk_page_frag_refill (74 samples, 0.02%)</title><rect x="25.5693%" y="581" width="0.0155%" height="15" fill="rgb(243,12,36)" fg:x="121900" fg:w="74"/><text x="25.8193%" y="591.50"></text></g><g><title>skb_page_frag_refill (72 samples, 0.02%)</title><rect x="25.5697%" y="565" width="0.0151%" height="15" fill="rgb(253,128,47)" fg:x="121902" fg:w="72"/><text x="25.8197%" y="575.50"></text></g><g><title>__kmalloc_node_track_caller (142 samples, 0.03%)</title><rect x="25.6018%" y="533" width="0.0298%" height="15" fill="rgb(207,33,20)" fg:x="122055" fg:w="142"/><text x="25.8518%" y="543.50"></text></g><g><title>memset_erms (68 samples, 0.01%)</title><rect x="25.6372%" y="533" width="0.0143%" height="15" fill="rgb(233,215,35)" fg:x="122224" fg:w="68"/><text x="25.8872%" y="543.50"></text></g><g><title>__kmalloc_reserve.isra.0 (246 samples, 0.05%)</title><rect x="25.6003%" y="549" width="0.0516%" height="15" fill="rgb(249,188,52)" fg:x="122048" fg:w="246"/><text x="25.8503%" y="559.50"></text></g><g><title>kmem_cache_alloc_node (102 samples, 0.02%)</title><rect x="25.6536%" y="549" width="0.0214%" height="15" fill="rgb(225,12,32)" fg:x="122302" fg:w="102"/><text x="25.9036%" y="559.50"></text></g><g><title>ksize (76 samples, 0.02%)</title><rect x="25.6750%" y="549" width="0.0159%" height="15" fill="rgb(247,98,14)" fg:x="122404" fg:w="76"/><text x="25.9250%" y="559.50"></text></g><g><title>__ksize (76 samples, 0.02%)</title><rect x="25.6750%" y="533" width="0.0159%" height="15" fill="rgb(247,219,48)" fg:x="122404" fg:w="76"/><text x="25.9250%" y="543.50"></text></g><g><title>__alloc_skb (529 samples, 0.11%)</title><rect x="25.5869%" y="565" width="0.1110%" height="15" fill="rgb(253,60,48)" fg:x="121984" fg:w="529"/><text x="25.8369%" y="575.50"></text></g><g><title>sk_stream_alloc_skb (555 samples, 0.12%)</title><rect x="25.5848%" y="581" width="0.1164%" height="15" fill="rgb(245,15,52)" fg:x="121974" fg:w="555"/><text x="25.8348%" y="591.50"></text></g><g><title>skb_entail (96 samples, 0.02%)</title><rect x="25.7012%" y="581" width="0.0201%" height="15" fill="rgb(220,133,28)" fg:x="122529" fg:w="96"/><text x="25.9512%" y="591.50"></text></g><g><title>__ip_local_out (53 samples, 0.01%)</title><rect x="25.8132%" y="469" width="0.0111%" height="15" fill="rgb(217,180,4)" fg:x="123063" fg:w="53"/><text x="26.0632%" y="479.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (61 samples, 0.01%)</title><rect x="25.8357%" y="437" width="0.0128%" height="15" fill="rgb(251,24,1)" fg:x="123170" fg:w="61"/><text x="26.0857%" y="447.50"></text></g><g><title>dequeue_func (48 samples, 0.01%)</title><rect x="25.9414%" y="325" width="0.0101%" height="15" fill="rgb(212,185,49)" fg:x="123674" fg:w="48"/><text x="26.1914%" y="335.50"></text></g><g><title>codel_dequeue.constprop.0 (103 samples, 0.02%)</title><rect x="25.9387%" y="341" width="0.0216%" height="15" fill="rgb(215,175,22)" fg:x="123661" fg:w="103"/><text x="26.1887%" y="351.50"></text></g><g><title>fq_codel_dequeue (274 samples, 0.06%)</title><rect x="25.9030%" y="357" width="0.0575%" height="15" fill="rgb(250,205,14)" fg:x="123491" fg:w="274"/><text x="26.1530%" y="367.50"></text></g><g><title>free_old_xmit_skbs (86 samples, 0.02%)</title><rect x="25.9768%" y="309" width="0.0180%" height="15" fill="rgb(225,211,22)" fg:x="123843" fg:w="86"/><text x="26.2268%" y="319.50"></text></g><g><title>virtqueue_get_buf (49 samples, 0.01%)</title><rect x="25.9846%" y="293" width="0.0103%" height="15" fill="rgb(251,179,42)" fg:x="123880" fg:w="49"/><text x="26.2346%" y="303.50"></text></g><g><title>virtqueue_get_buf_ctx (49 samples, 0.01%)</title><rect x="25.9846%" y="277" width="0.0103%" height="15" fill="rgb(208,216,51)" fg:x="123880" fg:w="49"/><text x="26.2346%" y="287.50"></text></g><g><title>virtqueue_add_outbuf (100 samples, 0.02%)</title><rect x="26.0018%" y="309" width="0.0210%" height="15" fill="rgb(235,36,11)" fg:x="123962" fg:w="100"/><text x="26.2518%" y="319.50"></text></g><g><title>iowrite16 (294 samples, 0.06%)</title><rect x="26.0316%" y="293" width="0.0617%" height="15" fill="rgb(213,189,28)" fg:x="124104" fg:w="294"/><text x="26.2816%" y="303.50"></text></g><g><title>virtqueue_notify (296 samples, 0.06%)</title><rect x="26.0316%" y="309" width="0.0621%" height="15" fill="rgb(227,203,42)" fg:x="124104" fg:w="296"/><text x="26.2816%" y="319.50"></text></g><g><title>start_xmit (584 samples, 0.12%)</title><rect x="25.9720%" y="325" width="0.1225%" height="15" fill="rgb(244,72,36)" fg:x="123820" fg:w="584"/><text x="26.2220%" y="335.50"></text></g><g><title>dev_hard_start_xmit (600 samples, 0.13%)</title><rect x="25.9695%" y="341" width="0.1259%" height="15" fill="rgb(213,53,17)" fg:x="123808" fg:w="600"/><text x="26.2195%" y="351.50"></text></g><g><title>__qdisc_run (1,040 samples, 0.22%)</title><rect x="25.8938%" y="373" width="0.2181%" height="15" fill="rgb(207,167,3)" fg:x="123447" fg:w="1040"/><text x="26.1438%" y="383.50"></text></g><g><title>sch_direct_xmit (722 samples, 0.15%)</title><rect x="25.9605%" y="357" width="0.1514%" height="15" fill="rgb(216,98,30)" fg:x="123765" fg:w="722"/><text x="26.2105%" y="367.50"></text></g><g><title>validate_xmit_skb_list (77 samples, 0.02%)</title><rect x="26.0958%" y="341" width="0.0162%" height="15" fill="rgb(236,123,15)" fg:x="124410" fg:w="77"/><text x="26.3458%" y="351.50"></text></g><g><title>validate_xmit_skb (73 samples, 0.02%)</title><rect x="26.0966%" y="325" width="0.0153%" height="15" fill="rgb(248,81,50)" fg:x="124414" fg:w="73"/><text x="26.3466%" y="335.50"></text></g><g><title>_raw_spin_lock (167 samples, 0.04%)</title><rect x="26.1119%" y="373" width="0.0350%" height="15" fill="rgb(214,120,4)" fg:x="124487" fg:w="167"/><text x="26.3619%" y="383.50"></text></g><g><title>native_queued_spin_lock_slowpath (92 samples, 0.02%)</title><rect x="26.1276%" y="357" width="0.0193%" height="15" fill="rgb(208,179,34)" fg:x="124562" fg:w="92"/><text x="26.3776%" y="367.50"></text></g><g><title>fq_codel_enqueue (97 samples, 0.02%)</title><rect x="26.1511%" y="373" width="0.0203%" height="15" fill="rgb(227,140,7)" fg:x="124674" fg:w="97"/><text x="26.4011%" y="383.50"></text></g><g><title>napi_consume_skb (62 samples, 0.01%)</title><rect x="26.2097%" y="309" width="0.0130%" height="15" fill="rgb(214,22,6)" fg:x="124953" fg:w="62"/><text x="26.4597%" y="319.50"></text></g><g><title>__dev_kfree_skb_any (62 samples, 0.01%)</title><rect x="26.2097%" y="293" width="0.0130%" height="15" fill="rgb(207,137,27)" fg:x="124953" fg:w="62"/><text x="26.4597%" y="303.50"></text></g><g><title>consume_skb (61 samples, 0.01%)</title><rect x="26.2099%" y="277" width="0.0128%" height="15" fill="rgb(210,8,46)" fg:x="124954" fg:w="61"/><text x="26.4599%" y="287.50"></text></g><g><title>skb_release_all (52 samples, 0.01%)</title><rect x="26.2118%" y="261" width="0.0109%" height="15" fill="rgb(240,16,54)" fg:x="124963" fg:w="52"/><text x="26.4618%" y="271.50"></text></g><g><title>virtqueue_get_buf (121 samples, 0.03%)</title><rect x="26.2227%" y="309" width="0.0254%" height="15" fill="rgb(211,209,29)" fg:x="125015" fg:w="121"/><text x="26.4727%" y="319.50"></text></g><g><title>virtqueue_get_buf_ctx (120 samples, 0.03%)</title><rect x="26.2229%" y="293" width="0.0252%" height="15" fill="rgb(226,228,24)" fg:x="125016" fg:w="120"/><text x="26.4729%" y="303.50"></text></g><g><title>free_old_xmit_skbs (211 samples, 0.04%)</title><rect x="26.2040%" y="325" width="0.0443%" height="15" fill="rgb(222,84,9)" fg:x="124926" fg:w="211"/><text x="26.4540%" y="335.50"></text></g><g><title>virtqueue_add_outbuf (121 samples, 0.03%)</title><rect x="26.2548%" y="325" width="0.0254%" height="15" fill="rgb(234,203,30)" fg:x="125168" fg:w="121"/><text x="26.5048%" y="335.50"></text></g><g><title>kmalloc_array (50 samples, 0.01%)</title><rect x="26.2697%" y="309" width="0.0105%" height="15" fill="rgb(238,109,14)" fg:x="125239" fg:w="50"/><text x="26.5197%" y="319.50"></text></g><g><title>iowrite16 (1,838 samples, 0.39%)</title><rect x="26.2940%" y="309" width="0.3855%" height="15" fill="rgb(233,206,34)" fg:x="125355" fg:w="1838"/><text x="26.5440%" y="319.50"></text></g><g><title>virtqueue_notify (1,866 samples, 0.39%)</title><rect x="26.2925%" y="325" width="0.3914%" height="15" fill="rgb(220,167,47)" fg:x="125348" fg:w="1866"/><text x="26.5425%" y="335.50"></text></g><g><title>start_xmit (2,366 samples, 0.50%)</title><rect x="26.1908%" y="341" width="0.4963%" height="15" fill="rgb(238,105,10)" fg:x="124863" fg:w="2366"/><text x="26.4408%" y="351.50"></text></g><g><title>dev_hard_start_xmit (2,389 samples, 0.50%)</title><rect x="26.1868%" y="357" width="0.5011%" height="15" fill="rgb(213,227,17)" fg:x="124844" fg:w="2389"/><text x="26.4368%" y="367.50"></text></g><g><title>validate_xmit_skb (71 samples, 0.01%)</title><rect x="26.6932%" y="341" width="0.0149%" height="15" fill="rgb(217,132,38)" fg:x="127258" fg:w="71"/><text x="26.9432%" y="351.50"></text></g><g><title>sch_direct_xmit (2,550 samples, 0.53%)</title><rect x="26.1744%" y="373" width="0.5349%" height="15" fill="rgb(242,146,4)" fg:x="124785" fg:w="2550"/><text x="26.4244%" y="383.50"></text></g><g><title>validate_xmit_skb_list (86 samples, 0.02%)</title><rect x="26.6913%" y="357" width="0.0180%" height="15" fill="rgb(212,61,9)" fg:x="127249" fg:w="86"/><text x="26.9413%" y="367.50"></text></g><g><title>__dev_queue_xmit (4,008 samples, 0.84%)</title><rect x="25.8690%" y="389" width="0.8407%" height="15" fill="rgb(247,126,22)" fg:x="123329" fg:w="4008"/><text x="26.1190%" y="399.50"></text></g><g><title>_raw_spin_lock (89 samples, 0.02%)</title><rect x="26.7104%" y="389" width="0.0187%" height="15" fill="rgb(220,196,2)" fg:x="127340" fg:w="89"/><text x="26.9604%" y="399.50"></text></g><g><title>ip_finish_output2 (4,195 samples, 0.88%)</title><rect x="25.8537%" y="421" width="0.8799%" height="15" fill="rgb(208,46,4)" fg:x="123256" fg:w="4195"/><text x="26.1037%" y="431.50"></text></g><g><title>dev_queue_xmit (4,125 samples, 0.87%)</title><rect x="25.8684%" y="405" width="0.8652%" height="15" fill="rgb(252,104,46)" fg:x="123326" fg:w="4125"/><text x="26.1184%" y="415.50"></text></g><g><title>__ip_finish_output (4,228 samples, 0.89%)</title><rect x="25.8485%" y="437" width="0.8868%" height="15" fill="rgb(237,152,48)" fg:x="123231" fg:w="4228"/><text x="26.0985%" y="447.50"></text></g><g><title>ip_output (4,350 samples, 0.91%)</title><rect x="25.8252%" y="469" width="0.9124%" height="15" fill="rgb(221,59,37)" fg:x="123120" fg:w="4350"/><text x="26.0752%" y="479.50"></text></g><g><title>ip_finish_output (4,310 samples, 0.90%)</title><rect x="25.8336%" y="453" width="0.9040%" height="15" fill="rgb(209,202,51)" fg:x="123160" fg:w="4310"/><text x="26.0836%" y="463.50"></text></g><g><title>ip_local_out (4,419 samples, 0.93%)</title><rect x="25.8118%" y="485" width="0.9269%" height="15" fill="rgb(228,81,30)" fg:x="123056" fg:w="4419"/><text x="26.0618%" y="495.50"></text></g><g><title>__ip_queue_xmit (4,568 samples, 0.96%)</title><rect x="25.7946%" y="501" width="0.9582%" height="15" fill="rgb(227,42,39)" fg:x="122974" fg:w="4568"/><text x="26.0446%" y="511.50"></text></g><g><title>ip_queue_xmit (4,582 samples, 0.96%)</title><rect x="25.7943%" y="517" width="0.9611%" height="15" fill="rgb(221,26,2)" fg:x="122973" fg:w="4582"/><text x="26.0443%" y="527.50"></text></g><g><title>__tcp_transmit_skb (4,847 samples, 1.02%)</title><rect x="25.7595%" y="533" width="1.0167%" height="15" fill="rgb(254,61,31)" fg:x="122807" fg:w="4847"/><text x="26.0095%" y="543.50"></text></g><g><title>bictcp_cwnd_event (50 samples, 0.01%)</title><rect x="26.7796%" y="533" width="0.0105%" height="15" fill="rgb(222,173,38)" fg:x="127670" fg:w="50"/><text x="27.0296%" y="543.50"></text></g><g><title>kvm_clock_get_cycles (76 samples, 0.02%)</title><rect x="26.7993%" y="517" width="0.0159%" height="15" fill="rgb(218,50,12)" fg:x="127764" fg:w="76"/><text x="27.0493%" y="527.50"></text></g><g><title>pvclock_clocksource_read (67 samples, 0.01%)</title><rect x="26.8012%" y="501" width="0.0141%" height="15" fill="rgb(223,88,40)" fg:x="127773" fg:w="67"/><text x="27.0512%" y="511.50"></text></g><g><title>ktime_get (99 samples, 0.02%)</title><rect x="26.7959%" y="533" width="0.0208%" height="15" fill="rgb(237,54,19)" fg:x="127748" fg:w="99"/><text x="27.0459%" y="543.50"></text></g><g><title>__lock_text_start (51 samples, 0.01%)</title><rect x="26.8607%" y="469" width="0.0107%" height="15" fill="rgb(251,129,25)" fg:x="128057" fg:w="51"/><text x="27.1107%" y="479.50"></text></g><g><title>tcp_event_new_data_sent (196 samples, 0.04%)</title><rect x="26.8305%" y="533" width="0.0411%" height="15" fill="rgb(238,97,19)" fg:x="127913" fg:w="196"/><text x="27.0805%" y="543.50"></text></g><g><title>tcp_rearm_rto (112 samples, 0.02%)</title><rect x="26.8482%" y="517" width="0.0235%" height="15" fill="rgb(240,169,18)" fg:x="127997" fg:w="112"/><text x="27.0982%" y="527.50"></text></g><g><title>sk_reset_timer (96 samples, 0.02%)</title><rect x="26.8515%" y="501" width="0.0201%" height="15" fill="rgb(230,187,49)" fg:x="128013" fg:w="96"/><text x="27.1015%" y="511.50"></text></g><g><title>mod_timer (89 samples, 0.02%)</title><rect x="26.8530%" y="485" width="0.0187%" height="15" fill="rgb(209,44,26)" fg:x="128020" fg:w="89"/><text x="27.1030%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (5,635 samples, 1.18%)</title><rect x="25.7243%" y="565" width="1.1820%" height="15" fill="rgb(244,0,6)" fg:x="122639" fg:w="5635"/><text x="25.9743%" y="575.50"></text></g><g><title>tcp_write_xmit (5,579 samples, 1.17%)</title><rect x="25.7360%" y="549" width="1.1702%" height="15" fill="rgb(248,18,21)" fg:x="122695" fg:w="5579"/><text x="25.9860%" y="559.50"></text></g><g><title>tcp_v4_send_check (51 samples, 0.01%)</title><rect x="26.8956%" y="533" width="0.0107%" height="15" fill="rgb(245,180,19)" fg:x="128223" fg:w="51"/><text x="27.1456%" y="543.50"></text></g><g><title>tcp_push (5,648 samples, 1.18%)</title><rect x="25.7234%" y="581" width="1.1847%" height="15" fill="rgb(252,118,36)" fg:x="122635" fg:w="5648"/><text x="25.9734%" y="591.50"></text></g><g><title>tcp_current_mss (111 samples, 0.02%)</title><rect x="26.9188%" y="565" width="0.0233%" height="15" fill="rgb(210,224,19)" fg:x="128334" fg:w="111"/><text x="27.1688%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (6,960 samples, 1.46%)</title><rect x="25.4824%" y="597" width="1.4599%" height="15" fill="rgb(218,30,24)" fg:x="121486" fg:w="6960"/><text x="25.7324%" y="607.50"></text></g><g><title>tcp_send_mss (149 samples, 0.03%)</title><rect x="26.9111%" y="581" width="0.0313%" height="15" fill="rgb(219,75,50)" fg:x="128297" fg:w="149"/><text x="27.1611%" y="591.50"></text></g><g><title>tcp_sendmsg (7,162 samples, 1.50%)</title><rect x="25.4478%" y="613" width="1.5023%" height="15" fill="rgb(234,72,50)" fg:x="121321" fg:w="7162"/><text x="25.6978%" y="623.50"></text></g><g><title>inet_sendmsg (7,186 samples, 1.51%)</title><rect x="25.4430%" y="629" width="1.5073%" height="15" fill="rgb(219,100,48)" fg:x="121298" fg:w="7186"/><text x="25.6930%" y="639.50"></text></g><g><title>sock_sendmsg (7,293 samples, 1.53%)</title><rect x="25.4298%" y="645" width="1.5298%" height="15" fill="rgb(253,5,41)" fg:x="121235" fg:w="7293"/><text x="25.6798%" y="655.50"></text></g><g><title>__sys_sendto (7,429 samples, 1.56%)</title><rect x="25.4159%" y="661" width="1.5583%" height="15" fill="rgb(247,181,11)" fg:x="121169" fg:w="7429"/><text x="25.6659%" y="671.50"></text></g><g><title>sockfd_lookup_light (70 samples, 0.01%)</title><rect x="26.9595%" y="645" width="0.0147%" height="15" fill="rgb(222,223,25)" fg:x="128528" fg:w="70"/><text x="27.2095%" y="655.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (8,283 samples, 1.74%)</title><rect x="25.2423%" y="821" width="1.7374%" height="15" fill="rgb(214,198,28)" fg:x="120341" fg:w="8283"/><text x="25.4923%" y="831.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (8,269 samples, 1.73%)</title><rect x="25.2452%" y="805" width="1.7345%" height="15" fill="rgb(230,46,43)" fg:x="120355" fg:w="8269"/><text x="25.4952%" y="815.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (8,269 samples, 1.73%)</title><rect x="25.2452%" y="789" width="1.7345%" height="15" fill="rgb(233,65,53)" fg:x="120355" fg:w="8269"/><text x="25.4952%" y="799.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (8,269 samples, 1.73%)</title><rect x="25.2452%" y="773" width="1.7345%" height="15" fill="rgb(221,121,27)" fg:x="120355" fg:w="8269"/><text x="25.4952%" y="783.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (8,269 samples, 1.73%)</title><rect x="25.2452%" y="757" width="1.7345%" height="15" fill="rgb(247,70,47)" fg:x="120355" fg:w="8269"/><text x="25.4952%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::write (8,253 samples, 1.73%)</title><rect x="25.2486%" y="741" width="1.7311%" height="15" fill="rgb(228,85,35)" fg:x="120371" fg:w="8253"/><text x="25.4986%" y="751.50"></text></g><g><title>__libc_send (8,248 samples, 1.73%)</title><rect x="25.2496%" y="725" width="1.7301%" height="15" fill="rgb(209,50,18)" fg:x="120376" fg:w="8248"/><text x="25.4996%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7,697 samples, 1.61%)</title><rect x="25.3652%" y="709" width="1.6145%" height="15" fill="rgb(250,19,35)" fg:x="120927" fg:w="7697"/><text x="25.6152%" y="719.50"></text></g><g><title>do_syscall_64 (7,666 samples, 1.61%)</title><rect x="25.3717%" y="693" width="1.6080%" height="15" fill="rgb(253,107,29)" fg:x="120958" fg:w="7666"/><text x="25.6217%" y="703.50"></text></g><g><title>__x64_sys_sendto (7,456 samples, 1.56%)</title><rect x="25.4157%" y="677" width="1.5639%" height="15" fill="rgb(252,179,29)" fg:x="121168" fg:w="7456"/><text x="25.6657%" y="687.50"></text></g><g><title>std::io::Write::write_all (8,308 samples, 1.74%)</title><rect x="25.2383%" y="837" width="1.7427%" height="15" fill="rgb(238,194,6)" fg:x="120322" fg:w="8308"/><text x="25.4883%" y="847.50"></text></g><g><title>[libc-2.31.so] (194 samples, 0.04%)</title><rect x="27.0195%" y="565" width="0.0407%" height="15" fill="rgb(238,164,29)" fg:x="128814" fg:w="194"/><text x="27.2695%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (311 samples, 0.07%)</title><rect x="26.9952%" y="645" width="0.0652%" height="15" fill="rgb(224,25,9)" fg:x="128698" fg:w="311"/><text x="27.2452%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (311 samples, 0.07%)</title><rect x="26.9952%" y="629" width="0.0652%" height="15" fill="rgb(244,153,23)" fg:x="128698" fg:w="311"/><text x="27.2452%" y="639.50"></text></g><g><title>alloc::alloc::realloc (310 samples, 0.07%)</title><rect x="26.9954%" y="613" width="0.0650%" height="15" fill="rgb(212,203,14)" fg:x="128699" fg:w="310"/><text x="27.2454%" y="623.50"></text></g><g><title>realloc (289 samples, 0.06%)</title><rect x="26.9998%" y="597" width="0.0606%" height="15" fill="rgb(220,164,20)" fg:x="128720" fg:w="289"/><text x="27.2498%" y="607.50"></text></g><g><title>[libc-2.31.so] (224 samples, 0.05%)</title><rect x="27.0134%" y="581" width="0.0470%" height="15" fill="rgb(222,203,48)" fg:x="128785" fg:w="224"/><text x="27.2634%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (319 samples, 0.07%)</title><rect x="26.9937%" y="661" width="0.0669%" height="15" fill="rgb(215,159,22)" fg:x="128691" fg:w="319"/><text x="27.2437%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (343 samples, 0.07%)</title><rect x="26.9908%" y="725" width="0.0719%" height="15" fill="rgb(216,183,47)" fg:x="128677" fg:w="343"/><text x="27.2408%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (343 samples, 0.07%)</title><rect x="26.9908%" y="709" width="0.0719%" height="15" fill="rgb(229,195,25)" fg:x="128677" fg:w="343"/><text x="27.2408%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (336 samples, 0.07%)</title><rect x="26.9923%" y="693" width="0.0705%" height="15" fill="rgb(224,132,51)" fg:x="128684" fg:w="336"/><text x="27.2423%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (334 samples, 0.07%)</title><rect x="26.9927%" y="677" width="0.0701%" height="15" fill="rgb(240,63,7)" fg:x="128686" fg:w="334"/><text x="27.2427%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (362 samples, 0.08%)</title><rect x="26.9897%" y="805" width="0.0759%" height="15" fill="rgb(249,182,41)" fg:x="128672" fg:w="362"/><text x="27.2397%" y="815.50"></text></g><g><title>alloc::string::String::push_str (360 samples, 0.08%)</title><rect x="26.9902%" y="789" width="0.0755%" height="15" fill="rgb(243,47,26)" fg:x="128674" fg:w="360"/><text x="27.2402%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (360 samples, 0.08%)</title><rect x="26.9902%" y="773" width="0.0755%" height="15" fill="rgb(233,48,2)" fg:x="128674" fg:w="360"/><text x="27.2402%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (360 samples, 0.08%)</title><rect x="26.9902%" y="757" width="0.0755%" height="15" fill="rgb(244,165,34)" fg:x="128674" fg:w="360"/><text x="27.2402%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (360 samples, 0.08%)</title><rect x="26.9902%" y="741" width="0.0755%" height="15" fill="rgb(207,89,7)" fg:x="128674" fg:w="360"/><text x="27.2402%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (172 samples, 0.04%)</title><rect x="27.0881%" y="581" width="0.0361%" height="15" fill="rgb(244,117,36)" fg:x="129141" fg:w="172"/><text x="27.3381%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (172 samples, 0.04%)</title><rect x="27.0881%" y="565" width="0.0361%" height="15" fill="rgb(226,144,34)" fg:x="129141" fg:w="172"/><text x="27.3381%" y="575.50"></text></g><g><title>alloc::alloc::realloc (172 samples, 0.04%)</title><rect x="27.0881%" y="549" width="0.0361%" height="15" fill="rgb(213,23,19)" fg:x="129141" fg:w="172"/><text x="27.3381%" y="559.50"></text></g><g><title>realloc (161 samples, 0.03%)</title><rect x="27.0904%" y="533" width="0.0338%" height="15" fill="rgb(217,75,12)" fg:x="129152" fg:w="161"/><text x="27.3404%" y="543.50"></text></g><g><title>[libc-2.31.so] (73 samples, 0.02%)</title><rect x="27.1089%" y="517" width="0.0153%" height="15" fill="rgb(224,159,17)" fg:x="129240" fg:w="73"/><text x="27.3589%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (204 samples, 0.04%)</title><rect x="27.0848%" y="597" width="0.0428%" height="15" fill="rgb(217,118,1)" fg:x="129125" fg:w="204"/><text x="27.3348%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (238 samples, 0.05%)</title><rect x="27.0791%" y="661" width="0.0499%" height="15" fill="rgb(232,180,48)" fg:x="129098" fg:w="238"/><text x="27.3291%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (235 samples, 0.05%)</title><rect x="27.0797%" y="645" width="0.0493%" height="15" fill="rgb(230,27,33)" fg:x="129101" fg:w="235"/><text x="27.3297%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (230 samples, 0.05%)</title><rect x="27.0808%" y="629" width="0.0482%" height="15" fill="rgb(205,31,21)" fg:x="129106" fg:w="230"/><text x="27.3308%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (226 samples, 0.05%)</title><rect x="27.0816%" y="613" width="0.0474%" height="15" fill="rgb(253,59,4)" fg:x="129110" fg:w="226"/><text x="27.3316%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (285 samples, 0.06%)</title><rect x="27.0739%" y="757" width="0.0598%" height="15" fill="rgb(224,201,9)" fg:x="129073" fg:w="285"/><text x="27.3239%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (262 samples, 0.05%)</title><rect x="27.0787%" y="741" width="0.0550%" height="15" fill="rgb(229,206,30)" fg:x="129096" fg:w="262"/><text x="27.3287%" y="751.50"></text></g><g><title>alloc::string::String::push_str (262 samples, 0.05%)</title><rect x="27.0787%" y="725" width="0.0550%" height="15" fill="rgb(212,67,47)" fg:x="129096" fg:w="262"/><text x="27.3287%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (262 samples, 0.05%)</title><rect x="27.0787%" y="709" width="0.0550%" height="15" fill="rgb(211,96,50)" fg:x="129096" fg:w="262"/><text x="27.3287%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (262 samples, 0.05%)</title><rect x="27.0787%" y="693" width="0.0550%" height="15" fill="rgb(252,114,18)" fg:x="129096" fg:w="262"/><text x="27.3287%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (262 samples, 0.05%)</title><rect x="27.0787%" y="677" width="0.0550%" height="15" fill="rgb(223,58,37)" fg:x="129096" fg:w="262"/><text x="27.3287%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (363 samples, 0.08%)</title><rect x="27.0703%" y="789" width="0.0761%" height="15" fill="rgb(237,70,4)" fg:x="129056" fg:w="363"/><text x="27.3203%" y="799.50"></text></g><g><title>core::fmt::write (361 samples, 0.08%)</title><rect x="27.0707%" y="773" width="0.0757%" height="15" fill="rgb(244,85,46)" fg:x="129058" fg:w="361"/><text x="27.3207%" y="783.50"></text></g><g><title>alloc::fmt::format (385 samples, 0.08%)</title><rect x="27.0659%" y="805" width="0.0808%" height="15" fill="rgb(223,39,52)" fg:x="129035" fg:w="385"/><text x="27.3159%" y="815.50"></text></g><g><title>alloc::str::join_generic_copy (123 samples, 0.03%)</title><rect x="27.1469%" y="773" width="0.0258%" height="15" fill="rgb(218,200,14)" fg:x="129421" fg:w="123"/><text x="27.3969%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (129 samples, 0.03%)</title><rect x="27.1466%" y="805" width="0.0271%" height="15" fill="rgb(208,171,16)" fg:x="129420" fg:w="129"/><text x="27.3966%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (129 samples, 0.03%)</title><rect x="27.1466%" y="789" width="0.0271%" height="15" fill="rgb(234,200,18)" fg:x="129420" fg:w="129"/><text x="27.3966%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (376 samples, 0.08%)</title><rect x="27.2320%" y="421" width="0.0789%" height="15" fill="rgb(228,45,11)" fg:x="129827" fg:w="376"/><text x="27.4820%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (376 samples, 0.08%)</title><rect x="27.2320%" y="405" width="0.0789%" height="15" fill="rgb(237,182,11)" fg:x="129827" fg:w="376"/><text x="27.4820%" y="415.50"></text></g><g><title>alloc::alloc::realloc (376 samples, 0.08%)</title><rect x="27.2320%" y="389" width="0.0789%" height="15" fill="rgb(241,175,49)" fg:x="129827" fg:w="376"/><text x="27.4820%" y="399.50"></text></g><g><title>realloc (352 samples, 0.07%)</title><rect x="27.2370%" y="373" width="0.0738%" height="15" fill="rgb(247,38,35)" fg:x="129851" fg:w="352"/><text x="27.4870%" y="383.50"></text></g><g><title>[libc-2.31.so] (188 samples, 0.04%)</title><rect x="27.2714%" y="357" width="0.0394%" height="15" fill="rgb(228,39,49)" fg:x="130015" fg:w="188"/><text x="27.5214%" y="367.50"></text></g><g><title>[libc-2.31.so] (147 samples, 0.03%)</title><rect x="27.2800%" y="341" width="0.0308%" height="15" fill="rgb(226,101,26)" fg:x="130056" fg:w="147"/><text x="27.5300%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (470 samples, 0.10%)</title><rect x="27.2247%" y="437" width="0.0986%" height="15" fill="rgb(206,141,19)" fg:x="129792" fg:w="470"/><text x="27.4747%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (542 samples, 0.11%)</title><rect x="27.2150%" y="501" width="0.1137%" height="15" fill="rgb(211,200,13)" fg:x="129746" fg:w="542"/><text x="27.4650%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (538 samples, 0.11%)</title><rect x="27.2159%" y="485" width="0.1128%" height="15" fill="rgb(241,121,6)" fg:x="129750" fg:w="538"/><text x="27.4659%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (528 samples, 0.11%)</title><rect x="27.2180%" y="469" width="0.1108%" height="15" fill="rgb(234,221,29)" fg:x="129760" fg:w="528"/><text x="27.4680%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (525 samples, 0.11%)</title><rect x="27.2186%" y="453" width="0.1101%" height="15" fill="rgb(229,136,5)" fg:x="129763" fg:w="525"/><text x="27.4686%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (85 samples, 0.02%)</title><rect x="27.3287%" y="501" width="0.0178%" height="15" fill="rgb(238,36,11)" fg:x="130288" fg:w="85"/><text x="27.5787%" y="511.50"></text></g><g><title>[libc-2.31.so] (77 samples, 0.02%)</title><rect x="27.3304%" y="485" width="0.0162%" height="15" fill="rgb(251,55,41)" fg:x="130296" fg:w="77"/><text x="27.5804%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (679 samples, 0.14%)</title><rect x="27.2050%" y="597" width="0.1424%" height="15" fill="rgb(242,34,40)" fg:x="129698" fg:w="679"/><text x="27.4550%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (644 samples, 0.14%)</title><rect x="27.2123%" y="581" width="0.1351%" height="15" fill="rgb(215,42,17)" fg:x="129733" fg:w="644"/><text x="27.4623%" y="591.50"></text></g><g><title>alloc::string::String::push_str (644 samples, 0.14%)</title><rect x="27.2123%" y="565" width="0.1351%" height="15" fill="rgb(207,44,46)" fg:x="129733" fg:w="644"/><text x="27.4623%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (644 samples, 0.14%)</title><rect x="27.2123%" y="549" width="0.1351%" height="15" fill="rgb(211,206,28)" fg:x="129733" fg:w="644"/><text x="27.4623%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (644 samples, 0.14%)</title><rect x="27.2123%" y="533" width="0.1351%" height="15" fill="rgb(237,167,16)" fg:x="129733" fg:w="644"/><text x="27.4623%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (644 samples, 0.14%)</title><rect x="27.2123%" y="517" width="0.1351%" height="15" fill="rgb(233,66,6)" fg:x="129733" fg:w="644"/><text x="27.4623%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (829 samples, 0.17%)</title><rect x="27.1926%" y="629" width="0.1739%" height="15" fill="rgb(246,123,29)" fg:x="129639" fg:w="829"/><text x="27.4426%" y="639.50"></text></g><g><title>core::fmt::write (806 samples, 0.17%)</title><rect x="27.1974%" y="613" width="0.1691%" height="15" fill="rgb(209,62,40)" fg:x="129662" fg:w="806"/><text x="27.4474%" y="623.50"></text></g><g><title>alloc::fmt::format (879 samples, 0.18%)</title><rect x="27.1823%" y="645" width="0.1844%" height="15" fill="rgb(218,4,25)" fg:x="129590" fg:w="879"/><text x="27.4323%" y="655.50"></text></g><g><title>[libc-2.31.so] (136 samples, 0.03%)</title><rect x="27.3690%" y="533" width="0.0285%" height="15" fill="rgb(253,91,49)" fg:x="130480" fg:w="136"/><text x="27.6190%" y="543.50"></text></g><g><title>&lt;parsed::http::Response as core::convert::Into&lt;alloc::string::String&gt;&gt;::into::{{closure}} (1,093 samples, 0.23%)</title><rect x="27.1810%" y="661" width="0.2293%" height="15" fill="rgb(228,155,29)" fg:x="129584" fg:w="1093"/><text x="27.4310%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Header&gt; (205 samples, 0.04%)</title><rect x="27.3673%" y="645" width="0.0430%" height="15" fill="rgb(243,57,37)" fg:x="130472" fg:w="205"/><text x="27.6173%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (205 samples, 0.04%)</title><rect x="27.3673%" y="629" width="0.0430%" height="15" fill="rgb(244,167,17)" fg:x="130472" fg:w="205"/><text x="27.6173%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (205 samples, 0.04%)</title><rect x="27.3673%" y="613" width="0.0430%" height="15" fill="rgb(207,181,38)" fg:x="130472" fg:w="205"/><text x="27.6173%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (205 samples, 0.04%)</title><rect x="27.3673%" y="597" width="0.0430%" height="15" fill="rgb(211,8,23)" fg:x="130472" fg:w="205"/><text x="27.6173%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (205 samples, 0.04%)</title><rect x="27.3673%" y="581" width="0.0430%" height="15" fill="rgb(235,11,44)" fg:x="130472" fg:w="205"/><text x="27.6173%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (201 samples, 0.04%)</title><rect x="27.3681%" y="565" width="0.0422%" height="15" fill="rgb(248,18,52)" fg:x="130476" fg:w="201"/><text x="27.6181%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (201 samples, 0.04%)</title><rect x="27.3681%" y="549" width="0.0422%" height="15" fill="rgb(208,4,7)" fg:x="130476" fg:w="201"/><text x="27.6181%" y="559.50"></text></g><g><title>cfree (51 samples, 0.01%)</title><rect x="27.3996%" y="533" width="0.0107%" height="15" fill="rgb(240,17,39)" fg:x="130626" fg:w="51"/><text x="27.6496%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,102 samples, 0.23%)</title><rect x="27.1808%" y="677" width="0.2312%" height="15" fill="rgb(207,170,3)" fg:x="129583" fg:w="1102"/><text x="27.4308%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,155 samples, 0.24%)</title><rect x="27.1766%" y="741" width="0.2423%" height="15" fill="rgb(236,100,52)" fg:x="129563" fg:w="1155"/><text x="27.4266%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,155 samples, 0.24%)</title><rect x="27.1766%" y="725" width="0.2423%" height="15" fill="rgb(246,78,51)" fg:x="129563" fg:w="1155"/><text x="27.4266%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,154 samples, 0.24%)</title><rect x="27.1768%" y="709" width="0.2421%" height="15" fill="rgb(211,17,15)" fg:x="129564" fg:w="1154"/><text x="27.4268%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,147 samples, 0.24%)</title><rect x="27.1783%" y="693" width="0.2406%" height="15" fill="rgb(209,59,46)" fg:x="129571" fg:w="1147"/><text x="27.4283%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,189 samples, 0.25%)</title><rect x="27.1739%" y="805" width="0.2494%" height="15" fill="rgb(210,92,25)" fg:x="129550" fg:w="1189"/><text x="27.4239%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,189 samples, 0.25%)</title><rect x="27.1739%" y="789" width="0.2494%" height="15" fill="rgb(238,174,52)" fg:x="129550" fg:w="1189"/><text x="27.4239%" y="799.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1,189 samples, 0.25%)</title><rect x="27.1739%" y="773" width="0.2494%" height="15" fill="rgb(230,73,7)" fg:x="129550" fg:w="1189"/><text x="27.4239%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,178 samples, 0.25%)</title><rect x="27.1762%" y="757" width="0.2471%" height="15" fill="rgb(243,124,40)" fg:x="129561" fg:w="1178"/><text x="27.4262%" y="767.50"></text></g><g><title>[libc-2.31.so] (85 samples, 0.02%)</title><rect x="27.4242%" y="709" width="0.0178%" height="15" fill="rgb(244,170,11)" fg:x="130743" fg:w="85"/><text x="27.6742%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (143 samples, 0.03%)</title><rect x="27.4233%" y="805" width="0.0300%" height="15" fill="rgb(207,114,54)" fg:x="130739" fg:w="143"/><text x="27.6733%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (143 samples, 0.03%)</title><rect x="27.4233%" y="789" width="0.0300%" height="15" fill="rgb(205,42,20)" fg:x="130739" fg:w="143"/><text x="27.6733%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (143 samples, 0.03%)</title><rect x="27.4233%" y="773" width="0.0300%" height="15" fill="rgb(230,30,28)" fg:x="130739" fg:w="143"/><text x="27.6733%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (143 samples, 0.03%)</title><rect x="27.4233%" y="757" width="0.0300%" height="15" fill="rgb(205,73,54)" fg:x="130739" fg:w="143"/><text x="27.6733%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (142 samples, 0.03%)</title><rect x="27.4235%" y="741" width="0.0298%" height="15" fill="rgb(254,227,23)" fg:x="130740" fg:w="142"/><text x="27.6735%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (142 samples, 0.03%)</title><rect x="27.4235%" y="725" width="0.0298%" height="15" fill="rgb(228,202,34)" fg:x="130740" fg:w="142"/><text x="27.6735%" y="735.50"></text></g><g><title>[libc-2.31.so] (73 samples, 0.02%)</title><rect x="27.4548%" y="661" width="0.0153%" height="15" fill="rgb(222,225,37)" fg:x="130889" fg:w="73"/><text x="27.7048%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (111 samples, 0.02%)</title><rect x="27.4539%" y="693" width="0.0233%" height="15" fill="rgb(221,14,54)" fg:x="130885" fg:w="111"/><text x="27.7039%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (111 samples, 0.02%)</title><rect x="27.4539%" y="677" width="0.0233%" height="15" fill="rgb(254,102,2)" fg:x="130885" fg:w="111"/><text x="27.7039%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.02%)</title><rect x="27.4533%" y="789" width="0.0243%" height="15" fill="rgb(232,104,17)" fg:x="130882" fg:w="116"/><text x="27.7033%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (116 samples, 0.02%)</title><rect x="27.4533%" y="773" width="0.0243%" height="15" fill="rgb(250,220,14)" fg:x="130882" fg:w="116"/><text x="27.7033%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (114 samples, 0.02%)</title><rect x="27.4537%" y="757" width="0.0239%" height="15" fill="rgb(241,158,9)" fg:x="130884" fg:w="114"/><text x="27.7037%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (114 samples, 0.02%)</title><rect x="27.4537%" y="741" width="0.0239%" height="15" fill="rgb(246,9,43)" fg:x="130884" fg:w="114"/><text x="27.7037%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (114 samples, 0.02%)</title><rect x="27.4537%" y="725" width="0.0239%" height="15" fill="rgb(206,73,33)" fg:x="130884" fg:w="114"/><text x="27.7037%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.02%)</title><rect x="27.4537%" y="709" width="0.0239%" height="15" fill="rgb(222,79,8)" fg:x="130884" fg:w="114"/><text x="27.7037%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (139 samples, 0.03%)</title><rect x="27.4533%" y="805" width="0.0292%" height="15" fill="rgb(234,8,54)" fg:x="130882" fg:w="139"/><text x="27.7033%" y="815.50"></text></g><g><title>&lt;parsed::http::Response as core::convert::Into&lt;alloc::string::String&gt;&gt;::into (2,464 samples, 0.52%)</title><rect x="26.9870%" y="821" width="0.5168%" height="15" fill="rgb(209,134,38)" fg:x="128659" fg:w="2464"/><text x="27.2370%" y="831.50"></text></g><g><title>parsed::http::as_string (102 samples, 0.02%)</title><rect x="27.4825%" y="805" width="0.0214%" height="15" fill="rgb(230,127,29)" fg:x="131021" fg:w="102"/><text x="27.7325%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (102 samples, 0.02%)</title><rect x="27.4825%" y="789" width="0.0214%" height="15" fill="rgb(242,44,41)" fg:x="131021" fg:w="102"/><text x="27.7325%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (101 samples, 0.02%)</title><rect x="27.4827%" y="773" width="0.0212%" height="15" fill="rgb(222,56,43)" fg:x="131022" fg:w="101"/><text x="27.7327%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (96 samples, 0.02%)</title><rect x="27.4837%" y="757" width="0.0201%" height="15" fill="rgb(238,39,47)" fg:x="131027" fg:w="96"/><text x="27.7337%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (57 samples, 0.01%)</title><rect x="27.4919%" y="741" width="0.0120%" height="15" fill="rgb(226,79,43)" fg:x="131066" fg:w="57"/><text x="27.7419%" y="751.50"></text></g><g><title>[libc-2.31.so] (142 samples, 0.03%)</title><rect x="27.5043%" y="725" width="0.0298%" height="15" fill="rgb(242,105,53)" fg:x="131125" fg:w="142"/><text x="27.7543%" y="735.50"></text></g><g><title>[libc-2.31.so] (62 samples, 0.01%)</title><rect x="27.5211%" y="709" width="0.0130%" height="15" fill="rgb(251,132,46)" fg:x="131205" fg:w="62"/><text x="27.7711%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (161 samples, 0.03%)</title><rect x="27.5043%" y="821" width="0.0338%" height="15" fill="rgb(231,77,14)" fg:x="131125" fg:w="161"/><text x="27.7543%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (161 samples, 0.03%)</title><rect x="27.5043%" y="805" width="0.0338%" height="15" fill="rgb(240,135,9)" fg:x="131125" fg:w="161"/><text x="27.7543%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (161 samples, 0.03%)</title><rect x="27.5043%" y="789" width="0.0338%" height="15" fill="rgb(248,109,14)" fg:x="131125" fg:w="161"/><text x="27.7543%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (161 samples, 0.03%)</title><rect x="27.5043%" y="773" width="0.0338%" height="15" fill="rgb(227,146,52)" fg:x="131125" fg:w="161"/><text x="27.7543%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (161 samples, 0.03%)</title><rect x="27.5043%" y="757" width="0.0338%" height="15" fill="rgb(232,54,3)" fg:x="131125" fg:w="161"/><text x="27.7543%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (161 samples, 0.03%)</title><rect x="27.5043%" y="741" width="0.0338%" height="15" fill="rgb(229,201,43)" fg:x="131125" fg:w="161"/><text x="27.7543%" y="751.50"></text></g><g><title>core::fmt::Formatter::pad_integral (56 samples, 0.01%)</title><rect x="27.5938%" y="629" width="0.0117%" height="15" fill="rgb(252,161,33)" fg:x="131552" fg:w="56"/><text x="27.8438%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (117 samples, 0.02%)</title><rect x="27.5817%" y="661" width="0.0245%" height="15" fill="rgb(226,146,40)" fg:x="131494" fg:w="117"/><text x="27.8317%" y="671.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (100 samples, 0.02%)</title><rect x="27.5852%" y="645" width="0.0210%" height="15" fill="rgb(219,47,25)" fg:x="131511" fg:w="100"/><text x="27.8352%" y="655.50"></text></g><g><title>alloc::fmt::format (214 samples, 0.04%)</title><rect x="27.5615%" y="709" width="0.0449%" height="15" fill="rgb(250,135,13)" fg:x="131398" fg:w="214"/><text x="27.8115%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (170 samples, 0.04%)</title><rect x="27.5708%" y="693" width="0.0357%" height="15" fill="rgb(219,229,18)" fg:x="131442" fg:w="170"/><text x="27.8208%" y="703.50"></text></g><g><title>core::fmt::write (169 samples, 0.04%)</title><rect x="27.5710%" y="677" width="0.0354%" height="15" fill="rgb(217,152,27)" fg:x="131443" fg:w="169"/><text x="27.8210%" y="687.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (218 samples, 0.05%)</title><rect x="27.5609%" y="725" width="0.0457%" height="15" fill="rgb(225,71,47)" fg:x="131395" fg:w="218"/><text x="27.8109%" y="735.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (284 samples, 0.06%)</title><rect x="27.5523%" y="757" width="0.0596%" height="15" fill="rgb(220,139,14)" fg:x="131354" fg:w="284"/><text x="27.8023%" y="767.50"></text></g><g><title>parsed::parser::bytes::{{closure}} (275 samples, 0.06%)</title><rect x="27.5542%" y="741" width="0.0577%" height="15" fill="rgb(247,54,32)" fg:x="131363" fg:w="275"/><text x="27.8042%" y="751.50"></text></g><g><title>__libc_malloc (62 samples, 0.01%)</title><rect x="27.6377%" y="517" width="0.0130%" height="15" fill="rgb(252,131,39)" fg:x="131761" fg:w="62"/><text x="27.8877%" y="527.50"></text></g><g><title>alloc::string::String::with_capacity (70 samples, 0.01%)</title><rect x="27.6375%" y="645" width="0.0147%" height="15" fill="rgb(210,108,39)" fg:x="131760" fg:w="70"/><text x="27.8875%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (69 samples, 0.01%)</title><rect x="27.6377%" y="629" width="0.0145%" height="15" fill="rgb(205,23,29)" fg:x="131761" fg:w="69"/><text x="27.8877%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (69 samples, 0.01%)</title><rect x="27.6377%" y="613" width="0.0145%" height="15" fill="rgb(246,139,46)" fg:x="131761" fg:w="69"/><text x="27.8877%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (69 samples, 0.01%)</title><rect x="27.6377%" y="597" width="0.0145%" height="15" fill="rgb(250,81,26)" fg:x="131761" fg:w="69"/><text x="27.8877%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (69 samples, 0.01%)</title><rect x="27.6377%" y="581" width="0.0145%" height="15" fill="rgb(214,104,7)" fg:x="131761" fg:w="69"/><text x="27.8877%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (69 samples, 0.01%)</title><rect x="27.6377%" y="565" width="0.0145%" height="15" fill="rgb(233,189,8)" fg:x="131761" fg:w="69"/><text x="27.8877%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (69 samples, 0.01%)</title><rect x="27.6377%" y="549" width="0.0145%" height="15" fill="rgb(228,141,17)" fg:x="131761" fg:w="69"/><text x="27.8877%" y="559.50"></text></g><g><title>alloc::alloc::alloc (69 samples, 0.01%)</title><rect x="27.6377%" y="533" width="0.0145%" height="15" fill="rgb(247,157,1)" fg:x="131761" fg:w="69"/><text x="27.8877%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (95 samples, 0.02%)</title><rect x="27.6536%" y="645" width="0.0199%" height="15" fill="rgb(249,225,5)" fg:x="131837" fg:w="95"/><text x="27.9036%" y="655.50"></text></g><g><title>core::fmt::write (93 samples, 0.02%)</title><rect x="27.6540%" y="629" width="0.0195%" height="15" fill="rgb(242,55,13)" fg:x="131839" fg:w="93"/><text x="27.9040%" y="639.50"></text></g><g><title>alloc::fmt::format (177 samples, 0.04%)</title><rect x="27.6366%" y="661" width="0.0371%" height="15" fill="rgb(230,49,50)" fg:x="131756" fg:w="177"/><text x="27.8866%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (48 samples, 0.01%)</title><rect x="27.6746%" y="661" width="0.0101%" height="15" fill="rgb(241,111,38)" fg:x="131937" fg:w="48"/><text x="27.9246%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (67 samples, 0.01%)</title><rect x="27.7220%" y="501" width="0.0141%" height="15" fill="rgb(252,155,4)" fg:x="132163" fg:w="67"/><text x="27.9720%" y="511.50"></text></g><g><title>[libc-2.31.so] (60 samples, 0.01%)</title><rect x="27.7235%" y="485" width="0.0126%" height="15" fill="rgb(212,69,32)" fg:x="132170" fg:w="60"/><text x="27.9735%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (136 samples, 0.03%)</title><rect x="27.7084%" y="597" width="0.0285%" height="15" fill="rgb(243,107,47)" fg:x="132098" fg:w="136"/><text x="27.9584%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (87 samples, 0.02%)</title><rect x="27.7186%" y="581" width="0.0182%" height="15" fill="rgb(247,130,12)" fg:x="132147" fg:w="87"/><text x="27.9686%" y="591.50"></text></g><g><title>alloc::string::String::push_str (87 samples, 0.02%)</title><rect x="27.7186%" y="565" width="0.0182%" height="15" fill="rgb(233,74,16)" fg:x="132147" fg:w="87"/><text x="27.9686%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (87 samples, 0.02%)</title><rect x="27.7186%" y="549" width="0.0182%" height="15" fill="rgb(208,58,18)" fg:x="132147" fg:w="87"/><text x="27.9686%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (87 samples, 0.02%)</title><rect x="27.7186%" y="533" width="0.0182%" height="15" fill="rgb(242,225,1)" fg:x="132147" fg:w="87"/><text x="27.9686%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (87 samples, 0.02%)</title><rect x="27.7186%" y="517" width="0.0182%" height="15" fill="rgb(249,39,40)" fg:x="132147" fg:w="87"/><text x="27.9686%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (72 samples, 0.02%)</title><rect x="27.7432%" y="597" width="0.0151%" height="15" fill="rgb(207,72,44)" fg:x="132264" fg:w="72"/><text x="27.9932%" y="607.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (65 samples, 0.01%)</title><rect x="27.7447%" y="581" width="0.0136%" height="15" fill="rgb(215,193,12)" fg:x="132271" fg:w="65"/><text x="27.9947%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (288 samples, 0.06%)</title><rect x="27.6998%" y="629" width="0.0604%" height="15" fill="rgb(248,41,39)" fg:x="132057" fg:w="288"/><text x="27.9498%" y="639.50"></text></g><g><title>core::fmt::write (284 samples, 0.06%)</title><rect x="27.7006%" y="613" width="0.0596%" height="15" fill="rgb(253,85,4)" fg:x="132061" fg:w="284"/><text x="27.9506%" y="623.50"></text></g><g><title>alloc::fmt::format (343 samples, 0.07%)</title><rect x="27.6887%" y="645" width="0.0719%" height="15" fill="rgb(243,70,31)" fg:x="132004" fg:w="343"/><text x="27.9387%" y="655.50"></text></g><g><title>[libc-2.31.so] (61 samples, 0.01%)</title><rect x="27.7629%" y="549" width="0.0128%" height="15" fill="rgb(253,195,26)" fg:x="132358" fg:w="61"/><text x="28.0129%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (97 samples, 0.02%)</title><rect x="27.7627%" y="581" width="0.0203%" height="15" fill="rgb(243,42,11)" fg:x="132357" fg:w="97"/><text x="28.0127%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (97 samples, 0.02%)</title><rect x="27.7627%" y="565" width="0.0203%" height="15" fill="rgb(239,66,17)" fg:x="132357" fg:w="97"/><text x="28.0127%" y="575.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (470 samples, 0.10%)</title><rect x="27.6847%" y="661" width="0.0986%" height="15" fill="rgb(217,132,21)" fg:x="131985" fg:w="470"/><text x="27.9347%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (101 samples, 0.02%)</title><rect x="27.7621%" y="645" width="0.0212%" height="15" fill="rgb(252,202,21)" fg:x="132354" fg:w="101"/><text x="28.0121%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (101 samples, 0.02%)</title><rect x="27.7621%" y="629" width="0.0212%" height="15" fill="rgb(233,98,36)" fg:x="132354" fg:w="101"/><text x="28.0121%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (101 samples, 0.02%)</title><rect x="27.7621%" y="613" width="0.0212%" height="15" fill="rgb(216,153,54)" fg:x="132354" fg:w="101"/><text x="28.0121%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.02%)</title><rect x="27.7621%" y="597" width="0.0212%" height="15" fill="rgb(250,99,7)" fg:x="132354" fg:w="101"/><text x="28.0121%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (63 samples, 0.01%)</title><rect x="27.7845%" y="645" width="0.0132%" height="15" fill="rgb(207,56,50)" fg:x="132461" fg:w="63"/><text x="28.0345%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (52 samples, 0.01%)</title><rect x="27.8015%" y="629" width="0.0109%" height="15" fill="rgb(244,61,34)" fg:x="132542" fg:w="52"/><text x="28.0515%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (52 samples, 0.01%)</title><rect x="27.8015%" y="613" width="0.0109%" height="15" fill="rgb(241,50,38)" fg:x="132542" fg:w="52"/><text x="28.0515%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (51 samples, 0.01%)</title><rect x="27.8017%" y="597" width="0.0107%" height="15" fill="rgb(212,166,30)" fg:x="132543" fg:w="51"/><text x="28.0517%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (51 samples, 0.01%)</title><rect x="27.8017%" y="581" width="0.0107%" height="15" fill="rgb(249,127,32)" fg:x="132543" fg:w="51"/><text x="28.0517%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48 samples, 0.01%)</title><rect x="27.8023%" y="565" width="0.0101%" height="15" fill="rgb(209,103,0)" fg:x="132546" fg:w="48"/><text x="28.0523%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.01%)</title><rect x="27.8023%" y="549" width="0.0101%" height="15" fill="rgb(238,209,51)" fg:x="132546" fg:w="48"/><text x="28.0523%" y="559.50"></text></g><g><title>alloc::alloc::alloc (48 samples, 0.01%)</title><rect x="27.8023%" y="533" width="0.0101%" height="15" fill="rgb(237,56,23)" fg:x="132546" fg:w="48"/><text x="28.0523%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::next (140 samples, 0.03%)</title><rect x="27.7833%" y="661" width="0.0294%" height="15" fill="rgb(215,153,46)" fg:x="132455" fg:w="140"/><text x="28.0333%" y="671.50"></text></g><g><title>parsed::stream::ByteStream::get (71 samples, 0.01%)</title><rect x="27.7977%" y="645" width="0.0149%" height="15" fill="rgb(224,49,31)" fg:x="132524" fg:w="71"/><text x="28.0477%" y="655.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (896 samples, 0.19%)</title><rect x="27.6249%" y="693" width="0.1879%" height="15" fill="rgb(250,18,42)" fg:x="131700" fg:w="896"/><text x="27.8749%" y="703.50"></text></g><g><title>parsed::parser::single::{{closure}} (886 samples, 0.19%)</title><rect x="27.6270%" y="677" width="0.1858%" height="15" fill="rgb(215,176,39)" fg:x="131710" fg:w="886"/><text x="27.8770%" y="687.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,029 samples, 0.22%)</title><rect x="27.6207%" y="725" width="0.2158%" height="15" fill="rgb(223,77,29)" fg:x="131680" fg:w="1029"/><text x="27.8707%" y="735.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,025 samples, 0.22%)</title><rect x="27.6215%" y="709" width="0.2150%" height="15" fill="rgb(234,94,52)" fg:x="131684" fg:w="1025"/><text x="27.8715%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (65 samples, 0.01%)</title><rect x="27.8229%" y="693" width="0.0136%" height="15" fill="rgb(220,154,50)" fg:x="132644" fg:w="65"/><text x="28.0729%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (65 samples, 0.01%)</title><rect x="27.8229%" y="677" width="0.0136%" height="15" fill="rgb(212,11,10)" fg:x="132644" fg:w="65"/><text x="28.0729%" y="687.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (64 samples, 0.01%)</title><rect x="27.8231%" y="661" width="0.0134%" height="15" fill="rgb(205,166,19)" fg:x="132645" fg:w="64"/><text x="28.0731%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (54 samples, 0.01%)</title><rect x="27.8252%" y="645" width="0.0113%" height="15" fill="rgb(244,198,16)" fg:x="132655" fg:w="54"/><text x="28.0752%" y="655.50"></text></g><g><title>[libc-2.31.so] (222 samples, 0.05%)</title><rect x="27.8969%" y="389" width="0.0466%" height="15" fill="rgb(219,69,12)" fg:x="132997" fg:w="222"/><text x="28.1469%" y="399.50"></text></g><g><title>__libc_malloc (323 samples, 0.07%)</title><rect x="27.8760%" y="405" width="0.0678%" height="15" fill="rgb(245,30,7)" fg:x="132897" fg:w="323"/><text x="28.1260%" y="415.50"></text></g><g><title>alloc::string::String::with_capacity (338 samples, 0.07%)</title><rect x="27.8753%" y="533" width="0.0709%" height="15" fill="rgb(218,221,48)" fg:x="132894" fg:w="338"/><text x="28.1253%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (337 samples, 0.07%)</title><rect x="27.8755%" y="517" width="0.0707%" height="15" fill="rgb(216,66,15)" fg:x="132895" fg:w="337"/><text x="28.1255%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (337 samples, 0.07%)</title><rect x="27.8755%" y="501" width="0.0707%" height="15" fill="rgb(226,122,50)" fg:x="132895" fg:w="337"/><text x="28.1255%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (337 samples, 0.07%)</title><rect x="27.8755%" y="485" width="0.0707%" height="15" fill="rgb(239,156,16)" fg:x="132895" fg:w="337"/><text x="28.1255%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (337 samples, 0.07%)</title><rect x="27.8755%" y="469" width="0.0707%" height="15" fill="rgb(224,27,38)" fg:x="132895" fg:w="337"/><text x="28.1255%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (337 samples, 0.07%)</title><rect x="27.8755%" y="453" width="0.0707%" height="15" fill="rgb(224,39,27)" fg:x="132895" fg:w="337"/><text x="28.1255%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (337 samples, 0.07%)</title><rect x="27.8755%" y="437" width="0.0707%" height="15" fill="rgb(215,92,29)" fg:x="132895" fg:w="337"/><text x="28.1255%" y="447.50"></text></g><g><title>alloc::alloc::alloc (335 samples, 0.07%)</title><rect x="27.8760%" y="421" width="0.0703%" height="15" fill="rgb(207,159,16)" fg:x="132897" fg:w="335"/><text x="28.1260%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (85 samples, 0.02%)</title><rect x="27.9481%" y="533" width="0.0178%" height="15" fill="rgb(238,163,47)" fg:x="133241" fg:w="85"/><text x="28.1981%" y="543.50"></text></g><g><title>core::fmt::write (79 samples, 0.02%)</title><rect x="27.9494%" y="517" width="0.0166%" height="15" fill="rgb(219,91,49)" fg:x="133247" fg:w="79"/><text x="28.1994%" y="527.50"></text></g><g><title>alloc::fmt::format (443 samples, 0.09%)</title><rect x="27.8734%" y="549" width="0.0929%" height="15" fill="rgb(227,167,31)" fg:x="132885" fg:w="443"/><text x="28.1234%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (114 samples, 0.02%)</title><rect x="27.9995%" y="485" width="0.0239%" height="15" fill="rgb(234,80,54)" fg:x="133486" fg:w="114"/><text x="28.2495%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (74 samples, 0.02%)</title><rect x="28.0079%" y="469" width="0.0155%" height="15" fill="rgb(212,114,2)" fg:x="133526" fg:w="74"/><text x="28.2579%" y="479.50"></text></g><g><title>alloc::string::String::push_str (74 samples, 0.02%)</title><rect x="28.0079%" y="453" width="0.0155%" height="15" fill="rgb(234,50,24)" fg:x="133526" fg:w="74"/><text x="28.2579%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (74 samples, 0.02%)</title><rect x="28.0079%" y="437" width="0.0155%" height="15" fill="rgb(221,68,8)" fg:x="133526" fg:w="74"/><text x="28.2579%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (74 samples, 0.02%)</title><rect x="28.0079%" y="421" width="0.0155%" height="15" fill="rgb(254,180,31)" fg:x="133526" fg:w="74"/><text x="28.2579%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (74 samples, 0.02%)</title><rect x="28.0079%" y="405" width="0.0155%" height="15" fill="rgb(247,130,50)" fg:x="133526" fg:w="74"/><text x="28.2579%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (55 samples, 0.01%)</title><rect x="28.0119%" y="389" width="0.0115%" height="15" fill="rgb(211,109,4)" fg:x="133545" fg:w="55"/><text x="28.2619%" y="399.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.01%)</title><rect x="28.0127%" y="373" width="0.0107%" height="15" fill="rgb(238,50,21)" fg:x="133549" fg:w="51"/><text x="28.2627%" y="383.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (59 samples, 0.01%)</title><rect x="28.0322%" y="485" width="0.0124%" height="15" fill="rgb(225,57,45)" fg:x="133642" fg:w="59"/><text x="28.2822%" y="495.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (53 samples, 0.01%)</title><rect x="28.0335%" y="469" width="0.0111%" height="15" fill="rgb(209,196,50)" fg:x="133648" fg:w="53"/><text x="28.2835%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (255 samples, 0.05%)</title><rect x="27.9922%" y="517" width="0.0535%" height="15" fill="rgb(242,140,13)" fg:x="133451" fg:w="255"/><text x="28.2422%" y="527.50"></text></g><g><title>core::fmt::write (251 samples, 0.05%)</title><rect x="27.9930%" y="501" width="0.0526%" height="15" fill="rgb(217,111,7)" fg:x="133455" fg:w="251"/><text x="28.2430%" y="511.50"></text></g><g><title>alloc::fmt::format (313 samples, 0.07%)</title><rect x="27.9802%" y="533" width="0.0657%" height="15" fill="rgb(253,193,51)" fg:x="133394" fg:w="313"/><text x="28.2302%" y="543.50"></text></g><g><title>[libc-2.31.so] (78 samples, 0.02%)</title><rect x="28.0469%" y="437" width="0.0164%" height="15" fill="rgb(252,70,29)" fg:x="133712" fg:w="78"/><text x="28.2969%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (109 samples, 0.02%)</title><rect x="28.0469%" y="469" width="0.0229%" height="15" fill="rgb(232,127,12)" fg:x="133712" fg:w="109"/><text x="28.2969%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (109 samples, 0.02%)</title><rect x="28.0469%" y="453" width="0.0229%" height="15" fill="rgb(211,180,21)" fg:x="133712" fg:w="109"/><text x="28.2969%" y="463.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (458 samples, 0.10%)</title><rect x="27.9739%" y="549" width="0.0961%" height="15" fill="rgb(229,72,13)" fg:x="133364" fg:w="458"/><text x="28.2239%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (113 samples, 0.02%)</title><rect x="28.0463%" y="533" width="0.0237%" height="15" fill="rgb(240,211,49)" fg:x="133709" fg:w="113"/><text x="28.2963%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (113 samples, 0.02%)</title><rect x="28.0463%" y="517" width="0.0237%" height="15" fill="rgb(219,149,40)" fg:x="133709" fg:w="113"/><text x="28.2963%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (113 samples, 0.02%)</title><rect x="28.0463%" y="501" width="0.0237%" height="15" fill="rgb(210,127,46)" fg:x="133709" fg:w="113"/><text x="28.2963%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (113 samples, 0.02%)</title><rect x="28.0463%" y="485" width="0.0237%" height="15" fill="rgb(220,106,7)" fg:x="133709" fg:w="113"/><text x="28.2963%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (60 samples, 0.01%)</title><rect x="28.0719%" y="533" width="0.0126%" height="15" fill="rgb(249,31,22)" fg:x="133831" fg:w="60"/><text x="28.3219%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::next (132 samples, 0.03%)</title><rect x="28.0700%" y="549" width="0.0277%" height="15" fill="rgb(253,1,49)" fg:x="133822" fg:w="132"/><text x="28.3200%" y="559.50"></text></g><g><title>parsed::stream::ByteStream::get (63 samples, 0.01%)</title><rect x="28.0845%" y="533" width="0.0132%" height="15" fill="rgb(227,144,33)" fg:x="133891" fg:w="63"/><text x="28.3345%" y="543.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,119 samples, 0.23%)</title><rect x="27.8632%" y="581" width="0.2347%" height="15" fill="rgb(249,163,44)" fg:x="132836" fg:w="1119"/><text x="28.1132%" y="591.50"></text></g><g><title>parsed::parser::single::{{closure}} (1,114 samples, 0.23%)</title><rect x="27.8642%" y="565" width="0.2337%" height="15" fill="rgb(234,15,39)" fg:x="132841" fg:w="1114"/><text x="28.1142%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (49 samples, 0.01%)</title><rect x="28.1059%" y="581" width="0.0103%" height="15" fill="rgb(207,66,16)" fg:x="133993" fg:w="49"/><text x="28.3559%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (49 samples, 0.01%)</title><rect x="28.1059%" y="565" width="0.0103%" height="15" fill="rgb(233,112,24)" fg:x="133993" fg:w="49"/><text x="28.3559%" y="575.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,227 samples, 0.26%)</title><rect x="27.8590%" y="613" width="0.2574%" height="15" fill="rgb(230,90,22)" fg:x="132816" fg:w="1227"/><text x="28.1090%" y="623.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,216 samples, 0.26%)</title><rect x="27.8613%" y="597" width="0.2551%" height="15" fill="rgb(229,61,13)" fg:x="132827" fg:w="1216"/><text x="28.1113%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (67 samples, 0.01%)</title><rect x="28.1201%" y="549" width="0.0141%" height="15" fill="rgb(225,57,24)" fg:x="134061" fg:w="67"/><text x="28.3701%" y="559.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (67 samples, 0.01%)</title><rect x="28.1201%" y="533" width="0.0141%" height="15" fill="rgb(208,169,48)" fg:x="134061" fg:w="67"/><text x="28.3701%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::get (66 samples, 0.01%)</title><rect x="28.1203%" y="517" width="0.0138%" height="15" fill="rgb(244,218,51)" fg:x="134062" fg:w="66"/><text x="28.3703%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (111 samples, 0.02%)</title><rect x="28.1549%" y="485" width="0.0233%" height="15" fill="rgb(214,148,10)" fg:x="134227" fg:w="111"/><text x="28.4049%" y="495.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (102 samples, 0.02%)</title><rect x="28.1568%" y="469" width="0.0214%" height="15" fill="rgb(225,174,27)" fg:x="134236" fg:w="102"/><text x="28.4068%" y="479.50"></text></g><g><title>alloc::fmt::format (191 samples, 0.04%)</title><rect x="28.1388%" y="533" width="0.0401%" height="15" fill="rgb(230,96,26)" fg:x="134150" fg:w="191"/><text x="28.3888%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (161 samples, 0.03%)</title><rect x="28.1451%" y="517" width="0.0338%" height="15" fill="rgb(232,10,30)" fg:x="134180" fg:w="161"/><text x="28.3951%" y="527.50"></text></g><g><title>core::fmt::write (158 samples, 0.03%)</title><rect x="28.1457%" y="501" width="0.0331%" height="15" fill="rgb(222,8,50)" fg:x="134183" fg:w="158"/><text x="28.3957%" y="511.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (196 samples, 0.04%)</title><rect x="28.1382%" y="549" width="0.0411%" height="15" fill="rgb(213,81,27)" fg:x="134147" fg:w="196"/><text x="28.3882%" y="559.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (313 samples, 0.07%)</title><rect x="28.1180%" y="581" width="0.0657%" height="15" fill="rgb(245,50,10)" fg:x="134051" fg:w="313"/><text x="28.3680%" y="591.50"></text></g><g><title>parsed::parser::before::{{closure}} (304 samples, 0.06%)</title><rect x="28.1199%" y="565" width="0.0638%" height="15" fill="rgb(216,100,18)" fg:x="134060" fg:w="304"/><text x="28.3699%" y="575.50"></text></g><g><title>alloc::fmt::format (75 samples, 0.02%)</title><rect x="28.1877%" y="517" width="0.0157%" height="15" fill="rgb(236,147,54)" fg:x="134383" fg:w="75"/><text x="28.4377%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (51 samples, 0.01%)</title><rect x="28.2181%" y="453" width="0.0107%" height="15" fill="rgb(205,143,26)" fg:x="134528" fg:w="51"/><text x="28.4681%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (111 samples, 0.02%)</title><rect x="28.2151%" y="485" width="0.0233%" height="15" fill="rgb(236,26,9)" fg:x="134514" fg:w="111"/><text x="28.4651%" y="495.50"></text></g><g><title>core::fmt::write (109 samples, 0.02%)</title><rect x="28.2156%" y="469" width="0.0229%" height="15" fill="rgb(221,165,53)" fg:x="134516" fg:w="109"/><text x="28.4656%" y="479.50"></text></g><g><title>alloc::fmt::format (140 samples, 0.03%)</title><rect x="28.2093%" y="501" width="0.0294%" height="15" fill="rgb(214,110,17)" fg:x="134486" fg:w="140"/><text x="28.4593%" y="511.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (188 samples, 0.04%)</title><rect x="28.2074%" y="517" width="0.0394%" height="15" fill="rgb(237,197,12)" fg:x="134477" fg:w="188"/><text x="28.4574%" y="527.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (361 samples, 0.08%)</title><rect x="28.1843%" y="549" width="0.0757%" height="15" fill="rgb(205,84,17)" fg:x="134367" fg:w="361"/><text x="28.4343%" y="559.50"></text></g><g><title>parsed::parser::single::{{closure}} (357 samples, 0.07%)</title><rect x="28.1851%" y="533" width="0.0749%" height="15" fill="rgb(237,18,45)" fg:x="134371" fg:w="357"/><text x="28.4351%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::next (63 samples, 0.01%)</title><rect x="28.2468%" y="517" width="0.0132%" height="15" fill="rgb(221,87,14)" fg:x="134665" fg:w="63"/><text x="28.4968%" y="527.50"></text></g><g><title>alloc::fmt::format (97 samples, 0.02%)</title><rect x="28.2640%" y="485" width="0.0203%" height="15" fill="rgb(238,186,15)" fg:x="134747" fg:w="97"/><text x="28.5140%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (54 samples, 0.01%)</title><rect x="28.2730%" y="469" width="0.0113%" height="15" fill="rgb(208,115,11)" fg:x="134790" fg:w="54"/><text x="28.5230%" y="479.50"></text></g><g><title>core::fmt::write (53 samples, 0.01%)</title><rect x="28.2732%" y="453" width="0.0111%" height="15" fill="rgb(254,175,0)" fg:x="134791" fg:w="53"/><text x="28.5232%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (69 samples, 0.01%)</title><rect x="28.3016%" y="421" width="0.0145%" height="15" fill="rgb(227,24,42)" fg:x="134926" fg:w="69"/><text x="28.5516%" y="431.50"></text></g><g><title>alloc::fmt::format (164 samples, 0.03%)</title><rect x="28.2919%" y="469" width="0.0344%" height="15" fill="rgb(223,211,37)" fg:x="134880" fg:w="164"/><text x="28.5419%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (133 samples, 0.03%)</title><rect x="28.2984%" y="453" width="0.0279%" height="15" fill="rgb(235,49,27)" fg:x="134911" fg:w="133"/><text x="28.5484%" y="463.50"></text></g><g><title>core::fmt::write (131 samples, 0.03%)</title><rect x="28.2988%" y="437" width="0.0275%" height="15" fill="rgb(254,97,51)" fg:x="134913" fg:w="131"/><text x="28.5488%" y="447.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (228 samples, 0.05%)</title><rect x="28.2913%" y="485" width="0.0478%" height="15" fill="rgb(249,51,40)" fg:x="134877" fg:w="228"/><text x="28.5413%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (57 samples, 0.01%)</title><rect x="28.3272%" y="469" width="0.0120%" height="15" fill="rgb(210,128,45)" fg:x="135048" fg:w="57"/><text x="28.5772%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (57 samples, 0.01%)</title><rect x="28.3272%" y="453" width="0.0120%" height="15" fill="rgb(224,137,50)" fg:x="135048" fg:w="57"/><text x="28.5772%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (57 samples, 0.01%)</title><rect x="28.3272%" y="437" width="0.0120%" height="15" fill="rgb(242,15,9)" fg:x="135048" fg:w="57"/><text x="28.5772%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.01%)</title><rect x="28.3272%" y="421" width="0.0120%" height="15" fill="rgb(233,187,41)" fg:x="135048" fg:w="57"/><text x="28.5772%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (57 samples, 0.01%)</title><rect x="28.3272%" y="405" width="0.0120%" height="15" fill="rgb(227,2,29)" fg:x="135048" fg:w="57"/><text x="28.5772%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (57 samples, 0.01%)</title><rect x="28.3272%" y="389" width="0.0120%" height="15" fill="rgb(222,70,3)" fg:x="135048" fg:w="57"/><text x="28.5772%" y="399.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (432 samples, 0.09%)</title><rect x="28.2607%" y="517" width="0.0906%" height="15" fill="rgb(213,11,42)" fg:x="134731" fg:w="432"/><text x="28.5107%" y="527.50"></text></g><g><title>parsed::parser::single::{{closure}} (427 samples, 0.09%)</title><rect x="28.2617%" y="501" width="0.0896%" height="15" fill="rgb(225,150,9)" fg:x="134736" fg:w="427"/><text x="28.5117%" y="511.50"></text></g><g><title>parsed::stream::ByteStream::next (58 samples, 0.01%)</title><rect x="28.3391%" y="485" width="0.0122%" height="15" fill="rgb(230,162,45)" fg:x="135105" fg:w="58"/><text x="28.5891%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (74 samples, 0.02%)</title><rect x="28.3911%" y="389" width="0.0155%" height="15" fill="rgb(222,14,52)" fg:x="135353" fg:w="74"/><text x="28.6411%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 samples, 0.01%)</title><rect x="28.4176%" y="357" width="0.0147%" height="15" fill="rgb(254,198,14)" fg:x="135479" fg:w="70"/><text x="28.6676%" y="367.50"></text></g><g><title>core::fmt::Formatter::pad_integral (78 samples, 0.02%)</title><rect x="28.4322%" y="357" width="0.0164%" height="15" fill="rgb(220,217,30)" fg:x="135549" fg:w="78"/><text x="28.6822%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (203 samples, 0.04%)</title><rect x="28.4079%" y="389" width="0.0426%" height="15" fill="rgb(215,146,41)" fg:x="135433" fg:w="203"/><text x="28.6579%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (182 samples, 0.04%)</title><rect x="28.4123%" y="373" width="0.0382%" height="15" fill="rgb(217,27,36)" fg:x="135454" fg:w="182"/><text x="28.6623%" y="383.50"></text></g><g><title>alloc::fmt::format (389 samples, 0.08%)</title><rect x="28.3720%" y="437" width="0.0816%" height="15" fill="rgb(219,218,39)" fg:x="135262" fg:w="389"/><text x="28.6220%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (328 samples, 0.07%)</title><rect x="28.3848%" y="421" width="0.0688%" height="15" fill="rgb(219,4,42)" fg:x="135323" fg:w="328"/><text x="28.6348%" y="431.50"></text></g><g><title>core::fmt::write (326 samples, 0.07%)</title><rect x="28.3853%" y="405" width="0.0684%" height="15" fill="rgb(249,119,36)" fg:x="135325" fg:w="326"/><text x="28.6353%" y="415.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (399 samples, 0.08%)</title><rect x="28.3704%" y="453" width="0.0837%" height="15" fill="rgb(209,23,33)" fg:x="135254" fg:w="399"/><text x="28.6204%" y="463.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (490 samples, 0.10%)</title><rect x="28.3532%" y="485" width="0.1028%" height="15" fill="rgb(211,10,0)" fg:x="135172" fg:w="490"/><text x="28.6032%" y="495.50"></text></g><g><title>parsed::parser::before::{{closure}} (483 samples, 0.10%)</title><rect x="28.3546%" y="469" width="0.1013%" height="15" fill="rgb(208,99,37)" fg:x="135179" fg:w="483"/><text x="28.6046%" y="479.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (500 samples, 0.10%)</title><rect x="28.3523%" y="501" width="0.1049%" height="15" fill="rgb(213,132,31)" fg:x="135168" fg:w="500"/><text x="28.6023%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (70 samples, 0.01%)</title><rect x="28.4671%" y="437" width="0.0147%" height="15" fill="rgb(243,129,40)" fg:x="135715" fg:w="70"/><text x="28.7171%" y="447.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,738 samples, 0.36%)</title><rect x="28.1176%" y="597" width="0.3646%" height="15" fill="rgb(210,66,33)" fg:x="134049" fg:w="1738"/><text x="28.3676%" y="607.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,423 samples, 0.30%)</title><rect x="28.1837%" y="581" width="0.2985%" height="15" fill="rgb(209,189,4)" fg:x="134364" fg:w="1423"/><text x="28.4337%" y="591.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,423 samples, 0.30%)</title><rect x="28.1837%" y="565" width="0.2985%" height="15" fill="rgb(214,107,37)" fg:x="134364" fg:w="1423"/><text x="28.4337%" y="575.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,059 samples, 0.22%)</title><rect x="28.2600%" y="549" width="0.2221%" height="15" fill="rgb(245,88,54)" fg:x="134728" fg:w="1059"/><text x="28.5100%" y="559.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,059 samples, 0.22%)</title><rect x="28.2600%" y="533" width="0.2221%" height="15" fill="rgb(205,146,20)" fg:x="134728" fg:w="1059"/><text x="28.5100%" y="543.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (623 samples, 0.13%)</title><rect x="28.3515%" y="517" width="0.1307%" height="15" fill="rgb(220,161,25)" fg:x="135164" fg:w="623"/><text x="28.6015%" y="527.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (119 samples, 0.02%)</title><rect x="28.4572%" y="501" width="0.0250%" height="15" fill="rgb(215,152,15)" fg:x="135668" fg:w="119"/><text x="28.7072%" y="511.50"></text></g><g><title>parsed::http::as_string (78 samples, 0.02%)</title><rect x="28.4658%" y="485" width="0.0164%" height="15" fill="rgb(233,192,44)" fg:x="135709" fg:w="78"/><text x="28.7158%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (78 samples, 0.02%)</title><rect x="28.4658%" y="469" width="0.0164%" height="15" fill="rgb(240,170,46)" fg:x="135709" fg:w="78"/><text x="28.7158%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (77 samples, 0.02%)</title><rect x="28.4660%" y="453" width="0.0162%" height="15" fill="rgb(207,104,33)" fg:x="135710" fg:w="77"/><text x="28.7160%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50 samples, 0.01%)</title><rect x="28.4950%" y="501" width="0.0105%" height="15" fill="rgb(219,21,39)" fg:x="135848" fg:w="50"/><text x="28.7450%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (48 samples, 0.01%)</title><rect x="28.4954%" y="485" width="0.0101%" height="15" fill="rgb(214,133,29)" fg:x="135850" fg:w="48"/><text x="28.7454%" y="495.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (3,103 samples, 0.65%)</title><rect x="27.8583%" y="629" width="0.6509%" height="15" fill="rgb(226,93,6)" fg:x="132813" fg:w="3103"/><text x="28.1083%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,868 samples, 0.39%)</title><rect x="28.1174%" y="613" width="0.3918%" height="15" fill="rgb(252,222,34)" fg:x="134048" fg:w="1868"/><text x="28.3674%" y="623.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (129 samples, 0.03%)</title><rect x="28.4822%" y="597" width="0.0271%" height="15" fill="rgb(252,92,48)" fg:x="135787" fg:w="129"/><text x="28.7322%" y="607.50"></text></g><g><title>parsed::http::as_string (122 samples, 0.03%)</title><rect x="28.4836%" y="581" width="0.0256%" height="15" fill="rgb(245,223,24)" fg:x="135794" fg:w="122"/><text x="28.7336%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (122 samples, 0.03%)</title><rect x="28.4836%" y="565" width="0.0256%" height="15" fill="rgb(205,176,3)" fg:x="135794" fg:w="122"/><text x="28.7336%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (121 samples, 0.03%)</title><rect x="28.4838%" y="549" width="0.0254%" height="15" fill="rgb(235,151,15)" fg:x="135795" fg:w="121"/><text x="28.7338%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (115 samples, 0.02%)</title><rect x="28.4851%" y="533" width="0.0241%" height="15" fill="rgb(237,209,11)" fg:x="135801" fg:w="115"/><text x="28.7351%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (71 samples, 0.01%)</title><rect x="28.4943%" y="517" width="0.0149%" height="15" fill="rgb(243,227,24)" fg:x="135845" fg:w="71"/><text x="28.7443%" y="527.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (3,134 samples, 0.66%)</title><rect x="27.8583%" y="645" width="0.6574%" height="15" fill="rgb(239,193,16)" fg:x="132813" fg:w="3134"/><text x="28.1083%" y="655.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (68 samples, 0.01%)</title><rect x="28.5166%" y="629" width="0.0143%" height="15" fill="rgb(231,27,9)" fg:x="135951" fg:w="68"/><text x="28.7666%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (66 samples, 0.01%)</title><rect x="28.5170%" y="613" width="0.0138%" height="15" fill="rgb(219,169,10)" fg:x="135953" fg:w="66"/><text x="28.7670%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.01%)</title><rect x="28.5199%" y="597" width="0.0109%" height="15" fill="rgb(244,229,43)" fg:x="135967" fg:w="52"/><text x="28.7699%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (52 samples, 0.01%)</title><rect x="28.5199%" y="581" width="0.0109%" height="15" fill="rgb(254,38,20)" fg:x="135967" fg:w="52"/><text x="28.7699%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (52 samples, 0.01%)</title><rect x="28.5199%" y="565" width="0.0109%" height="15" fill="rgb(250,47,30)" fg:x="135967" fg:w="52"/><text x="28.7699%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (52 samples, 0.01%)</title><rect x="28.5199%" y="549" width="0.0109%" height="15" fill="rgb(224,124,36)" fg:x="135967" fg:w="52"/><text x="28.7699%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.01%)</title><rect x="28.5321%" y="613" width="0.0130%" height="15" fill="rgb(246,68,51)" fg:x="136025" fg:w="62"/><text x="28.7821%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (56 samples, 0.01%)</title><rect x="28.5333%" y="597" width="0.0117%" height="15" fill="rgb(253,43,49)" fg:x="136031" fg:w="56"/><text x="28.7833%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (56 samples, 0.01%)</title><rect x="28.5333%" y="581" width="0.0117%" height="15" fill="rgb(219,54,36)" fg:x="136031" fg:w="56"/><text x="28.7833%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (56 samples, 0.01%)</title><rect x="28.5333%" y="565" width="0.0117%" height="15" fill="rgb(227,133,34)" fg:x="136031" fg:w="56"/><text x="28.7833%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (56 samples, 0.01%)</title><rect x="28.5333%" y="549" width="0.0117%" height="15" fill="rgb(247,227,15)" fg:x="136031" fg:w="56"/><text x="28.7833%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.01%)</title><rect x="28.5333%" y="533" width="0.0117%" height="15" fill="rgb(229,96,14)" fg:x="136031" fg:w="56"/><text x="28.7833%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (56 samples, 0.01%)</title><rect x="28.5333%" y="517" width="0.0117%" height="15" fill="rgb(220,79,17)" fg:x="136031" fg:w="56"/><text x="28.7833%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (56 samples, 0.01%)</title><rect x="28.5333%" y="501" width="0.0117%" height="15" fill="rgb(205,131,53)" fg:x="136031" fg:w="56"/><text x="28.7833%" y="511.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (3,325 samples, 0.70%)</title><rect x="27.8544%" y="661" width="0.6974%" height="15" fill="rgb(209,50,29)" fg:x="132794" fg:w="3325"/><text x="28.1044%" y="671.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (172 samples, 0.04%)</title><rect x="28.5157%" y="645" width="0.0361%" height="15" fill="rgb(245,86,46)" fg:x="135947" fg:w="172"/><text x="28.7657%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (96 samples, 0.02%)</title><rect x="28.5317%" y="629" width="0.0201%" height="15" fill="rgb(235,66,46)" fg:x="136023" fg:w="96"/><text x="28.7817%" y="639.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (3,407 samples, 0.71%)</title><rect x="27.8500%" y="693" width="0.7146%" height="15" fill="rgb(232,148,31)" fg:x="132773" fg:w="3407"/><text x="28.1000%" y="703.50"></text></g><g><title>parsed::parser::repeat::{{closure}} (3,400 samples, 0.71%)</title><rect x="27.8514%" y="677" width="0.7132%" height="15" fill="rgb(217,149,8)" fg:x="132780" fg:w="3400"/><text x="28.1014%" y="687.50"></text></g><g><title>__libc_malloc (90 samples, 0.02%)</title><rect x="28.5875%" y="453" width="0.0189%" height="15" fill="rgb(209,183,11)" fg:x="136289" fg:w="90"/><text x="28.8375%" y="463.50"></text></g><g><title>alloc::string::String::with_capacity (99 samples, 0.02%)</title><rect x="28.5875%" y="581" width="0.0208%" height="15" fill="rgb(208,55,20)" fg:x="136289" fg:w="99"/><text x="28.8375%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (99 samples, 0.02%)</title><rect x="28.5875%" y="565" width="0.0208%" height="15" fill="rgb(218,39,14)" fg:x="136289" fg:w="99"/><text x="28.8375%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (99 samples, 0.02%)</title><rect x="28.5875%" y="549" width="0.0208%" height="15" fill="rgb(216,169,33)" fg:x="136289" fg:w="99"/><text x="28.8375%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (99 samples, 0.02%)</title><rect x="28.5875%" y="533" width="0.0208%" height="15" fill="rgb(233,80,24)" fg:x="136289" fg:w="99"/><text x="28.8375%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (99 samples, 0.02%)</title><rect x="28.5875%" y="517" width="0.0208%" height="15" fill="rgb(213,179,31)" fg:x="136289" fg:w="99"/><text x="28.8375%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (99 samples, 0.02%)</title><rect x="28.5875%" y="501" width="0.0208%" height="15" fill="rgb(209,19,5)" fg:x="136289" fg:w="99"/><text x="28.8375%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (99 samples, 0.02%)</title><rect x="28.5875%" y="485" width="0.0208%" height="15" fill="rgb(219,18,35)" fg:x="136289" fg:w="99"/><text x="28.8375%" y="495.50"></text></g><g><title>alloc::alloc::alloc (99 samples, 0.02%)</title><rect x="28.5875%" y="469" width="0.0208%" height="15" fill="rgb(209,169,16)" fg:x="136289" fg:w="99"/><text x="28.8375%" y="479.50"></text></g><g><title>alloc::fmt::format (187 samples, 0.04%)</title><rect x="28.5868%" y="597" width="0.0392%" height="15" fill="rgb(245,90,51)" fg:x="136286" fg:w="187"/><text x="28.8368%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (77 samples, 0.02%)</title><rect x="28.6099%" y="581" width="0.0162%" height="15" fill="rgb(220,99,45)" fg:x="136396" fg:w="77"/><text x="28.8599%" y="591.50"></text></g><g><title>core::fmt::write (75 samples, 0.02%)</title><rect x="28.6103%" y="565" width="0.0157%" height="15" fill="rgb(249,89,25)" fg:x="136398" fg:w="75"/><text x="28.8603%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (64 samples, 0.01%)</title><rect x="28.6726%" y="437" width="0.0134%" height="15" fill="rgb(239,193,0)" fg:x="136695" fg:w="64"/><text x="28.9226%" y="447.50"></text></g><g><title>[libc-2.31.so] (56 samples, 0.01%)</title><rect x="28.6743%" y="421" width="0.0117%" height="15" fill="rgb(231,126,1)" fg:x="136703" fg:w="56"/><text x="28.9243%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (140 samples, 0.03%)</title><rect x="28.6569%" y="533" width="0.0294%" height="15" fill="rgb(243,166,3)" fg:x="136620" fg:w="140"/><text x="28.9069%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (83 samples, 0.02%)</title><rect x="28.6688%" y="517" width="0.0174%" height="15" fill="rgb(223,22,34)" fg:x="136677" fg:w="83"/><text x="28.9188%" y="527.50"></text></g><g><title>alloc::string::String::push_str (83 samples, 0.02%)</title><rect x="28.6688%" y="501" width="0.0174%" height="15" fill="rgb(251,52,51)" fg:x="136677" fg:w="83"/><text x="28.9188%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (83 samples, 0.02%)</title><rect x="28.6688%" y="485" width="0.0174%" height="15" fill="rgb(221,165,28)" fg:x="136677" fg:w="83"/><text x="28.9188%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (83 samples, 0.02%)</title><rect x="28.6688%" y="469" width="0.0174%" height="15" fill="rgb(218,121,47)" fg:x="136677" fg:w="83"/><text x="28.9188%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (83 samples, 0.02%)</title><rect x="28.6688%" y="453" width="0.0174%" height="15" fill="rgb(209,120,9)" fg:x="136677" fg:w="83"/><text x="28.9188%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (66 samples, 0.01%)</title><rect x="28.6932%" y="533" width="0.0138%" height="15" fill="rgb(236,68,12)" fg:x="136793" fg:w="66"/><text x="28.9432%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (64 samples, 0.01%)</title><rect x="28.6936%" y="517" width="0.0134%" height="15" fill="rgb(225,194,26)" fg:x="136795" fg:w="64"/><text x="28.9436%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (283 samples, 0.06%)</title><rect x="28.6493%" y="565" width="0.0594%" height="15" fill="rgb(231,84,39)" fg:x="136584" fg:w="283"/><text x="28.8993%" y="575.50"></text></g><g><title>core::fmt::write (281 samples, 0.06%)</title><rect x="28.6498%" y="549" width="0.0589%" height="15" fill="rgb(210,11,45)" fg:x="136586" fg:w="281"/><text x="28.8998%" y="559.50"></text></g><g><title>alloc::fmt::format (334 samples, 0.07%)</title><rect x="28.6393%" y="581" width="0.0701%" height="15" fill="rgb(224,54,52)" fg:x="136536" fg:w="334"/><text x="28.8893%" y="591.50"></text></g><g><title>[libc-2.31.so] (66 samples, 0.01%)</title><rect x="28.7114%" y="485" width="0.0138%" height="15" fill="rgb(238,102,14)" fg:x="136880" fg:w="66"/><text x="28.9614%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (89 samples, 0.02%)</title><rect x="28.7112%" y="517" width="0.0187%" height="15" fill="rgb(243,160,52)" fg:x="136879" fg:w="89"/><text x="28.9612%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (89 samples, 0.02%)</title><rect x="28.7112%" y="501" width="0.0187%" height="15" fill="rgb(216,114,19)" fg:x="136879" fg:w="89"/><text x="28.9612%" y="511.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (451 samples, 0.09%)</title><rect x="28.6355%" y="597" width="0.0946%" height="15" fill="rgb(244,166,37)" fg:x="136518" fg:w="451"/><text x="28.8855%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (92 samples, 0.02%)</title><rect x="28.7108%" y="581" width="0.0193%" height="15" fill="rgb(246,29,44)" fg:x="136877" fg:w="92"/><text x="28.9608%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (92 samples, 0.02%)</title><rect x="28.7108%" y="565" width="0.0193%" height="15" fill="rgb(215,56,53)" fg:x="136877" fg:w="92"/><text x="28.9608%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (92 samples, 0.02%)</title><rect x="28.7108%" y="549" width="0.0193%" height="15" fill="rgb(217,60,2)" fg:x="136877" fg:w="92"/><text x="28.9608%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (92 samples, 0.02%)</title><rect x="28.7108%" y="533" width="0.0193%" height="15" fill="rgb(207,26,24)" fg:x="136877" fg:w="92"/><text x="28.9608%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (61 samples, 0.01%)</title><rect x="28.7322%" y="581" width="0.0128%" height="15" fill="rgb(252,210,15)" fg:x="136979" fg:w="61"/><text x="28.9822%" y="591.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (861 samples, 0.18%)</title><rect x="28.5768%" y="629" width="0.1806%" height="15" fill="rgb(253,209,26)" fg:x="136238" fg:w="861"/><text x="28.8268%" y="639.50"></text></g><g><title>parsed::parser::single::{{closure}} (853 samples, 0.18%)</title><rect x="28.5784%" y="613" width="0.1789%" height="15" fill="rgb(238,170,14)" fg:x="136246" fg:w="853"/><text x="28.8284%" y="623.50"></text></g><g><title>parsed::stream::ByteStream::next (130 samples, 0.03%)</title><rect x="28.7301%" y="597" width="0.0273%" height="15" fill="rgb(216,178,15)" fg:x="136969" fg:w="130"/><text x="28.9801%" y="607.50"></text></g><g><title>parsed::stream::ByteStream::get (59 samples, 0.01%)</title><rect x="28.7450%" y="581" width="0.0124%" height="15" fill="rgb(250,197,2)" fg:x="137040" fg:w="59"/><text x="28.9950%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (48 samples, 0.01%)</title><rect x="28.7576%" y="629" width="0.0101%" height="15" fill="rgb(212,70,42)" fg:x="137100" fg:w="48"/><text x="29.0076%" y="639.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,010 samples, 0.21%)</title><rect x="28.5709%" y="661" width="0.2119%" height="15" fill="rgb(227,213,9)" fg:x="136210" fg:w="1010"/><text x="28.8209%" y="671.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,000 samples, 0.21%)</title><rect x="28.5730%" y="645" width="0.2098%" height="15" fill="rgb(245,99,25)" fg:x="136220" fg:w="1000"/><text x="28.8230%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (71 samples, 0.01%)</title><rect x="28.7679%" y="629" width="0.0149%" height="15" fill="rgb(250,82,29)" fg:x="137149" fg:w="71"/><text x="29.0179%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (71 samples, 0.01%)</title><rect x="28.7679%" y="613" width="0.0149%" height="15" fill="rgb(241,226,54)" fg:x="137149" fg:w="71"/><text x="29.0179%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (65 samples, 0.01%)</title><rect x="28.7691%" y="597" width="0.0136%" height="15" fill="rgb(221,99,41)" fg:x="137155" fg:w="65"/><text x="29.0191%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (49 samples, 0.01%)</title><rect x="28.7725%" y="581" width="0.0103%" height="15" fill="rgb(213,90,21)" fg:x="137171" fg:w="49"/><text x="29.0225%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (48 samples, 0.01%)</title><rect x="28.8278%" y="501" width="0.0101%" height="15" fill="rgb(205,208,24)" fg:x="137435" fg:w="48"/><text x="29.0778%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (115 samples, 0.02%)</title><rect x="28.8247%" y="533" width="0.0241%" height="15" fill="rgb(246,31,12)" fg:x="137420" fg:w="115"/><text x="29.0747%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (104 samples, 0.02%)</title><rect x="28.8270%" y="517" width="0.0218%" height="15" fill="rgb(213,154,6)" fg:x="137431" fg:w="104"/><text x="29.0770%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (172 samples, 0.04%)</title><rect x="28.8134%" y="565" width="0.0361%" height="15" fill="rgb(222,163,29)" fg:x="137366" fg:w="172"/><text x="29.0634%" y="575.50"></text></g><g><title>core::fmt::write (168 samples, 0.04%)</title><rect x="28.8142%" y="549" width="0.0352%" height="15" fill="rgb(227,201,8)" fg:x="137370" fg:w="168"/><text x="29.0642%" y="559.50"></text></g><g><title>alloc::fmt::format (191 samples, 0.04%)</title><rect x="28.8096%" y="581" width="0.0401%" height="15" fill="rgb(233,9,32)" fg:x="137348" fg:w="191"/><text x="29.0596%" y="591.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (196 samples, 0.04%)</title><rect x="28.8092%" y="597" width="0.0411%" height="15" fill="rgb(217,54,24)" fg:x="137346" fg:w="196"/><text x="29.0592%" y="607.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (273 samples, 0.06%)</title><rect x="28.7955%" y="629" width="0.0573%" height="15" fill="rgb(235,192,0)" fg:x="137281" fg:w="273"/><text x="29.0455%" y="639.50"></text></g><g><title>parsed::parser::before::{{closure}} (268 samples, 0.06%)</title><rect x="28.7966%" y="613" width="0.0562%" height="15" fill="rgb(235,45,9)" fg:x="137286" fg:w="268"/><text x="29.0466%" y="623.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (48 samples, 0.01%)</title><rect x="28.8572%" y="597" width="0.0101%" height="15" fill="rgb(246,42,40)" fg:x="137575" fg:w="48"/><text x="29.1072%" y="607.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (88 samples, 0.02%)</title><rect x="28.8528%" y="629" width="0.0185%" height="15" fill="rgb(248,111,24)" fg:x="137554" fg:w="88"/><text x="29.1028%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (72 samples, 0.02%)</title><rect x="28.8562%" y="613" width="0.0151%" height="15" fill="rgb(249,65,22)" fg:x="137570" fg:w="72"/><text x="29.1062%" y="623.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (398 samples, 0.08%)</title><rect x="28.7916%" y="645" width="0.0835%" height="15" fill="rgb(238,111,51)" fg:x="137262" fg:w="398"/><text x="29.0416%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (93 samples, 0.02%)</title><rect x="28.8765%" y="581" width="0.0195%" height="15" fill="rgb(250,118,22)" fg:x="137667" fg:w="93"/><text x="29.1265%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (53 samples, 0.01%)</title><rect x="28.8849%" y="565" width="0.0111%" height="15" fill="rgb(234,84,26)" fg:x="137707" fg:w="53"/><text x="29.1349%" y="575.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (530 samples, 0.11%)</title><rect x="28.7851%" y="661" width="0.1112%" height="15" fill="rgb(243,172,12)" fg:x="137231" fg:w="530"/><text x="29.0351%" y="671.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (101 samples, 0.02%)</title><rect x="28.8750%" y="645" width="0.0212%" height="15" fill="rgb(236,150,49)" fg:x="137660" fg:w="101"/><text x="29.1250%" y="655.50"></text></g><g><title>parsed::http::as_string (98 samples, 0.02%)</title><rect x="28.8757%" y="629" width="0.0206%" height="15" fill="rgb(225,197,26)" fg:x="137663" fg:w="98"/><text x="29.1257%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (98 samples, 0.02%)</title><rect x="28.8757%" y="613" width="0.0206%" height="15" fill="rgb(214,17,42)" fg:x="137663" fg:w="98"/><text x="29.1257%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (97 samples, 0.02%)</title><rect x="28.8759%" y="597" width="0.0203%" height="15" fill="rgb(224,165,40)" fg:x="137664" fg:w="97"/><text x="29.1259%" y="607.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,576 samples, 0.33%)</title><rect x="28.5680%" y="677" width="0.3306%" height="15" fill="rgb(246,100,4)" fg:x="136196" fg:w="1576"/><text x="28.8180%" y="687.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,619 samples, 0.34%)</title><rect x="28.5654%" y="693" width="0.3396%" height="15" fill="rgb(222,103,0)" fg:x="136184" fg:w="1619"/><text x="28.8154%" y="703.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (5,103 samples, 1.07%)</title><rect x="27.8409%" y="725" width="1.0704%" height="15" fill="rgb(227,189,26)" fg:x="132730" fg:w="5103"/><text x="28.0909%" y="735.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (5,078 samples, 1.07%)</title><rect x="27.8462%" y="709" width="1.0651%" height="15" fill="rgb(214,202,17)" fg:x="132755" fg:w="5078"/><text x="28.0962%" y="719.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (6,194 samples, 1.30%)</title><rect x="27.6157%" y="741" width="1.2992%" height="15" fill="rgb(229,111,3)" fg:x="131656" fg:w="6194"/><text x="27.8657%" y="751.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (6,230 samples, 1.31%)</title><rect x="27.6131%" y="757" width="1.3068%" height="15" fill="rgb(229,172,15)" fg:x="131644" fg:w="6230"/><text x="27.8631%" y="767.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (6,639 samples, 1.39%)</title><rect x="27.5456%" y="773" width="1.3926%" height="15" fill="rgb(230,224,35)" fg:x="131322" fg:w="6639"/><text x="27.7956%" y="783.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (80 samples, 0.02%)</title><rect x="28.9214%" y="757" width="0.0168%" height="15" fill="rgb(251,141,6)" fg:x="137881" fg:w="80"/><text x="29.1714%" y="767.50"></text></g><g><title>parsed::http::get_content_length (79 samples, 0.02%)</title><rect x="28.9216%" y="741" width="0.0166%" height="15" fill="rgb(225,208,6)" fg:x="137882" fg:w="79"/><text x="29.1716%" y="751.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (6,667 samples, 1.40%)</title><rect x="27.5399%" y="805" width="1.3984%" height="15" fill="rgb(246,181,16)" fg:x="131295" fg:w="6667"/><text x="27.7899%" y="815.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (6,667 samples, 1.40%)</title><rect x="27.5399%" y="789" width="1.3984%" height="15" fill="rgb(227,129,36)" fg:x="131295" fg:w="6667"/><text x="27.7899%" y="799.50"></text></g><g><title>parsed::http::parse_http_request (6,711 samples, 1.41%)</title><rect x="27.5383%" y="821" width="1.4077%" height="15" fill="rgb(248,117,24)" fg:x="131287" fg:w="6711"/><text x="27.7883%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (85 samples, 0.02%)</title><rect x="28.9575%" y="757" width="0.0178%" height="15" fill="rgb(214,185,35)" fg:x="138053" fg:w="85"/><text x="29.2075%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (85 samples, 0.02%)</title><rect x="28.9575%" y="741" width="0.0178%" height="15" fill="rgb(236,150,34)" fg:x="138053" fg:w="85"/><text x="29.2075%" y="751.50"></text></g><g><title>cfree (82 samples, 0.02%)</title><rect x="28.9581%" y="725" width="0.0172%" height="15" fill="rgb(243,228,27)" fg:x="138056" fg:w="82"/><text x="29.2081%" y="735.50"></text></g><g><title>parsed::stream::ByteStream::pull (142 samples, 0.03%)</title><rect x="28.9459%" y="821" width="0.0298%" height="15" fill="rgb(245,77,44)" fg:x="137998" fg:w="142"/><text x="29.1959%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (87 samples, 0.02%)</title><rect x="28.9575%" y="805" width="0.0182%" height="15" fill="rgb(235,214,42)" fg:x="138053" fg:w="87"/><text x="29.2075%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (87 samples, 0.02%)</title><rect x="28.9575%" y="789" width="0.0182%" height="15" fill="rgb(221,74,3)" fg:x="138053" fg:w="87"/><text x="29.2075%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 0.02%)</title><rect x="28.9575%" y="773" width="0.0182%" height="15" fill="rgb(206,121,29)" fg:x="138053" fg:w="87"/><text x="29.2075%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.02%)</title><rect x="28.9782%" y="805" width="0.0164%" height="15" fill="rgb(249,131,53)" fg:x="138152" fg:w="78"/><text x="29.2282%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (330 samples, 0.07%)</title><rect x="28.9946%" y="805" width="0.0692%" height="15" fill="rgb(236,170,29)" fg:x="138230" fg:w="330"/><text x="29.2446%" y="815.50"></text></g><g><title>parsed::stream::ByteStream::put (426 samples, 0.09%)</title><rect x="28.9757%" y="821" width="0.0894%" height="15" fill="rgb(247,96,15)" fg:x="138140" fg:w="426"/><text x="29.2257%" y="831.50"></text></g><g><title>[libc-2.31.so] (97 samples, 0.02%)</title><rect x="29.1022%" y="565" width="0.0203%" height="15" fill="rgb(211,210,7)" fg:x="138743" fg:w="97"/><text x="29.3522%" y="575.50"></text></g><g><title>__libc_malloc (251 samples, 0.05%)</title><rect x="29.0703%" y="581" width="0.0526%" height="15" fill="rgb(240,88,50)" fg:x="138591" fg:w="251"/><text x="29.3203%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (269 samples, 0.06%)</title><rect x="29.0695%" y="677" width="0.0564%" height="15" fill="rgb(209,229,26)" fg:x="138587" fg:w="269"/><text x="29.3195%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (269 samples, 0.06%)</title><rect x="29.0695%" y="661" width="0.0564%" height="15" fill="rgb(210,68,23)" fg:x="138587" fg:w="269"/><text x="29.3195%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (269 samples, 0.06%)</title><rect x="29.0695%" y="645" width="0.0564%" height="15" fill="rgb(229,180,13)" fg:x="138587" fg:w="269"/><text x="29.3195%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (269 samples, 0.06%)</title><rect x="29.0695%" y="629" width="0.0564%" height="15" fill="rgb(236,53,44)" fg:x="138587" fg:w="269"/><text x="29.3195%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (269 samples, 0.06%)</title><rect x="29.0695%" y="613" width="0.0564%" height="15" fill="rgb(244,214,29)" fg:x="138587" fg:w="269"/><text x="29.3195%" y="623.50"></text></g><g><title>alloc::alloc::alloc (268 samples, 0.06%)</title><rect x="29.0697%" y="597" width="0.0562%" height="15" fill="rgb(220,75,29)" fg:x="138588" fg:w="268"/><text x="29.3197%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (273 samples, 0.06%)</title><rect x="29.0695%" y="757" width="0.0573%" height="15" fill="rgb(214,183,37)" fg:x="138587" fg:w="273"/><text x="29.3195%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (273 samples, 0.06%)</title><rect x="29.0695%" y="741" width="0.0573%" height="15" fill="rgb(239,117,29)" fg:x="138587" fg:w="273"/><text x="29.3195%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (273 samples, 0.06%)</title><rect x="29.0695%" y="725" width="0.0573%" height="15" fill="rgb(237,171,35)" fg:x="138587" fg:w="273"/><text x="29.3195%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (273 samples, 0.06%)</title><rect x="29.0695%" y="709" width="0.0573%" height="15" fill="rgb(229,178,53)" fg:x="138587" fg:w="273"/><text x="29.3195%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (273 samples, 0.06%)</title><rect x="29.0695%" y="693" width="0.0573%" height="15" fill="rgb(210,102,19)" fg:x="138587" fg:w="273"/><text x="29.3195%" y="703.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (277 samples, 0.06%)</title><rect x="29.0695%" y="805" width="0.0581%" height="15" fill="rgb(235,127,22)" fg:x="138587" fg:w="277"/><text x="29.3195%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (277 samples, 0.06%)</title><rect x="29.0695%" y="789" width="0.0581%" height="15" fill="rgb(244,31,31)" fg:x="138587" fg:w="277"/><text x="29.3195%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (277 samples, 0.06%)</title><rect x="29.0695%" y="773" width="0.0581%" height="15" fill="rgb(231,43,21)" fg:x="138587" fg:w="277"/><text x="29.3195%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (57 samples, 0.01%)</title><rect x="29.1442%" y="741" width="0.0120%" height="15" fill="rgb(217,131,35)" fg:x="138943" fg:w="57"/><text x="29.3942%" y="751.50"></text></g><g><title>alloc::string::String::push_str (55 samples, 0.01%)</title><rect x="29.1446%" y="725" width="0.0115%" height="15" fill="rgb(221,149,4)" fg:x="138945" fg:w="55"/><text x="29.3946%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (55 samples, 0.01%)</title><rect x="29.1446%" y="709" width="0.0115%" height="15" fill="rgb(232,170,28)" fg:x="138945" fg:w="55"/><text x="29.3946%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (55 samples, 0.01%)</title><rect x="29.1446%" y="693" width="0.0115%" height="15" fill="rgb(238,56,10)" fg:x="138945" fg:w="55"/><text x="29.3946%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (55 samples, 0.01%)</title><rect x="29.1446%" y="677" width="0.0115%" height="15" fill="rgb(235,196,14)" fg:x="138945" fg:w="55"/><text x="29.3946%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (109 samples, 0.02%)</title><rect x="29.1846%" y="677" width="0.0229%" height="15" fill="rgb(216,45,48)" fg:x="139136" fg:w="109"/><text x="29.4346%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (98 samples, 0.02%)</title><rect x="29.1869%" y="661" width="0.0206%" height="15" fill="rgb(238,213,17)" fg:x="139147" fg:w="98"/><text x="29.4369%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad_integral (89 samples, 0.02%)</title><rect x="29.1888%" y="645" width="0.0187%" height="15" fill="rgb(212,13,2)" fg:x="139156" fg:w="89"/><text x="29.4388%" y="655.50"></text></g><g><title>core::fmt::run (137 samples, 0.03%)</title><rect x="29.1790%" y="693" width="0.0287%" height="15" fill="rgb(240,114,20)" fg:x="139109" fg:w="137"/><text x="29.4290%" y="703.50"></text></g><g><title>chrono::format::format_inner::write_local_minus_utc (178 samples, 0.04%)</title><rect x="29.1710%" y="725" width="0.0373%" height="15" fill="rgb(228,41,40)" fg:x="139071" fg:w="178"/><text x="29.4210%" y="735.50"></text></g><g><title>core::fmt::write (158 samples, 0.03%)</title><rect x="29.1752%" y="709" width="0.0331%" height="15" fill="rgb(244,132,35)" fg:x="139091" fg:w="158"/><text x="29.4252%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (115 samples, 0.02%)</title><rect x="29.2270%" y="517" width="0.0241%" height="15" fill="rgb(253,189,4)" fg:x="139338" fg:w="115"/><text x="29.4770%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (115 samples, 0.02%)</title><rect x="29.2270%" y="501" width="0.0241%" height="15" fill="rgb(224,37,19)" fg:x="139338" fg:w="115"/><text x="29.4770%" y="511.50"></text></g><g><title>alloc::alloc::realloc (115 samples, 0.02%)</title><rect x="29.2270%" y="485" width="0.0241%" height="15" fill="rgb(235,223,18)" fg:x="139338" fg:w="115"/><text x="29.4770%" y="495.50"></text></g><g><title>realloc (104 samples, 0.02%)</title><rect x="29.2293%" y="469" width="0.0218%" height="15" fill="rgb(235,163,25)" fg:x="139349" fg:w="104"/><text x="29.4793%" y="479.50"></text></g><g><title>[libc-2.31.so] (63 samples, 0.01%)</title><rect x="29.2379%" y="453" width="0.0132%" height="15" fill="rgb(217,145,28)" fg:x="139390" fg:w="63"/><text x="29.4879%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (121 samples, 0.03%)</title><rect x="29.2262%" y="533" width="0.0254%" height="15" fill="rgb(223,223,32)" fg:x="139334" fg:w="121"/><text x="29.4762%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (147 samples, 0.03%)</title><rect x="29.2216%" y="597" width="0.0308%" height="15" fill="rgb(227,189,39)" fg:x="139312" fg:w="147"/><text x="29.4716%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (143 samples, 0.03%)</title><rect x="29.2224%" y="581" width="0.0300%" height="15" fill="rgb(248,10,22)" fg:x="139316" fg:w="143"/><text x="29.4724%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (133 samples, 0.03%)</title><rect x="29.2245%" y="565" width="0.0279%" height="15" fill="rgb(248,46,39)" fg:x="139326" fg:w="133"/><text x="29.4745%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (133 samples, 0.03%)</title><rect x="29.2245%" y="549" width="0.0279%" height="15" fill="rgb(248,113,48)" fg:x="139326" fg:w="133"/><text x="29.4745%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.01%)</title><rect x="29.2524%" y="597" width="0.0103%" height="15" fill="rgb(245,16,25)" fg:x="139459" fg:w="49"/><text x="29.5024%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (219 samples, 0.05%)</title><rect x="29.2169%" y="693" width="0.0459%" height="15" fill="rgb(249,152,16)" fg:x="139290" fg:w="219"/><text x="29.4669%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (200 samples, 0.04%)</title><rect x="29.2209%" y="677" width="0.0420%" height="15" fill="rgb(250,16,1)" fg:x="139309" fg:w="200"/><text x="29.4709%" y="687.50"></text></g><g><title>alloc::string::String::push_str (200 samples, 0.04%)</title><rect x="29.2209%" y="661" width="0.0420%" height="15" fill="rgb(249,138,3)" fg:x="139309" fg:w="200"/><text x="29.4709%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (200 samples, 0.04%)</title><rect x="29.2209%" y="645" width="0.0420%" height="15" fill="rgb(227,71,41)" fg:x="139309" fg:w="200"/><text x="29.4709%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (200 samples, 0.04%)</title><rect x="29.2209%" y="629" width="0.0420%" height="15" fill="rgb(209,184,23)" fg:x="139309" fg:w="200"/><text x="29.4709%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (200 samples, 0.04%)</title><rect x="29.2209%" y="613" width="0.0420%" height="15" fill="rgb(223,215,31)" fg:x="139309" fg:w="200"/><text x="29.4709%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (128 samples, 0.03%)</title><rect x="29.2820%" y="501" width="0.0268%" height="15" fill="rgb(210,146,28)" fg:x="139600" fg:w="128"/><text x="29.5320%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (128 samples, 0.03%)</title><rect x="29.2820%" y="485" width="0.0268%" height="15" fill="rgb(209,183,41)" fg:x="139600" fg:w="128"/><text x="29.5320%" y="495.50"></text></g><g><title>alloc::alloc::realloc (128 samples, 0.03%)</title><rect x="29.2820%" y="469" width="0.0268%" height="15" fill="rgb(209,224,45)" fg:x="139600" fg:w="128"/><text x="29.5320%" y="479.50"></text></g><g><title>realloc (114 samples, 0.02%)</title><rect x="29.2849%" y="453" width="0.0239%" height="15" fill="rgb(224,209,51)" fg:x="139614" fg:w="114"/><text x="29.5349%" y="463.50"></text></g><g><title>__libc_malloc (110 samples, 0.02%)</title><rect x="29.3088%" y="501" width="0.0231%" height="15" fill="rgb(223,17,39)" fg:x="139728" fg:w="110"/><text x="29.5588%" y="511.50"></text></g><g><title>[libc-2.31.so] (74 samples, 0.02%)</title><rect x="29.3164%" y="485" width="0.0155%" height="15" fill="rgb(234,204,37)" fg:x="139764" fg:w="74"/><text x="29.5664%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (254 samples, 0.05%)</title><rect x="29.2805%" y="517" width="0.0533%" height="15" fill="rgb(236,120,5)" fg:x="139593" fg:w="254"/><text x="29.5305%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (281 samples, 0.06%)</title><rect x="29.2776%" y="581" width="0.0589%" height="15" fill="rgb(248,97,27)" fg:x="139579" fg:w="281"/><text x="29.5276%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (280 samples, 0.06%)</title><rect x="29.2778%" y="565" width="0.0587%" height="15" fill="rgb(240,66,17)" fg:x="139580" fg:w="280"/><text x="29.5278%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (280 samples, 0.06%)</title><rect x="29.2778%" y="549" width="0.0587%" height="15" fill="rgb(210,79,3)" fg:x="139580" fg:w="280"/><text x="29.5278%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (280 samples, 0.06%)</title><rect x="29.2778%" y="533" width="0.0587%" height="15" fill="rgb(214,176,27)" fg:x="139580" fg:w="280"/><text x="29.5278%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (302 samples, 0.06%)</title><rect x="29.2769%" y="677" width="0.0633%" height="15" fill="rgb(235,185,3)" fg:x="139576" fg:w="302"/><text x="29.5269%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (300 samples, 0.06%)</title><rect x="29.2773%" y="661" width="0.0629%" height="15" fill="rgb(227,24,12)" fg:x="139578" fg:w="300"/><text x="29.5273%" y="671.50"></text></g><g><title>alloc::string::String::push_str (300 samples, 0.06%)</title><rect x="29.2773%" y="645" width="0.0629%" height="15" fill="rgb(252,169,48)" fg:x="139578" fg:w="300"/><text x="29.5273%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (300 samples, 0.06%)</title><rect x="29.2773%" y="629" width="0.0629%" height="15" fill="rgb(212,65,1)" fg:x="139578" fg:w="300"/><text x="29.5273%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (300 samples, 0.06%)</title><rect x="29.2773%" y="613" width="0.0629%" height="15" fill="rgb(242,39,24)" fg:x="139578" fg:w="300"/><text x="29.5273%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (300 samples, 0.06%)</title><rect x="29.2773%" y="597" width="0.0629%" height="15" fill="rgb(249,32,23)" fg:x="139578" fg:w="300"/><text x="29.5273%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (66 samples, 0.01%)</title><rect x="29.3464%" y="677" width="0.0138%" height="15" fill="rgb(251,195,23)" fg:x="139907" fg:w="66"/><text x="29.5964%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (57 samples, 0.01%)</title><rect x="29.3482%" y="661" width="0.0120%" height="15" fill="rgb(236,174,8)" fg:x="139916" fg:w="57"/><text x="29.5982%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 samples, 0.02%)</title><rect x="29.3755%" y="645" width="0.0243%" height="15" fill="rgb(220,197,8)" fg:x="140046" fg:w="116"/><text x="29.6255%" y="655.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (196 samples, 0.04%)</title><rect x="29.3602%" y="677" width="0.0411%" height="15" fill="rgb(240,108,37)" fg:x="139973" fg:w="196"/><text x="29.6102%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (178 samples, 0.04%)</title><rect x="29.3640%" y="661" width="0.0373%" height="15" fill="rgb(232,176,24)" fg:x="139991" fg:w="178"/><text x="29.6140%" y="671.50"></text></g><g><title>core::fmt::run (654 samples, 0.14%)</title><rect x="29.2646%" y="693" width="0.1372%" height="15" fill="rgb(243,35,29)" fg:x="139517" fg:w="654"/><text x="29.5146%" y="703.50"></text></g><g><title>chrono::format::format_inner (1,171 samples, 0.25%)</title><rect x="29.1582%" y="741" width="0.2456%" height="15" fill="rgb(210,37,18)" fg:x="139010" fg:w="1171"/><text x="29.4082%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (932 samples, 0.20%)</title><rect x="29.2083%" y="725" width="0.1955%" height="15" fill="rgb(224,184,40)" fg:x="139249" fg:w="932"/><text x="29.4583%" y="735.50"></text></g><g><title>core::fmt::write (930 samples, 0.20%)</title><rect x="29.2088%" y="709" width="0.1951%" height="15" fill="rgb(236,39,29)" fg:x="139251" fg:w="930"/><text x="29.4588%" y="719.50"></text></g><g><title>chrono::format::format (1,275 samples, 0.27%)</title><rect x="29.1439%" y="757" width="0.2674%" height="15" fill="rgb(232,48,39)" fg:x="138942" fg:w="1275"/><text x="29.3939%" y="767.50"></text></g><g><title>&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (1,282 samples, 0.27%)</title><rect x="29.1427%" y="773" width="0.2689%" height="15" fill="rgb(236,34,42)" fg:x="138936" fg:w="1282"/><text x="29.3927%" y="783.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,298 samples, 0.27%)</title><rect x="29.1423%" y="789" width="0.2723%" height="15" fill="rgb(243,106,37)" fg:x="138934" fg:w="1298"/><text x="29.3923%" y="799.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (118 samples, 0.02%)</title><rect x="29.4168%" y="709" width="0.0248%" height="15" fill="rgb(218,96,6)" fg:x="140243" fg:w="118"/><text x="29.6668%" y="719.50"></text></g><g><title>chrono::naive::time::NaiveTime::overflowing_add_signed (59 samples, 0.01%)</title><rect x="29.4292%" y="693" width="0.0124%" height="15" fill="rgb(235,130,12)" fg:x="140302" fg:w="59"/><text x="29.6792%" y="703.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (124 samples, 0.03%)</title><rect x="29.4162%" y="725" width="0.0260%" height="15" fill="rgb(231,95,0)" fg:x="140240" fg:w="124"/><text x="29.6662%" y="735.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::naive_local (128 samples, 0.03%)</title><rect x="29.4156%" y="773" width="0.0268%" height="15" fill="rgb(228,12,23)" fg:x="140237" fg:w="128"/><text x="29.6656%" y="783.50"></text></g><g><title>chrono::offset::fixed::&lt;impl core::ops::arith::Add&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::add (125 samples, 0.03%)</title><rect x="29.4162%" y="757" width="0.0262%" height="15" fill="rgb(216,12,1)" fg:x="140240" fg:w="125"/><text x="29.6662%" y="767.50"></text></g><g><title>chrono::offset::fixed::add_with_leapsecond (125 samples, 0.03%)</title><rect x="29.4162%" y="741" width="0.0262%" height="15" fill="rgb(219,59,3)" fg:x="140240" fg:w="125"/><text x="29.6662%" y="751.50"></text></g><g><title>__libc_malloc (81 samples, 0.02%)</title><rect x="29.4613%" y="533" width="0.0170%" height="15" fill="rgb(215,208,46)" fg:x="140455" fg:w="81"/><text x="29.7113%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (102 samples, 0.02%)</title><rect x="29.4596%" y="549" width="0.0214%" height="15" fill="rgb(254,224,29)" fg:x="140447" fg:w="102"/><text x="29.7096%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (122 samples, 0.03%)</title><rect x="29.4571%" y="613" width="0.0256%" height="15" fill="rgb(232,14,29)" fg:x="140435" fg:w="122"/><text x="29.7071%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (122 samples, 0.03%)</title><rect x="29.4571%" y="597" width="0.0256%" height="15" fill="rgb(208,45,52)" fg:x="140435" fg:w="122"/><text x="29.7071%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (121 samples, 0.03%)</title><rect x="29.4573%" y="581" width="0.0254%" height="15" fill="rgb(234,191,28)" fg:x="140436" fg:w="121"/><text x="29.7073%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (120 samples, 0.03%)</title><rect x="29.4575%" y="565" width="0.0252%" height="15" fill="rgb(244,67,43)" fg:x="140437" fg:w="120"/><text x="29.7075%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (145 samples, 0.03%)</title><rect x="29.4561%" y="693" width="0.0304%" height="15" fill="rgb(236,189,24)" fg:x="140430" fg:w="145"/><text x="29.7061%" y="703.50"></text></g><g><title>alloc::string::String::push_str (140 samples, 0.03%)</title><rect x="29.4571%" y="677" width="0.0294%" height="15" fill="rgb(239,214,33)" fg:x="140435" fg:w="140"/><text x="29.7071%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (140 samples, 0.03%)</title><rect x="29.4571%" y="661" width="0.0294%" height="15" fill="rgb(226,176,41)" fg:x="140435" fg:w="140"/><text x="29.7071%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (140 samples, 0.03%)</title><rect x="29.4571%" y="645" width="0.0294%" height="15" fill="rgb(248,47,8)" fg:x="140435" fg:w="140"/><text x="29.7071%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (140 samples, 0.03%)</title><rect x="29.4571%" y="629" width="0.0294%" height="15" fill="rgb(218,81,44)" fg:x="140435" fg:w="140"/><text x="29.7071%" y="639.50"></text></g><g><title>&lt;chrono::offset::utc::Utc as core::fmt::Display&gt;::fmt (204 samples, 0.04%)</title><rect x="29.4443%" y="741" width="0.0428%" height="15" fill="rgb(213,98,6)" fg:x="140374" fg:w="204"/><text x="29.6943%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (193 samples, 0.04%)</title><rect x="29.4466%" y="725" width="0.0405%" height="15" fill="rgb(222,85,22)" fg:x="140385" fg:w="193"/><text x="29.6966%" y="735.50"></text></g><g><title>core::fmt::write (177 samples, 0.04%)</title><rect x="29.4500%" y="709" width="0.0371%" height="15" fill="rgb(239,46,39)" fg:x="140401" fg:w="177"/><text x="29.7000%" y="719.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (213 samples, 0.04%)</title><rect x="29.4439%" y="757" width="0.0447%" height="15" fill="rgb(237,12,29)" fg:x="140372" fg:w="213"/><text x="29.6939%" y="767.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::format_with_items (354 samples, 0.07%)</title><rect x="29.4145%" y="789" width="0.0743%" height="15" fill="rgb(214,77,8)" fg:x="140232" fg:w="354"/><text x="29.6645%" y="799.50"></text></g><g><title>chrono::format::DelayedFormat&lt;I&gt;::new_with_offset (221 samples, 0.05%)</title><rect x="29.4424%" y="773" width="0.0464%" height="15" fill="rgb(217,168,37)" fg:x="140365" fg:w="221"/><text x="29.6924%" y="783.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::to_rfc2822 (1,701 samples, 0.36%)</title><rect x="29.1395%" y="805" width="0.3568%" height="15" fill="rgb(221,217,23)" fg:x="138921" fg:w="1701"/><text x="29.3895%" y="815.50"></text></g><g><title>chrono::offset::utc::Utc::now (271 samples, 0.06%)</title><rect x="29.4963%" y="805" width="0.0568%" height="15" fill="rgb(243,229,36)" fg:x="140622" fg:w="271"/><text x="29.7463%" y="815.50"></text></g><g><title>std::time::SystemTime::now (182 samples, 0.04%)</title><rect x="29.5150%" y="789" width="0.0382%" height="15" fill="rgb(251,163,40)" fg:x="140711" fg:w="182"/><text x="29.7650%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (182 samples, 0.04%)</title><rect x="29.5150%" y="773" width="0.0382%" height="15" fill="rgb(237,222,12)" fg:x="140711" fg:w="182"/><text x="29.7650%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::now (182 samples, 0.04%)</title><rect x="29.5150%" y="757" width="0.0382%" height="15" fill="rgb(248,132,6)" fg:x="140711" fg:w="182"/><text x="29.7650%" y="767.50"></text></g><g><title>__clock_gettime (154 samples, 0.03%)</title><rect x="29.5209%" y="741" width="0.0323%" height="15" fill="rgb(227,167,50)" fg:x="140739" fg:w="154"/><text x="29.7709%" y="751.50"></text></g><g><title>__vdso_clock_gettime (121 samples, 0.03%)</title><rect x="29.5278%" y="725" width="0.0254%" height="15" fill="rgb(242,84,37)" fg:x="140772" fg:w="121"/><text x="29.7778%" y="735.50"></text></g><g><title>[[vdso]] (86 samples, 0.02%)</title><rect x="29.5351%" y="709" width="0.0180%" height="15" fill="rgb(212,4,50)" fg:x="140807" fg:w="86"/><text x="29.7851%" y="719.50"></text></g><g><title>[libc-2.31.so] (52 samples, 0.01%)</title><rect x="29.5553%" y="693" width="0.0109%" height="15" fill="rgb(230,228,32)" fg:x="140903" fg:w="52"/><text x="29.8053%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (90 samples, 0.02%)</title><rect x="29.5549%" y="725" width="0.0189%" height="15" fill="rgb(248,217,23)" fg:x="140901" fg:w="90"/><text x="29.8049%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (90 samples, 0.02%)</title><rect x="29.5549%" y="709" width="0.0189%" height="15" fill="rgb(238,197,32)" fg:x="140901" fg:w="90"/><text x="29.8049%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (93 samples, 0.02%)</title><rect x="29.5546%" y="789" width="0.0195%" height="15" fill="rgb(236,106,1)" fg:x="140900" fg:w="93"/><text x="29.8046%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (93 samples, 0.02%)</title><rect x="29.5546%" y="773" width="0.0195%" height="15" fill="rgb(219,228,13)" fg:x="140900" fg:w="93"/><text x="29.8046%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (93 samples, 0.02%)</title><rect x="29.5546%" y="757" width="0.0195%" height="15" fill="rgb(238,30,35)" fg:x="140900" fg:w="93"/><text x="29.8046%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.02%)</title><rect x="29.5546%" y="741" width="0.0195%" height="15" fill="rgb(236,70,23)" fg:x="140900" fg:w="93"/><text x="29.8046%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (64 samples, 0.01%)</title><rect x="29.5744%" y="661" width="0.0134%" height="15" fill="rgb(249,104,48)" fg:x="140994" fg:w="64"/><text x="29.8244%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (64 samples, 0.01%)</title><rect x="29.5744%" y="645" width="0.0134%" height="15" fill="rgb(254,117,50)" fg:x="140994" fg:w="64"/><text x="29.8244%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.01%)</title><rect x="29.5742%" y="773" width="0.0149%" height="15" fill="rgb(223,152,4)" fg:x="140993" fg:w="71"/><text x="29.8242%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[parsed::http::Header]&gt; (71 samples, 0.01%)</title><rect x="29.5742%" y="757" width="0.0149%" height="15" fill="rgb(245,6,2)" fg:x="140993" fg:w="71"/><text x="29.8242%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Header&gt; (70 samples, 0.01%)</title><rect x="29.5744%" y="741" width="0.0147%" height="15" fill="rgb(249,150,24)" fg:x="140994" fg:w="70"/><text x="29.8244%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (70 samples, 0.01%)</title><rect x="29.5744%" y="725" width="0.0147%" height="15" fill="rgb(228,185,42)" fg:x="140994" fg:w="70"/><text x="29.8244%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (70 samples, 0.01%)</title><rect x="29.5744%" y="709" width="0.0147%" height="15" fill="rgb(226,39,33)" fg:x="140994" fg:w="70"/><text x="29.8244%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (70 samples, 0.01%)</title><rect x="29.5744%" y="693" width="0.0147%" height="15" fill="rgb(221,166,19)" fg:x="140994" fg:w="70"/><text x="29.8244%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.01%)</title><rect x="29.5744%" y="677" width="0.0147%" height="15" fill="rgb(209,109,2)" fg:x="140994" fg:w="70"/><text x="29.8244%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;parsed::http::Header&gt;&gt; (107 samples, 0.02%)</title><rect x="29.5742%" y="789" width="0.0224%" height="15" fill="rgb(252,216,26)" fg:x="140993" fg:w="107"/><text x="29.8242%" y="799.50"></text></g><g><title>uppercut_mio_server::protocol::process (12,471 samples, 2.62%)</title><rect x="26.9809%" y="837" width="2.6159%" height="15" fill="rgb(227,173,36)" fg:x="128630" fg:w="12471"/><text x="27.2309%" y="847.50">up..</text></g><g><title>uppercut_mio_server::protocol::handle (2,535 samples, 0.53%)</title><rect x="29.0651%" y="821" width="0.5317%" height="15" fill="rgb(209,90,7)" fg:x="138566" fg:w="2535"/><text x="29.3151%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Request&gt; (208 samples, 0.04%)</title><rect x="29.5532%" y="805" width="0.0436%" height="15" fill="rgb(250,194,11)" fg:x="140893" fg:w="208"/><text x="29.8032%" y="815.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (24,080 samples, 5.05%)</title><rect x="24.5471%" y="853" width="5.0509%" height="15" fill="rgb(220,72,50)" fg:x="117027" fg:w="24080"/><text x="24.7971%" y="863.50">&lt;upper..</text></g><g><title>__libc_malloc (59 samples, 0.01%)</title><rect x="29.6130%" y="597" width="0.0124%" height="15" fill="rgb(222,106,48)" fg:x="141178" fg:w="59"/><text x="29.8630%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (63 samples, 0.01%)</title><rect x="29.6130%" y="693" width="0.0132%" height="15" fill="rgb(216,220,45)" fg:x="141178" fg:w="63"/><text x="29.8630%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (63 samples, 0.01%)</title><rect x="29.6130%" y="677" width="0.0132%" height="15" fill="rgb(234,112,18)" fg:x="141178" fg:w="63"/><text x="29.8630%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (63 samples, 0.01%)</title><rect x="29.6130%" y="661" width="0.0132%" height="15" fill="rgb(206,179,9)" fg:x="141178" fg:w="63"/><text x="29.8630%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (63 samples, 0.01%)</title><rect x="29.6130%" y="645" width="0.0132%" height="15" fill="rgb(215,115,40)" fg:x="141178" fg:w="63"/><text x="29.8630%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (63 samples, 0.01%)</title><rect x="29.6130%" y="629" width="0.0132%" height="15" fill="rgb(222,69,34)" fg:x="141178" fg:w="63"/><text x="29.8630%" y="639.50"></text></g><g><title>alloc::alloc::alloc (63 samples, 0.01%)</title><rect x="29.6130%" y="613" width="0.0132%" height="15" fill="rgb(209,161,10)" fg:x="141178" fg:w="63"/><text x="29.8630%" y="623.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (69 samples, 0.01%)</title><rect x="29.6130%" y="821" width="0.0145%" height="15" fill="rgb(217,6,38)" fg:x="141178" fg:w="69"/><text x="29.8630%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (69 samples, 0.01%)</title><rect x="29.6130%" y="805" width="0.0145%" height="15" fill="rgb(229,229,48)" fg:x="141178" fg:w="69"/><text x="29.8630%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (69 samples, 0.01%)</title><rect x="29.6130%" y="789" width="0.0145%" height="15" fill="rgb(225,21,28)" fg:x="141178" fg:w="69"/><text x="29.8630%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (69 samples, 0.01%)</title><rect x="29.6130%" y="773" width="0.0145%" height="15" fill="rgb(206,33,13)" fg:x="141178" fg:w="69"/><text x="29.8630%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (69 samples, 0.01%)</title><rect x="29.6130%" y="757" width="0.0145%" height="15" fill="rgb(242,178,17)" fg:x="141178" fg:w="69"/><text x="29.8630%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69 samples, 0.01%)</title><rect x="29.6130%" y="741" width="0.0145%" height="15" fill="rgb(220,162,5)" fg:x="141178" fg:w="69"/><text x="29.8630%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (69 samples, 0.01%)</title><rect x="29.6130%" y="725" width="0.0145%" height="15" fill="rgb(210,33,43)" fg:x="141178" fg:w="69"/><text x="29.8630%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69 samples, 0.01%)</title><rect x="29.6130%" y="709" width="0.0145%" height="15" fill="rgb(216,116,54)" fg:x="141178" fg:w="69"/><text x="29.8630%" y="719.50"></text></g><g><title>[libc-2.31.so] (63 samples, 0.01%)</title><rect x="29.6583%" y="677" width="0.0132%" height="15" fill="rgb(249,92,24)" fg:x="141394" fg:w="63"/><text x="29.9083%" y="687.50"></text></g><g><title>__libc_malloc (71 samples, 0.01%)</title><rect x="29.6568%" y="693" width="0.0149%" height="15" fill="rgb(231,189,14)" fg:x="141387" fg:w="71"/><text x="29.9068%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (80 samples, 0.02%)</title><rect x="29.6551%" y="773" width="0.0168%" height="15" fill="rgb(230,8,41)" fg:x="141379" fg:w="80"/><text x="29.9051%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (72 samples, 0.02%)</title><rect x="29.6568%" y="757" width="0.0151%" height="15" fill="rgb(249,7,27)" fg:x="141387" fg:w="72"/><text x="29.9068%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (72 samples, 0.02%)</title><rect x="29.6568%" y="741" width="0.0151%" height="15" fill="rgb(232,86,5)" fg:x="141387" fg:w="72"/><text x="29.9068%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (72 samples, 0.02%)</title><rect x="29.6568%" y="725" width="0.0151%" height="15" fill="rgb(224,175,18)" fg:x="141387" fg:w="72"/><text x="29.9068%" y="735.50"></text></g><g><title>alloc::alloc::alloc (72 samples, 0.02%)</title><rect x="29.6568%" y="709" width="0.0151%" height="15" fill="rgb(220,129,12)" fg:x="141387" fg:w="72"/><text x="29.9068%" y="719.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (212 samples, 0.04%)</title><rect x="29.6348%" y="789" width="0.0445%" height="15" fill="rgb(210,19,36)" fg:x="141282" fg:w="212"/><text x="29.8848%" y="799.50"></text></g><g><title>__sched_yield (72 samples, 0.02%)</title><rect x="29.7063%" y="725" width="0.0151%" height="15" fill="rgb(219,96,14)" fg:x="141623" fg:w="72"/><text x="29.9563%" y="735.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (95 samples, 0.02%)</title><rect x="29.7036%" y="757" width="0.0199%" height="15" fill="rgb(249,106,1)" fg:x="141610" fg:w="95"/><text x="29.9536%" y="767.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (83 samples, 0.02%)</title><rect x="29.7061%" y="741" width="0.0174%" height="15" fill="rgb(249,155,20)" fg:x="141622" fg:w="83"/><text x="29.9561%" y="751.50"></text></g><g><title>futex_wake (148 samples, 0.03%)</title><rect x="29.7346%" y="581" width="0.0310%" height="15" fill="rgb(244,168,9)" fg:x="141758" fg:w="148"/><text x="29.9846%" y="591.50"></text></g><g><title>wake_up_q (123 samples, 0.03%)</title><rect x="29.7399%" y="565" width="0.0258%" height="15" fill="rgb(216,23,50)" fg:x="141783" fg:w="123"/><text x="29.9899%" y="575.50"></text></g><g><title>try_to_wake_up (122 samples, 0.03%)</title><rect x="29.7401%" y="549" width="0.0256%" height="15" fill="rgb(224,219,20)" fg:x="141784" fg:w="122"/><text x="29.9901%" y="559.50"></text></g><g><title>__lock_text_start (122 samples, 0.03%)</title><rect x="29.7401%" y="533" width="0.0256%" height="15" fill="rgb(222,156,15)" fg:x="141784" fg:w="122"/><text x="29.9901%" y="543.50"></text></g><g><title>do_futex (156 samples, 0.03%)</title><rect x="29.7336%" y="597" width="0.0327%" height="15" fill="rgb(231,97,17)" fg:x="141753" fg:w="156"/><text x="29.9836%" y="607.50"></text></g><g><title>__x64_sys_futex (159 samples, 0.03%)</title><rect x="29.7331%" y="613" width="0.0334%" height="15" fill="rgb(218,70,48)" fg:x="141751" fg:w="159"/><text x="29.9831%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (203 samples, 0.04%)</title><rect x="29.7241%" y="741" width="0.0426%" height="15" fill="rgb(212,196,52)" fg:x="141708" fg:w="203"/><text x="29.9741%" y="751.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (203 samples, 0.04%)</title><rect x="29.7241%" y="725" width="0.0426%" height="15" fill="rgb(243,203,18)" fg:x="141708" fg:w="203"/><text x="29.9741%" y="735.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (184 samples, 0.04%)</title><rect x="29.7281%" y="709" width="0.0386%" height="15" fill="rgb(252,125,41)" fg:x="141727" fg:w="184"/><text x="29.9781%" y="719.50"></text></g><g><title>std::thread::Thread::unpark (184 samples, 0.04%)</title><rect x="29.7281%" y="693" width="0.0386%" height="15" fill="rgb(223,180,33)" fg:x="141727" fg:w="184"/><text x="29.9781%" y="703.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (184 samples, 0.04%)</title><rect x="29.7281%" y="677" width="0.0386%" height="15" fill="rgb(254,159,46)" fg:x="141727" fg:w="184"/><text x="29.9781%" y="687.50"></text></g><g><title>syscall (182 samples, 0.04%)</title><rect x="29.7285%" y="661" width="0.0382%" height="15" fill="rgb(254,38,10)" fg:x="141729" fg:w="182"/><text x="29.9785%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (164 samples, 0.03%)</title><rect x="29.7323%" y="645" width="0.0344%" height="15" fill="rgb(208,217,32)" fg:x="141747" fg:w="164"/><text x="29.9823%" y="655.50"></text></g><g><title>do_syscall_64 (164 samples, 0.03%)</title><rect x="29.7323%" y="629" width="0.0344%" height="15" fill="rgb(221,120,13)" fg:x="141747" fg:w="164"/><text x="29.9823%" y="639.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (667 samples, 0.14%)</title><rect x="29.6279%" y="821" width="0.1399%" height="15" fill="rgb(246,54,52)" fg:x="141249" fg:w="667"/><text x="29.8779%" y="831.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (645 samples, 0.14%)</title><rect x="29.6325%" y="805" width="0.1353%" height="15" fill="rgb(242,34,25)" fg:x="141271" fg:w="645"/><text x="29.8825%" y="815.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (422 samples, 0.09%)</title><rect x="29.6792%" y="789" width="0.0885%" height="15" fill="rgb(247,209,9)" fg:x="141494" fg:w="422"/><text x="29.9292%" y="799.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (314 samples, 0.07%)</title><rect x="29.7019%" y="773" width="0.0659%" height="15" fill="rgb(228,71,26)" fg:x="141602" fg:w="314"/><text x="29.9519%" y="783.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (208 samples, 0.04%)</title><rect x="29.7241%" y="757" width="0.0436%" height="15" fill="rgb(222,145,49)" fg:x="141708" fg:w="208"/><text x="29.9741%" y="767.50"></text></g><g><title>&lt;uppercut::core::Local as uppercut::api::AnySender&gt;::send (789 samples, 0.17%)</title><rect x="29.6077%" y="837" width="0.1655%" height="15" fill="rgb(218,121,17)" fg:x="141153" fg:w="789"/><text x="29.8577%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (57 samples, 0.01%)</title><rect x="29.7854%" y="757" width="0.0120%" height="15" fill="rgb(244,50,7)" fg:x="142000" fg:w="57"/><text x="30.0354%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (52 samples, 0.01%)</title><rect x="29.7864%" y="741" width="0.0109%" height="15" fill="rgb(246,229,37)" fg:x="142005" fg:w="52"/><text x="30.0364%" y="751.50"></text></g><g><title>alloc::string::String::push_str (52 samples, 0.01%)</title><rect x="29.7864%" y="725" width="0.0109%" height="15" fill="rgb(225,18,5)" fg:x="142005" fg:w="52"/><text x="30.0364%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (52 samples, 0.01%)</title><rect x="29.7864%" y="709" width="0.0109%" height="15" fill="rgb(213,204,8)" fg:x="142005" fg:w="52"/><text x="30.0364%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (52 samples, 0.01%)</title><rect x="29.7864%" y="693" width="0.0109%" height="15" fill="rgb(238,103,6)" fg:x="142005" fg:w="52"/><text x="30.0364%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (52 samples, 0.01%)</title><rect x="29.7864%" y="677" width="0.0109%" height="15" fill="rgb(222,25,35)" fg:x="142005" fg:w="52"/><text x="30.0364%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (111 samples, 0.02%)</title><rect x="29.7818%" y="789" width="0.0233%" height="15" fill="rgb(213,203,35)" fg:x="141983" fg:w="111"/><text x="30.0318%" y="799.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (105 samples, 0.02%)</title><rect x="29.7831%" y="773" width="0.0220%" height="15" fill="rgb(221,79,53)" fg:x="141989" fg:w="105"/><text x="30.0331%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (129 samples, 0.03%)</title><rect x="29.7782%" y="821" width="0.0271%" height="15" fill="rgb(243,200,35)" fg:x="141966" fg:w="129"/><text x="30.0282%" y="831.50"></text></g><g><title>core::fmt::write (125 samples, 0.03%)</title><rect x="29.7791%" y="805" width="0.0262%" height="15" fill="rgb(248,60,25)" fg:x="141970" fg:w="125"/><text x="30.0291%" y="815.50"></text></g><g><title>alloc::fmt::format (153 samples, 0.03%)</title><rect x="29.7734%" y="837" width="0.0321%" height="15" fill="rgb(227,53,46)" fg:x="141943" fg:w="153"/><text x="30.0234%" y="847.50"></text></g><g><title>tcp_poll (104 samples, 0.02%)</title><rect x="29.9784%" y="645" width="0.0218%" height="15" fill="rgb(216,120,32)" fg:x="142920" fg:w="104"/><text x="30.2284%" y="655.50"></text></g><g><title>sock_poll (312 samples, 0.07%)</title><rect x="29.9479%" y="661" width="0.0654%" height="15" fill="rgb(220,134,1)" fg:x="142775" fg:w="312"/><text x="30.1979%" y="671.50"></text></g><g><title>tcp_stream_memory_free (63 samples, 0.01%)</title><rect x="30.0002%" y="645" width="0.0132%" height="15" fill="rgb(237,168,5)" fg:x="143024" fg:w="63"/><text x="30.2502%" y="655.50"></text></g><g><title>ep_item_poll.isra.0 (389 samples, 0.08%)</title><rect x="29.9333%" y="677" width="0.0816%" height="15" fill="rgb(231,100,33)" fg:x="142705" fg:w="389"/><text x="30.1833%" y="687.50"></text></g><g><title>ep_send_events_proc (497 samples, 0.10%)</title><rect x="29.9140%" y="693" width="0.1042%" height="15" fill="rgb(236,177,47)" fg:x="142613" fg:w="497"/><text x="30.1640%" y="703.50"></text></g><g><title>ep_scan_ready_list.constprop.0 (577 samples, 0.12%)</title><rect x="29.9037%" y="709" width="0.1210%" height="15" fill="rgb(235,7,49)" fg:x="142564" fg:w="577"/><text x="30.1537%" y="719.50"></text></g><g><title>ep_poll (947 samples, 0.20%)</title><rect x="29.8947%" y="725" width="0.1986%" height="15" fill="rgb(232,119,22)" fg:x="142521" fg:w="947"/><text x="30.1447%" y="735.50"></text></g><g><title>schedule_hrtimeout_range (312 samples, 0.07%)</title><rect x="30.0279%" y="709" width="0.0654%" height="15" fill="rgb(254,73,53)" fg:x="143156" fg:w="312"/><text x="30.2779%" y="719.50"></text></g><g><title>schedule_hrtimeout_range_clock (312 samples, 0.07%)</title><rect x="30.0279%" y="693" width="0.0654%" height="15" fill="rgb(251,35,20)" fg:x="143156" fg:w="312"/><text x="30.2779%" y="703.50"></text></g><g><title>schedule (310 samples, 0.07%)</title><rect x="30.0283%" y="677" width="0.0650%" height="15" fill="rgb(241,119,20)" fg:x="143158" fg:w="310"/><text x="30.2783%" y="687.50"></text></g><g><title>__schedule (309 samples, 0.06%)</title><rect x="30.0285%" y="661" width="0.0648%" height="15" fill="rgb(207,102,14)" fg:x="143159" fg:w="309"/><text x="30.2785%" y="671.50"></text></g><g><title>finish_task_switch (305 samples, 0.06%)</title><rect x="30.0293%" y="645" width="0.0640%" height="15" fill="rgb(248,201,50)" fg:x="143163" fg:w="305"/><text x="30.2793%" y="655.50"></text></g><g><title>__x64_sys_epoll_wait (1,003 samples, 0.21%)</title><rect x="29.8844%" y="757" width="0.2104%" height="15" fill="rgb(222,185,44)" fg:x="142472" fg:w="1003"/><text x="30.1344%" y="767.50"></text></g><g><title>do_epoll_wait (999 samples, 0.21%)</title><rect x="29.8852%" y="741" width="0.2095%" height="15" fill="rgb(218,107,18)" fg:x="142476" fg:w="999"/><text x="30.1352%" y="751.50"></text></g><g><title>mio::poll::Poll::poll (1,348 samples, 0.28%)</title><rect x="29.8129%" y="837" width="0.2828%" height="15" fill="rgb(237,177,39)" fg:x="142131" fg:w="1348"/><text x="30.0629%" y="847.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1,346 samples, 0.28%)</title><rect x="29.8133%" y="821" width="0.2823%" height="15" fill="rgb(246,69,6)" fg:x="142133" fg:w="1346"/><text x="30.0633%" y="831.50"></text></g><g><title>epoll_wait (1,321 samples, 0.28%)</title><rect x="29.8185%" y="805" width="0.2771%" height="15" fill="rgb(234,208,37)" fg:x="142158" fg:w="1321"/><text x="30.0685%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,102 samples, 0.23%)</title><rect x="29.8645%" y="789" width="0.2312%" height="15" fill="rgb(225,4,6)" fg:x="142377" fg:w="1102"/><text x="30.1145%" y="799.50"></text></g><g><title>do_syscall_64 (1,084 samples, 0.23%)</title><rect x="29.8682%" y="773" width="0.2274%" height="15" fill="rgb(233,45,0)" fg:x="142395" fg:w="1084"/><text x="30.1182%" y="783.50"></text></g><g><title>__libc_malloc (61 samples, 0.01%)</title><rect x="30.0960%" y="741" width="0.0128%" height="15" fill="rgb(226,136,5)" fg:x="143481" fg:w="61"/><text x="30.3460%" y="751.50"></text></g><g><title>std::panic::catch_unwind (26,526 samples, 5.56%)</title><rect x="24.5463%" y="933" width="5.5640%" height="15" fill="rgb(211,91,47)" fg:x="117023" fg:w="26526"/><text x="24.7963%" y="943.50">std::pa..</text></g><g><title>std::panicking::try (26,526 samples, 5.56%)</title><rect x="24.5463%" y="917" width="5.5640%" height="15" fill="rgb(242,88,51)" fg:x="117023" fg:w="26526"/><text x="24.7963%" y="927.50">std::pa..</text></g><g><title>std::panicking::try::do_call (26,526 samples, 5.56%)</title><rect x="24.5463%" y="901" width="5.5640%" height="15" fill="rgb(230,91,28)" fg:x="117023" fg:w="26526"/><text x="24.7963%" y="911.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26,526 samples, 5.56%)</title><rect x="24.5463%" y="885" width="5.5640%" height="15" fill="rgb(254,186,29)" fg:x="117023" fg:w="26526"/><text x="24.7963%" y="895.50">&lt;core::..</text></g><g><title>uppercut::core::worker_loop::{{closure}} (26,526 samples, 5.56%)</title><rect x="24.5463%" y="869" width="5.5640%" height="15" fill="rgb(238,6,4)" fg:x="117023" fg:w="26526"/><text x="24.7963%" y="879.50">uppercu..</text></g><g><title>&lt;uppercut_mio_server::server::Listener as uppercut::api::AnyActor&gt;::receive (2,442 samples, 0.51%)</title><rect x="29.5981%" y="853" width="0.5122%" height="15" fill="rgb(221,151,16)" fg:x="141107" fg:w="2442"/><text x="29.8481%" y="863.50"></text></g><g><title>uppercut::api::Envelope::of (70 samples, 0.01%)</title><rect x="30.0956%" y="837" width="0.0147%" height="15" fill="rgb(251,143,52)" fg:x="143479" fg:w="70"/><text x="30.3456%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (69 samples, 0.01%)</title><rect x="30.0958%" y="821" width="0.0145%" height="15" fill="rgb(206,90,15)" fg:x="143480" fg:w="69"/><text x="30.3458%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (69 samples, 0.01%)</title><rect x="30.0958%" y="805" width="0.0145%" height="15" fill="rgb(218,35,8)" fg:x="143480" fg:w="69"/><text x="30.3458%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (69 samples, 0.01%)</title><rect x="30.0958%" y="789" width="0.0145%" height="15" fill="rgb(239,215,6)" fg:x="143480" fg:w="69"/><text x="30.3458%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (69 samples, 0.01%)</title><rect x="30.0958%" y="773" width="0.0145%" height="15" fill="rgb(245,116,39)" fg:x="143480" fg:w="69"/><text x="30.3458%" y="783.50"></text></g><g><title>alloc::alloc::alloc (69 samples, 0.01%)</title><rect x="30.0958%" y="757" width="0.0145%" height="15" fill="rgb(242,65,28)" fg:x="143480" fg:w="69"/><text x="30.3458%" y="767.50"></text></g><g><title>worker-1 (71,789 samples, 15.06%)</title><rect x="15.0529%" y="1285" width="15.0582%" height="15" fill="rgb(252,132,53)" fg:x="71764" fg:w="71789"/><text x="15.3029%" y="1295.50">worker-1</text></g><g><title>clone (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1269" width="14.6362%" height="15" fill="rgb(224,159,50)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1279.50">clone</text></g><g><title>start_thread (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1253" width="14.6362%" height="15" fill="rgb(224,93,4)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1263.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1237" width="14.6362%" height="15" fill="rgb(208,81,34)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1247.50">std::sys::unix::thread..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1221" width="14.6362%" height="15" fill="rgb(233,92,54)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1231.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1205" width="14.6362%" height="15" fill="rgb(237,21,14)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1215.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1189" width="14.6362%" height="15" fill="rgb(249,128,51)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1199.50">core::ops::function::F..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1173" width="14.6362%" height="15" fill="rgb(223,129,24)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1183.50">std::thread::Builder::..</text></g><g><title>std::panic::catch_unwind (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1157" width="14.6362%" height="15" fill="rgb(231,168,25)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1167.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1141" width="14.6362%" height="15" fill="rgb(224,39,20)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1151.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1125" width="14.6362%" height="15" fill="rgb(225,152,53)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1135.50">std::panicking::try::d..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1109" width="14.6362%" height="15" fill="rgb(252,17,24)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1119.50">&lt;core::panic::unwind_s..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1093" width="14.6362%" height="15" fill="rgb(250,114,30)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1103.50">std::thread::Builder::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1077" width="14.6362%" height="15" fill="rgb(229,5,4)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1087.50">std::sys_common::backt..</text></g><g><title>uppercut::pool::Worker::new::{{closure}} (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1061" width="14.6362%" height="15" fill="rgb(225,176,49)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1071.50">uppercut::pool::Worker..</text></g><g><title>std::panic::catch_unwind (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1045" width="14.6362%" height="15" fill="rgb(224,221,49)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1055.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1029" width="14.6362%" height="15" fill="rgb(253,169,27)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (69,777 samples, 14.64%)</title><rect x="15.4750%" y="1013" width="14.6362%" height="15" fill="rgb(211,206,16)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1023.50">std::panicking::try::d..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (69,777 samples, 14.64%)</title><rect x="15.4750%" y="997" width="14.6362%" height="15" fill="rgb(244,87,35)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="1007.50">&lt;core::panic::unwind_s..</text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (69,777 samples, 14.64%)</title><rect x="15.4750%" y="981" width="14.6362%" height="15" fill="rgb(246,28,10)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="991.50">uppercut::pool::Worker..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69,777 samples, 14.64%)</title><rect x="15.4750%" y="965" width="14.6362%" height="15" fill="rgb(229,12,44)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="975.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>uppercut::core::worker_loop (69,777 samples, 14.64%)</title><rect x="15.4750%" y="949" width="14.6362%" height="15" fill="rgb(210,145,37)" fg:x="73776" fg:w="69777"/><text x="15.7250%" y="959.50">uppercut::core::worker..</text></g><g><title>__libc_malloc (53 samples, 0.01%)</title><rect x="30.1195%" y="757" width="0.0111%" height="15" fill="rgb(227,112,52)" fg:x="143593" fg:w="53"/><text x="30.3695%" y="767.50"></text></g><g><title>alloc::string::String::with_capacity (59 samples, 0.01%)</title><rect x="30.1191%" y="885" width="0.0124%" height="15" fill="rgb(238,155,34)" fg:x="143591" fg:w="59"/><text x="30.3691%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (58 samples, 0.01%)</title><rect x="30.1193%" y="869" width="0.0122%" height="15" fill="rgb(239,226,36)" fg:x="143592" fg:w="58"/><text x="30.3693%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (58 samples, 0.01%)</title><rect x="30.1193%" y="853" width="0.0122%" height="15" fill="rgb(230,16,23)" fg:x="143592" fg:w="58"/><text x="30.3693%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (58 samples, 0.01%)</title><rect x="30.1193%" y="837" width="0.0122%" height="15" fill="rgb(236,171,36)" fg:x="143592" fg:w="58"/><text x="30.3693%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (58 samples, 0.01%)</title><rect x="30.1193%" y="821" width="0.0122%" height="15" fill="rgb(221,22,14)" fg:x="143592" fg:w="58"/><text x="30.3693%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (58 samples, 0.01%)</title><rect x="30.1193%" y="805" width="0.0122%" height="15" fill="rgb(242,43,11)" fg:x="143592" fg:w="58"/><text x="30.3693%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (58 samples, 0.01%)</title><rect x="30.1193%" y="789" width="0.0122%" height="15" fill="rgb(232,69,23)" fg:x="143592" fg:w="58"/><text x="30.3693%" y="799.50"></text></g><g><title>alloc::alloc::alloc (57 samples, 0.01%)</title><rect x="30.1195%" y="773" width="0.0120%" height="15" fill="rgb(216,180,54)" fg:x="143593" fg:w="57"/><text x="30.3695%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (83 samples, 0.02%)</title><rect x="30.1338%" y="885" width="0.0174%" height="15" fill="rgb(216,5,24)" fg:x="143661" fg:w="83"/><text x="30.3838%" y="895.50"></text></g><g><title>core::fmt::write (81 samples, 0.02%)</title><rect x="30.1342%" y="869" width="0.0170%" height="15" fill="rgb(225,89,9)" fg:x="143663" fg:w="81"/><text x="30.3842%" y="879.50"></text></g><g><title>alloc::fmt::format (162 samples, 0.03%)</title><rect x="30.1176%" y="901" width="0.0340%" height="15" fill="rgb(243,75,33)" fg:x="143584" fg:w="162"/><text x="30.3676%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (50 samples, 0.01%)</title><rect x="30.1743%" y="837" width="0.0105%" height="15" fill="rgb(247,141,45)" fg:x="143854" fg:w="50"/><text x="30.4243%" y="847.50"></text></g><g><title>alloc::fmt::format (217 samples, 0.05%)</title><rect x="30.1636%" y="885" width="0.0455%" height="15" fill="rgb(232,177,36)" fg:x="143803" fg:w="217"/><text x="30.4136%" y="895.50"></text></g><g><title>core::fmt::Write::write_fmt (179 samples, 0.04%)</title><rect x="30.1715%" y="869" width="0.0375%" height="15" fill="rgb(219,125,36)" fg:x="143841" fg:w="179"/><text x="30.4215%" y="879.50"></text></g><g><title>core::fmt::write (178 samples, 0.04%)</title><rect x="30.1717%" y="853" width="0.0373%" height="15" fill="rgb(227,94,9)" fg:x="143842" fg:w="178"/><text x="30.4217%" y="863.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (286 samples, 0.06%)</title><rect x="30.1598%" y="901" width="0.0600%" height="15" fill="rgb(240,34,52)" fg:x="143785" fg:w="286"/><text x="30.4098%" y="911.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (578 samples, 0.12%)</title><rect x="30.1111%" y="933" width="0.1212%" height="15" fill="rgb(216,45,12)" fg:x="143553" fg:w="578"/><text x="30.3611%" y="943.50"></text></g><g><title>parsed::parser::single::{{closure}} (578 samples, 0.12%)</title><rect x="30.1111%" y="917" width="0.1212%" height="15" fill="rgb(246,21,19)" fg:x="143553" fg:w="578"/><text x="30.3611%" y="927.50"></text></g><g><title>parsed::stream::ByteStream::next (60 samples, 0.01%)</title><rect x="30.2198%" y="901" width="0.0126%" height="15" fill="rgb(213,98,42)" fg:x="144071" fg:w="60"/><text x="30.4698%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (80 samples, 0.02%)</title><rect x="30.2426%" y="869" width="0.0168%" height="15" fill="rgb(250,136,47)" fg:x="144180" fg:w="80"/><text x="30.4926%" y="879.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (75 samples, 0.02%)</title><rect x="30.2437%" y="853" width="0.0157%" height="15" fill="rgb(251,124,27)" fg:x="144185" fg:w="75"/><text x="30.4937%" y="863.50"></text></g><g><title>parsed::stream::ByteStream::get (74 samples, 0.02%)</title><rect x="30.2439%" y="837" width="0.0155%" height="15" fill="rgb(229,180,14)" fg:x="144186" fg:w="74"/><text x="30.4939%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (51 samples, 0.01%)</title><rect x="30.2487%" y="821" width="0.0107%" height="15" fill="rgb(245,216,25)" fg:x="144209" fg:w="51"/><text x="30.4987%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (51 samples, 0.01%)</title><rect x="30.2487%" y="805" width="0.0107%" height="15" fill="rgb(251,43,5)" fg:x="144209" fg:w="51"/><text x="30.4987%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (51 samples, 0.01%)</title><rect x="30.2487%" y="789" width="0.0107%" height="15" fill="rgb(250,128,24)" fg:x="144209" fg:w="51"/><text x="30.4987%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (51 samples, 0.01%)</title><rect x="30.2487%" y="773" width="0.0107%" height="15" fill="rgb(217,117,27)" fg:x="144209" fg:w="51"/><text x="30.4987%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (50 samples, 0.01%)</title><rect x="30.2489%" y="757" width="0.0105%" height="15" fill="rgb(245,147,4)" fg:x="144210" fg:w="50"/><text x="30.4989%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (50 samples, 0.01%)</title><rect x="30.2489%" y="741" width="0.0105%" height="15" fill="rgb(242,201,35)" fg:x="144210" fg:w="50"/><text x="30.4989%" y="751.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.01%)</title><rect x="30.2489%" y="725" width="0.0105%" height="15" fill="rgb(218,181,1)" fg:x="144210" fg:w="50"/><text x="30.4989%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (73 samples, 0.02%)</title><rect x="30.2594%" y="869" width="0.0153%" height="15" fill="rgb(222,6,29)" fg:x="144260" fg:w="73"/><text x="30.5094%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::matcher::MatchError&gt; (65 samples, 0.01%)</title><rect x="30.2611%" y="853" width="0.0136%" height="15" fill="rgb(208,186,3)" fg:x="144268" fg:w="65"/><text x="30.5111%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (65 samples, 0.01%)</title><rect x="30.2611%" y="837" width="0.0136%" height="15" fill="rgb(216,36,26)" fg:x="144268" fg:w="65"/><text x="30.5111%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (65 samples, 0.01%)</title><rect x="30.2611%" y="821" width="0.0136%" height="15" fill="rgb(248,201,23)" fg:x="144268" fg:w="65"/><text x="30.5111%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (65 samples, 0.01%)</title><rect x="30.2611%" y="805" width="0.0136%" height="15" fill="rgb(251,170,31)" fg:x="144268" fg:w="65"/><text x="30.5111%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.01%)</title><rect x="30.2611%" y="789" width="0.0136%" height="15" fill="rgb(207,110,25)" fg:x="144268" fg:w="65"/><text x="30.5111%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (65 samples, 0.01%)</title><rect x="30.2611%" y="773" width="0.0136%" height="15" fill="rgb(250,54,15)" fg:x="144268" fg:w="65"/><text x="30.5111%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (65 samples, 0.01%)</title><rect x="30.2611%" y="757" width="0.0136%" height="15" fill="rgb(227,68,33)" fg:x="144268" fg:w="65"/><text x="30.5111%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 samples, 0.01%)</title><rect x="30.2915%" y="805" width="0.0124%" height="15" fill="rgb(238,34,41)" fg:x="144413" fg:w="59"/><text x="30.5415%" y="815.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (83 samples, 0.02%)</title><rect x="30.3041%" y="805" width="0.0174%" height="15" fill="rgb(220,11,15)" fg:x="144473" fg:w="83"/><text x="30.5541%" y="815.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (73 samples, 0.02%)</title><rect x="30.3062%" y="789" width="0.0153%" height="15" fill="rgb(246,111,35)" fg:x="144483" fg:w="73"/><text x="30.5562%" y="799.50"></text></g><g><title>alloc::fmt::format (226 samples, 0.05%)</title><rect x="30.2749%" y="853" width="0.0474%" height="15" fill="rgb(209,88,53)" fg:x="144334" fg:w="226"/><text x="30.5249%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (170 samples, 0.04%)</title><rect x="30.2867%" y="837" width="0.0357%" height="15" fill="rgb(231,185,47)" fg:x="144390" fg:w="170"/><text x="30.5367%" y="847.50"></text></g><g><title>core::fmt::write (165 samples, 0.03%)</title><rect x="30.2877%" y="821" width="0.0346%" height="15" fill="rgb(233,154,1)" fg:x="144395" fg:w="165"/><text x="30.5377%" y="831.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (228 samples, 0.05%)</title><rect x="30.2747%" y="869" width="0.0478%" height="15" fill="rgb(225,15,46)" fg:x="144333" fg:w="228"/><text x="30.5247%" y="879.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (411 samples, 0.09%)</title><rect x="30.2387%" y="901" width="0.0862%" height="15" fill="rgb(211,135,41)" fg:x="144161" fg:w="411"/><text x="30.4887%" y="911.50"></text></g><g><title>parsed::parser::before::{{closure}} (394 samples, 0.08%)</title><rect x="30.2422%" y="885" width="0.0826%" height="15" fill="rgb(208,54,0)" fg:x="144178" fg:w="394"/><text x="30.4922%" y="895.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (452 samples, 0.09%)</title><rect x="30.2368%" y="917" width="0.0948%" height="15" fill="rgb(244,136,14)" fg:x="144152" fg:w="452"/><text x="30.4868%" y="927.50"></text></g><g><title>alloc::string::String::reserve (60 samples, 0.01%)</title><rect x="30.3347%" y="837" width="0.0126%" height="15" fill="rgb(241,56,14)" fg:x="144619" fg:w="60"/><text x="30.5847%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (60 samples, 0.01%)</title><rect x="30.3347%" y="821" width="0.0126%" height="15" fill="rgb(205,80,24)" fg:x="144619" fg:w="60"/><text x="30.5847%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (60 samples, 0.01%)</title><rect x="30.3347%" y="805" width="0.0126%" height="15" fill="rgb(220,57,4)" fg:x="144619" fg:w="60"/><text x="30.5847%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (55 samples, 0.01%)</title><rect x="30.3358%" y="789" width="0.0115%" height="15" fill="rgb(226,193,50)" fg:x="144624" fg:w="55"/><text x="30.5858%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (55 samples, 0.01%)</title><rect x="30.3358%" y="773" width="0.0115%" height="15" fill="rgb(231,168,22)" fg:x="144624" fg:w="55"/><text x="30.5858%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (107 samples, 0.02%)</title><rect x="30.3337%" y="853" width="0.0224%" height="15" fill="rgb(254,215,14)" fg:x="144614" fg:w="107"/><text x="30.5837%" y="863.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1253" width="0.2458%" height="15" fill="rgb(211,115,16)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1263.50"></text></g><g><title>uppercut_mio_server::protocol::process (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1237" width="0.2458%" height="15" fill="rgb(236,210,16)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1247.50"></text></g><g><title>parsed::http::parse_http_request (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1221" width="0.2458%" height="15" fill="rgb(221,94,12)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1231.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1205" width="0.2458%" height="15" fill="rgb(235,218,49)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1215.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1189" width="0.2458%" height="15" fill="rgb(217,114,14)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1199.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1173" width="0.2458%" height="15" fill="rgb(216,145,22)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1183.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1157" width="0.2458%" height="15" fill="rgb(217,112,39)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1167.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1141" width="0.2458%" height="15" fill="rgb(225,85,32)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1151.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1125" width="0.2458%" height="15" fill="rgb(245,209,47)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1135.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1109" width="0.2458%" height="15" fill="rgb(218,220,15)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1119.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1093" width="0.2458%" height="15" fill="rgb(222,202,31)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1103.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1077" width="0.2458%" height="15" fill="rgb(243,203,4)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1087.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1061" width="0.2458%" height="15" fill="rgb(237,92,17)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1071.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1045" width="0.2458%" height="15" fill="rgb(231,119,7)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1055.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1029" width="0.2458%" height="15" fill="rgb(237,82,41)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1039.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="1013" width="0.2458%" height="15" fill="rgb(226,81,48)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1023.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="997" width="0.2458%" height="15" fill="rgb(234,70,51)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="1007.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="981" width="0.2458%" height="15" fill="rgb(251,86,4)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="991.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="965" width="0.2458%" height="15" fill="rgb(244,144,28)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,172 samples, 0.25%)</title><rect x="30.1111%" y="949" width="0.2458%" height="15" fill="rgb(232,161,39)" fg:x="143553" fg:w="1172"/><text x="30.3611%" y="959.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (594 samples, 0.12%)</title><rect x="30.2324%" y="933" width="0.1246%" height="15" fill="rgb(247,34,51)" fg:x="144131" fg:w="594"/><text x="30.4824%" y="943.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (121 samples, 0.03%)</title><rect x="30.3316%" y="917" width="0.0254%" height="15" fill="rgb(225,132,2)" fg:x="144604" fg:w="121"/><text x="30.5816%" y="927.50"></text></g><g><title>parsed::http::as_string (119 samples, 0.02%)</title><rect x="30.3320%" y="901" width="0.0250%" height="15" fill="rgb(209,159,44)" fg:x="144606" fg:w="119"/><text x="30.5820%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (119 samples, 0.02%)</title><rect x="30.3320%" y="885" width="0.0250%" height="15" fill="rgb(251,214,1)" fg:x="144606" fg:w="119"/><text x="30.5820%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (117 samples, 0.02%)</title><rect x="30.3324%" y="869" width="0.0245%" height="15" fill="rgb(247,84,47)" fg:x="144608" fg:w="117"/><text x="30.5824%" y="879.50"></text></g><g><title>alloc::fmt::format (70 samples, 0.01%)</title><rect x="30.3607%" y="565" width="0.0147%" height="15" fill="rgb(240,111,43)" fg:x="144743" fg:w="70"/><text x="30.6107%" y="575.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (187 samples, 0.04%)</title><rect x="30.3607%" y="597" width="0.0392%" height="15" fill="rgb(215,214,35)" fg:x="144743" fg:w="187"/><text x="30.6107%" y="607.50"></text></g><g><title>parsed::parser::single::{{closure}} (187 samples, 0.04%)</title><rect x="30.3607%" y="581" width="0.0392%" height="15" fill="rgb(248,207,23)" fg:x="144743" fg:w="187"/><text x="30.6107%" y="591.50"></text></g><g><title>parsed::stream::ByteStream::next (65 samples, 0.01%)</title><rect x="30.3863%" y="565" width="0.0136%" height="15" fill="rgb(214,186,4)" fg:x="144865" fg:w="65"/><text x="30.6363%" y="575.50"></text></g><g><title>start_thread (224 samples, 0.05%)</title><rect x="30.3607%" y="1253" width="0.0470%" height="15" fill="rgb(220,133,22)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1263.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (224 samples, 0.05%)</title><rect x="30.3607%" y="1237" width="0.0470%" height="15" fill="rgb(239,134,19)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (224 samples, 0.05%)</title><rect x="30.3607%" y="1221" width="0.0470%" height="15" fill="rgb(250,140,9)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (224 samples, 0.05%)</title><rect x="30.3607%" y="1205" width="0.0470%" height="15" fill="rgb(225,59,14)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (224 samples, 0.05%)</title><rect x="30.3607%" y="1189" width="0.0470%" height="15" fill="rgb(214,152,51)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1199.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (224 samples, 0.05%)</title><rect x="30.3607%" y="1173" width="0.0470%" height="15" fill="rgb(251,227,43)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (224 samples, 0.05%)</title><rect x="30.3607%" y="1157" width="0.0470%" height="15" fill="rgb(241,96,17)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1167.50"></text></g><g><title>std::panicking::try (224 samples, 0.05%)</title><rect x="30.3607%" y="1141" width="0.0470%" height="15" fill="rgb(234,198,43)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (224 samples, 0.05%)</title><rect x="30.3607%" y="1125" width="0.0470%" height="15" fill="rgb(220,108,29)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (224 samples, 0.05%)</title><rect x="30.3607%" y="1109" width="0.0470%" height="15" fill="rgb(226,163,33)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (224 samples, 0.05%)</title><rect x="30.3607%" y="1093" width="0.0470%" height="15" fill="rgb(205,194,45)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1103.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (224 samples, 0.05%)</title><rect x="30.3607%" y="1077" width="0.0470%" height="15" fill="rgb(206,143,44)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1087.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (224 samples, 0.05%)</title><rect x="30.3607%" y="1061" width="0.0470%" height="15" fill="rgb(236,136,36)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (224 samples, 0.05%)</title><rect x="30.3607%" y="1045" width="0.0470%" height="15" fill="rgb(249,172,42)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1055.50"></text></g><g><title>std::panicking::try (224 samples, 0.05%)</title><rect x="30.3607%" y="1029" width="0.0470%" height="15" fill="rgb(216,139,23)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (224 samples, 0.05%)</title><rect x="30.3607%" y="1013" width="0.0470%" height="15" fill="rgb(207,166,20)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (224 samples, 0.05%)</title><rect x="30.3607%" y="997" width="0.0470%" height="15" fill="rgb(210,209,22)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="1007.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (224 samples, 0.05%)</title><rect x="30.3607%" y="981" width="0.0470%" height="15" fill="rgb(232,118,20)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (224 samples, 0.05%)</title><rect x="30.3607%" y="965" width="0.0470%" height="15" fill="rgb(238,113,42)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="975.50"></text></g><g><title>uppercut::core::worker_loop (224 samples, 0.05%)</title><rect x="30.3607%" y="949" width="0.0470%" height="15" fill="rgb(231,42,5)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="959.50"></text></g><g><title>std::panic::catch_unwind (224 samples, 0.05%)</title><rect x="30.3607%" y="933" width="0.0470%" height="15" fill="rgb(243,166,24)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="943.50"></text></g><g><title>std::panicking::try (224 samples, 0.05%)</title><rect x="30.3607%" y="917" width="0.0470%" height="15" fill="rgb(237,226,12)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="927.50"></text></g><g><title>std::panicking::try::do_call (224 samples, 0.05%)</title><rect x="30.3607%" y="901" width="0.0470%" height="15" fill="rgb(229,133,24)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (224 samples, 0.05%)</title><rect x="30.3607%" y="885" width="0.0470%" height="15" fill="rgb(238,33,43)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="895.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (224 samples, 0.05%)</title><rect x="30.3607%" y="869" width="0.0470%" height="15" fill="rgb(227,59,38)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="879.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (224 samples, 0.05%)</title><rect x="30.3607%" y="853" width="0.0470%" height="15" fill="rgb(230,97,0)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="863.50"></text></g><g><title>uppercut_mio_server::protocol::process (224 samples, 0.05%)</title><rect x="30.3607%" y="837" width="0.0470%" height="15" fill="rgb(250,173,50)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="847.50"></text></g><g><title>parsed::http::parse_http_request (224 samples, 0.05%)</title><rect x="30.3607%" y="821" width="0.0470%" height="15" fill="rgb(240,15,50)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="831.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (224 samples, 0.05%)</title><rect x="30.3607%" y="805" width="0.0470%" height="15" fill="rgb(221,93,22)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="815.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (224 samples, 0.05%)</title><rect x="30.3607%" y="789" width="0.0470%" height="15" fill="rgb(245,180,53)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="799.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (224 samples, 0.05%)</title><rect x="30.3607%" y="773" width="0.0470%" height="15" fill="rgb(231,88,51)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="783.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (224 samples, 0.05%)</title><rect x="30.3607%" y="757" width="0.0470%" height="15" fill="rgb(240,58,21)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="767.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (224 samples, 0.05%)</title><rect x="30.3607%" y="741" width="0.0470%" height="15" fill="rgb(237,21,10)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="751.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (224 samples, 0.05%)</title><rect x="30.3607%" y="725" width="0.0470%" height="15" fill="rgb(218,43,11)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="735.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (224 samples, 0.05%)</title><rect x="30.3607%" y="709" width="0.0470%" height="15" fill="rgb(218,221,29)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="719.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (224 samples, 0.05%)</title><rect x="30.3607%" y="693" width="0.0470%" height="15" fill="rgb(214,118,42)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="703.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (224 samples, 0.05%)</title><rect x="30.3607%" y="677" width="0.0470%" height="15" fill="rgb(251,200,26)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="687.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (224 samples, 0.05%)</title><rect x="30.3607%" y="661" width="0.0470%" height="15" fill="rgb(237,101,39)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="671.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (224 samples, 0.05%)</title><rect x="30.3607%" y="645" width="0.0470%" height="15" fill="rgb(251,117,11)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="655.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (224 samples, 0.05%)</title><rect x="30.3607%" y="629" width="0.0470%" height="15" fill="rgb(216,223,23)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (224 samples, 0.05%)</title><rect x="30.3607%" y="613" width="0.0470%" height="15" fill="rgb(251,54,12)" fg:x="144743" fg:w="224"/><text x="30.6107%" y="623.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (81 samples, 0.02%)</title><rect x="30.4077%" y="613" width="0.0170%" height="15" fill="rgb(254,176,54)" fg:x="144967" fg:w="81"/><text x="30.6577%" y="623.50"></text></g><g><title>parsed::parser::single::{{closure}} (81 samples, 0.02%)</title><rect x="30.4077%" y="597" width="0.0170%" height="15" fill="rgb(210,32,8)" fg:x="144967" fg:w="81"/><text x="30.6577%" y="607.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (57 samples, 0.01%)</title><rect x="30.4128%" y="581" width="0.0120%" height="15" fill="rgb(235,52,38)" fg:x="144991" fg:w="57"/><text x="30.6628%" y="591.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (112 samples, 0.02%)</title><rect x="30.4077%" y="1253" width="0.0235%" height="15" fill="rgb(231,4,44)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (112 samples, 0.02%)</title><rect x="30.4077%" y="1237" width="0.0235%" height="15" fill="rgb(249,2,32)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (112 samples, 0.02%)</title><rect x="30.4077%" y="1221" width="0.0235%" height="15" fill="rgb(224,65,26)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (112 samples, 0.02%)</title><rect x="30.4077%" y="1205" width="0.0235%" height="15" fill="rgb(250,73,40)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1215.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (112 samples, 0.02%)</title><rect x="30.4077%" y="1189" width="0.0235%" height="15" fill="rgb(253,177,16)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (112 samples, 0.02%)</title><rect x="30.4077%" y="1173" width="0.0235%" height="15" fill="rgb(217,32,34)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1183.50"></text></g><g><title>std::panicking::try (112 samples, 0.02%)</title><rect x="30.4077%" y="1157" width="0.0235%" height="15" fill="rgb(212,7,10)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (112 samples, 0.02%)</title><rect x="30.4077%" y="1141" width="0.0235%" height="15" fill="rgb(245,89,8)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (112 samples, 0.02%)</title><rect x="30.4077%" y="1125" width="0.0235%" height="15" fill="rgb(237,16,53)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (112 samples, 0.02%)</title><rect x="30.4077%" y="1109" width="0.0235%" height="15" fill="rgb(250,204,30)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (112 samples, 0.02%)</title><rect x="30.4077%" y="1093" width="0.0235%" height="15" fill="rgb(208,77,27)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1103.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (112 samples, 0.02%)</title><rect x="30.4077%" y="1077" width="0.0235%" height="15" fill="rgb(250,204,28)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (112 samples, 0.02%)</title><rect x="30.4077%" y="1061" width="0.0235%" height="15" fill="rgb(244,63,21)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1071.50"></text></g><g><title>std::panicking::try (112 samples, 0.02%)</title><rect x="30.4077%" y="1045" width="0.0235%" height="15" fill="rgb(236,85,44)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (112 samples, 0.02%)</title><rect x="30.4077%" y="1029" width="0.0235%" height="15" fill="rgb(215,98,4)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (112 samples, 0.02%)</title><rect x="30.4077%" y="1013" width="0.0235%" height="15" fill="rgb(235,38,11)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1023.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (112 samples, 0.02%)</title><rect x="30.4077%" y="997" width="0.0235%" height="15" fill="rgb(254,186,25)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (112 samples, 0.02%)</title><rect x="30.4077%" y="981" width="0.0235%" height="15" fill="rgb(225,55,31)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="991.50"></text></g><g><title>uppercut::core::worker_loop (112 samples, 0.02%)</title><rect x="30.4077%" y="965" width="0.0235%" height="15" fill="rgb(211,15,21)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="975.50"></text></g><g><title>std::panic::catch_unwind (112 samples, 0.02%)</title><rect x="30.4077%" y="949" width="0.0235%" height="15" fill="rgb(215,187,41)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="959.50"></text></g><g><title>std::panicking::try (112 samples, 0.02%)</title><rect x="30.4077%" y="933" width="0.0235%" height="15" fill="rgb(248,69,32)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="943.50"></text></g><g><title>std::panicking::try::do_call (112 samples, 0.02%)</title><rect x="30.4077%" y="917" width="0.0235%" height="15" fill="rgb(252,102,52)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (112 samples, 0.02%)</title><rect x="30.4077%" y="901" width="0.0235%" height="15" fill="rgb(253,140,32)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="911.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (112 samples, 0.02%)</title><rect x="30.4077%" y="885" width="0.0235%" height="15" fill="rgb(216,56,42)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="895.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (112 samples, 0.02%)</title><rect x="30.4077%" y="869" width="0.0235%" height="15" fill="rgb(216,184,14)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="879.50"></text></g><g><title>uppercut_mio_server::protocol::process (112 samples, 0.02%)</title><rect x="30.4077%" y="853" width="0.0235%" height="15" fill="rgb(237,187,27)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="863.50"></text></g><g><title>parsed::http::parse_http_request (112 samples, 0.02%)</title><rect x="30.4077%" y="837" width="0.0235%" height="15" fill="rgb(219,65,3)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="847.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (112 samples, 0.02%)</title><rect x="30.4077%" y="821" width="0.0235%" height="15" fill="rgb(245,83,25)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="831.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (112 samples, 0.02%)</title><rect x="30.4077%" y="805" width="0.0235%" height="15" fill="rgb(214,205,45)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="815.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (112 samples, 0.02%)</title><rect x="30.4077%" y="789" width="0.0235%" height="15" fill="rgb(241,20,18)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="799.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (112 samples, 0.02%)</title><rect x="30.4077%" y="773" width="0.0235%" height="15" fill="rgb(232,163,23)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="783.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (112 samples, 0.02%)</title><rect x="30.4077%" y="757" width="0.0235%" height="15" fill="rgb(214,5,46)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="767.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (112 samples, 0.02%)</title><rect x="30.4077%" y="741" width="0.0235%" height="15" fill="rgb(229,78,17)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="751.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (112 samples, 0.02%)</title><rect x="30.4077%" y="725" width="0.0235%" height="15" fill="rgb(248,89,10)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="735.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (112 samples, 0.02%)</title><rect x="30.4077%" y="709" width="0.0235%" height="15" fill="rgb(248,54,15)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="719.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (112 samples, 0.02%)</title><rect x="30.4077%" y="693" width="0.0235%" height="15" fill="rgb(223,116,6)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="703.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (112 samples, 0.02%)</title><rect x="30.4077%" y="677" width="0.0235%" height="15" fill="rgb(205,125,38)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="687.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (112 samples, 0.02%)</title><rect x="30.4077%" y="661" width="0.0235%" height="15" fill="rgb(251,78,38)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="671.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (112 samples, 0.02%)</title><rect x="30.4077%" y="645" width="0.0235%" height="15" fill="rgb(253,78,28)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="655.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (112 samples, 0.02%)</title><rect x="30.4077%" y="629" width="0.0235%" height="15" fill="rgb(209,120,3)" fg:x="144967" fg:w="112"/><text x="30.6577%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (51 samples, 0.01%)</title><rect x="30.4329%" y="677" width="0.0107%" height="15" fill="rgb(238,229,9)" fg:x="145087" fg:w="51"/><text x="30.6829%" y="687.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (140 samples, 0.03%)</title><rect x="30.4312%" y="773" width="0.0294%" height="15" fill="rgb(253,159,18)" fg:x="145079" fg:w="140"/><text x="30.6812%" y="783.50"></text></g><g><title>parsed::parser::single::{{closure}} (140 samples, 0.03%)</title><rect x="30.4312%" y="757" width="0.0294%" height="15" fill="rgb(244,42,34)" fg:x="145079" fg:w="140"/><text x="30.6812%" y="767.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (140 samples, 0.03%)</title><rect x="30.4312%" y="741" width="0.0294%" height="15" fill="rgb(224,8,7)" fg:x="145079" fg:w="140"/><text x="30.6812%" y="751.50"></text></g><g><title>alloc::fmt::format (140 samples, 0.03%)</title><rect x="30.4312%" y="725" width="0.0294%" height="15" fill="rgb(210,201,45)" fg:x="145079" fg:w="140"/><text x="30.6812%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (140 samples, 0.03%)</title><rect x="30.4312%" y="709" width="0.0294%" height="15" fill="rgb(252,185,21)" fg:x="145079" fg:w="140"/><text x="30.6812%" y="719.50"></text></g><g><title>core::fmt::write (140 samples, 0.03%)</title><rect x="30.4312%" y="693" width="0.0294%" height="15" fill="rgb(223,131,1)" fg:x="145079" fg:w="140"/><text x="30.6812%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (157 samples, 0.03%)</title><rect x="30.4312%" y="1253" width="0.0329%" height="15" fill="rgb(245,141,16)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1263.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (157 samples, 0.03%)</title><rect x="30.4312%" y="1237" width="0.0329%" height="15" fill="rgb(229,55,45)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (157 samples, 0.03%)</title><rect x="30.4312%" y="1221" width="0.0329%" height="15" fill="rgb(208,92,15)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1231.50"></text></g><g><title>std::panicking::try (157 samples, 0.03%)</title><rect x="30.4312%" y="1205" width="0.0329%" height="15" fill="rgb(234,185,47)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (157 samples, 0.03%)</title><rect x="30.4312%" y="1189" width="0.0329%" height="15" fill="rgb(253,104,50)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (157 samples, 0.03%)</title><rect x="30.4312%" y="1173" width="0.0329%" height="15" fill="rgb(205,70,7)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1183.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (157 samples, 0.03%)</title><rect x="30.4312%" y="1157" width="0.0329%" height="15" fill="rgb(240,178,43)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (157 samples, 0.03%)</title><rect x="30.4312%" y="1141" width="0.0329%" height="15" fill="rgb(214,112,2)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1151.50"></text></g><g><title>uppercut::core::worker_loop (157 samples, 0.03%)</title><rect x="30.4312%" y="1125" width="0.0329%" height="15" fill="rgb(206,46,17)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (157 samples, 0.03%)</title><rect x="30.4312%" y="1109" width="0.0329%" height="15" fill="rgb(225,220,16)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1119.50"></text></g><g><title>std::panicking::try (157 samples, 0.03%)</title><rect x="30.4312%" y="1093" width="0.0329%" height="15" fill="rgb(238,65,40)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (157 samples, 0.03%)</title><rect x="30.4312%" y="1077" width="0.0329%" height="15" fill="rgb(230,151,21)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (157 samples, 0.03%)</title><rect x="30.4312%" y="1061" width="0.0329%" height="15" fill="rgb(218,58,49)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1071.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (157 samples, 0.03%)</title><rect x="30.4312%" y="1045" width="0.0329%" height="15" fill="rgb(219,179,14)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1055.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (157 samples, 0.03%)</title><rect x="30.4312%" y="1029" width="0.0329%" height="15" fill="rgb(223,72,1)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1039.50"></text></g><g><title>uppercut_mio_server::protocol::process (157 samples, 0.03%)</title><rect x="30.4312%" y="1013" width="0.0329%" height="15" fill="rgb(238,126,10)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1023.50"></text></g><g><title>parsed::http::parse_http_request (157 samples, 0.03%)</title><rect x="30.4312%" y="997" width="0.0329%" height="15" fill="rgb(224,206,38)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="1007.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (157 samples, 0.03%)</title><rect x="30.4312%" y="981" width="0.0329%" height="15" fill="rgb(212,201,54)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="991.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (157 samples, 0.03%)</title><rect x="30.4312%" y="965" width="0.0329%" height="15" fill="rgb(218,154,48)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (157 samples, 0.03%)</title><rect x="30.4312%" y="949" width="0.0329%" height="15" fill="rgb(232,93,24)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="959.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (157 samples, 0.03%)</title><rect x="30.4312%" y="933" width="0.0329%" height="15" fill="rgb(245,30,21)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="943.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (157 samples, 0.03%)</title><rect x="30.4312%" y="917" width="0.0329%" height="15" fill="rgb(242,148,29)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="927.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (157 samples, 0.03%)</title><rect x="30.4312%" y="901" width="0.0329%" height="15" fill="rgb(244,153,54)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="911.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (157 samples, 0.03%)</title><rect x="30.4312%" y="885" width="0.0329%" height="15" fill="rgb(252,87,22)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="895.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (157 samples, 0.03%)</title><rect x="30.4312%" y="869" width="0.0329%" height="15" fill="rgb(210,51,29)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="879.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (157 samples, 0.03%)</title><rect x="30.4312%" y="853" width="0.0329%" height="15" fill="rgb(242,136,47)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="863.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (157 samples, 0.03%)</title><rect x="30.4312%" y="837" width="0.0329%" height="15" fill="rgb(238,68,4)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="847.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (157 samples, 0.03%)</title><rect x="30.4312%" y="821" width="0.0329%" height="15" fill="rgb(242,161,30)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="831.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (157 samples, 0.03%)</title><rect x="30.4312%" y="805" width="0.0329%" height="15" fill="rgb(218,58,44)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="815.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (157 samples, 0.03%)</title><rect x="30.4312%" y="789" width="0.0329%" height="15" fill="rgb(252,125,32)" fg:x="145079" fg:w="157"/><text x="30.6812%" y="799.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (99 samples, 0.02%)</title><rect x="30.4960%" y="773" width="0.0208%" height="15" fill="rgb(219,178,0)" fg:x="145388" fg:w="99"/><text x="30.7460%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (90 samples, 0.02%)</title><rect x="30.4979%" y="757" width="0.0189%" height="15" fill="rgb(213,152,7)" fg:x="145397" fg:w="90"/><text x="30.7479%" y="767.50"></text></g><g><title>alloc::fmt::format (175 samples, 0.04%)</title><rect x="30.4813%" y="821" width="0.0367%" height="15" fill="rgb(249,109,34)" fg:x="145318" fg:w="175"/><text x="30.7313%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (142 samples, 0.03%)</title><rect x="30.4883%" y="805" width="0.0298%" height="15" fill="rgb(232,96,21)" fg:x="145351" fg:w="142"/><text x="30.7383%" y="815.50"></text></g><g><title>core::fmt::write (142 samples, 0.03%)</title><rect x="30.4883%" y="789" width="0.0298%" height="15" fill="rgb(228,27,39)" fg:x="145351" fg:w="142"/><text x="30.7383%" y="799.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (180 samples, 0.04%)</title><rect x="30.4805%" y="837" width="0.0378%" height="15" fill="rgb(211,182,52)" fg:x="145314" fg:w="180"/><text x="30.7305%" y="847.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (244 samples, 0.05%)</title><rect x="30.4686%" y="869" width="0.0512%" height="15" fill="rgb(234,178,38)" fg:x="145257" fg:w="244"/><text x="30.7186%" y="879.50"></text></g><g><title>parsed::parser::before::{{closure}} (240 samples, 0.05%)</title><rect x="30.4694%" y="853" width="0.0503%" height="15" fill="rgb(221,111,3)" fg:x="145261" fg:w="240"/><text x="30.7194%" y="863.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (57 samples, 0.01%)</title><rect x="30.5216%" y="869" width="0.0120%" height="15" fill="rgb(228,175,21)" fg:x="145510" fg:w="57"/><text x="30.7716%" y="879.50"></text></g><g><title>uppercut::core::worker_loop (351 samples, 0.07%)</title><rect x="30.4641%" y="1253" width="0.0736%" height="15" fill="rgb(228,174,43)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (351 samples, 0.07%)</title><rect x="30.4641%" y="1237" width="0.0736%" height="15" fill="rgb(211,191,0)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1247.50"></text></g><g><title>std::panicking::try (351 samples, 0.07%)</title><rect x="30.4641%" y="1221" width="0.0736%" height="15" fill="rgb(253,117,3)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (351 samples, 0.07%)</title><rect x="30.4641%" y="1205" width="0.0736%" height="15" fill="rgb(241,127,19)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1215.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (351 samples, 0.07%)</title><rect x="30.4641%" y="1189" width="0.0736%" height="15" fill="rgb(218,103,12)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1199.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (351 samples, 0.07%)</title><rect x="30.4641%" y="1173" width="0.0736%" height="15" fill="rgb(236,214,43)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1183.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (351 samples, 0.07%)</title><rect x="30.4641%" y="1157" width="0.0736%" height="15" fill="rgb(244,144,19)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1167.50"></text></g><g><title>uppercut_mio_server::protocol::process (351 samples, 0.07%)</title><rect x="30.4641%" y="1141" width="0.0736%" height="15" fill="rgb(246,188,10)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1151.50"></text></g><g><title>parsed::http::parse_http_request (351 samples, 0.07%)</title><rect x="30.4641%" y="1125" width="0.0736%" height="15" fill="rgb(212,193,33)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1135.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (351 samples, 0.07%)</title><rect x="30.4641%" y="1109" width="0.0736%" height="15" fill="rgb(241,51,29)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1119.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (351 samples, 0.07%)</title><rect x="30.4641%" y="1093" width="0.0736%" height="15" fill="rgb(211,58,19)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1103.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (351 samples, 0.07%)</title><rect x="30.4641%" y="1077" width="0.0736%" height="15" fill="rgb(229,111,26)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1087.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (351 samples, 0.07%)</title><rect x="30.4641%" y="1061" width="0.0736%" height="15" fill="rgb(213,115,40)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1071.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (351 samples, 0.07%)</title><rect x="30.4641%" y="1045" width="0.0736%" height="15" fill="rgb(209,56,44)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1055.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (351 samples, 0.07%)</title><rect x="30.4641%" y="1029" width="0.0736%" height="15" fill="rgb(230,108,32)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1039.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (351 samples, 0.07%)</title><rect x="30.4641%" y="1013" width="0.0736%" height="15" fill="rgb(216,165,31)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1023.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (351 samples, 0.07%)</title><rect x="30.4641%" y="997" width="0.0736%" height="15" fill="rgb(218,122,21)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="1007.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (351 samples, 0.07%)</title><rect x="30.4641%" y="981" width="0.0736%" height="15" fill="rgb(223,224,47)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="991.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (351 samples, 0.07%)</title><rect x="30.4641%" y="965" width="0.0736%" height="15" fill="rgb(238,102,44)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (351 samples, 0.07%)</title><rect x="30.4641%" y="949" width="0.0736%" height="15" fill="rgb(236,46,40)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="959.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (351 samples, 0.07%)</title><rect x="30.4641%" y="933" width="0.0736%" height="15" fill="rgb(247,202,50)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="943.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (351 samples, 0.07%)</title><rect x="30.4641%" y="917" width="0.0736%" height="15" fill="rgb(209,99,20)" fg:x="145236" fg:w="351"/><text x="30.7141%" y="927.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (342 samples, 0.07%)</title><rect x="30.4660%" y="901" width="0.0717%" height="15" fill="rgb(252,27,34)" fg:x="145245" fg:w="342"/><text x="30.7160%" y="911.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (342 samples, 0.07%)</title><rect x="30.4660%" y="885" width="0.0717%" height="15" fill="rgb(215,206,23)" fg:x="145245" fg:w="342"/><text x="30.7160%" y="895.50"></text></g><g><title>[unknown] (2,059 samples, 0.43%)</title><rect x="30.1111%" y="1269" width="0.4319%" height="15" fill="rgb(212,135,36)" fg:x="143553" fg:w="2059"/><text x="30.3611%" y="1279.50"></text></g><g><title>__libc_malloc (72 samples, 0.02%)</title><rect x="30.7230%" y="757" width="0.0151%" height="15" fill="rgb(240,189,1)" fg:x="146470" fg:w="72"/><text x="30.9730%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (74 samples, 0.02%)</title><rect x="30.7230%" y="853" width="0.0155%" height="15" fill="rgb(242,56,20)" fg:x="146470" fg:w="74"/><text x="30.9730%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (74 samples, 0.02%)</title><rect x="30.7230%" y="837" width="0.0155%" height="15" fill="rgb(247,132,33)" fg:x="146470" fg:w="74"/><text x="30.9730%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (74 samples, 0.02%)</title><rect x="30.7230%" y="821" width="0.0155%" height="15" fill="rgb(208,149,11)" fg:x="146470" fg:w="74"/><text x="30.9730%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (74 samples, 0.02%)</title><rect x="30.7230%" y="805" width="0.0155%" height="15" fill="rgb(211,33,11)" fg:x="146470" fg:w="74"/><text x="30.9730%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (74 samples, 0.02%)</title><rect x="30.7230%" y="789" width="0.0155%" height="15" fill="rgb(221,29,38)" fg:x="146470" fg:w="74"/><text x="30.9730%" y="799.50"></text></g><g><title>alloc::alloc::alloc (74 samples, 0.02%)</title><rect x="30.7230%" y="773" width="0.0155%" height="15" fill="rgb(206,182,49)" fg:x="146470" fg:w="74"/><text x="30.9730%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (151 samples, 0.03%)</title><rect x="30.7215%" y="933" width="0.0317%" height="15" fill="rgb(216,140,1)" fg:x="146463" fg:w="151"/><text x="30.9715%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (144 samples, 0.03%)</title><rect x="30.7230%" y="917" width="0.0302%" height="15" fill="rgb(232,57,40)" fg:x="146470" fg:w="144"/><text x="30.9730%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (144 samples, 0.03%)</title><rect x="30.7230%" y="901" width="0.0302%" height="15" fill="rgb(224,186,18)" fg:x="146470" fg:w="144"/><text x="30.9730%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (144 samples, 0.03%)</title><rect x="30.7230%" y="885" width="0.0302%" height="15" fill="rgb(215,121,11)" fg:x="146470" fg:w="144"/><text x="30.9730%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (144 samples, 0.03%)</title><rect x="30.7230%" y="869" width="0.0302%" height="15" fill="rgb(245,147,10)" fg:x="146470" fg:w="144"/><text x="30.9730%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (70 samples, 0.01%)</title><rect x="30.7385%" y="853" width="0.0147%" height="15" fill="rgb(238,153,13)" fg:x="146544" fg:w="70"/><text x="30.9885%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (70 samples, 0.01%)</title><rect x="30.7385%" y="837" width="0.0147%" height="15" fill="rgb(233,108,0)" fg:x="146544" fg:w="70"/><text x="30.9885%" y="847.50"></text></g><g><title>[libc-2.31.so] (69 samples, 0.01%)</title><rect x="30.7387%" y="821" width="0.0145%" height="15" fill="rgb(212,157,17)" fg:x="146545" fg:w="69"/><text x="30.9887%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (53 samples, 0.01%)</title><rect x="30.7534%" y="933" width="0.0111%" height="15" fill="rgb(225,213,38)" fg:x="146615" fg:w="53"/><text x="31.0034%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (53 samples, 0.01%)</title><rect x="30.7534%" y="917" width="0.0111%" height="15" fill="rgb(248,16,11)" fg:x="146615" fg:w="53"/><text x="31.0034%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (53 samples, 0.01%)</title><rect x="30.7534%" y="901" width="0.0111%" height="15" fill="rgb(241,33,4)" fg:x="146615" fg:w="53"/><text x="31.0034%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.01%)</title><rect x="30.7534%" y="885" width="0.0111%" height="15" fill="rgb(222,26,43)" fg:x="146615" fg:w="53"/><text x="31.0034%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (50 samples, 0.01%)</title><rect x="30.7540%" y="869" width="0.0105%" height="15" fill="rgb(243,29,36)" fg:x="146618" fg:w="50"/><text x="31.0040%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (50 samples, 0.01%)</title><rect x="30.7540%" y="853" width="0.0105%" height="15" fill="rgb(241,9,27)" fg:x="146618" fg:w="50"/><text x="31.0040%" y="863.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (299 samples, 0.06%)</title><rect x="31.7724%" y="917" width="0.0627%" height="15" fill="rgb(205,117,26)" fg:x="151473" fg:w="299"/><text x="32.0224%" y="927.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::counter (299 samples, 0.06%)</title><rect x="31.7724%" y="901" width="0.0627%" height="15" fill="rgb(209,80,39)" fg:x="151473" fg:w="299"/><text x="32.0224%" y="911.50"></text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (917 samples, 0.19%)</title><rect x="33.1484%" y="901" width="0.1923%" height="15" fill="rgb(239,155,6)" fg:x="158033" fg:w="917"/><text x="33.3984%" y="911.50"></text></g><g><title>&lt;crossbeam_channel::flavors::zero::ZeroToken as core::default::Default&gt;::default (621 samples, 0.13%)</title><rect x="33.2105%" y="885" width="0.1303%" height="15" fill="rgb(212,104,12)" fg:x="158329" fg:w="621"/><text x="33.4605%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (81 samples, 0.02%)</title><rect x="33.3540%" y="885" width="0.0170%" height="15" fill="rgb(234,204,3)" fg:x="159013" fg:w="81"/><text x="33.6040%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_or (81 samples, 0.02%)</title><rect x="33.3540%" y="869" width="0.0170%" height="15" fill="rgb(251,218,7)" fg:x="159013" fg:w="81"/><text x="33.6040%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (274 samples, 0.06%)</title><rect x="33.3422%" y="901" width="0.0575%" height="15" fill="rgb(221,81,32)" fg:x="158957" fg:w="274"/><text x="33.5922%" y="911.50"></text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (131 samples, 0.03%)</title><rect x="33.3722%" y="885" width="0.0275%" height="15" fill="rgb(214,152,26)" fg:x="159100" fg:w="131"/><text x="33.6222%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (650 samples, 0.14%)</title><rect x="34.9680%" y="885" width="0.1363%" height="15" fill="rgb(223,22,3)" fg:x="166708" fg:w="650"/><text x="35.2180%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (650 samples, 0.14%)</title><rect x="34.9680%" y="869" width="0.1363%" height="15" fill="rgb(207,174,7)" fg:x="166708" fg:w="650"/><text x="35.2180%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18,251 samples, 3.83%)</title><rect x="35.1044%" y="885" width="3.8283%" height="15" fill="rgb(224,19,52)" fg:x="167358" fg:w="18251"/><text x="35.3544%" y="895.50">core..</text></g><g><title>core::sync::atomic::atomic_load (18,251 samples, 3.83%)</title><rect x="35.1044%" y="869" width="3.8283%" height="15" fill="rgb(228,24,14)" fg:x="167358" fg:w="18251"/><text x="35.3544%" y="879.50">core..</text></g><g><title>core::sync::atomic::fence (361 samples, 0.08%)</title><rect x="38.9326%" y="885" width="0.0757%" height="15" fill="rgb(230,153,43)" fg:x="185609" fg:w="361"/><text x="39.1826%" y="895.50"></text></g><g><title>core::cmp::Ord::min (58 samples, 0.01%)</title><rect x="39.0126%" y="869" width="0.0122%" height="15" fill="rgb(231,106,12)" fg:x="185990" fg:w="58"/><text x="39.2626%" y="879.50"></text></g><g><title>core::cmp::min_by (58 samples, 0.01%)</title><rect x="39.0126%" y="853" width="0.0122%" height="15" fill="rgb(215,92,2)" fg:x="185990" fg:w="58"/><text x="39.2626%" y="863.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (39,394 samples, 8.26%)</title><rect x="30.7645%" y="933" width="8.2631%" height="15" fill="rgb(249,143,25)" fg:x="146668" fg:w="39394"/><text x="31.0145%" y="943.50">crossbeam_ch..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (34,283 samples, 7.19%)</title><rect x="31.8366%" y="917" width="7.1911%" height="15" fill="rgb(252,7,35)" fg:x="151779" fg:w="34283"/><text x="32.0866%" y="927.50">crossbeam_..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (26,831 samples, 5.63%)</title><rect x="33.3997%" y="901" width="5.6280%" height="15" fill="rgb(216,69,40)" fg:x="159231" fg:w="26831"/><text x="33.6497%" y="911.50">crossbe..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (74 samples, 0.02%)</title><rect x="39.0121%" y="885" width="0.0155%" height="15" fill="rgb(240,36,33)" fg:x="185988" fg:w="74"/><text x="39.2621%" y="895.50"></text></g><g><title>[libc-2.31.so] (112 samples, 0.02%)</title><rect x="39.0665%" y="789" width="0.0235%" height="15" fill="rgb(231,128,14)" fg:x="186247" fg:w="112"/><text x="39.3165%" y="799.50"></text></g><g><title>[libc-2.31.so] (70 samples, 0.01%)</title><rect x="39.0753%" y="773" width="0.0147%" height="15" fill="rgb(245,143,14)" fg:x="186289" fg:w="70"/><text x="39.3253%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (140 samples, 0.03%)</title><rect x="39.0608%" y="885" width="0.0294%" height="15" fill="rgb(222,130,28)" fg:x="186220" fg:w="140"/><text x="39.3108%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (124 samples, 0.03%)</title><rect x="39.0642%" y="869" width="0.0260%" height="15" fill="rgb(212,10,48)" fg:x="186236" fg:w="124"/><text x="39.3142%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (124 samples, 0.03%)</title><rect x="39.0642%" y="853" width="0.0260%" height="15" fill="rgb(254,118,45)" fg:x="186236" fg:w="124"/><text x="39.3142%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (124 samples, 0.03%)</title><rect x="39.0642%" y="837" width="0.0260%" height="15" fill="rgb(228,6,45)" fg:x="186236" fg:w="124"/><text x="39.3142%" y="847.50"></text></g><g><title>alloc::alloc::alloc (124 samples, 0.03%)</title><rect x="39.0642%" y="821" width="0.0260%" height="15" fill="rgb(241,18,35)" fg:x="186236" fg:w="124"/><text x="39.3142%" y="831.50"></text></g><g><title>__libc_malloc (123 samples, 0.03%)</title><rect x="39.0644%" y="805" width="0.0258%" height="15" fill="rgb(227,214,53)" fg:x="186237" fg:w="123"/><text x="39.3144%" y="815.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (314 samples, 0.07%)</title><rect x="39.0363%" y="901" width="0.0659%" height="15" fill="rgb(224,107,51)" fg:x="186103" fg:w="314"/><text x="39.2863%" y="911.50"></text></g><g><title>__x64_sys_sched_yield (143 samples, 0.03%)</title><rect x="39.1780%" y="789" width="0.0300%" height="15" fill="rgb(248,60,28)" fg:x="186779" fg:w="143"/><text x="39.4280%" y="799.50"></text></g><g><title>do_sched_yield (142 samples, 0.03%)</title><rect x="39.1783%" y="773" width="0.0298%" height="15" fill="rgb(249,101,23)" fg:x="186780" fg:w="142"/><text x="39.4283%" y="783.50"></text></g><g><title>schedule (126 samples, 0.03%)</title><rect x="39.1816%" y="757" width="0.0264%" height="15" fill="rgb(228,51,19)" fg:x="186796" fg:w="126"/><text x="39.4316%" y="767.50"></text></g><g><title>__schedule (121 samples, 0.03%)</title><rect x="39.1827%" y="741" width="0.0254%" height="15" fill="rgb(213,20,6)" fg:x="186801" fg:w="121"/><text x="39.4327%" y="751.50"></text></g><g><title>__sched_yield (358 samples, 0.08%)</title><rect x="39.1334%" y="837" width="0.0751%" height="15" fill="rgb(212,124,10)" fg:x="186566" fg:w="358"/><text x="39.3834%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (217 samples, 0.05%)</title><rect x="39.1629%" y="821" width="0.0455%" height="15" fill="rgb(248,3,40)" fg:x="186707" fg:w="217"/><text x="39.4129%" y="831.50"></text></g><g><title>do_syscall_64 (210 samples, 0.04%)</title><rect x="39.1644%" y="805" width="0.0440%" height="15" fill="rgb(223,178,23)" fg:x="186714" fg:w="210"/><text x="39.4144%" y="815.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (451 samples, 0.09%)</title><rect x="39.1256%" y="869" width="0.0946%" height="15" fill="rgb(240,132,45)" fg:x="186529" fg:w="451"/><text x="39.3756%" y="879.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (419 samples, 0.09%)</title><rect x="39.1323%" y="853" width="0.0879%" height="15" fill="rgb(245,164,36)" fg:x="186561" fg:w="419"/><text x="39.3823%" y="863.50"></text></g><g><title>futex_wake (277 samples, 0.06%)</title><rect x="39.2414%" y="693" width="0.0581%" height="15" fill="rgb(231,188,53)" fg:x="187081" fg:w="277"/><text x="39.4914%" y="703.50"></text></g><g><title>wake_up_q (245 samples, 0.05%)</title><rect x="39.2481%" y="677" width="0.0514%" height="15" fill="rgb(237,198,39)" fg:x="187113" fg:w="245"/><text x="39.4981%" y="687.50"></text></g><g><title>try_to_wake_up (242 samples, 0.05%)</title><rect x="39.2487%" y="661" width="0.0508%" height="15" fill="rgb(223,120,35)" fg:x="187116" fg:w="242"/><text x="39.4987%" y="671.50"></text></g><g><title>__lock_text_start (241 samples, 0.05%)</title><rect x="39.2489%" y="645" width="0.0506%" height="15" fill="rgb(253,107,49)" fg:x="187117" fg:w="241"/><text x="39.4989%" y="655.50"></text></g><g><title>do_futex (287 samples, 0.06%)</title><rect x="39.2401%" y="709" width="0.0602%" height="15" fill="rgb(216,44,31)" fg:x="187075" fg:w="287"/><text x="39.4901%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (380 samples, 0.08%)</title><rect x="39.2210%" y="853" width="0.0797%" height="15" fill="rgb(253,87,21)" fg:x="186984" fg:w="380"/><text x="39.4710%" y="863.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (380 samples, 0.08%)</title><rect x="39.2210%" y="837" width="0.0797%" height="15" fill="rgb(226,18,2)" fg:x="186984" fg:w="380"/><text x="39.4710%" y="847.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (347 samples, 0.07%)</title><rect x="39.2280%" y="821" width="0.0728%" height="15" fill="rgb(216,8,46)" fg:x="187017" fg:w="347"/><text x="39.4780%" y="831.50"></text></g><g><title>std::thread::Thread::unpark (347 samples, 0.07%)</title><rect x="39.2280%" y="805" width="0.0728%" height="15" fill="rgb(226,140,39)" fg:x="187017" fg:w="347"/><text x="39.4780%" y="815.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (347 samples, 0.07%)</title><rect x="39.2280%" y="789" width="0.0728%" height="15" fill="rgb(221,194,54)" fg:x="187017" fg:w="347"/><text x="39.4780%" y="799.50"></text></g><g><title>syscall (340 samples, 0.07%)</title><rect x="39.2294%" y="773" width="0.0713%" height="15" fill="rgb(213,92,11)" fg:x="187024" fg:w="340"/><text x="39.4794%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (310 samples, 0.07%)</title><rect x="39.2357%" y="757" width="0.0650%" height="15" fill="rgb(229,162,46)" fg:x="187054" fg:w="310"/><text x="39.4857%" y="767.50"></text></g><g><title>do_syscall_64 (308 samples, 0.06%)</title><rect x="39.2362%" y="741" width="0.0646%" height="15" fill="rgb(214,111,36)" fg:x="187056" fg:w="308"/><text x="39.4862%" y="751.50"></text></g><g><title>__x64_sys_futex (290 samples, 0.06%)</title><rect x="39.2399%" y="725" width="0.0608%" height="15" fill="rgb(207,6,21)" fg:x="187074" fg:w="290"/><text x="39.4899%" y="735.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1,307 samples, 0.27%)</title><rect x="39.0277%" y="933" width="0.2742%" height="15" fill="rgb(213,127,38)" fg:x="186062" fg:w="1307"/><text x="39.2777%" y="943.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1,284 samples, 0.27%)</title><rect x="39.0325%" y="917" width="0.2693%" height="15" fill="rgb(238,118,32)" fg:x="186085" fg:w="1284"/><text x="39.2825%" y="927.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (952 samples, 0.20%)</title><rect x="39.1021%" y="901" width="0.1997%" height="15" fill="rgb(240,139,39)" fg:x="186417" fg:w="952"/><text x="39.3521%" y="911.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (856 samples, 0.18%)</title><rect x="39.1223%" y="885" width="0.1796%" height="15" fill="rgb(235,10,37)" fg:x="186513" fg:w="856"/><text x="39.3723%" y="895.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (385 samples, 0.08%)</title><rect x="39.2210%" y="869" width="0.0808%" height="15" fill="rgb(249,171,38)" fg:x="186984" fg:w="385"/><text x="39.4710%" y="879.50"></text></g><g><title>apparmor_socket_recvmsg (80 samples, 0.02%)</title><rect x="39.5069%" y="613" width="0.0168%" height="15" fill="rgb(242,144,32)" fg:x="188347" fg:w="80"/><text x="39.7569%" y="623.50"></text></g><g><title>kfree_skbmem (147 samples, 0.03%)</title><rect x="39.5722%" y="565" width="0.0308%" height="15" fill="rgb(217,117,21)" fg:x="188658" fg:w="147"/><text x="39.8222%" y="575.50"></text></g><g><title>kmem_cache_free (145 samples, 0.03%)</title><rect x="39.5726%" y="549" width="0.0304%" height="15" fill="rgb(249,87,1)" fg:x="188660" fg:w="145"/><text x="39.8226%" y="559.50"></text></g><g><title>__slab_free (56 samples, 0.01%)</title><rect x="39.5913%" y="533" width="0.0117%" height="15" fill="rgb(248,196,48)" fg:x="188749" fg:w="56"/><text x="39.8413%" y="543.50"></text></g><g><title>skb_release_data (171 samples, 0.04%)</title><rect x="39.6049%" y="549" width="0.0359%" height="15" fill="rgb(251,206,33)" fg:x="188814" fg:w="171"/><text x="39.8549%" y="559.50"></text></g><g><title>skb_free_head (123 samples, 0.03%)</title><rect x="39.6150%" y="533" width="0.0258%" height="15" fill="rgb(232,141,28)" fg:x="188862" fg:w="123"/><text x="39.8650%" y="543.50"></text></g><g><title>kfree (121 samples, 0.03%)</title><rect x="39.6154%" y="517" width="0.0254%" height="15" fill="rgb(209,167,14)" fg:x="188864" fg:w="121"/><text x="39.8654%" y="527.50"></text></g><g><title>__slab_free (96 samples, 0.02%)</title><rect x="39.6206%" y="501" width="0.0201%" height="15" fill="rgb(225,11,50)" fg:x="188889" fg:w="96"/><text x="39.8706%" y="511.50"></text></g><g><title>skb_release_all (268 samples, 0.06%)</title><rect x="39.6036%" y="565" width="0.0562%" height="15" fill="rgb(209,50,20)" fg:x="188808" fg:w="268"/><text x="39.8536%" y="575.50"></text></g><g><title>sock_rfree (88 samples, 0.02%)</title><rect x="39.6414%" y="549" width="0.0185%" height="15" fill="rgb(212,17,46)" fg:x="188988" fg:w="88"/><text x="39.8914%" y="559.50"></text></g><g><title>__kfree_skb (423 samples, 0.09%)</title><rect x="39.5720%" y="581" width="0.0887%" height="15" fill="rgb(216,101,39)" fg:x="188657" fg:w="423"/><text x="39.8220%" y="591.50"></text></g><g><title>_raw_spin_lock_bh (67 samples, 0.01%)</title><rect x="39.6617%" y="581" width="0.0141%" height="15" fill="rgb(212,228,48)" fg:x="189085" fg:w="67"/><text x="39.9117%" y="591.50"></text></g><g><title>__check_object_size (113 samples, 0.02%)</title><rect x="39.6961%" y="533" width="0.0237%" height="15" fill="rgb(250,6,50)" fg:x="189249" fg:w="113"/><text x="39.9461%" y="543.50"></text></g><g><title>copy_user_generic_unrolled (124 samples, 0.03%)</title><rect x="39.7272%" y="517" width="0.0260%" height="15" fill="rgb(250,160,48)" fg:x="189397" fg:w="124"/><text x="39.9772%" y="527.50"></text></g><g><title>_copy_to_iter (157 samples, 0.03%)</title><rect x="39.7213%" y="533" width="0.0329%" height="15" fill="rgb(244,216,33)" fg:x="189369" fg:w="157"/><text x="39.9713%" y="543.50"></text></g><g><title>__skb_datagram_iter (318 samples, 0.07%)</title><rect x="39.6909%" y="565" width="0.0667%" height="15" fill="rgb(207,157,5)" fg:x="189224" fg:w="318"/><text x="39.9409%" y="575.50"></text></g><g><title>simple_copy_to_iter (299 samples, 0.06%)</title><rect x="39.6949%" y="549" width="0.0627%" height="15" fill="rgb(228,199,8)" fg:x="189243" fg:w="299"/><text x="39.9449%" y="559.50"></text></g><g><title>skb_copy_datagram_iter (325 samples, 0.07%)</title><rect x="39.6896%" y="581" width="0.0682%" height="15" fill="rgb(227,80,20)" fg:x="189218" fg:w="325"/><text x="39.9396%" y="591.50"></text></g><g><title>tcp_cleanup_rbuf (69 samples, 0.01%)</title><rect x="39.7580%" y="581" width="0.0145%" height="15" fill="rgb(222,9,33)" fg:x="189544" fg:w="69"/><text x="40.0080%" y="591.50"></text></g><g><title>kvm_clock_get_cycles (96 samples, 0.02%)</title><rect x="39.7899%" y="533" width="0.0201%" height="15" fill="rgb(239,44,28)" fg:x="189696" fg:w="96"/><text x="40.0399%" y="543.50"></text></g><g><title>pvclock_clocksource_read (79 samples, 0.02%)</title><rect x="39.7935%" y="517" width="0.0166%" height="15" fill="rgb(249,187,43)" fg:x="189713" fg:w="79"/><text x="40.0435%" y="527.50"></text></g><g><title>ktime_get (118 samples, 0.02%)</title><rect x="39.7857%" y="549" width="0.0248%" height="15" fill="rgb(216,141,28)" fg:x="189676" fg:w="118"/><text x="40.0357%" y="559.50"></text></g><g><title>tcp_rcv_space_adjust (199 samples, 0.04%)</title><rect x="39.7740%" y="581" width="0.0417%" height="15" fill="rgb(230,154,53)" fg:x="189620" fg:w="199"/><text x="40.0240%" y="591.50"></text></g><g><title>tcp_mstamp_refresh (150 samples, 0.03%)</title><rect x="39.7842%" y="565" width="0.0315%" height="15" fill="rgb(227,82,4)" fg:x="189669" fg:w="150"/><text x="40.0342%" y="575.50"></text></g><g><title>tcp_recv_timestamp (60 samples, 0.01%)</title><rect x="39.8157%" y="581" width="0.0126%" height="15" fill="rgb(220,107,16)" fg:x="189819" fg:w="60"/><text x="40.0657%" y="591.50"></text></g><g><title>inet_recvmsg (1,478 samples, 0.31%)</title><rect x="39.5237%" y="613" width="0.3100%" height="15" fill="rgb(207,187,2)" fg:x="188427" fg:w="1478"/><text x="39.7737%" y="623.50"></text></g><g><title>tcp_recvmsg (1,449 samples, 0.30%)</title><rect x="39.5298%" y="597" width="0.3039%" height="15" fill="rgb(210,162,52)" fg:x="188456" fg:w="1449"/><text x="39.7798%" y="607.50"></text></g><g><title>sock_recvmsg (1,607 samples, 0.34%)</title><rect x="39.5051%" y="629" width="0.3371%" height="15" fill="rgb(217,216,49)" fg:x="188338" fg:w="1607"/><text x="39.7551%" y="639.50"></text></g><g><title>__fdget (136 samples, 0.03%)</title><rect x="39.8428%" y="613" width="0.0285%" height="15" fill="rgb(218,146,49)" fg:x="189948" fg:w="136"/><text x="40.0928%" y="623.50"></text></g><g><title>__fget_light (134 samples, 0.03%)</title><rect x="39.8432%" y="597" width="0.0281%" height="15" fill="rgb(216,55,40)" fg:x="189950" fg:w="134"/><text x="40.0932%" y="607.50"></text></g><g><title>__fget (131 samples, 0.03%)</title><rect x="39.8438%" y="581" width="0.0275%" height="15" fill="rgb(208,196,21)" fg:x="189953" fg:w="131"/><text x="40.0938%" y="591.50"></text></g><g><title>__sys_recvfrom (1,810 samples, 0.38%)</title><rect x="39.4967%" y="645" width="0.3797%" height="15" fill="rgb(242,117,42)" fg:x="188298" fg:w="1810"/><text x="39.7467%" y="655.50"></text></g><g><title>sockfd_lookup_light (163 samples, 0.03%)</title><rect x="39.8421%" y="629" width="0.0342%" height="15" fill="rgb(210,11,23)" fg:x="189945" fg:w="163"/><text x="40.0921%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2,589 samples, 0.54%)</title><rect x="39.3383%" y="837" width="0.5431%" height="15" fill="rgb(217,110,2)" fg:x="187543" fg:w="2589"/><text x="39.5883%" y="847.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2,583 samples, 0.54%)</title><rect x="39.3396%" y="821" width="0.5418%" height="15" fill="rgb(229,77,54)" fg:x="187549" fg:w="2583"/><text x="39.5896%" y="831.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (2,583 samples, 0.54%)</title><rect x="39.3396%" y="805" width="0.5418%" height="15" fill="rgb(218,53,16)" fg:x="187549" fg:w="2583"/><text x="39.5896%" y="815.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (2,583 samples, 0.54%)</title><rect x="39.3396%" y="789" width="0.5418%" height="15" fill="rgb(215,38,13)" fg:x="187549" fg:w="2583"/><text x="39.5896%" y="799.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2,583 samples, 0.54%)</title><rect x="39.3396%" y="773" width="0.5418%" height="15" fill="rgb(235,42,18)" fg:x="187549" fg:w="2583"/><text x="39.5896%" y="783.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2,580 samples, 0.54%)</title><rect x="39.3402%" y="757" width="0.5412%" height="15" fill="rgb(219,66,54)" fg:x="187552" fg:w="2580"/><text x="39.5902%" y="767.50"></text></g><g><title>std::sys::unix::net::Socket::read (2,580 samples, 0.54%)</title><rect x="39.3402%" y="741" width="0.5412%" height="15" fill="rgb(222,205,4)" fg:x="187552" fg:w="2580"/><text x="39.5902%" y="751.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2,580 samples, 0.54%)</title><rect x="39.3402%" y="725" width="0.5412%" height="15" fill="rgb(227,213,46)" fg:x="187552" fg:w="2580"/><text x="39.5902%" y="735.50"></text></g><g><title>__libc_recv (2,579 samples, 0.54%)</title><rect x="39.3404%" y="709" width="0.5410%" height="15" fill="rgb(250,145,42)" fg:x="187553" fg:w="2579"/><text x="39.5904%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,077 samples, 0.44%)</title><rect x="39.4457%" y="693" width="0.4357%" height="15" fill="rgb(219,15,2)" fg:x="188055" fg:w="2077"/><text x="39.6957%" y="703.50"></text></g><g><title>do_syscall_64 (2,028 samples, 0.43%)</title><rect x="39.4560%" y="677" width="0.4254%" height="15" fill="rgb(231,181,52)" fg:x="188104" fg:w="2028"/><text x="39.7060%" y="687.50"></text></g><g><title>__x64_sys_recvfrom (1,834 samples, 0.38%)</title><rect x="39.4967%" y="661" width="0.3847%" height="15" fill="rgb(235,1,42)" fg:x="188298" fg:w="1834"/><text x="39.7467%" y="671.50"></text></g><g><title>[libc-2.31.so] (99 samples, 0.02%)</title><rect x="39.8971%" y="757" width="0.0208%" height="15" fill="rgb(249,88,27)" fg:x="190207" fg:w="99"/><text x="40.1471%" y="767.50"></text></g><g><title>alloc::alloc::box_free (199 samples, 0.04%)</title><rect x="39.8965%" y="805" width="0.0417%" height="15" fill="rgb(235,145,16)" fg:x="190204" fg:w="199"/><text x="40.1465%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (197 samples, 0.04%)</title><rect x="39.8969%" y="789" width="0.0413%" height="15" fill="rgb(237,114,19)" fg:x="190206" fg:w="197"/><text x="40.1469%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (196 samples, 0.04%)</title><rect x="39.8971%" y="773" width="0.0411%" height="15" fill="rgb(238,51,50)" fg:x="190207" fg:w="196"/><text x="40.1471%" y="783.50"></text></g><g><title>cfree (89 samples, 0.02%)</title><rect x="39.9195%" y="757" width="0.0187%" height="15" fill="rgb(205,194,25)" fg:x="190314" fg:w="89"/><text x="40.1695%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt; (220 samples, 0.05%)</title><rect x="39.8946%" y="821" width="0.0461%" height="15" fill="rgb(215,203,17)" fg:x="190195" fg:w="220"/><text x="40.1446%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;uppercut::api::Envelope&gt; (230 samples, 0.05%)</title><rect x="39.8927%" y="837" width="0.0482%" height="15" fill="rgb(233,112,49)" fg:x="190186" fg:w="230"/><text x="40.1427%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (182 samples, 0.04%)</title><rect x="39.9565%" y="821" width="0.0382%" height="15" fill="rgb(241,130,26)" fg:x="190490" fg:w="182"/><text x="40.2065%" y="831.50"></text></g><g><title>parsed::stream::ByteStream::put (281 samples, 0.06%)</title><rect x="39.9462%" y="837" width="0.0589%" height="15" fill="rgb(252,223,19)" fg:x="190441" fg:w="281"/><text x="40.1962%" y="847.50"></text></g><g><title>parsed::stream::ByteStream::cap (50 samples, 0.01%)</title><rect x="39.9946%" y="821" width="0.0105%" height="15" fill="rgb(211,95,25)" fg:x="190672" fg:w="50"/><text x="40.2446%" y="831.50"></text></g><g><title>_raw_spin_lock_bh (57 samples, 0.01%)</title><rect x="40.2277%" y="597" width="0.0120%" height="15" fill="rgb(251,182,27)" fg:x="191783" fg:w="57"/><text x="40.4777%" y="607.50"></text></g><g><title>copy_user_enhanced_fast_string (96 samples, 0.02%)</title><rect x="40.3122%" y="565" width="0.0201%" height="15" fill="rgb(238,24,4)" fg:x="192186" fg:w="96"/><text x="40.5622%" y="575.50"></text></g><g><title>_copy_from_iter_full (123 samples, 0.03%)</title><rect x="40.3109%" y="581" width="0.0258%" height="15" fill="rgb(224,220,25)" fg:x="192180" fg:w="123"/><text x="40.5609%" y="591.50"></text></g><g><title>sk_page_frag_refill (82 samples, 0.02%)</title><rect x="40.3405%" y="581" width="0.0172%" height="15" fill="rgb(239,133,26)" fg:x="192321" fg:w="82"/><text x="40.5905%" y="591.50"></text></g><g><title>skb_page_frag_refill (82 samples, 0.02%)</title><rect x="40.3405%" y="565" width="0.0172%" height="15" fill="rgb(211,94,48)" fg:x="192321" fg:w="82"/><text x="40.5905%" y="575.50"></text></g><g><title>__kmalloc_node_track_caller (141 samples, 0.03%)</title><rect x="40.3718%" y="533" width="0.0296%" height="15" fill="rgb(239,87,6)" fg:x="192470" fg:w="141"/><text x="40.6218%" y="543.50"></text></g><g><title>memset_erms (78 samples, 0.02%)</title><rect x="40.4076%" y="533" width="0.0164%" height="15" fill="rgb(227,62,0)" fg:x="192641" fg:w="78"/><text x="40.6576%" y="543.50"></text></g><g><title>__kmalloc_reserve.isra.0 (255 samples, 0.05%)</title><rect x="40.3714%" y="549" width="0.0535%" height="15" fill="rgb(211,226,4)" fg:x="192468" fg:w="255"/><text x="40.6214%" y="559.50"></text></g><g><title>kmem_cache_alloc_node (101 samples, 0.02%)</title><rect x="40.4263%" y="549" width="0.0212%" height="15" fill="rgb(253,38,52)" fg:x="192730" fg:w="101"/><text x="40.6763%" y="559.50"></text></g><g><title>ksize (84 samples, 0.02%)</title><rect x="40.4475%" y="549" width="0.0176%" height="15" fill="rgb(229,126,40)" fg:x="192831" fg:w="84"/><text x="40.6975%" y="559.50"></text></g><g><title>__ksize (83 samples, 0.02%)</title><rect x="40.4477%" y="533" width="0.0174%" height="15" fill="rgb(229,165,44)" fg:x="192832" fg:w="83"/><text x="40.6977%" y="543.50"></text></g><g><title>__alloc_skb (529 samples, 0.11%)</title><rect x="40.3615%" y="565" width="0.1110%" height="15" fill="rgb(247,95,47)" fg:x="192421" fg:w="529"/><text x="40.6115%" y="575.50"></text></g><g><title>sk_stream_alloc_skb (563 samples, 0.12%)</title><rect x="40.3577%" y="581" width="0.1181%" height="15" fill="rgb(216,140,30)" fg:x="192403" fg:w="563"/><text x="40.6077%" y="591.50"></text></g><g><title>skb_entail (66 samples, 0.01%)</title><rect x="40.4758%" y="581" width="0.0138%" height="15" fill="rgb(246,214,8)" fg:x="192966" fg:w="66"/><text x="40.7258%" y="591.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (54 samples, 0.01%)</title><rect x="40.6061%" y="437" width="0.0113%" height="15" fill="rgb(227,224,15)" fg:x="193587" fg:w="54"/><text x="40.8561%" y="447.50"></text></g><g><title>dequeue_func (61 samples, 0.01%)</title><rect x="40.7168%" y="325" width="0.0128%" height="15" fill="rgb(233,175,4)" fg:x="194115" fg:w="61"/><text x="40.9668%" y="335.50"></text></g><g><title>fq_codel_dequeue (284 samples, 0.06%)</title><rect x="40.6770%" y="357" width="0.0596%" height="15" fill="rgb(221,66,45)" fg:x="193925" fg:w="284"/><text x="40.9270%" y="367.50"></text></g><g><title>codel_dequeue.constprop.0 (112 samples, 0.02%)</title><rect x="40.7130%" y="341" width="0.0235%" height="15" fill="rgb(221,178,18)" fg:x="194097" fg:w="112"/><text x="40.9630%" y="351.50"></text></g><g><title>free_old_xmit_skbs (115 samples, 0.02%)</title><rect x="40.7544%" y="309" width="0.0241%" height="15" fill="rgb(213,81,29)" fg:x="194294" fg:w="115"/><text x="41.0044%" y="319.50"></text></g><g><title>virtqueue_get_buf (58 samples, 0.01%)</title><rect x="40.7663%" y="293" width="0.0122%" height="15" fill="rgb(220,89,49)" fg:x="194351" fg:w="58"/><text x="41.0163%" y="303.50"></text></g><g><title>virtqueue_get_buf_ctx (58 samples, 0.01%)</title><rect x="40.7663%" y="277" width="0.0122%" height="15" fill="rgb(227,60,33)" fg:x="194351" fg:w="58"/><text x="41.0163%" y="287.50"></text></g><g><title>virtqueue_add_outbuf (66 samples, 0.01%)</title><rect x="40.7871%" y="309" width="0.0138%" height="15" fill="rgb(205,113,12)" fg:x="194450" fg:w="66"/><text x="41.0371%" y="319.50"></text></g><g><title>iowrite16 (292 samples, 0.06%)</title><rect x="40.8108%" y="293" width="0.0612%" height="15" fill="rgb(211,32,1)" fg:x="194563" fg:w="292"/><text x="41.0608%" y="303.50"></text></g><g><title>virtqueue_notify (297 samples, 0.06%)</title><rect x="40.8102%" y="309" width="0.0623%" height="15" fill="rgb(246,2,12)" fg:x="194560" fg:w="297"/><text x="41.0602%" y="319.50"></text></g><g><title>start_xmit (599 samples, 0.13%)</title><rect x="40.7487%" y="325" width="0.1256%" height="15" fill="rgb(243,37,27)" fg:x="194267" fg:w="599"/><text x="40.9987%" y="335.50"></text></g><g><title>dev_hard_start_xmit (612 samples, 0.13%)</title><rect x="40.7464%" y="341" width="0.1284%" height="15" fill="rgb(248,211,31)" fg:x="194256" fg:w="612"/><text x="40.9964%" y="351.50"></text></g><g><title>__qdisc_run (1,061 samples, 0.22%)</title><rect x="40.6656%" y="373" width="0.2226%" height="15" fill="rgb(242,146,47)" fg:x="193871" fg:w="1061"/><text x="40.9156%" y="383.50"></text></g><g><title>sch_direct_xmit (723 samples, 0.15%)</title><rect x="40.7365%" y="357" width="0.1517%" height="15" fill="rgb(206,70,20)" fg:x="194209" fg:w="723"/><text x="40.9865%" y="367.50"></text></g><g><title>validate_xmit_skb_list (60 samples, 0.01%)</title><rect x="40.8756%" y="341" width="0.0126%" height="15" fill="rgb(215,10,51)" fg:x="194872" fg:w="60"/><text x="41.1256%" y="351.50"></text></g><g><title>validate_xmit_skb (56 samples, 0.01%)</title><rect x="40.8764%" y="325" width="0.0117%" height="15" fill="rgb(243,178,53)" fg:x="194876" fg:w="56"/><text x="41.1264%" y="335.50"></text></g><g><title>_raw_spin_lock (151 samples, 0.03%)</title><rect x="40.8884%" y="373" width="0.0317%" height="15" fill="rgb(233,221,20)" fg:x="194933" fg:w="151"/><text x="41.1384%" y="383.50"></text></g><g><title>native_queued_spin_lock_slowpath (93 samples, 0.02%)</title><rect x="40.9006%" y="357" width="0.0195%" height="15" fill="rgb(218,95,35)" fg:x="194991" fg:w="93"/><text x="41.1506%" y="367.50"></text></g><g><title>fq_codel_enqueue (108 samples, 0.02%)</title><rect x="40.9241%" y="373" width="0.0227%" height="15" fill="rgb(229,13,5)" fg:x="195103" fg:w="108"/><text x="41.1741%" y="383.50"></text></g><g><title>_raw_spin_lock (58 samples, 0.01%)</title><rect x="40.9545%" y="357" width="0.0122%" height="15" fill="rgb(252,164,30)" fg:x="195248" fg:w="58"/><text x="41.2045%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath (58 samples, 0.01%)</title><rect x="40.9545%" y="341" width="0.0122%" height="15" fill="rgb(232,68,36)" fg:x="195248" fg:w="58"/><text x="41.2045%" y="351.50"></text></g><g><title>consume_skb (57 samples, 0.01%)</title><rect x="40.9906%" y="277" width="0.0120%" height="15" fill="rgb(219,59,54)" fg:x="195420" fg:w="57"/><text x="41.2406%" y="287.50"></text></g><g><title>skb_release_all (54 samples, 0.01%)</title><rect x="40.9912%" y="261" width="0.0113%" height="15" fill="rgb(250,92,33)" fg:x="195423" fg:w="54"/><text x="41.2412%" y="271.50"></text></g><g><title>napi_consume_skb (58 samples, 0.01%)</title><rect x="40.9906%" y="309" width="0.0122%" height="15" fill="rgb(229,162,54)" fg:x="195420" fg:w="58"/><text x="41.2406%" y="319.50"></text></g><g><title>__dev_kfree_skb_any (58 samples, 0.01%)</title><rect x="40.9906%" y="293" width="0.0122%" height="15" fill="rgb(244,114,52)" fg:x="195420" fg:w="58"/><text x="41.2406%" y="303.50"></text></g><g><title>free_old_xmit_skbs (179 samples, 0.04%)</title><rect x="40.9836%" y="325" width="0.0375%" height="15" fill="rgb(212,211,43)" fg:x="195387" fg:w="179"/><text x="41.2336%" y="335.50"></text></g><g><title>virtqueue_get_buf (88 samples, 0.02%)</title><rect x="41.0027%" y="309" width="0.0185%" height="15" fill="rgb(226,147,8)" fg:x="195478" fg:w="88"/><text x="41.2527%" y="319.50"></text></g><g><title>virtqueue_get_buf_ctx (88 samples, 0.02%)</title><rect x="41.0027%" y="293" width="0.0185%" height="15" fill="rgb(226,23,13)" fg:x="195478" fg:w="88"/><text x="41.2527%" y="303.50"></text></g><g><title>virtqueue_add_outbuf (122 samples, 0.03%)</title><rect x="41.0300%" y="325" width="0.0256%" height="15" fill="rgb(240,63,4)" fg:x="195608" fg:w="122"/><text x="41.2800%" y="335.50"></text></g><g><title>iowrite16 (1,713 samples, 0.36%)</title><rect x="41.0726%" y="309" width="0.3593%" height="15" fill="rgb(221,1,32)" fg:x="195811" fg:w="1713"/><text x="41.3226%" y="319.50"></text></g><g><title>virtqueue_notify (1,734 samples, 0.36%)</title><rect x="41.0709%" y="325" width="0.3637%" height="15" fill="rgb(242,117,10)" fg:x="195803" fg:w="1734"/><text x="41.3209%" y="335.50"></text></g><g><title>start_xmit (2,236 samples, 0.47%)</title><rect x="40.9694%" y="341" width="0.4690%" height="15" fill="rgb(249,172,44)" fg:x="195319" fg:w="2236"/><text x="41.2194%" y="351.50"></text></g><g><title>dev_hard_start_xmit (2,256 samples, 0.47%)</title><rect x="40.9666%" y="357" width="0.4732%" height="15" fill="rgb(244,46,45)" fg:x="195306" fg:w="2256"/><text x="41.2166%" y="367.50"></text></g><g><title>validate_xmit_skb (66 samples, 0.01%)</title><rect x="41.4455%" y="341" width="0.0138%" height="15" fill="rgb(206,43,17)" fg:x="197589" fg:w="66"/><text x="41.6955%" y="351.50"></text></g><g><title>sch_direct_xmit (2,435 samples, 0.51%)</title><rect x="40.9501%" y="373" width="0.5108%" height="15" fill="rgb(239,218,39)" fg:x="195227" fg:w="2435"/><text x="41.2001%" y="383.50"></text></g><g><title>validate_xmit_skb_list (87 samples, 0.02%)</title><rect x="41.4426%" y="357" width="0.0182%" height="15" fill="rgb(208,169,54)" fg:x="197575" fg:w="87"/><text x="41.6926%" y="367.50"></text></g><g><title>__dev_queue_xmit (3,909 samples, 0.82%)</title><rect x="40.6411%" y="389" width="0.8199%" height="15" fill="rgb(247,25,42)" fg:x="193754" fg:w="3909"/><text x="40.8911%" y="399.50"></text></g><g><title>_raw_spin_lock (72 samples, 0.02%)</title><rect x="41.4627%" y="389" width="0.0151%" height="15" fill="rgb(226,23,31)" fg:x="197671" fg:w="72"/><text x="41.7127%" y="399.50"></text></g><g><title>ip_finish_output2 (4,107 samples, 0.86%)</title><rect x="40.6208%" y="421" width="0.8615%" height="15" fill="rgb(247,16,28)" fg:x="193657" fg:w="4107"/><text x="40.8708%" y="431.50"></text></g><g><title>dev_queue_xmit (4,012 samples, 0.84%)</title><rect x="40.6407%" y="405" width="0.8415%" height="15" fill="rgb(231,147,38)" fg:x="193752" fg:w="4012"/><text x="40.8907%" y="415.50"></text></g><g><title>__ip_finish_output (4,130 samples, 0.87%)</title><rect x="40.6174%" y="437" width="0.8663%" height="15" fill="rgb(253,81,48)" fg:x="193641" fg:w="4130"/><text x="40.8674%" y="447.50"></text></g><g><title>ip_output (4,246 samples, 0.89%)</title><rect x="40.5960%" y="469" width="0.8906%" height="15" fill="rgb(249,222,43)" fg:x="193539" fg:w="4246"/><text x="40.8460%" y="479.50"></text></g><g><title>ip_finish_output (4,208 samples, 0.88%)</title><rect x="40.6040%" y="453" width="0.8827%" height="15" fill="rgb(221,3,27)" fg:x="193577" fg:w="4208"/><text x="40.8540%" y="463.50"></text></g><g><title>ip_local_out (4,308 samples, 0.90%)</title><rect x="40.5849%" y="485" width="0.9036%" height="15" fill="rgb(228,180,5)" fg:x="193486" fg:w="4308"/><text x="40.8349%" y="495.50"></text></g><g><title>__ip_queue_xmit (4,467 samples, 0.94%)</title><rect x="40.5654%" y="501" width="0.9370%" height="15" fill="rgb(227,131,42)" fg:x="193393" fg:w="4467"/><text x="40.8154%" y="511.50"></text></g><g><title>ip_queue_xmit (4,490 samples, 0.94%)</title><rect x="40.5652%" y="517" width="0.9418%" height="15" fill="rgb(212,3,39)" fg:x="193392" fg:w="4490"/><text x="40.8152%" y="527.50"></text></g><g><title>__tcp_transmit_skb (4,765 samples, 1.00%)</title><rect x="40.5280%" y="533" width="0.9995%" height="15" fill="rgb(226,45,5)" fg:x="193215" fg:w="4765"/><text x="40.7780%" y="543.50"></text></g><g><title>kvm_clock_get_cycles (67 samples, 0.01%)</title><rect x="41.5458%" y="517" width="0.0141%" height="15" fill="rgb(215,167,45)" fg:x="198067" fg:w="67"/><text x="41.7958%" y="527.50"></text></g><g><title>pvclock_clocksource_read (55 samples, 0.01%)</title><rect x="41.5483%" y="501" width="0.0115%" height="15" fill="rgb(250,218,53)" fg:x="198079" fg:w="55"/><text x="41.7983%" y="511.50"></text></g><g><title>ktime_get (96 samples, 0.02%)</title><rect x="41.5426%" y="533" width="0.0201%" height="15" fill="rgb(207,140,0)" fg:x="198052" fg:w="96"/><text x="41.7926%" y="543.50"></text></g><g><title>tcp_event_new_data_sent (180 samples, 0.04%)</title><rect x="41.5726%" y="533" width="0.0378%" height="15" fill="rgb(238,133,51)" fg:x="198195" fg:w="180"/><text x="41.8226%" y="543.50"></text></g><g><title>tcp_rearm_rto (102 samples, 0.02%)</title><rect x="41.5890%" y="517" width="0.0214%" height="15" fill="rgb(218,203,53)" fg:x="198273" fg:w="102"/><text x="41.8390%" y="527.50"></text></g><g><title>sk_reset_timer (84 samples, 0.02%)</title><rect x="41.5928%" y="501" width="0.0176%" height="15" fill="rgb(226,184,25)" fg:x="198291" fg:w="84"/><text x="41.8428%" y="511.50"></text></g><g><title>mod_timer (75 samples, 0.02%)</title><rect x="41.5947%" y="485" width="0.0157%" height="15" fill="rgb(231,121,21)" fg:x="198300" fg:w="75"/><text x="41.8447%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (5,469 samples, 1.15%)</title><rect x="40.4932%" y="565" width="1.1472%" height="15" fill="rgb(251,14,34)" fg:x="193049" fg:w="5469"/><text x="40.7432%" y="575.50"></text></g><g><title>tcp_write_xmit (5,403 samples, 1.13%)</title><rect x="40.5071%" y="549" width="1.1333%" height="15" fill="rgb(249,193,11)" fg:x="193115" fg:w="5403"/><text x="40.7571%" y="559.50"></text></g><g><title>tcp_push (5,475 samples, 1.15%)</title><rect x="40.4924%" y="581" width="1.1484%" height="15" fill="rgb(220,172,37)" fg:x="193045" fg:w="5475"/><text x="40.7424%" y="591.50"></text></g><g><title>tcp_send_mss (121 samples, 0.03%)</title><rect x="41.6427%" y="581" width="0.0254%" height="15" fill="rgb(231,229,43)" fg:x="198529" fg:w="121"/><text x="41.8927%" y="591.50"></text></g><g><title>tcp_current_mss (83 samples, 0.02%)</title><rect x="41.6507%" y="565" width="0.0174%" height="15" fill="rgb(250,161,5)" fg:x="198567" fg:w="83"/><text x="41.9007%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (6,711 samples, 1.41%)</title><rect x="40.2606%" y="597" width="1.4077%" height="15" fill="rgb(218,225,18)" fg:x="191940" fg:w="6711"/><text x="40.5106%" y="607.50"></text></g><g><title>tcp_sendmsg (6,939 samples, 1.46%)</title><rect x="40.2237%" y="613" width="1.4555%" height="15" fill="rgb(245,45,42)" fg:x="191764" fg:w="6939"/><text x="40.4737%" y="623.50"></text></g><g><title>tcp_stream_memory_free (52 samples, 0.01%)</title><rect x="41.6683%" y="597" width="0.0109%" height="15" fill="rgb(211,115,1)" fg:x="198651" fg:w="52"/><text x="41.9183%" y="607.50"></text></g><g><title>inet_sendmsg (6,989 samples, 1.47%)</title><rect x="40.2149%" y="629" width="1.4660%" height="15" fill="rgb(248,133,52)" fg:x="191722" fg:w="6989"/><text x="40.4649%" y="639.50"></text></g><g><title>security_socket_sendmsg (51 samples, 0.01%)</title><rect x="41.6809%" y="629" width="0.0107%" height="15" fill="rgb(238,100,21)" fg:x="198711" fg:w="51"/><text x="41.9309%" y="639.50"></text></g><g><title>sock_sendmsg (7,100 samples, 1.49%)</title><rect x="40.2033%" y="645" width="1.4893%" height="15" fill="rgb(247,144,11)" fg:x="191667" fg:w="7100"/><text x="40.4533%" y="655.50"></text></g><g><title>__sys_sendto (7,232 samples, 1.52%)</title><rect x="40.1893%" y="661" width="1.5170%" height="15" fill="rgb(206,164,16)" fg:x="191600" fg:w="7232"/><text x="40.4393%" y="671.50"></text></g><g><title>sockfd_lookup_light (65 samples, 0.01%)</title><rect x="41.6926%" y="645" width="0.0136%" height="15" fill="rgb(222,34,3)" fg:x="198767" fg:w="65"/><text x="41.9426%" y="655.50"></text></g><g><title>__libc_send (8,084 samples, 1.70%)</title><rect x="40.0164%" y="725" width="1.6957%" height="15" fill="rgb(248,82,4)" fg:x="190776" fg:w="8084"/><text x="40.2664%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7,494 samples, 1.57%)</title><rect x="40.1402%" y="709" width="1.5719%" height="15" fill="rgb(228,81,46)" fg:x="191366" fg:w="7494"/><text x="40.3902%" y="719.50"></text></g><g><title>do_syscall_64 (7,468 samples, 1.57%)</title><rect x="40.1457%" y="693" width="1.5665%" height="15" fill="rgb(227,67,47)" fg:x="191392" fg:w="7468"/><text x="40.3957%" y="703.50"></text></g><g><title>__x64_sys_sendto (7,260 samples, 1.52%)</title><rect x="40.1893%" y="677" width="1.5228%" height="15" fill="rgb(215,93,53)" fg:x="191600" fg:w="7260"/><text x="40.4393%" y="687.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (8,125 samples, 1.70%)</title><rect x="40.0087%" y="821" width="1.7043%" height="15" fill="rgb(248,194,39)" fg:x="190739" fg:w="8125"/><text x="40.2587%" y="831.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (8,108 samples, 1.70%)</title><rect x="40.0122%" y="805" width="1.7007%" height="15" fill="rgb(215,5,19)" fg:x="190756" fg:w="8108"/><text x="40.2622%" y="815.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (8,108 samples, 1.70%)</title><rect x="40.0122%" y="789" width="1.7007%" height="15" fill="rgb(226,215,51)" fg:x="190756" fg:w="8108"/><text x="40.2622%" y="799.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (8,108 samples, 1.70%)</title><rect x="40.0122%" y="773" width="1.7007%" height="15" fill="rgb(225,56,26)" fg:x="190756" fg:w="8108"/><text x="40.2622%" y="783.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (8,108 samples, 1.70%)</title><rect x="40.0122%" y="757" width="1.7007%" height="15" fill="rgb(222,75,29)" fg:x="190756" fg:w="8108"/><text x="40.2622%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::write (8,094 samples, 1.70%)</title><rect x="40.0152%" y="741" width="1.6978%" height="15" fill="rgb(236,139,6)" fg:x="190770" fg:w="8094"/><text x="40.2652%" y="751.50"></text></g><g><title>std::io::Write::write_all (8,152 samples, 1.71%)</title><rect x="40.0051%" y="837" width="1.7099%" height="15" fill="rgb(223,137,36)" fg:x="190722" fg:w="8152"/><text x="40.2551%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (281 samples, 0.06%)</title><rect x="41.7329%" y="645" width="0.0589%" height="15" fill="rgb(226,99,2)" fg:x="198959" fg:w="281"/><text x="41.9829%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (281 samples, 0.06%)</title><rect x="41.7329%" y="629" width="0.0589%" height="15" fill="rgb(206,133,23)" fg:x="198959" fg:w="281"/><text x="41.9829%" y="639.50"></text></g><g><title>alloc::alloc::realloc (281 samples, 0.06%)</title><rect x="41.7329%" y="613" width="0.0589%" height="15" fill="rgb(243,173,15)" fg:x="198959" fg:w="281"/><text x="41.9829%" y="623.50"></text></g><g><title>realloc (265 samples, 0.06%)</title><rect x="41.7362%" y="597" width="0.0556%" height="15" fill="rgb(228,69,28)" fg:x="198975" fg:w="265"/><text x="41.9862%" y="607.50"></text></g><g><title>[libc-2.31.so] (181 samples, 0.04%)</title><rect x="41.7539%" y="581" width="0.0380%" height="15" fill="rgb(212,51,22)" fg:x="199059" fg:w="181"/><text x="42.0039%" y="591.50"></text></g><g><title>[libc-2.31.so] (154 samples, 0.03%)</title><rect x="41.7595%" y="565" width="0.0323%" height="15" fill="rgb(227,113,0)" fg:x="199086" fg:w="154"/><text x="42.0095%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (290 samples, 0.06%)</title><rect x="41.7312%" y="661" width="0.0608%" height="15" fill="rgb(252,84,27)" fg:x="198951" fg:w="290"/><text x="41.9812%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (316 samples, 0.07%)</title><rect x="41.7268%" y="725" width="0.0663%" height="15" fill="rgb(223,145,39)" fg:x="198930" fg:w="316"/><text x="41.9768%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (316 samples, 0.07%)</title><rect x="41.7268%" y="709" width="0.0663%" height="15" fill="rgb(239,219,30)" fg:x="198930" fg:w="316"/><text x="41.9768%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (309 samples, 0.06%)</title><rect x="41.7283%" y="693" width="0.0648%" height="15" fill="rgb(224,196,39)" fg:x="198937" fg:w="309"/><text x="41.9783%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (308 samples, 0.06%)</title><rect x="41.7285%" y="677" width="0.0646%" height="15" fill="rgb(205,35,43)" fg:x="198938" fg:w="308"/><text x="41.9785%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (341 samples, 0.07%)</title><rect x="41.7245%" y="805" width="0.0715%" height="15" fill="rgb(228,201,21)" fg:x="198919" fg:w="341"/><text x="41.9745%" y="815.50"></text></g><g><title>alloc::string::String::push_str (332 samples, 0.07%)</title><rect x="41.7264%" y="789" width="0.0696%" height="15" fill="rgb(237,118,16)" fg:x="198928" fg:w="332"/><text x="41.9764%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (332 samples, 0.07%)</title><rect x="41.7264%" y="773" width="0.0696%" height="15" fill="rgb(241,17,19)" fg:x="198928" fg:w="332"/><text x="41.9764%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (332 samples, 0.07%)</title><rect x="41.7264%" y="757" width="0.0696%" height="15" fill="rgb(214,10,25)" fg:x="198928" fg:w="332"/><text x="41.9764%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (332 samples, 0.07%)</title><rect x="41.7264%" y="741" width="0.0696%" height="15" fill="rgb(238,37,29)" fg:x="198928" fg:w="332"/><text x="41.9764%" y="751.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.01%)</title><rect x="41.8407%" y="517" width="0.0107%" height="15" fill="rgb(253,83,25)" fg:x="199473" fg:w="51"/><text x="42.0907%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (169 samples, 0.04%)</title><rect x="41.8162%" y="581" width="0.0354%" height="15" fill="rgb(234,192,12)" fg:x="199356" fg:w="169"/><text x="42.0662%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (169 samples, 0.04%)</title><rect x="41.8162%" y="565" width="0.0354%" height="15" fill="rgb(241,216,45)" fg:x="199356" fg:w="169"/><text x="42.0662%" y="575.50"></text></g><g><title>alloc::alloc::realloc (168 samples, 0.04%)</title><rect x="41.8164%" y="549" width="0.0352%" height="15" fill="rgb(242,22,33)" fg:x="199357" fg:w="168"/><text x="42.0664%" y="559.50"></text></g><g><title>realloc (154 samples, 0.03%)</title><rect x="41.8193%" y="533" width="0.0323%" height="15" fill="rgb(231,105,49)" fg:x="199371" fg:w="154"/><text x="42.0693%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (203 samples, 0.04%)</title><rect x="41.8130%" y="597" width="0.0426%" height="15" fill="rgb(218,204,15)" fg:x="199341" fg:w="203"/><text x="42.0630%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (236 samples, 0.05%)</title><rect x="41.8080%" y="661" width="0.0495%" height="15" fill="rgb(235,138,41)" fg:x="199317" fg:w="236"/><text x="42.0580%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (233 samples, 0.05%)</title><rect x="41.8086%" y="645" width="0.0489%" height="15" fill="rgb(246,0,9)" fg:x="199320" fg:w="233"/><text x="42.0586%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (228 samples, 0.05%)</title><rect x="41.8097%" y="629" width="0.0478%" height="15" fill="rgb(210,74,4)" fg:x="199325" fg:w="228"/><text x="42.0597%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (226 samples, 0.05%)</title><rect x="41.8101%" y="613" width="0.0474%" height="15" fill="rgb(250,60,41)" fg:x="199327" fg:w="226"/><text x="42.0601%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (285 samples, 0.06%)</title><rect x="41.8031%" y="757" width="0.0598%" height="15" fill="rgb(220,115,12)" fg:x="199294" fg:w="285"/><text x="42.0531%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (268 samples, 0.06%)</title><rect x="41.8067%" y="741" width="0.0562%" height="15" fill="rgb(237,100,13)" fg:x="199311" fg:w="268"/><text x="42.0567%" y="751.50"></text></g><g><title>alloc::string::String::push_str (268 samples, 0.06%)</title><rect x="41.8067%" y="725" width="0.0562%" height="15" fill="rgb(213,55,26)" fg:x="199311" fg:w="268"/><text x="42.0567%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (268 samples, 0.06%)</title><rect x="41.8067%" y="709" width="0.0562%" height="15" fill="rgb(216,17,4)" fg:x="199311" fg:w="268"/><text x="42.0567%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (268 samples, 0.06%)</title><rect x="41.8067%" y="693" width="0.0562%" height="15" fill="rgb(220,153,47)" fg:x="199311" fg:w="268"/><text x="42.0567%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (268 samples, 0.06%)</title><rect x="41.8067%" y="677" width="0.0562%" height="15" fill="rgb(215,131,9)" fg:x="199311" fg:w="268"/><text x="42.0567%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u16&gt;::fmt (52 samples, 0.01%)</title><rect x="41.8678%" y="757" width="0.0109%" height="15" fill="rgb(233,46,42)" fg:x="199602" fg:w="52"/><text x="42.1178%" y="767.50"></text></g><g><title>alloc::fmt::format (394 samples, 0.08%)</title><rect x="41.7966%" y="805" width="0.0826%" height="15" fill="rgb(226,86,7)" fg:x="199263" fg:w="394"/><text x="42.0466%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (376 samples, 0.08%)</title><rect x="41.8004%" y="789" width="0.0789%" height="15" fill="rgb(239,226,21)" fg:x="199281" fg:w="376"/><text x="42.0504%" y="799.50"></text></g><g><title>core::fmt::write (375 samples, 0.08%)</title><rect x="41.8006%" y="773" width="0.0787%" height="15" fill="rgb(244,137,22)" fg:x="199282" fg:w="375"/><text x="42.0506%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (91 samples, 0.02%)</title><rect x="41.8793%" y="805" width="0.0191%" height="15" fill="rgb(211,139,35)" fg:x="199657" fg:w="91"/><text x="42.1293%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (91 samples, 0.02%)</title><rect x="41.8793%" y="789" width="0.0191%" height="15" fill="rgb(214,62,50)" fg:x="199657" fg:w="91"/><text x="42.1293%" y="799.50"></text></g><g><title>alloc::str::join_generic_copy (91 samples, 0.02%)</title><rect x="41.8793%" y="773" width="0.0191%" height="15" fill="rgb(212,113,44)" fg:x="199657" fg:w="91"/><text x="42.1293%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (395 samples, 0.08%)</title><rect x="41.9544%" y="421" width="0.0829%" height="15" fill="rgb(226,150,43)" fg:x="200015" fg:w="395"/><text x="42.2044%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (395 samples, 0.08%)</title><rect x="41.9544%" y="405" width="0.0829%" height="15" fill="rgb(250,71,37)" fg:x="200015" fg:w="395"/><text x="42.2044%" y="415.50"></text></g><g><title>alloc::alloc::realloc (393 samples, 0.08%)</title><rect x="41.9548%" y="389" width="0.0824%" height="15" fill="rgb(219,76,19)" fg:x="200017" fg:w="393"/><text x="42.2048%" y="399.50"></text></g><g><title>realloc (364 samples, 0.08%)</title><rect x="41.9609%" y="373" width="0.0764%" height="15" fill="rgb(250,39,11)" fg:x="200046" fg:w="364"/><text x="42.2109%" y="383.50"></text></g><g><title>[libc-2.31.so] (212 samples, 0.04%)</title><rect x="41.9928%" y="357" width="0.0445%" height="15" fill="rgb(230,64,31)" fg:x="200198" fg:w="212"/><text x="42.2428%" y="367.50"></text></g><g><title>[libc-2.31.so] (154 samples, 0.03%)</title><rect x="42.0049%" y="341" width="0.0323%" height="15" fill="rgb(208,222,23)" fg:x="200256" fg:w="154"/><text x="42.2549%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (492 samples, 0.10%)</title><rect x="41.9483%" y="437" width="0.1032%" height="15" fill="rgb(227,125,18)" fg:x="199986" fg:w="492"/><text x="42.1983%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (557 samples, 0.12%)</title><rect x="41.9395%" y="501" width="0.1168%" height="15" fill="rgb(234,210,9)" fg:x="199944" fg:w="557"/><text x="42.1895%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (550 samples, 0.12%)</title><rect x="41.9410%" y="485" width="0.1154%" height="15" fill="rgb(217,127,24)" fg:x="199951" fg:w="550"/><text x="42.1910%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (542 samples, 0.11%)</title><rect x="41.9426%" y="469" width="0.1137%" height="15" fill="rgb(239,141,48)" fg:x="199959" fg:w="542"/><text x="42.1926%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (538 samples, 0.11%)</title><rect x="41.9435%" y="453" width="0.1128%" height="15" fill="rgb(227,109,8)" fg:x="199963" fg:w="538"/><text x="42.1935%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (52 samples, 0.01%)</title><rect x="42.0563%" y="501" width="0.0109%" height="15" fill="rgb(235,184,23)" fg:x="200501" fg:w="52"/><text x="42.3063%" y="511.50"></text></g><g><title>[libc-2.31.so] (50 samples, 0.01%)</title><rect x="42.0567%" y="485" width="0.0105%" height="15" fill="rgb(227,226,48)" fg:x="200503" fg:w="50"/><text x="42.3067%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (658 samples, 0.14%)</title><rect x="41.9305%" y="597" width="0.1380%" height="15" fill="rgb(206,150,11)" fg:x="199901" fg:w="658"/><text x="42.1805%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (622 samples, 0.13%)</title><rect x="41.9380%" y="581" width="0.1305%" height="15" fill="rgb(254,2,33)" fg:x="199937" fg:w="622"/><text x="42.1880%" y="591.50"></text></g><g><title>alloc::string::String::push_str (622 samples, 0.13%)</title><rect x="41.9380%" y="565" width="0.1305%" height="15" fill="rgb(243,160,20)" fg:x="199937" fg:w="622"/><text x="42.1880%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (622 samples, 0.13%)</title><rect x="41.9380%" y="549" width="0.1305%" height="15" fill="rgb(218,208,30)" fg:x="199937" fg:w="622"/><text x="42.1880%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (622 samples, 0.13%)</title><rect x="41.9380%" y="533" width="0.1305%" height="15" fill="rgb(224,120,49)" fg:x="199937" fg:w="622"/><text x="42.1880%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (622 samples, 0.13%)</title><rect x="41.9380%" y="517" width="0.1305%" height="15" fill="rgb(246,12,2)" fg:x="199937" fg:w="622"/><text x="42.1880%" y="527.50"></text></g><g><title>alloc::fmt::format (832 samples, 0.17%)</title><rect x="41.9087%" y="645" width="0.1745%" height="15" fill="rgb(236,117,3)" fg:x="199797" fg:w="832"/><text x="42.1587%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (780 samples, 0.16%)</title><rect x="41.9196%" y="629" width="0.1636%" height="15" fill="rgb(216,128,52)" fg:x="199849" fg:w="780"/><text x="42.1696%" y="639.50"></text></g><g><title>core::fmt::write (761 samples, 0.16%)</title><rect x="41.9235%" y="613" width="0.1596%" height="15" fill="rgb(246,145,19)" fg:x="199868" fg:w="761"/><text x="42.1735%" y="623.50"></text></g><g><title>[libc-2.31.so] (165 samples, 0.03%)</title><rect x="42.0857%" y="533" width="0.0346%" height="15" fill="rgb(222,11,46)" fg:x="200641" fg:w="165"/><text x="42.3357%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (210 samples, 0.04%)</title><rect x="42.0851%" y="565" width="0.0440%" height="15" fill="rgb(245,82,36)" fg:x="200638" fg:w="210"/><text x="42.3351%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (210 samples, 0.04%)</title><rect x="42.0851%" y="549" width="0.0440%" height="15" fill="rgb(250,73,51)" fg:x="200638" fg:w="210"/><text x="42.3351%" y="559.50"></text></g><g><title>&lt;parsed::http::Response as core::convert::Into&lt;alloc::string::String&gt;&gt;::into::{{closure}} (1,059 samples, 0.22%)</title><rect x="41.9072%" y="661" width="0.2221%" height="15" fill="rgb(221,189,23)" fg:x="199790" fg:w="1059"/><text x="42.1572%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Header&gt; (212 samples, 0.04%)</title><rect x="42.0849%" y="645" width="0.0445%" height="15" fill="rgb(210,33,7)" fg:x="200637" fg:w="212"/><text x="42.3349%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (212 samples, 0.04%)</title><rect x="42.0849%" y="629" width="0.0445%" height="15" fill="rgb(210,107,22)" fg:x="200637" fg:w="212"/><text x="42.3349%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (212 samples, 0.04%)</title><rect x="42.0849%" y="613" width="0.0445%" height="15" fill="rgb(222,116,37)" fg:x="200637" fg:w="212"/><text x="42.3349%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (212 samples, 0.04%)</title><rect x="42.0849%" y="597" width="0.0445%" height="15" fill="rgb(254,17,48)" fg:x="200637" fg:w="212"/><text x="42.3349%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (212 samples, 0.04%)</title><rect x="42.0849%" y="581" width="0.0445%" height="15" fill="rgb(224,36,32)" fg:x="200637" fg:w="212"/><text x="42.3349%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,072 samples, 0.22%)</title><rect x="41.9063%" y="677" width="0.2249%" height="15" fill="rgb(232,90,46)" fg:x="199786" fg:w="1072"/><text x="42.1563%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,126 samples, 0.24%)</title><rect x="41.9017%" y="741" width="0.2362%" height="15" fill="rgb(241,66,40)" fg:x="199764" fg:w="1126"/><text x="42.1517%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,124 samples, 0.24%)</title><rect x="41.9022%" y="725" width="0.2358%" height="15" fill="rgb(249,184,29)" fg:x="199766" fg:w="1124"/><text x="42.1522%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,124 samples, 0.24%)</title><rect x="41.9022%" y="709" width="0.2358%" height="15" fill="rgb(231,181,1)" fg:x="199766" fg:w="1124"/><text x="42.1522%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,118 samples, 0.23%)</title><rect x="41.9034%" y="693" width="0.2345%" height="15" fill="rgb(224,94,2)" fg:x="199772" fg:w="1118"/><text x="42.1534%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,168 samples, 0.24%)</title><rect x="41.8988%" y="805" width="0.2450%" height="15" fill="rgb(229,170,15)" fg:x="199750" fg:w="1168"/><text x="42.1488%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,168 samples, 0.24%)</title><rect x="41.8988%" y="789" width="0.2450%" height="15" fill="rgb(240,127,35)" fg:x="199750" fg:w="1168"/><text x="42.1488%" y="799.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1,166 samples, 0.24%)</title><rect x="41.8992%" y="773" width="0.2446%" height="15" fill="rgb(248,196,34)" fg:x="199752" fg:w="1166"/><text x="42.1492%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,155 samples, 0.24%)</title><rect x="41.9015%" y="757" width="0.2423%" height="15" fill="rgb(236,137,7)" fg:x="199763" fg:w="1155"/><text x="42.1515%" y="767.50"></text></g><g><title>[libc-2.31.so] (98 samples, 0.02%)</title><rect x="42.1446%" y="709" width="0.0206%" height="15" fill="rgb(235,127,16)" fg:x="200922" fg:w="98"/><text x="42.3946%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (161 samples, 0.03%)</title><rect x="42.1438%" y="805" width="0.0338%" height="15" fill="rgb(250,192,54)" fg:x="200918" fg:w="161"/><text x="42.3938%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (161 samples, 0.03%)</title><rect x="42.1438%" y="789" width="0.0338%" height="15" fill="rgb(218,98,20)" fg:x="200918" fg:w="161"/><text x="42.3938%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (161 samples, 0.03%)</title><rect x="42.1438%" y="773" width="0.0338%" height="15" fill="rgb(230,176,47)" fg:x="200918" fg:w="161"/><text x="42.3938%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (161 samples, 0.03%)</title><rect x="42.1438%" y="757" width="0.0338%" height="15" fill="rgb(244,2,33)" fg:x="200918" fg:w="161"/><text x="42.3938%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (160 samples, 0.03%)</title><rect x="42.1440%" y="741" width="0.0336%" height="15" fill="rgb(231,100,17)" fg:x="200919" fg:w="160"/><text x="42.3940%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (160 samples, 0.03%)</title><rect x="42.1440%" y="725" width="0.0336%" height="15" fill="rgb(245,23,12)" fg:x="200919" fg:w="160"/><text x="42.3940%" y="735.50"></text></g><g><title>cfree (48 samples, 0.01%)</title><rect x="42.1675%" y="709" width="0.0101%" height="15" fill="rgb(249,55,22)" fg:x="201031" fg:w="48"/><text x="42.4175%" y="719.50"></text></g><g><title>[libc-2.31.so] (70 samples, 0.01%)</title><rect x="42.1788%" y="661" width="0.0147%" height="15" fill="rgb(207,134,9)" fg:x="201085" fg:w="70"/><text x="42.4288%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (109 samples, 0.02%)</title><rect x="42.1788%" y="693" width="0.0229%" height="15" fill="rgb(218,134,0)" fg:x="201085" fg:w="109"/><text x="42.4288%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (109 samples, 0.02%)</title><rect x="42.1788%" y="677" width="0.0229%" height="15" fill="rgb(213,212,33)" fg:x="201085" fg:w="109"/><text x="42.4288%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (117 samples, 0.02%)</title><rect x="42.1776%" y="789" width="0.0245%" height="15" fill="rgb(252,106,18)" fg:x="201079" fg:w="117"/><text x="42.4276%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (117 samples, 0.02%)</title><rect x="42.1776%" y="773" width="0.0245%" height="15" fill="rgb(208,126,42)" fg:x="201079" fg:w="117"/><text x="42.4276%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (112 samples, 0.02%)</title><rect x="42.1786%" y="757" width="0.0235%" height="15" fill="rgb(246,175,29)" fg:x="201084" fg:w="112"/><text x="42.4286%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (112 samples, 0.02%)</title><rect x="42.1786%" y="741" width="0.0235%" height="15" fill="rgb(215,13,50)" fg:x="201084" fg:w="112"/><text x="42.4286%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (112 samples, 0.02%)</title><rect x="42.1786%" y="725" width="0.0235%" height="15" fill="rgb(216,172,15)" fg:x="201084" fg:w="112"/><text x="42.4286%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (112 samples, 0.02%)</title><rect x="42.1786%" y="709" width="0.0235%" height="15" fill="rgb(212,103,13)" fg:x="201084" fg:w="112"/><text x="42.4286%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (144 samples, 0.03%)</title><rect x="42.1776%" y="805" width="0.0302%" height="15" fill="rgb(231,171,36)" fg:x="201079" fg:w="144"/><text x="42.4276%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (95 samples, 0.02%)</title><rect x="42.2092%" y="757" width="0.0199%" height="15" fill="rgb(250,123,20)" fg:x="201230" fg:w="95"/><text x="42.4592%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (53 samples, 0.01%)</title><rect x="42.2180%" y="741" width="0.0111%" height="15" fill="rgb(212,53,50)" fg:x="201272" fg:w="53"/><text x="42.4680%" y="751.50"></text></g><g><title>&lt;parsed::http::Response as core::convert::Into&lt;alloc::string::String&gt;&gt;::into (2,425 samples, 0.51%)</title><rect x="41.7209%" y="821" width="0.5087%" height="15" fill="rgb(243,54,12)" fg:x="198902" fg:w="2425"/><text x="41.9709%" y="831.50"></text></g><g><title>parsed::http::as_string (104 samples, 0.02%)</title><rect x="42.2078%" y="805" width="0.0218%" height="15" fill="rgb(234,101,34)" fg:x="201223" fg:w="104"/><text x="42.4578%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (104 samples, 0.02%)</title><rect x="42.2078%" y="789" width="0.0218%" height="15" fill="rgb(254,67,22)" fg:x="201223" fg:w="104"/><text x="42.4578%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (102 samples, 0.02%)</title><rect x="42.2082%" y="773" width="0.0214%" height="15" fill="rgb(250,35,47)" fg:x="201225" fg:w="102"/><text x="42.4582%" y="783.50"></text></g><g><title>[libc-2.31.so] (79 samples, 0.02%)</title><rect x="42.2296%" y="725" width="0.0166%" height="15" fill="rgb(226,126,38)" fg:x="201327" fg:w="79"/><text x="42.4796%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (96 samples, 0.02%)</title><rect x="42.2296%" y="757" width="0.0201%" height="15" fill="rgb(216,138,53)" fg:x="201327" fg:w="96"/><text x="42.4796%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (96 samples, 0.02%)</title><rect x="42.2296%" y="741" width="0.0201%" height="15" fill="rgb(246,199,43)" fg:x="201327" fg:w="96"/><text x="42.4796%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (97 samples, 0.02%)</title><rect x="42.2296%" y="821" width="0.0203%" height="15" fill="rgb(232,125,11)" fg:x="201327" fg:w="97"/><text x="42.4796%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (97 samples, 0.02%)</title><rect x="42.2296%" y="805" width="0.0203%" height="15" fill="rgb(218,219,45)" fg:x="201327" fg:w="97"/><text x="42.4796%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (97 samples, 0.02%)</title><rect x="42.2296%" y="789" width="0.0203%" height="15" fill="rgb(216,102,54)" fg:x="201327" fg:w="97"/><text x="42.4796%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.02%)</title><rect x="42.2296%" y="773" width="0.0203%" height="15" fill="rgb(250,228,7)" fg:x="201327" fg:w="97"/><text x="42.4796%" y="783.50"></text></g><g><title>core::fmt::Formatter::pad_integral (49 samples, 0.01%)</title><rect x="42.3032%" y="629" width="0.0103%" height="15" fill="rgb(226,125,25)" fg:x="201678" fg:w="49"/><text x="42.5532%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (115 samples, 0.02%)</title><rect x="42.2908%" y="661" width="0.0241%" height="15" fill="rgb(224,165,27)" fg:x="201619" fg:w="115"/><text x="42.5408%" y="671.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (106 samples, 0.02%)</title><rect x="42.2927%" y="645" width="0.0222%" height="15" fill="rgb(233,86,3)" fg:x="201628" fg:w="106"/><text x="42.5427%" y="655.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (205 samples, 0.04%)</title><rect x="42.2732%" y="725" width="0.0430%" height="15" fill="rgb(228,116,20)" fg:x="201535" fg:w="205"/><text x="42.5232%" y="735.50"></text></g><g><title>alloc::fmt::format (203 samples, 0.04%)</title><rect x="42.2736%" y="709" width="0.0426%" height="15" fill="rgb(209,192,17)" fg:x="201537" fg:w="203"/><text x="42.5236%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (167 samples, 0.04%)</title><rect x="42.2812%" y="693" width="0.0350%" height="15" fill="rgb(224,88,34)" fg:x="201573" fg:w="167"/><text x="42.5312%" y="703.50"></text></g><g><title>core::fmt::write (166 samples, 0.03%)</title><rect x="42.2814%" y="677" width="0.0348%" height="15" fill="rgb(233,38,6)" fg:x="201574" fg:w="166"/><text x="42.5314%" y="687.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (263 samples, 0.06%)</title><rect x="42.2648%" y="757" width="0.0552%" height="15" fill="rgb(212,59,30)" fg:x="201495" fg:w="263"/><text x="42.5148%" y="767.50"></text></g><g><title>parsed::parser::bytes::{{closure}} (255 samples, 0.05%)</title><rect x="42.2665%" y="741" width="0.0535%" height="15" fill="rgb(213,80,3)" fg:x="201503" fg:w="255"/><text x="42.5165%" y="751.50"></text></g><g><title>__libc_malloc (50 samples, 0.01%)</title><rect x="42.3487%" y="517" width="0.0105%" height="15" fill="rgb(251,178,7)" fg:x="201895" fg:w="50"/><text x="42.5987%" y="527.50"></text></g><g><title>alloc::string::String::with_capacity (61 samples, 0.01%)</title><rect x="42.3479%" y="645" width="0.0128%" height="15" fill="rgb(213,154,26)" fg:x="201891" fg:w="61"/><text x="42.5979%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (58 samples, 0.01%)</title><rect x="42.3485%" y="629" width="0.0122%" height="15" fill="rgb(238,165,49)" fg:x="201894" fg:w="58"/><text x="42.5985%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (58 samples, 0.01%)</title><rect x="42.3485%" y="613" width="0.0122%" height="15" fill="rgb(248,91,46)" fg:x="201894" fg:w="58"/><text x="42.5985%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (58 samples, 0.01%)</title><rect x="42.3485%" y="597" width="0.0122%" height="15" fill="rgb(244,21,52)" fg:x="201894" fg:w="58"/><text x="42.5985%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (58 samples, 0.01%)</title><rect x="42.3485%" y="581" width="0.0122%" height="15" fill="rgb(247,122,20)" fg:x="201894" fg:w="58"/><text x="42.5985%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (58 samples, 0.01%)</title><rect x="42.3485%" y="565" width="0.0122%" height="15" fill="rgb(218,27,9)" fg:x="201894" fg:w="58"/><text x="42.5985%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (58 samples, 0.01%)</title><rect x="42.3485%" y="549" width="0.0122%" height="15" fill="rgb(246,7,6)" fg:x="201894" fg:w="58"/><text x="42.5985%" y="559.50"></text></g><g><title>alloc::alloc::alloc (57 samples, 0.01%)</title><rect x="42.3487%" y="533" width="0.0120%" height="15" fill="rgb(227,135,54)" fg:x="201895" fg:w="57"/><text x="42.5987%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (96 samples, 0.02%)</title><rect x="42.3626%" y="645" width="0.0201%" height="15" fill="rgb(247,14,11)" fg:x="201961" fg:w="96"/><text x="42.6126%" y="655.50"></text></g><g><title>core::fmt::write (91 samples, 0.02%)</title><rect x="42.3636%" y="629" width="0.0191%" height="15" fill="rgb(206,149,34)" fg:x="201966" fg:w="91"/><text x="42.6136%" y="639.50"></text></g><g><title>alloc::fmt::format (179 samples, 0.04%)</title><rect x="42.3454%" y="661" width="0.0375%" height="15" fill="rgb(227,228,4)" fg:x="201879" fg:w="179"/><text x="42.5954%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (122 samples, 0.03%)</title><rect x="42.4171%" y="597" width="0.0256%" height="15" fill="rgb(238,218,28)" fg:x="202221" fg:w="122"/><text x="42.6671%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (87 samples, 0.02%)</title><rect x="42.4244%" y="581" width="0.0182%" height="15" fill="rgb(252,86,40)" fg:x="202256" fg:w="87"/><text x="42.6744%" y="591.50"></text></g><g><title>alloc::string::String::push_str (87 samples, 0.02%)</title><rect x="42.4244%" y="565" width="0.0182%" height="15" fill="rgb(251,225,11)" fg:x="202256" fg:w="87"/><text x="42.6744%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (87 samples, 0.02%)</title><rect x="42.4244%" y="549" width="0.0182%" height="15" fill="rgb(206,46,49)" fg:x="202256" fg:w="87"/><text x="42.6744%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (87 samples, 0.02%)</title><rect x="42.4244%" y="533" width="0.0182%" height="15" fill="rgb(245,128,24)" fg:x="202256" fg:w="87"/><text x="42.6744%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (87 samples, 0.02%)</title><rect x="42.4244%" y="517" width="0.0182%" height="15" fill="rgb(219,177,34)" fg:x="202256" fg:w="87"/><text x="42.6744%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (62 samples, 0.01%)</title><rect x="42.4297%" y="501" width="0.0130%" height="15" fill="rgb(218,60,48)" fg:x="202281" fg:w="62"/><text x="42.6797%" y="511.50"></text></g><g><title>[libc-2.31.so] (55 samples, 0.01%)</title><rect x="42.4312%" y="485" width="0.0115%" height="15" fill="rgb(221,11,5)" fg:x="202288" fg:w="55"/><text x="42.6812%" y="495.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (67 samples, 0.01%)</title><rect x="42.4526%" y="597" width="0.0141%" height="15" fill="rgb(220,148,13)" fg:x="202390" fg:w="67"/><text x="42.7026%" y="607.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (61 samples, 0.01%)</title><rect x="42.4538%" y="581" width="0.0128%" height="15" fill="rgb(210,16,3)" fg:x="202396" fg:w="61"/><text x="42.7038%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (276 samples, 0.06%)</title><rect x="42.4117%" y="629" width="0.0579%" height="15" fill="rgb(236,80,2)" fg:x="202195" fg:w="276"/><text x="42.6617%" y="639.50"></text></g><g><title>core::fmt::write (271 samples, 0.06%)</title><rect x="42.4127%" y="613" width="0.0568%" height="15" fill="rgb(239,129,19)" fg:x="202200" fg:w="271"/><text x="42.6627%" y="623.50"></text></g><g><title>alloc::fmt::format (338 samples, 0.07%)</title><rect x="42.3989%" y="645" width="0.0709%" height="15" fill="rgb(220,106,35)" fg:x="202134" fg:w="338"/><text x="42.6489%" y="655.50"></text></g><g><title>[libc-2.31.so] (61 samples, 0.01%)</title><rect x="42.4721%" y="549" width="0.0128%" height="15" fill="rgb(252,139,45)" fg:x="202483" fg:w="61"/><text x="42.7221%" y="559.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (480 samples, 0.10%)</title><rect x="42.3928%" y="661" width="0.1007%" height="15" fill="rgb(229,8,36)" fg:x="202105" fg:w="480"/><text x="42.6428%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (111 samples, 0.02%)</title><rect x="42.4702%" y="645" width="0.0233%" height="15" fill="rgb(230,126,33)" fg:x="202474" fg:w="111"/><text x="42.7202%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (111 samples, 0.02%)</title><rect x="42.4702%" y="629" width="0.0233%" height="15" fill="rgb(239,140,21)" fg:x="202474" fg:w="111"/><text x="42.7202%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (111 samples, 0.02%)</title><rect x="42.4702%" y="613" width="0.0233%" height="15" fill="rgb(254,104,9)" fg:x="202474" fg:w="111"/><text x="42.7202%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.02%)</title><rect x="42.4702%" y="597" width="0.0233%" height="15" fill="rgb(239,52,14)" fg:x="202474" fg:w="111"/><text x="42.7202%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (103 samples, 0.02%)</title><rect x="42.4719%" y="581" width="0.0216%" height="15" fill="rgb(208,227,44)" fg:x="202482" fg:w="103"/><text x="42.7219%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (103 samples, 0.02%)</title><rect x="42.4719%" y="565" width="0.0216%" height="15" fill="rgb(246,18,19)" fg:x="202482" fg:w="103"/><text x="42.7219%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (53 samples, 0.01%)</title><rect x="42.4951%" y="645" width="0.0111%" height="15" fill="rgb(235,228,25)" fg:x="202593" fg:w="53"/><text x="42.7451%" y="655.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (889 samples, 0.19%)</title><rect x="42.3332%" y="693" width="0.1865%" height="15" fill="rgb(240,156,20)" fg:x="201821" fg:w="889"/><text x="42.5832%" y="703.50"></text></g><g><title>parsed::parser::single::{{closure}} (881 samples, 0.18%)</title><rect x="42.3349%" y="677" width="0.1848%" height="15" fill="rgb(224,8,20)" fg:x="201829" fg:w="881"/><text x="42.5849%" y="687.50"></text></g><g><title>parsed::stream::ByteStream::next (125 samples, 0.03%)</title><rect x="42.4935%" y="661" width="0.0262%" height="15" fill="rgb(214,12,52)" fg:x="202585" fg:w="125"/><text x="42.7435%" y="671.50"></text></g><g><title>parsed::stream::ByteStream::get (64 samples, 0.01%)</title><rect x="42.5063%" y="645" width="0.0134%" height="15" fill="rgb(211,220,47)" fg:x="202646" fg:w="64"/><text x="42.7563%" y="655.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,018 samples, 0.21%)</title><rect x="42.3290%" y="725" width="0.2135%" height="15" fill="rgb(250,173,5)" fg:x="201801" fg:w="1018"/><text x="42.5790%" y="735.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,014 samples, 0.21%)</title><rect x="42.3298%" y="709" width="0.2127%" height="15" fill="rgb(250,125,52)" fg:x="201805" fg:w="1014"/><text x="42.5798%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (63 samples, 0.01%)</title><rect x="42.5293%" y="693" width="0.0132%" height="15" fill="rgb(209,133,18)" fg:x="202756" fg:w="63"/><text x="42.7793%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (63 samples, 0.01%)</title><rect x="42.5293%" y="677" width="0.0132%" height="15" fill="rgb(216,173,22)" fg:x="202756" fg:w="63"/><text x="42.7793%" y="687.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (60 samples, 0.01%)</title><rect x="42.5300%" y="661" width="0.0126%" height="15" fill="rgb(205,3,22)" fg:x="202759" fg:w="60"/><text x="42.7800%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (51 samples, 0.01%)</title><rect x="42.5318%" y="645" width="0.0107%" height="15" fill="rgb(248,22,20)" fg:x="202768" fg:w="51"/><text x="42.7818%" y="655.50"></text></g><g><title>[libc-2.31.so] (198 samples, 0.04%)</title><rect x="42.6082%" y="389" width="0.0415%" height="15" fill="rgb(233,6,29)" fg:x="203132" fg:w="198"/><text x="42.8582%" y="399.50"></text></g><g><title>__libc_malloc (324 samples, 0.07%)</title><rect x="42.5820%" y="405" width="0.0680%" height="15" fill="rgb(240,22,54)" fg:x="203007" fg:w="324"/><text x="42.8320%" y="415.50"></text></g><g><title>alloc::string::String::with_capacity (335 samples, 0.07%)</title><rect x="42.5813%" y="533" width="0.0703%" height="15" fill="rgb(231,133,32)" fg:x="203004" fg:w="335"/><text x="42.8313%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (334 samples, 0.07%)</title><rect x="42.5816%" y="517" width="0.0701%" height="15" fill="rgb(248,193,4)" fg:x="203005" fg:w="334"/><text x="42.8316%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (334 samples, 0.07%)</title><rect x="42.5816%" y="501" width="0.0701%" height="15" fill="rgb(211,178,46)" fg:x="203005" fg:w="334"/><text x="42.8316%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (334 samples, 0.07%)</title><rect x="42.5816%" y="485" width="0.0701%" height="15" fill="rgb(224,5,42)" fg:x="203005" fg:w="334"/><text x="42.8316%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (334 samples, 0.07%)</title><rect x="42.5816%" y="469" width="0.0701%" height="15" fill="rgb(239,176,25)" fg:x="203005" fg:w="334"/><text x="42.8316%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (334 samples, 0.07%)</title><rect x="42.5816%" y="453" width="0.0701%" height="15" fill="rgb(245,187,50)" fg:x="203005" fg:w="334"/><text x="42.8316%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (334 samples, 0.07%)</title><rect x="42.5816%" y="437" width="0.0701%" height="15" fill="rgb(248,24,15)" fg:x="203005" fg:w="334"/><text x="42.8316%" y="447.50"></text></g><g><title>alloc::alloc::alloc (332 samples, 0.07%)</title><rect x="42.5820%" y="421" width="0.0696%" height="15" fill="rgb(205,166,13)" fg:x="203007" fg:w="332"/><text x="42.8320%" y="431.50"></text></g><g><title>alloc::fmt::format (452 samples, 0.09%)</title><rect x="42.5799%" y="549" width="0.0948%" height="15" fill="rgb(208,114,23)" fg:x="202997" fg:w="452"/><text x="42.8299%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (103 samples, 0.02%)</title><rect x="42.6531%" y="533" width="0.0216%" height="15" fill="rgb(239,127,18)" fg:x="203346" fg:w="103"/><text x="42.9031%" y="543.50"></text></g><g><title>core::fmt::write (95 samples, 0.02%)</title><rect x="42.6548%" y="517" width="0.0199%" height="15" fill="rgb(219,154,28)" fg:x="203354" fg:w="95"/><text x="42.9048%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (50 samples, 0.01%)</title><rect x="42.6768%" y="549" width="0.0105%" height="15" fill="rgb(225,157,23)" fg:x="203459" fg:w="50"/><text x="42.9268%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (120 samples, 0.03%)</title><rect x="42.7129%" y="485" width="0.0252%" height="15" fill="rgb(219,8,6)" fg:x="203631" fg:w="120"/><text x="42.9629%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (70 samples, 0.01%)</title><rect x="42.7233%" y="469" width="0.0147%" height="15" fill="rgb(212,47,6)" fg:x="203681" fg:w="70"/><text x="42.9733%" y="479.50"></text></g><g><title>alloc::string::String::push_str (70 samples, 0.01%)</title><rect x="42.7233%" y="453" width="0.0147%" height="15" fill="rgb(224,190,4)" fg:x="203681" fg:w="70"/><text x="42.9733%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (70 samples, 0.01%)</title><rect x="42.7233%" y="437" width="0.0147%" height="15" fill="rgb(239,183,29)" fg:x="203681" fg:w="70"/><text x="42.9733%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (70 samples, 0.01%)</title><rect x="42.7233%" y="421" width="0.0147%" height="15" fill="rgb(213,57,7)" fg:x="203681" fg:w="70"/><text x="42.9733%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (70 samples, 0.01%)</title><rect x="42.7233%" y="405" width="0.0147%" height="15" fill="rgb(216,148,1)" fg:x="203681" fg:w="70"/><text x="42.9733%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54 samples, 0.01%)</title><rect x="42.7267%" y="389" width="0.0113%" height="15" fill="rgb(236,182,29)" fg:x="203697" fg:w="54"/><text x="42.9767%" y="399.50"></text></g><g><title>[libc-2.31.so] (49 samples, 0.01%)</title><rect x="42.7278%" y="373" width="0.0103%" height="15" fill="rgb(244,120,48)" fg:x="203702" fg:w="49"/><text x="42.9778%" y="383.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (66 samples, 0.01%)</title><rect x="42.7464%" y="485" width="0.0138%" height="15" fill="rgb(206,71,34)" fg:x="203791" fg:w="66"/><text x="42.9964%" y="495.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (64 samples, 0.01%)</title><rect x="42.7468%" y="469" width="0.0134%" height="15" fill="rgb(242,32,6)" fg:x="203793" fg:w="64"/><text x="42.9968%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (269 samples, 0.06%)</title><rect x="42.7043%" y="517" width="0.0564%" height="15" fill="rgb(241,35,3)" fg:x="203590" fg:w="269"/><text x="42.9543%" y="527.50"></text></g><g><title>core::fmt::write (264 samples, 0.06%)</title><rect x="42.7053%" y="501" width="0.0554%" height="15" fill="rgb(222,62,19)" fg:x="203595" fg:w="264"/><text x="42.9553%" y="511.50"></text></g><g><title>alloc::fmt::format (323 samples, 0.07%)</title><rect x="42.6931%" y="533" width="0.0678%" height="15" fill="rgb(223,110,41)" fg:x="203537" fg:w="323"/><text x="42.9431%" y="543.50"></text></g><g><title>[libc-2.31.so] (77 samples, 0.02%)</title><rect x="42.7632%" y="437" width="0.0162%" height="15" fill="rgb(208,224,4)" fg:x="203871" fg:w="77"/><text x="43.0132%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (105 samples, 0.02%)</title><rect x="42.7628%" y="469" width="0.0220%" height="15" fill="rgb(241,137,19)" fg:x="203869" fg:w="105"/><text x="43.0128%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (105 samples, 0.02%)</title><rect x="42.7628%" y="453" width="0.0220%" height="15" fill="rgb(244,24,17)" fg:x="203869" fg:w="105"/><text x="43.0128%" y="463.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (468 samples, 0.10%)</title><rect x="42.6873%" y="549" width="0.0982%" height="15" fill="rgb(245,178,49)" fg:x="203509" fg:w="468"/><text x="42.9373%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (111 samples, 0.02%)</title><rect x="42.7622%" y="533" width="0.0233%" height="15" fill="rgb(219,160,38)" fg:x="203866" fg:w="111"/><text x="43.0122%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (111 samples, 0.02%)</title><rect x="42.7622%" y="517" width="0.0233%" height="15" fill="rgb(228,137,14)" fg:x="203866" fg:w="111"/><text x="43.0122%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (111 samples, 0.02%)</title><rect x="42.7622%" y="501" width="0.0233%" height="15" fill="rgb(237,134,11)" fg:x="203866" fg:w="111"/><text x="43.0122%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.02%)</title><rect x="42.7622%" y="485" width="0.0233%" height="15" fill="rgb(211,126,44)" fg:x="203866" fg:w="111"/><text x="43.0122%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (58 samples, 0.01%)</title><rect x="42.7871%" y="533" width="0.0122%" height="15" fill="rgb(226,171,33)" fg:x="203985" fg:w="58"/><text x="43.0371%" y="543.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,160 samples, 0.24%)</title><rect x="42.5677%" y="581" width="0.2433%" height="15" fill="rgb(253,99,13)" fg:x="202939" fg:w="1160"/><text x="42.8177%" y="591.50"></text></g><g><title>parsed::parser::single::{{closure}} (1,151 samples, 0.24%)</title><rect x="42.5696%" y="565" width="0.2414%" height="15" fill="rgb(244,48,7)" fg:x="202948" fg:w="1151"/><text x="42.8196%" y="575.50"></text></g><g><title>parsed::stream::ByteStream::next (122 samples, 0.03%)</title><rect x="42.7854%" y="549" width="0.0256%" height="15" fill="rgb(244,217,54)" fg:x="203977" fg:w="122"/><text x="43.0354%" y="559.50"></text></g><g><title>parsed::stream::ByteStream::get (56 samples, 0.01%)</title><rect x="42.7993%" y="533" width="0.0117%" height="15" fill="rgb(224,15,18)" fg:x="204043" fg:w="56"/><text x="43.0493%" y="543.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,268 samples, 0.27%)</title><rect x="42.5650%" y="613" width="0.2660%" height="15" fill="rgb(244,99,12)" fg:x="202926" fg:w="1268"/><text x="42.8150%" y="623.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,264 samples, 0.27%)</title><rect x="42.5658%" y="597" width="0.2651%" height="15" fill="rgb(233,226,8)" fg:x="202930" fg:w="1264"/><text x="42.8158%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (48 samples, 0.01%)</title><rect x="42.8209%" y="581" width="0.0101%" height="15" fill="rgb(229,211,3)" fg:x="204146" fg:w="48"/><text x="43.0709%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (48 samples, 0.01%)</title><rect x="42.8209%" y="565" width="0.0101%" height="15" fill="rgb(216,140,21)" fg:x="204146" fg:w="48"/><text x="43.0709%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (64 samples, 0.01%)</title><rect x="42.8375%" y="501" width="0.0134%" height="15" fill="rgb(234,122,30)" fg:x="204225" fg:w="64"/><text x="43.0875%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (99 samples, 0.02%)</title><rect x="42.8341%" y="549" width="0.0208%" height="15" fill="rgb(236,25,46)" fg:x="204209" fg:w="99"/><text x="43.0841%" y="559.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (99 samples, 0.02%)</title><rect x="42.8341%" y="533" width="0.0208%" height="15" fill="rgb(217,52,54)" fg:x="204209" fg:w="99"/><text x="43.0841%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::get (99 samples, 0.02%)</title><rect x="42.8341%" y="517" width="0.0208%" height="15" fill="rgb(222,29,26)" fg:x="204209" fg:w="99"/><text x="43.0841%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (105 samples, 0.02%)</title><rect x="42.8769%" y="485" width="0.0220%" height="15" fill="rgb(216,177,29)" fg:x="204413" fg:w="105"/><text x="43.1269%" y="495.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (93 samples, 0.02%)</title><rect x="42.8794%" y="469" width="0.0195%" height="15" fill="rgb(247,136,51)" fg:x="204425" fg:w="93"/><text x="43.1294%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (160 samples, 0.03%)</title><rect x="42.8666%" y="517" width="0.0336%" height="15" fill="rgb(231,47,47)" fg:x="204364" fg:w="160"/><text x="43.1166%" y="527.50"></text></g><g><title>core::fmt::write (158 samples, 0.03%)</title><rect x="42.8670%" y="501" width="0.0331%" height="15" fill="rgb(211,192,36)" fg:x="204366" fg:w="158"/><text x="43.1170%" y="511.50"></text></g><g><title>alloc::fmt::format (184 samples, 0.04%)</title><rect x="42.8618%" y="533" width="0.0386%" height="15" fill="rgb(229,156,32)" fg:x="204341" fg:w="184"/><text x="43.1118%" y="543.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (189 samples, 0.04%)</title><rect x="42.8612%" y="549" width="0.0396%" height="15" fill="rgb(248,213,20)" fg:x="204338" fg:w="189"/><text x="43.1112%" y="559.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (343 samples, 0.07%)</title><rect x="42.8326%" y="581" width="0.0719%" height="15" fill="rgb(217,64,7)" fg:x="204202" fg:w="343"/><text x="43.0826%" y="591.50"></text></g><g><title>parsed::parser::before::{{closure}} (337 samples, 0.07%)</title><rect x="42.8339%" y="565" width="0.0707%" height="15" fill="rgb(232,142,8)" fg:x="204208" fg:w="337"/><text x="43.0839%" y="575.50"></text></g><g><title>alloc::fmt::format (79 samples, 0.02%)</title><rect x="42.9111%" y="517" width="0.0166%" height="15" fill="rgb(224,92,44)" fg:x="204576" fg:w="79"/><text x="43.1611%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (49 samples, 0.01%)</title><rect x="42.9174%" y="501" width="0.0103%" height="15" fill="rgb(214,169,17)" fg:x="204606" fg:w="49"/><text x="43.1674%" y="511.50"></text></g><g><title>core::fmt::write (49 samples, 0.01%)</title><rect x="42.9174%" y="485" width="0.0103%" height="15" fill="rgb(210,59,37)" fg:x="204606" fg:w="49"/><text x="43.1674%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (71 samples, 0.01%)</title><rect x="42.9438%" y="453" width="0.0149%" height="15" fill="rgb(214,116,48)" fg:x="204732" fg:w="71"/><text x="43.1938%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (49 samples, 0.01%)</title><rect x="42.9484%" y="437" width="0.0103%" height="15" fill="rgb(244,191,6)" fg:x="204754" fg:w="49"/><text x="43.1984%" y="447.50"></text></g><g><title>alloc::string::String::push_str (49 samples, 0.01%)</title><rect x="42.9484%" y="421" width="0.0103%" height="15" fill="rgb(241,50,52)" fg:x="204754" fg:w="49"/><text x="43.1984%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (49 samples, 0.01%)</title><rect x="42.9484%" y="405" width="0.0103%" height="15" fill="rgb(236,75,39)" fg:x="204754" fg:w="49"/><text x="43.1984%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (49 samples, 0.01%)</title><rect x="42.9484%" y="389" width="0.0103%" height="15" fill="rgb(236,99,0)" fg:x="204754" fg:w="49"/><text x="43.1984%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (49 samples, 0.01%)</title><rect x="42.9484%" y="373" width="0.0103%" height="15" fill="rgb(207,202,15)" fg:x="204754" fg:w="49"/><text x="43.1984%" y="383.50"></text></g><g><title>alloc::fmt::format (168 samples, 0.04%)</title><rect x="42.9329%" y="501" width="0.0352%" height="15" fill="rgb(233,207,14)" fg:x="204680" fg:w="168"/><text x="43.1829%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (134 samples, 0.03%)</title><rect x="42.9400%" y="485" width="0.0281%" height="15" fill="rgb(226,27,51)" fg:x="204714" fg:w="134"/><text x="43.1900%" y="495.50"></text></g><g><title>core::fmt::write (132 samples, 0.03%)</title><rect x="42.9404%" y="469" width="0.0277%" height="15" fill="rgb(206,104,42)" fg:x="204716" fg:w="132"/><text x="43.1904%" y="479.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (222 samples, 0.05%)</title><rect x="42.9312%" y="517" width="0.0466%" height="15" fill="rgb(212,225,4)" fg:x="204672" fg:w="222"/><text x="43.1812%" y="527.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (410 samples, 0.09%)</title><rect x="42.9056%" y="549" width="0.0860%" height="15" fill="rgb(233,96,42)" fg:x="204550" fg:w="410"/><text x="43.1556%" y="559.50"></text></g><g><title>parsed::parser::single::{{closure}} (401 samples, 0.08%)</title><rect x="42.9075%" y="533" width="0.0841%" height="15" fill="rgb(229,21,32)" fg:x="204559" fg:w="401"/><text x="43.1575%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::next (66 samples, 0.01%)</title><rect x="42.9778%" y="517" width="0.0138%" height="15" fill="rgb(226,216,24)" fg:x="204894" fg:w="66"/><text x="43.2278%" y="527.50"></text></g><g><title>alloc::fmt::format (78 samples, 0.02%)</title><rect x="42.9960%" y="485" width="0.0164%" height="15" fill="rgb(221,163,17)" fg:x="204981" fg:w="78"/><text x="43.2460%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (74 samples, 0.02%)</title><rect x="43.0279%" y="421" width="0.0155%" height="15" fill="rgb(216,216,42)" fg:x="205133" fg:w="74"/><text x="43.2779%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (49 samples, 0.01%)</title><rect x="43.0332%" y="405" width="0.0103%" height="15" fill="rgb(240,118,7)" fg:x="205158" fg:w="49"/><text x="43.2832%" y="415.50"></text></g><g><title>alloc::string::String::push_str (49 samples, 0.01%)</title><rect x="43.0332%" y="389" width="0.0103%" height="15" fill="rgb(221,67,37)" fg:x="205158" fg:w="49"/><text x="43.2832%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (49 samples, 0.01%)</title><rect x="43.0332%" y="373" width="0.0103%" height="15" fill="rgb(241,32,44)" fg:x="205158" fg:w="49"/><text x="43.2832%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (49 samples, 0.01%)</title><rect x="43.0332%" y="357" width="0.0103%" height="15" fill="rgb(235,204,43)" fg:x="205158" fg:w="49"/><text x="43.2832%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (49 samples, 0.01%)</title><rect x="43.0332%" y="341" width="0.0103%" height="15" fill="rgb(213,116,10)" fg:x="205158" fg:w="49"/><text x="43.2832%" y="351.50"></text></g><g><title>core::fmt::Write::write_fmt (153 samples, 0.03%)</title><rect x="43.0239%" y="453" width="0.0321%" height="15" fill="rgb(239,15,48)" fg:x="205114" fg:w="153"/><text x="43.2739%" y="463.50"></text></g><g><title>core::fmt::write (150 samples, 0.03%)</title><rect x="43.0246%" y="437" width="0.0315%" height="15" fill="rgb(207,123,36)" fg:x="205117" fg:w="150"/><text x="43.2746%" y="447.50"></text></g><g><title>alloc::fmt::format (175 samples, 0.04%)</title><rect x="43.0195%" y="469" width="0.0367%" height="15" fill="rgb(209,103,30)" fg:x="205093" fg:w="175"/><text x="43.2695%" y="479.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (234 samples, 0.05%)</title><rect x="43.0168%" y="485" width="0.0491%" height="15" fill="rgb(238,100,19)" fg:x="205080" fg:w="234"/><text x="43.2668%" y="495.50"></text></g><g><title>parsed::stream::ByteStream::next (49 samples, 0.01%)</title><rect x="43.0659%" y="485" width="0.0103%" height="15" fill="rgb(244,30,14)" fg:x="205314" fg:w="49"/><text x="43.3159%" y="495.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (401 samples, 0.08%)</title><rect x="42.9923%" y="517" width="0.0841%" height="15" fill="rgb(249,174,6)" fg:x="204963" fg:w="401"/><text x="43.2423%" y="527.50"></text></g><g><title>parsed::parser::single::{{closure}} (398 samples, 0.08%)</title><rect x="42.9929%" y="501" width="0.0835%" height="15" fill="rgb(235,213,41)" fg:x="204966" fg:w="398"/><text x="43.2429%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 samples, 0.01%)</title><rect x="43.1202%" y="389" width="0.0147%" height="15" fill="rgb(213,118,6)" fg:x="205573" fg:w="70"/><text x="43.3702%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 samples, 0.01%)</title><rect x="43.1481%" y="357" width="0.0124%" height="15" fill="rgb(235,44,51)" fg:x="205706" fg:w="59"/><text x="43.3981%" y="367.50"></text></g><g><title>core::fmt::Formatter::pad_integral (77 samples, 0.02%)</title><rect x="43.1605%" y="357" width="0.0162%" height="15" fill="rgb(217,9,53)" fg:x="205765" fg:w="77"/><text x="43.4105%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (208 samples, 0.04%)</title><rect x="43.1361%" y="389" width="0.0436%" height="15" fill="rgb(237,172,34)" fg:x="205649" fg:w="208"/><text x="43.3861%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (172 samples, 0.04%)</title><rect x="43.1437%" y="373" width="0.0361%" height="15" fill="rgb(206,206,11)" fg:x="205685" fg:w="172"/><text x="43.3937%" y="383.50"></text></g><g><title>alloc::fmt::format (405 samples, 0.08%)</title><rect x="43.0963%" y="437" width="0.0850%" height="15" fill="rgb(214,149,29)" fg:x="205459" fg:w="405"/><text x="43.3463%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (327 samples, 0.07%)</title><rect x="43.1127%" y="421" width="0.0686%" height="15" fill="rgb(208,123,3)" fg:x="205537" fg:w="327"/><text x="43.3627%" y="431.50"></text></g><g><title>core::fmt::write (319 samples, 0.07%)</title><rect x="43.1143%" y="405" width="0.0669%" height="15" fill="rgb(229,126,4)" fg:x="205545" fg:w="319"/><text x="43.3643%" y="415.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (419 samples, 0.09%)</title><rect x="43.0952%" y="453" width="0.0879%" height="15" fill="rgb(222,92,36)" fg:x="205454" fg:w="419"/><text x="43.3452%" y="463.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (515 samples, 0.11%)</title><rect x="43.0778%" y="485" width="0.1080%" height="15" fill="rgb(216,39,41)" fg:x="205371" fg:w="515"/><text x="43.3278%" y="495.50"></text></g><g><title>parsed::parser::before::{{closure}} (508 samples, 0.11%)</title><rect x="43.0793%" y="469" width="0.1066%" height="15" fill="rgb(253,127,28)" fg:x="205378" fg:w="508"/><text x="43.3293%" y="479.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (522 samples, 0.11%)</title><rect x="43.0774%" y="501" width="0.1095%" height="15" fill="rgb(249,152,51)" fg:x="205369" fg:w="522"/><text x="43.3274%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (77 samples, 0.02%)</title><rect x="43.1955%" y="437" width="0.0162%" height="15" fill="rgb(209,123,42)" fg:x="205932" fg:w="77"/><text x="43.4455%" y="447.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,814 samples, 0.38%)</title><rect x="42.8314%" y="597" width="0.3805%" height="15" fill="rgb(241,118,22)" fg:x="204196" fg:w="1814"/><text x="43.0814%" y="607.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,463 samples, 0.31%)</title><rect x="42.9050%" y="581" width="0.3069%" height="15" fill="rgb(208,25,7)" fg:x="204547" fg:w="1463"/><text x="43.1550%" y="591.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,463 samples, 0.31%)</title><rect x="42.9050%" y="565" width="0.3069%" height="15" fill="rgb(243,144,39)" fg:x="204547" fg:w="1463"/><text x="43.1550%" y="575.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,047 samples, 0.22%)</title><rect x="42.9923%" y="549" width="0.2196%" height="15" fill="rgb(250,50,5)" fg:x="204963" fg:w="1047"/><text x="43.2423%" y="559.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,047 samples, 0.22%)</title><rect x="42.9923%" y="533" width="0.2196%" height="15" fill="rgb(207,67,11)" fg:x="204963" fg:w="1047"/><text x="43.2423%" y="543.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (644 samples, 0.14%)</title><rect x="43.0768%" y="517" width="0.1351%" height="15" fill="rgb(245,204,40)" fg:x="205366" fg:w="644"/><text x="43.3268%" y="527.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (119 samples, 0.02%)</title><rect x="43.1869%" y="501" width="0.0250%" height="15" fill="rgb(238,228,24)" fg:x="205891" fg:w="119"/><text x="43.4369%" y="511.50"></text></g><g><title>parsed::http::as_string (81 samples, 0.02%)</title><rect x="43.1949%" y="485" width="0.0170%" height="15" fill="rgb(217,116,22)" fg:x="205929" fg:w="81"/><text x="43.4449%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (81 samples, 0.02%)</title><rect x="43.1949%" y="469" width="0.0170%" height="15" fill="rgb(234,98,12)" fg:x="205929" fg:w="81"/><text x="43.4449%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (79 samples, 0.02%)</title><rect x="43.1953%" y="453" width="0.0166%" height="15" fill="rgb(242,170,50)" fg:x="205931" fg:w="79"/><text x="43.4453%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (64 samples, 0.01%)</title><rect x="43.2259%" y="405" width="0.0134%" height="15" fill="rgb(235,7,5)" fg:x="206077" fg:w="64"/><text x="43.4759%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (65 samples, 0.01%)</title><rect x="43.2259%" y="469" width="0.0136%" height="15" fill="rgb(241,114,28)" fg:x="206077" fg:w="65"/><text x="43.4759%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (65 samples, 0.01%)</title><rect x="43.2259%" y="453" width="0.0136%" height="15" fill="rgb(246,112,42)" fg:x="206077" fg:w="65"/><text x="43.4759%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (65 samples, 0.01%)</title><rect x="43.2259%" y="437" width="0.0136%" height="15" fill="rgb(248,228,14)" fg:x="206077" fg:w="65"/><text x="43.4759%" y="447.50"></text></g><g><title>alloc::string::String::push (65 samples, 0.01%)</title><rect x="43.2259%" y="421" width="0.0136%" height="15" fill="rgb(208,133,18)" fg:x="206077" fg:w="65"/><text x="43.4759%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (85 samples, 0.02%)</title><rect x="43.2221%" y="501" width="0.0178%" height="15" fill="rgb(207,35,49)" fg:x="206059" fg:w="85"/><text x="43.4721%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (79 samples, 0.02%)</title><rect x="43.2234%" y="485" width="0.0166%" height="15" fill="rgb(205,68,36)" fg:x="206065" fg:w="79"/><text x="43.4734%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (136 samples, 0.03%)</title><rect x="43.2138%" y="533" width="0.0285%" height="15" fill="rgb(245,62,40)" fg:x="206019" fg:w="136"/><text x="43.4638%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (99 samples, 0.02%)</title><rect x="43.2215%" y="517" width="0.0208%" height="15" fill="rgb(228,27,24)" fg:x="206056" fg:w="99"/><text x="43.4715%" y="527.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (3,233 samples, 0.68%)</title><rect x="42.5646%" y="629" width="0.6781%" height="15" fill="rgb(253,19,12)" fg:x="202924" fg:w="3233"/><text x="42.8146%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,961 samples, 0.41%)</title><rect x="42.8314%" y="613" width="0.4113%" height="15" fill="rgb(232,28,20)" fg:x="204196" fg:w="1961"/><text x="43.0814%" y="623.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (147 samples, 0.03%)</title><rect x="43.2119%" y="597" width="0.0308%" height="15" fill="rgb(218,35,51)" fg:x="206010" fg:w="147"/><text x="43.4619%" y="607.50"></text></g><g><title>parsed::http::as_string (141 samples, 0.03%)</title><rect x="43.2131%" y="581" width="0.0296%" height="15" fill="rgb(212,90,40)" fg:x="206016" fg:w="141"/><text x="43.4631%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (141 samples, 0.03%)</title><rect x="43.2131%" y="565" width="0.0296%" height="15" fill="rgb(220,172,12)" fg:x="206016" fg:w="141"/><text x="43.4631%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (140 samples, 0.03%)</title><rect x="43.2133%" y="549" width="0.0294%" height="15" fill="rgb(226,159,20)" fg:x="206017" fg:w="140"/><text x="43.4633%" y="559.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (3,261 samples, 0.68%)</title><rect x="42.5646%" y="645" width="0.6840%" height="15" fill="rgb(234,205,16)" fg:x="202924" fg:w="3261"/><text x="42.8146%" y="655.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (73 samples, 0.02%)</title><rect x="43.2498%" y="629" width="0.0153%" height="15" fill="rgb(207,9,39)" fg:x="206191" fg:w="73"/><text x="43.4998%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (73 samples, 0.02%)</title><rect x="43.2498%" y="613" width="0.0153%" height="15" fill="rgb(249,143,15)" fg:x="206191" fg:w="73"/><text x="43.4998%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (62 samples, 0.01%)</title><rect x="43.2521%" y="597" width="0.0130%" height="15" fill="rgb(253,133,29)" fg:x="206202" fg:w="62"/><text x="43.5021%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (62 samples, 0.01%)</title><rect x="43.2521%" y="581" width="0.0130%" height="15" fill="rgb(221,187,0)" fg:x="206202" fg:w="62"/><text x="43.5021%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (62 samples, 0.01%)</title><rect x="43.2521%" y="565" width="0.0130%" height="15" fill="rgb(205,204,26)" fg:x="206202" fg:w="62"/><text x="43.5021%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62 samples, 0.01%)</title><rect x="43.2521%" y="549" width="0.0130%" height="15" fill="rgb(224,68,54)" fg:x="206202" fg:w="62"/><text x="43.5021%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (60 samples, 0.01%)</title><rect x="43.2672%" y="517" width="0.0126%" height="15" fill="rgb(209,67,4)" fg:x="206274" fg:w="60"/><text x="43.5172%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (60 samples, 0.01%)</title><rect x="43.2672%" y="501" width="0.0126%" height="15" fill="rgb(228,229,18)" fg:x="206274" fg:w="60"/><text x="43.5172%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.01%)</title><rect x="43.2668%" y="613" width="0.0141%" height="15" fill="rgb(231,89,13)" fg:x="206272" fg:w="67"/><text x="43.5168%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (66 samples, 0.01%)</title><rect x="43.2670%" y="597" width="0.0138%" height="15" fill="rgb(210,182,18)" fg:x="206273" fg:w="66"/><text x="43.5170%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (65 samples, 0.01%)</title><rect x="43.2672%" y="581" width="0.0136%" height="15" fill="rgb(240,105,2)" fg:x="206274" fg:w="65"/><text x="43.5172%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (65 samples, 0.01%)</title><rect x="43.2672%" y="565" width="0.0136%" height="15" fill="rgb(207,170,50)" fg:x="206274" fg:w="65"/><text x="43.5172%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (65 samples, 0.01%)</title><rect x="43.2672%" y="549" width="0.0136%" height="15" fill="rgb(232,133,24)" fg:x="206274" fg:w="65"/><text x="43.5172%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.01%)</title><rect x="43.2672%" y="533" width="0.0136%" height="15" fill="rgb(235,166,27)" fg:x="206274" fg:w="65"/><text x="43.5172%" y="543.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (3,462 samples, 0.73%)</title><rect x="42.5602%" y="661" width="0.7262%" height="15" fill="rgb(209,19,13)" fg:x="202903" fg:w="3462"/><text x="42.8102%" y="671.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (180 samples, 0.04%)</title><rect x="43.2486%" y="645" width="0.0378%" height="15" fill="rgb(226,79,39)" fg:x="206185" fg:w="180"/><text x="43.4986%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (93 samples, 0.02%)</title><rect x="43.2668%" y="629" width="0.0195%" height="15" fill="rgb(222,163,10)" fg:x="206272" fg:w="93"/><text x="43.5168%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (49 samples, 0.01%)</title><rect x="43.2863%" y="661" width="0.0103%" height="15" fill="rgb(214,44,19)" fg:x="206365" fg:w="49"/><text x="43.5363%" y="671.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (3,550 samples, 0.74%)</title><rect x="42.5566%" y="693" width="0.7446%" height="15" fill="rgb(210,217,13)" fg:x="202886" fg:w="3550"/><text x="42.8066%" y="703.50"></text></g><g><title>parsed::parser::repeat::{{closure}} (3,541 samples, 0.74%)</title><rect x="42.5585%" y="677" width="0.7427%" height="15" fill="rgb(237,61,54)" fg:x="202895" fg:w="3541"/><text x="42.8085%" y="687.50"></text></g><g><title>__libc_malloc (98 samples, 0.02%)</title><rect x="43.3281%" y="453" width="0.0206%" height="15" fill="rgb(226,184,24)" fg:x="206564" fg:w="98"/><text x="43.5781%" y="463.50"></text></g><g><title>alloc::string::String::with_capacity (107 samples, 0.02%)</title><rect x="43.3272%" y="581" width="0.0224%" height="15" fill="rgb(223,226,4)" fg:x="206560" fg:w="107"/><text x="43.5772%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (106 samples, 0.02%)</title><rect x="43.3274%" y="565" width="0.0222%" height="15" fill="rgb(210,26,41)" fg:x="206561" fg:w="106"/><text x="43.5774%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (106 samples, 0.02%)</title><rect x="43.3274%" y="549" width="0.0222%" height="15" fill="rgb(220,221,6)" fg:x="206561" fg:w="106"/><text x="43.5774%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (106 samples, 0.02%)</title><rect x="43.3274%" y="533" width="0.0222%" height="15" fill="rgb(225,89,49)" fg:x="206561" fg:w="106"/><text x="43.5774%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (106 samples, 0.02%)</title><rect x="43.3274%" y="517" width="0.0222%" height="15" fill="rgb(218,70,45)" fg:x="206561" fg:w="106"/><text x="43.5774%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (103 samples, 0.02%)</title><rect x="43.3281%" y="501" width="0.0216%" height="15" fill="rgb(238,166,21)" fg:x="206564" fg:w="103"/><text x="43.5781%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (103 samples, 0.02%)</title><rect x="43.3281%" y="485" width="0.0216%" height="15" fill="rgb(224,141,44)" fg:x="206564" fg:w="103"/><text x="43.5781%" y="495.50"></text></g><g><title>alloc::alloc::alloc (103 samples, 0.02%)</title><rect x="43.3281%" y="469" width="0.0216%" height="15" fill="rgb(230,12,49)" fg:x="206564" fg:w="103"/><text x="43.5781%" y="479.50"></text></g><g><title>alloc::fmt::format (208 samples, 0.04%)</title><rect x="43.3262%" y="597" width="0.0436%" height="15" fill="rgb(212,174,12)" fg:x="206555" fg:w="208"/><text x="43.5762%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (89 samples, 0.02%)</title><rect x="43.3511%" y="581" width="0.0187%" height="15" fill="rgb(246,67,9)" fg:x="206674" fg:w="89"/><text x="43.6011%" y="591.50"></text></g><g><title>core::fmt::write (83 samples, 0.02%)</title><rect x="43.3524%" y="565" width="0.0174%" height="15" fill="rgb(239,35,23)" fg:x="206680" fg:w="83"/><text x="43.6024%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (49 samples, 0.01%)</title><rect x="43.3707%" y="597" width="0.0103%" height="15" fill="rgb(211,167,0)" fg:x="206767" fg:w="49"/><text x="43.6207%" y="607.50"></text></g><g><title>alloc::string::String::with_capacity (54 samples, 0.01%)</title><rect x="43.3864%" y="565" width="0.0113%" height="15" fill="rgb(225,119,45)" fg:x="206842" fg:w="54"/><text x="43.6364%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (53 samples, 0.01%)</title><rect x="43.3866%" y="549" width="0.0111%" height="15" fill="rgb(210,162,6)" fg:x="206843" fg:w="53"/><text x="43.6366%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (53 samples, 0.01%)</title><rect x="43.3866%" y="533" width="0.0111%" height="15" fill="rgb(208,118,35)" fg:x="206843" fg:w="53"/><text x="43.6366%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (53 samples, 0.01%)</title><rect x="43.3866%" y="517" width="0.0111%" height="15" fill="rgb(239,4,53)" fg:x="206843" fg:w="53"/><text x="43.6366%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (53 samples, 0.01%)</title><rect x="43.3866%" y="501" width="0.0111%" height="15" fill="rgb(213,130,21)" fg:x="206843" fg:w="53"/><text x="43.6366%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (53 samples, 0.01%)</title><rect x="43.3866%" y="485" width="0.0111%" height="15" fill="rgb(235,148,0)" fg:x="206843" fg:w="53"/><text x="43.6366%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53 samples, 0.01%)</title><rect x="43.3866%" y="469" width="0.0111%" height="15" fill="rgb(244,224,18)" fg:x="206843" fg:w="53"/><text x="43.6366%" y="479.50"></text></g><g><title>alloc::alloc::alloc (51 samples, 0.01%)</title><rect x="43.3870%" y="453" width="0.0107%" height="15" fill="rgb(211,214,4)" fg:x="206845" fg:w="51"/><text x="43.6370%" y="463.50"></text></g><g><title>[libc-2.31.so] (66 samples, 0.01%)</title><rect x="43.4265%" y="421" width="0.0138%" height="15" fill="rgb(206,119,25)" fg:x="207033" fg:w="66"/><text x="43.6765%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (146 samples, 0.03%)</title><rect x="43.4099%" y="533" width="0.0306%" height="15" fill="rgb(243,93,47)" fg:x="206954" fg:w="146"/><text x="43.6599%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (91 samples, 0.02%)</title><rect x="43.4214%" y="517" width="0.0191%" height="15" fill="rgb(224,194,6)" fg:x="207009" fg:w="91"/><text x="43.6714%" y="527.50"></text></g><g><title>alloc::string::String::push_str (91 samples, 0.02%)</title><rect x="43.4214%" y="501" width="0.0191%" height="15" fill="rgb(243,229,6)" fg:x="207009" fg:w="91"/><text x="43.6714%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (91 samples, 0.02%)</title><rect x="43.4214%" y="485" width="0.0191%" height="15" fill="rgb(207,23,50)" fg:x="207009" fg:w="91"/><text x="43.6714%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (91 samples, 0.02%)</title><rect x="43.4214%" y="469" width="0.0191%" height="15" fill="rgb(253,192,32)" fg:x="207009" fg:w="91"/><text x="43.6714%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (91 samples, 0.02%)</title><rect x="43.4214%" y="453" width="0.0191%" height="15" fill="rgb(213,21,6)" fg:x="207009" fg:w="91"/><text x="43.6714%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (75 samples, 0.02%)</title><rect x="43.4248%" y="437" width="0.0157%" height="15" fill="rgb(243,151,13)" fg:x="207025" fg:w="75"/><text x="43.6748%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (57 samples, 0.01%)</title><rect x="43.4483%" y="533" width="0.0120%" height="15" fill="rgb(233,165,41)" fg:x="207137" fg:w="57"/><text x="43.6983%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (52 samples, 0.01%)</title><rect x="43.4493%" y="517" width="0.0109%" height="15" fill="rgb(246,176,45)" fg:x="207142" fg:w="52"/><text x="43.6993%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (297 samples, 0.06%)</title><rect x="43.3996%" y="565" width="0.0623%" height="15" fill="rgb(217,170,52)" fg:x="206905" fg:w="297"/><text x="43.6496%" y="575.50"></text></g><g><title>core::fmt::write (290 samples, 0.06%)</title><rect x="43.4011%" y="549" width="0.0608%" height="15" fill="rgb(214,203,54)" fg:x="206912" fg:w="290"/><text x="43.6511%" y="559.50"></text></g><g><title>alloc::fmt::format (372 samples, 0.08%)</title><rect x="43.3841%" y="581" width="0.0780%" height="15" fill="rgb(248,215,49)" fg:x="206831" fg:w="372"/><text x="43.6341%" y="591.50"></text></g><g><title>[libc-2.31.so] (58 samples, 0.01%)</title><rect x="43.4642%" y="485" width="0.0122%" height="15" fill="rgb(208,46,10)" fg:x="207213" fg:w="58"/><text x="43.7142%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (85 samples, 0.02%)</title><rect x="43.4638%" y="517" width="0.0178%" height="15" fill="rgb(254,5,31)" fg:x="207211" fg:w="85"/><text x="43.7138%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (85 samples, 0.02%)</title><rect x="43.4638%" y="501" width="0.0178%" height="15" fill="rgb(222,104,33)" fg:x="207211" fg:w="85"/><text x="43.7138%" y="511.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (485 samples, 0.10%)</title><rect x="43.3809%" y="597" width="0.1017%" height="15" fill="rgb(248,49,16)" fg:x="206816" fg:w="485"/><text x="43.6309%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (91 samples, 0.02%)</title><rect x="43.4636%" y="581" width="0.0191%" height="15" fill="rgb(232,198,41)" fg:x="207210" fg:w="91"/><text x="43.7136%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (91 samples, 0.02%)</title><rect x="43.4636%" y="565" width="0.0191%" height="15" fill="rgb(214,125,3)" fg:x="207210" fg:w="91"/><text x="43.7136%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (91 samples, 0.02%)</title><rect x="43.4636%" y="549" width="0.0191%" height="15" fill="rgb(229,220,28)" fg:x="207210" fg:w="91"/><text x="43.7136%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 0.02%)</title><rect x="43.4636%" y="533" width="0.0191%" height="15" fill="rgb(222,64,37)" fg:x="207210" fg:w="91"/><text x="43.7136%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (55 samples, 0.01%)</title><rect x="43.4848%" y="581" width="0.0115%" height="15" fill="rgb(249,184,13)" fg:x="207311" fg:w="55"/><text x="43.7348%" y="591.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (932 samples, 0.20%)</title><rect x="43.3134%" y="629" width="0.1955%" height="15" fill="rgb(252,176,6)" fg:x="206494" fg:w="932"/><text x="43.5634%" y="639.50"></text></g><g><title>parsed::parser::single::{{closure}} (927 samples, 0.19%)</title><rect x="43.3144%" y="613" width="0.1944%" height="15" fill="rgb(228,153,7)" fg:x="206499" fg:w="927"/><text x="43.5644%" y="623.50"></text></g><g><title>parsed::stream::ByteStream::next (125 samples, 0.03%)</title><rect x="43.4827%" y="597" width="0.0262%" height="15" fill="rgb(242,193,5)" fg:x="207301" fg:w="125"/><text x="43.7327%" y="607.50"></text></g><g><title>parsed::stream::ByteStream::get (60 samples, 0.01%)</title><rect x="43.4963%" y="581" width="0.0126%" height="15" fill="rgb(232,140,9)" fg:x="207366" fg:w="60"/><text x="43.7463%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (53 samples, 0.01%)</title><rect x="43.5114%" y="613" width="0.0111%" height="15" fill="rgb(213,222,16)" fg:x="207438" fg:w="53"/><text x="43.7614%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (71 samples, 0.01%)</title><rect x="43.5091%" y="629" width="0.0149%" height="15" fill="rgb(222,75,50)" fg:x="207427" fg:w="71"/><text x="43.7591%" y="639.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,085 samples, 0.23%)</title><rect x="43.3086%" y="661" width="0.2276%" height="15" fill="rgb(205,180,2)" fg:x="206471" fg:w="1085"/><text x="43.5586%" y="671.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,075 samples, 0.23%)</title><rect x="43.3107%" y="645" width="0.2255%" height="15" fill="rgb(216,34,7)" fg:x="206481" fg:w="1075"/><text x="43.5607%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (58 samples, 0.01%)</title><rect x="43.5240%" y="629" width="0.0122%" height="15" fill="rgb(253,16,32)" fg:x="207498" fg:w="58"/><text x="43.7740%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (58 samples, 0.01%)</title><rect x="43.5240%" y="613" width="0.0122%" height="15" fill="rgb(208,97,28)" fg:x="207498" fg:w="58"/><text x="43.7740%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (55 samples, 0.01%)</title><rect x="43.5246%" y="597" width="0.0115%" height="15" fill="rgb(225,92,11)" fg:x="207501" fg:w="55"/><text x="43.7746%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (87 samples, 0.02%)</title><rect x="43.5764%" y="533" width="0.0182%" height="15" fill="rgb(243,38,12)" fg:x="207748" fg:w="87"/><text x="43.8264%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (82 samples, 0.02%)</title><rect x="43.5775%" y="517" width="0.0172%" height="15" fill="rgb(208,139,16)" fg:x="207753" fg:w="82"/><text x="43.8275%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (150 samples, 0.03%)</title><rect x="43.5645%" y="565" width="0.0315%" height="15" fill="rgb(227,24,9)" fg:x="207691" fg:w="150"/><text x="43.8145%" y="575.50"></text></g><g><title>core::fmt::write (147 samples, 0.03%)</title><rect x="43.5651%" y="549" width="0.0308%" height="15" fill="rgb(206,62,11)" fg:x="207694" fg:w="147"/><text x="43.8151%" y="559.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (174 samples, 0.04%)</title><rect x="43.5599%" y="597" width="0.0365%" height="15" fill="rgb(228,134,27)" fg:x="207669" fg:w="174"/><text x="43.8099%" y="607.50"></text></g><g><title>alloc::fmt::format (173 samples, 0.04%)</title><rect x="43.5601%" y="581" width="0.0363%" height="15" fill="rgb(205,55,33)" fg:x="207670" fg:w="173"/><text x="43.8101%" y="591.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (243 samples, 0.05%)</title><rect x="43.5481%" y="629" width="0.0510%" height="15" fill="rgb(243,75,43)" fg:x="207613" fg:w="243"/><text x="43.7981%" y="639.50"></text></g><g><title>parsed::parser::before::{{closure}} (238 samples, 0.05%)</title><rect x="43.5492%" y="613" width="0.0499%" height="15" fill="rgb(223,27,42)" fg:x="207618" fg:w="238"/><text x="43.7992%" y="623.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (52 samples, 0.01%)</title><rect x="43.6068%" y="597" width="0.0109%" height="15" fill="rgb(232,189,33)" fg:x="207893" fg:w="52"/><text x="43.8568%" y="607.50"></text></g><g><title>parsed::parser::single::{{closure}} (48 samples, 0.01%)</title><rect x="43.6077%" y="581" width="0.0101%" height="15" fill="rgb(210,9,39)" fg:x="207897" fg:w="48"/><text x="43.8577%" y="591.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (101 samples, 0.02%)</title><rect x="43.6008%" y="629" width="0.0212%" height="15" fill="rgb(242,85,26)" fg:x="207864" fg:w="101"/><text x="43.8508%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (85 samples, 0.02%)</title><rect x="43.6041%" y="613" width="0.0178%" height="15" fill="rgb(248,44,4)" fg:x="207880" fg:w="85"/><text x="43.8541%" y="623.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (383 samples, 0.08%)</title><rect x="43.5441%" y="645" width="0.0803%" height="15" fill="rgb(250,96,46)" fg:x="207594" fg:w="383"/><text x="43.7941%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (90 samples, 0.02%)</title><rect x="43.6270%" y="581" width="0.0189%" height="15" fill="rgb(229,116,26)" fg:x="207989" fg:w="90"/><text x="43.8770%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (48 samples, 0.01%)</title><rect x="43.6358%" y="565" width="0.0101%" height="15" fill="rgb(246,94,34)" fg:x="208031" fg:w="48"/><text x="43.8858%" y="575.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (512 samples, 0.11%)</title><rect x="43.5391%" y="661" width="0.1074%" height="15" fill="rgb(251,73,21)" fg:x="207570" fg:w="512"/><text x="43.7891%" y="671.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (105 samples, 0.02%)</title><rect x="43.6245%" y="645" width="0.0220%" height="15" fill="rgb(254,121,25)" fg:x="207977" fg:w="105"/><text x="43.8745%" y="655.50"></text></g><g><title>parsed::http::as_string (103 samples, 0.02%)</title><rect x="43.6249%" y="629" width="0.0216%" height="15" fill="rgb(215,161,49)" fg:x="207979" fg:w="103"/><text x="43.8749%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (103 samples, 0.02%)</title><rect x="43.6249%" y="613" width="0.0216%" height="15" fill="rgb(221,43,13)" fg:x="207979" fg:w="103"/><text x="43.8749%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (99 samples, 0.02%)</title><rect x="43.6257%" y="597" width="0.0208%" height="15" fill="rgb(249,5,37)" fg:x="207983" fg:w="99"/><text x="43.8757%" y="607.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,638 samples, 0.34%)</title><rect x="43.3056%" y="677" width="0.3436%" height="15" fill="rgb(226,25,44)" fg:x="206457" fg:w="1638"/><text x="43.5556%" y="687.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,678 samples, 0.35%)</title><rect x="43.3023%" y="693" width="0.3520%" height="15" fill="rgb(238,189,16)" fg:x="206441" fg:w="1678"/><text x="43.5523%" y="703.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (5,314 samples, 1.11%)</title><rect x="42.5459%" y="725" width="1.1146%" height="15" fill="rgb(251,186,8)" fg:x="202835" fg:w="5314"/><text x="42.7959%" y="735.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (5,281 samples, 1.11%)</title><rect x="42.5528%" y="709" width="1.1077%" height="15" fill="rgb(254,34,31)" fg:x="202868" fg:w="5281"/><text x="42.8028%" y="719.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (6,381 samples, 1.34%)</title><rect x="42.3248%" y="741" width="1.3385%" height="15" fill="rgb(225,215,27)" fg:x="201781" fg:w="6381"/><text x="42.5748%" y="751.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (6,434 samples, 1.35%)</title><rect x="42.3215%" y="757" width="1.3496%" height="15" fill="rgb(221,192,48)" fg:x="201765" fg:w="6434"/><text x="42.5715%" y="767.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (6,841 samples, 1.43%)</title><rect x="42.2520%" y="805" width="1.4349%" height="15" fill="rgb(219,137,20)" fg:x="201434" fg:w="6841"/><text x="42.5020%" y="815.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (6,841 samples, 1.43%)</title><rect x="42.2520%" y="789" width="1.4349%" height="15" fill="rgb(219,84,11)" fg:x="201434" fg:w="6841"/><text x="42.5020%" y="799.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (6,810 samples, 1.43%)</title><rect x="42.2585%" y="773" width="1.4284%" height="15" fill="rgb(224,10,23)" fg:x="201465" fg:w="6810"/><text x="42.5085%" y="783.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (62 samples, 0.01%)</title><rect x="43.6740%" y="757" width="0.0130%" height="15" fill="rgb(248,22,39)" fg:x="208213" fg:w="62"/><text x="43.9240%" y="767.50"></text></g><g><title>parsed::http::get_content_length (61 samples, 0.01%)</title><rect x="43.6742%" y="741" width="0.0128%" height="15" fill="rgb(212,154,20)" fg:x="208214" fg:w="61"/><text x="43.9242%" y="751.50"></text></g><g><title>parsed::http::parse_http_request (6,891 samples, 1.45%)</title><rect x="42.2499%" y="821" width="1.4454%" height="15" fill="rgb(236,199,50)" fg:x="201424" fg:w="6891"/><text x="42.4999%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (69 samples, 0.01%)</title><rect x="43.7100%" y="757" width="0.0145%" height="15" fill="rgb(211,9,17)" fg:x="208385" fg:w="69"/><text x="43.9600%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (69 samples, 0.01%)</title><rect x="43.7100%" y="741" width="0.0145%" height="15" fill="rgb(243,216,36)" fg:x="208385" fg:w="69"/><text x="43.9600%" y="751.50"></text></g><g><title>cfree (57 samples, 0.01%)</title><rect x="43.7126%" y="725" width="0.0120%" height="15" fill="rgb(250,2,10)" fg:x="208397" fg:w="57"/><text x="43.9626%" y="735.50"></text></g><g><title>parsed::stream::ByteStream::pull (142 samples, 0.03%)</title><rect x="43.6954%" y="821" width="0.0298%" height="15" fill="rgb(226,50,48)" fg:x="208315" fg:w="142"/><text x="43.9454%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (73 samples, 0.02%)</title><rect x="43.7098%" y="805" width="0.0153%" height="15" fill="rgb(243,81,16)" fg:x="208384" fg:w="73"/><text x="43.9598%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (73 samples, 0.02%)</title><rect x="43.7098%" y="789" width="0.0153%" height="15" fill="rgb(250,14,2)" fg:x="208384" fg:w="73"/><text x="43.9598%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.02%)</title><rect x="43.7098%" y="773" width="0.0153%" height="15" fill="rgb(233,135,29)" fg:x="208384" fg:w="73"/><text x="43.9598%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.02%)</title><rect x="43.7270%" y="805" width="0.0159%" height="15" fill="rgb(224,64,43)" fg:x="208466" fg:w="76"/><text x="43.9770%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (387 samples, 0.08%)</title><rect x="43.7430%" y="805" width="0.0812%" height="15" fill="rgb(238,84,13)" fg:x="208542" fg:w="387"/><text x="43.9930%" y="815.50"></text></g><g><title>parsed::stream::ByteStream::put (480 samples, 0.10%)</title><rect x="43.7251%" y="821" width="0.1007%" height="15" fill="rgb(253,48,26)" fg:x="208457" fg:w="480"/><text x="43.9751%" y="831.50"></text></g><g><title>__libc_malloc (205 samples, 0.04%)</title><rect x="43.8313%" y="581" width="0.0430%" height="15" fill="rgb(205,223,31)" fg:x="208963" fg:w="205"/><text x="44.0813%" y="591.50"></text></g><g><title>[libc-2.31.so] (71 samples, 0.01%)</title><rect x="43.8594%" y="565" width="0.0149%" height="15" fill="rgb(221,41,32)" fg:x="209097" fg:w="71"/><text x="44.1094%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (227 samples, 0.05%)</title><rect x="43.8307%" y="677" width="0.0476%" height="15" fill="rgb(213,158,31)" fg:x="208960" fg:w="227"/><text x="44.0807%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (227 samples, 0.05%)</title><rect x="43.8307%" y="661" width="0.0476%" height="15" fill="rgb(245,126,43)" fg:x="208960" fg:w="227"/><text x="44.0807%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (227 samples, 0.05%)</title><rect x="43.8307%" y="645" width="0.0476%" height="15" fill="rgb(227,7,22)" fg:x="208960" fg:w="227"/><text x="44.0807%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (227 samples, 0.05%)</title><rect x="43.8307%" y="629" width="0.0476%" height="15" fill="rgb(252,90,44)" fg:x="208960" fg:w="227"/><text x="44.0807%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (227 samples, 0.05%)</title><rect x="43.8307%" y="613" width="0.0476%" height="15" fill="rgb(253,91,0)" fg:x="208960" fg:w="227"/><text x="44.0807%" y="623.50"></text></g><g><title>alloc::alloc::alloc (226 samples, 0.05%)</title><rect x="43.8309%" y="597" width="0.0474%" height="15" fill="rgb(252,175,49)" fg:x="208961" fg:w="226"/><text x="44.0809%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (230 samples, 0.05%)</title><rect x="43.8307%" y="757" width="0.0482%" height="15" fill="rgb(246,150,1)" fg:x="208960" fg:w="230"/><text x="44.0807%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (230 samples, 0.05%)</title><rect x="43.8307%" y="741" width="0.0482%" height="15" fill="rgb(241,192,25)" fg:x="208960" fg:w="230"/><text x="44.0807%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (230 samples, 0.05%)</title><rect x="43.8307%" y="725" width="0.0482%" height="15" fill="rgb(239,187,11)" fg:x="208960" fg:w="230"/><text x="44.0807%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (230 samples, 0.05%)</title><rect x="43.8307%" y="709" width="0.0482%" height="15" fill="rgb(218,202,51)" fg:x="208960" fg:w="230"/><text x="44.0807%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (230 samples, 0.05%)</title><rect x="43.8307%" y="693" width="0.0482%" height="15" fill="rgb(225,176,8)" fg:x="208960" fg:w="230"/><text x="44.0807%" y="703.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (235 samples, 0.05%)</title><rect x="43.8307%" y="805" width="0.0493%" height="15" fill="rgb(219,122,41)" fg:x="208960" fg:w="235"/><text x="44.0807%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (235 samples, 0.05%)</title><rect x="43.8307%" y="789" width="0.0493%" height="15" fill="rgb(248,140,20)" fg:x="208960" fg:w="235"/><text x="44.0807%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (235 samples, 0.05%)</title><rect x="43.8307%" y="773" width="0.0493%" height="15" fill="rgb(245,41,37)" fg:x="208960" fg:w="235"/><text x="44.0807%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (58 samples, 0.01%)</title><rect x="43.8986%" y="741" width="0.0122%" height="15" fill="rgb(235,82,39)" fg:x="209284" fg:w="58"/><text x="44.1486%" y="751.50"></text></g><g><title>alloc::string::String::push_str (53 samples, 0.01%)</title><rect x="43.8997%" y="725" width="0.0111%" height="15" fill="rgb(230,108,42)" fg:x="209289" fg:w="53"/><text x="44.1497%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (53 samples, 0.01%)</title><rect x="43.8997%" y="709" width="0.0111%" height="15" fill="rgb(215,150,50)" fg:x="209289" fg:w="53"/><text x="44.1497%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (53 samples, 0.01%)</title><rect x="43.8997%" y="693" width="0.0111%" height="15" fill="rgb(233,212,5)" fg:x="209289" fg:w="53"/><text x="44.1497%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (53 samples, 0.01%)</title><rect x="43.8997%" y="677" width="0.0111%" height="15" fill="rgb(245,80,22)" fg:x="209289" fg:w="53"/><text x="44.1497%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad_integral (89 samples, 0.02%)</title><rect x="43.9429%" y="645" width="0.0187%" height="15" fill="rgb(238,129,16)" fg:x="209495" fg:w="89"/><text x="44.1929%" y="655.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (105 samples, 0.02%)</title><rect x="43.9397%" y="677" width="0.0220%" height="15" fill="rgb(240,19,0)" fg:x="209480" fg:w="105"/><text x="44.1897%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (97 samples, 0.02%)</title><rect x="43.9414%" y="661" width="0.0203%" height="15" fill="rgb(232,42,35)" fg:x="209488" fg:w="97"/><text x="44.1914%" y="671.50"></text></g><g><title>core::fmt::run (135 samples, 0.03%)</title><rect x="43.9336%" y="693" width="0.0283%" height="15" fill="rgb(223,130,24)" fg:x="209451" fg:w="135"/><text x="44.1836%" y="703.50"></text></g><g><title>chrono::format::format_inner::write_local_minus_utc (184 samples, 0.04%)</title><rect x="43.9253%" y="725" width="0.0386%" height="15" fill="rgb(237,16,22)" fg:x="209411" fg:w="184"/><text x="44.1753%" y="735.50"></text></g><g><title>core::fmt::write (165 samples, 0.03%)</title><rect x="43.9292%" y="709" width="0.0346%" height="15" fill="rgb(248,192,20)" fg:x="209430" fg:w="165"/><text x="44.1792%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 samples, 0.03%)</title><rect x="43.9813%" y="533" width="0.0258%" height="15" fill="rgb(233,167,2)" fg:x="209678" fg:w="123"/><text x="44.2313%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (118 samples, 0.02%)</title><rect x="43.9823%" y="517" width="0.0248%" height="15" fill="rgb(252,71,44)" fg:x="209683" fg:w="118"/><text x="44.2323%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (118 samples, 0.02%)</title><rect x="43.9823%" y="501" width="0.0248%" height="15" fill="rgb(238,37,47)" fg:x="209683" fg:w="118"/><text x="44.2323%" y="511.50"></text></g><g><title>alloc::alloc::realloc (118 samples, 0.02%)</title><rect x="43.9823%" y="485" width="0.0248%" height="15" fill="rgb(214,202,54)" fg:x="209683" fg:w="118"/><text x="44.2323%" y="495.50"></text></g><g><title>realloc (114 samples, 0.02%)</title><rect x="43.9831%" y="469" width="0.0239%" height="15" fill="rgb(254,165,40)" fg:x="209687" fg:w="114"/><text x="44.2331%" y="479.50"></text></g><g><title>[libc-2.31.so] (66 samples, 0.01%)</title><rect x="43.9932%" y="453" width="0.0138%" height="15" fill="rgb(246,173,38)" fg:x="209735" fg:w="66"/><text x="44.2432%" y="463.50"></text></g><g><title>[libc-2.31.so] (50 samples, 0.01%)</title><rect x="43.9966%" y="437" width="0.0105%" height="15" fill="rgb(215,3,27)" fg:x="209751" fg:w="50"/><text x="44.2466%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (146 samples, 0.03%)</title><rect x="43.9779%" y="597" width="0.0306%" height="15" fill="rgb(239,169,51)" fg:x="209662" fg:w="146"/><text x="44.2279%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (141 samples, 0.03%)</title><rect x="43.9789%" y="581" width="0.0296%" height="15" fill="rgb(212,5,25)" fg:x="209667" fg:w="141"/><text x="44.2289%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (134 samples, 0.03%)</title><rect x="43.9804%" y="565" width="0.0281%" height="15" fill="rgb(243,45,17)" fg:x="209674" fg:w="134"/><text x="44.2304%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (132 samples, 0.03%)</title><rect x="43.9808%" y="549" width="0.0277%" height="15" fill="rgb(242,97,9)" fg:x="209676" fg:w="132"/><text x="44.2308%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (221 samples, 0.05%)</title><rect x="43.9699%" y="693" width="0.0464%" height="15" fill="rgb(228,71,31)" fg:x="209624" fg:w="221"/><text x="44.2199%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (185 samples, 0.04%)</title><rect x="43.9775%" y="677" width="0.0388%" height="15" fill="rgb(252,184,16)" fg:x="209660" fg:w="185"/><text x="44.2275%" y="687.50"></text></g><g><title>alloc::string::String::push_str (185 samples, 0.04%)</title><rect x="43.9775%" y="661" width="0.0388%" height="15" fill="rgb(236,169,46)" fg:x="209660" fg:w="185"/><text x="44.2275%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (185 samples, 0.04%)</title><rect x="43.9775%" y="645" width="0.0388%" height="15" fill="rgb(207,17,47)" fg:x="209660" fg:w="185"/><text x="44.2275%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (185 samples, 0.04%)</title><rect x="43.9775%" y="629" width="0.0388%" height="15" fill="rgb(206,201,28)" fg:x="209660" fg:w="185"/><text x="44.2275%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (185 samples, 0.04%)</title><rect x="43.9775%" y="613" width="0.0388%" height="15" fill="rgb(224,184,23)" fg:x="209660" fg:w="185"/><text x="44.2275%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (110 samples, 0.02%)</title><rect x="44.0398%" y="501" width="0.0231%" height="15" fill="rgb(208,139,48)" fg:x="209957" fg:w="110"/><text x="44.2898%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (110 samples, 0.02%)</title><rect x="44.0398%" y="485" width="0.0231%" height="15" fill="rgb(208,130,10)" fg:x="209957" fg:w="110"/><text x="44.2898%" y="495.50"></text></g><g><title>alloc::alloc::realloc (110 samples, 0.02%)</title><rect x="44.0398%" y="469" width="0.0231%" height="15" fill="rgb(211,213,45)" fg:x="209957" fg:w="110"/><text x="44.2898%" y="479.50"></text></g><g><title>realloc (103 samples, 0.02%)</title><rect x="44.0412%" y="453" width="0.0216%" height="15" fill="rgb(235,100,30)" fg:x="209964" fg:w="103"/><text x="44.2912%" y="463.50"></text></g><g><title>[libc-2.31.so] (113 samples, 0.02%)</title><rect x="44.0725%" y="485" width="0.0237%" height="15" fill="rgb(206,144,31)" fg:x="210113" fg:w="113"/><text x="44.3225%" y="495.50"></text></g><g><title>__libc_malloc (160 samples, 0.03%)</title><rect x="44.0629%" y="501" width="0.0336%" height="15" fill="rgb(224,200,26)" fg:x="210067" fg:w="160"/><text x="44.3129%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (294 samples, 0.06%)</title><rect x="44.0368%" y="517" width="0.0617%" height="15" fill="rgb(247,104,53)" fg:x="209943" fg:w="294"/><text x="44.2868%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (320 samples, 0.07%)</title><rect x="44.0333%" y="581" width="0.0671%" height="15" fill="rgb(220,14,17)" fg:x="209926" fg:w="320"/><text x="44.2833%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (320 samples, 0.07%)</title><rect x="44.0333%" y="565" width="0.0671%" height="15" fill="rgb(230,140,40)" fg:x="209926" fg:w="320"/><text x="44.2833%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (318 samples, 0.07%)</title><rect x="44.0337%" y="549" width="0.0667%" height="15" fill="rgb(229,2,41)" fg:x="209928" fg:w="318"/><text x="44.2837%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (318 samples, 0.07%)</title><rect x="44.0337%" y="533" width="0.0667%" height="15" fill="rgb(232,89,16)" fg:x="209928" fg:w="318"/><text x="44.2837%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (353 samples, 0.07%)</title><rect x="44.0326%" y="677" width="0.0740%" height="15" fill="rgb(247,59,52)" fg:x="209923" fg:w="353"/><text x="44.2826%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (350 samples, 0.07%)</title><rect x="44.0333%" y="661" width="0.0734%" height="15" fill="rgb(226,110,21)" fg:x="209926" fg:w="350"/><text x="44.2833%" y="671.50"></text></g><g><title>alloc::string::String::push_str (350 samples, 0.07%)</title><rect x="44.0333%" y="645" width="0.0734%" height="15" fill="rgb(224,176,43)" fg:x="209926" fg:w="350"/><text x="44.2833%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (350 samples, 0.07%)</title><rect x="44.0333%" y="629" width="0.0734%" height="15" fill="rgb(221,73,6)" fg:x="209926" fg:w="350"/><text x="44.2833%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (350 samples, 0.07%)</title><rect x="44.0333%" y="613" width="0.0734%" height="15" fill="rgb(232,78,19)" fg:x="209926" fg:w="350"/><text x="44.2833%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (350 samples, 0.07%)</title><rect x="44.0333%" y="597" width="0.0734%" height="15" fill="rgb(233,112,48)" fg:x="209926" fg:w="350"/><text x="44.2833%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (63 samples, 0.01%)</title><rect x="44.1130%" y="677" width="0.0132%" height="15" fill="rgb(243,131,47)" fg:x="210306" fg:w="63"/><text x="44.3630%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (56 samples, 0.01%)</title><rect x="44.1145%" y="661" width="0.0117%" height="15" fill="rgb(226,51,1)" fg:x="210313" fg:w="56"/><text x="44.3645%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad_integral (138 samples, 0.03%)</title><rect x="44.1413%" y="645" width="0.0289%" height="15" fill="rgb(247,58,7)" fg:x="210441" fg:w="138"/><text x="44.3913%" y="655.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 samples, 0.05%)</title><rect x="44.1262%" y="677" width="0.0466%" height="15" fill="rgb(209,7,32)" fg:x="210369" fg:w="222"/><text x="44.3762%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (207 samples, 0.04%)</title><rect x="44.1293%" y="661" width="0.0434%" height="15" fill="rgb(209,39,41)" fg:x="210384" fg:w="207"/><text x="44.3793%" y="671.50"></text></g><g><title>core::fmt::run (738 samples, 0.15%)</title><rect x="44.0182%" y="693" width="0.1548%" height="15" fill="rgb(226,182,46)" fg:x="209854" fg:w="738"/><text x="44.2682%" y="703.50"></text></g><g><title>chrono::format::format_inner (1,248 samples, 0.26%)</title><rect x="43.9127%" y="741" width="0.2618%" height="15" fill="rgb(230,219,10)" fg:x="209351" fg:w="1248"/><text x="44.1627%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1,004 samples, 0.21%)</title><rect x="43.9638%" y="725" width="0.2106%" height="15" fill="rgb(227,175,30)" fg:x="209595" fg:w="1004"/><text x="44.2138%" y="735.50"></text></g><g><title>core::fmt::write (1,002 samples, 0.21%)</title><rect x="43.9643%" y="709" width="0.2102%" height="15" fill="rgb(217,2,50)" fg:x="209597" fg:w="1002"/><text x="44.2143%" y="719.50"></text></g><g><title>chrono::format::format (1,370 samples, 0.29%)</title><rect x="43.8980%" y="757" width="0.2874%" height="15" fill="rgb(229,160,0)" fg:x="209281" fg:w="1370"/><text x="44.1480%" y="767.50"></text></g><g><title>&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (1,386 samples, 0.29%)</title><rect x="43.8950%" y="773" width="0.2907%" height="15" fill="rgb(207,78,37)" fg:x="209267" fg:w="1386"/><text x="44.1450%" y="783.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,396 samples, 0.29%)</title><rect x="43.8948%" y="789" width="0.2928%" height="15" fill="rgb(225,57,0)" fg:x="209266" fg:w="1396"/><text x="44.1448%" y="799.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (96 samples, 0.02%)</title><rect x="44.1900%" y="709" width="0.0201%" height="15" fill="rgb(232,154,2)" fg:x="210673" fg:w="96"/><text x="44.4400%" y="719.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (98 samples, 0.02%)</title><rect x="44.1898%" y="725" width="0.0206%" height="15" fill="rgb(241,212,25)" fg:x="210672" fg:w="98"/><text x="44.4398%" y="735.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::naive_local (108 samples, 0.02%)</title><rect x="44.1885%" y="773" width="0.0227%" height="15" fill="rgb(226,69,20)" fg:x="210666" fg:w="108"/><text x="44.4385%" y="783.50"></text></g><g><title>chrono::offset::fixed::&lt;impl core::ops::arith::Add&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::add (102 samples, 0.02%)</title><rect x="44.1898%" y="757" width="0.0214%" height="15" fill="rgb(247,184,54)" fg:x="210672" fg:w="102"/><text x="44.4398%" y="767.50"></text></g><g><title>chrono::offset::fixed::add_with_leapsecond (102 samples, 0.02%)</title><rect x="44.1898%" y="741" width="0.0214%" height="15" fill="rgb(210,145,0)" fg:x="210672" fg:w="102"/><text x="44.4398%" y="751.50"></text></g><g><title>__libc_malloc (49 samples, 0.01%)</title><rect x="44.2281%" y="533" width="0.0103%" height="15" fill="rgb(253,82,12)" fg:x="210855" fg:w="49"/><text x="44.4781%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (64 samples, 0.01%)</title><rect x="44.2269%" y="549" width="0.0134%" height="15" fill="rgb(245,42,11)" fg:x="210849" fg:w="64"/><text x="44.4769%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (85 samples, 0.02%)</title><rect x="44.2242%" y="613" width="0.0178%" height="15" fill="rgb(219,147,32)" fg:x="210836" fg:w="85"/><text x="44.4742%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (83 samples, 0.02%)</title><rect x="44.2246%" y="597" width="0.0174%" height="15" fill="rgb(246,12,7)" fg:x="210838" fg:w="83"/><text x="44.4746%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (83 samples, 0.02%)</title><rect x="44.2246%" y="581" width="0.0174%" height="15" fill="rgb(243,50,9)" fg:x="210838" fg:w="83"/><text x="44.4746%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (80 samples, 0.02%)</title><rect x="44.2252%" y="565" width="0.0168%" height="15" fill="rgb(219,149,6)" fg:x="210841" fg:w="80"/><text x="44.4752%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (107 samples, 0.02%)</title><rect x="44.2235%" y="693" width="0.0224%" height="15" fill="rgb(241,51,42)" fg:x="210833" fg:w="107"/><text x="44.4735%" y="703.50"></text></g><g><title>alloc::string::String::push_str (105 samples, 0.02%)</title><rect x="44.2239%" y="677" width="0.0220%" height="15" fill="rgb(226,128,27)" fg:x="210835" fg:w="105"/><text x="44.4739%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (105 samples, 0.02%)</title><rect x="44.2239%" y="661" width="0.0220%" height="15" fill="rgb(244,144,4)" fg:x="210835" fg:w="105"/><text x="44.4739%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (105 samples, 0.02%)</title><rect x="44.2239%" y="645" width="0.0220%" height="15" fill="rgb(221,4,13)" fg:x="210835" fg:w="105"/><text x="44.4739%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (105 samples, 0.02%)</title><rect x="44.2239%" y="629" width="0.0220%" height="15" fill="rgb(208,170,28)" fg:x="210835" fg:w="105"/><text x="44.4739%" y="639.50"></text></g><g><title>&lt;chrono::offset::utc::Utc as core::fmt::Display&gt;::fmt (155 samples, 0.03%)</title><rect x="44.2139%" y="741" width="0.0325%" height="15" fill="rgb(226,131,13)" fg:x="210787" fg:w="155"/><text x="44.4639%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (148 samples, 0.03%)</title><rect x="44.2153%" y="725" width="0.0310%" height="15" fill="rgb(215,72,41)" fg:x="210794" fg:w="148"/><text x="44.4653%" y="735.50"></text></g><g><title>core::fmt::write (135 samples, 0.03%)</title><rect x="44.2181%" y="709" width="0.0283%" height="15" fill="rgb(243,108,20)" fg:x="210807" fg:w="135"/><text x="44.4681%" y="719.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (162 samples, 0.03%)</title><rect x="44.2139%" y="757" width="0.0340%" height="15" fill="rgb(230,189,17)" fg:x="210787" fg:w="162"/><text x="44.4639%" y="767.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::format_with_items (288 samples, 0.06%)</title><rect x="44.1877%" y="789" width="0.0604%" height="15" fill="rgb(220,50,17)" fg:x="210662" fg:w="288"/><text x="44.4377%" y="799.50"></text></g><g><title>chrono::format::DelayedFormat&lt;I&gt;::new_with_offset (176 samples, 0.04%)</title><rect x="44.2111%" y="773" width="0.0369%" height="15" fill="rgb(248,152,48)" fg:x="210774" fg:w="176"/><text x="44.4611%" y="783.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::to_rfc2822 (1,742 samples, 0.37%)</title><rect x="43.8925%" y="805" width="0.3654%" height="15" fill="rgb(244,91,11)" fg:x="209255" fg:w="1742"/><text x="44.1425%" y="815.50"></text></g><g><title>chrono::offset::utc::Utc::now (231 samples, 0.05%)</title><rect x="44.2579%" y="805" width="0.0485%" height="15" fill="rgb(220,157,5)" fg:x="210997" fg:w="231"/><text x="44.5079%" y="815.50"></text></g><g><title>std::time::SystemTime::now (144 samples, 0.03%)</title><rect x="44.2762%" y="789" width="0.0302%" height="15" fill="rgb(253,137,8)" fg:x="211084" fg:w="144"/><text x="44.5262%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (144 samples, 0.03%)</title><rect x="44.2762%" y="773" width="0.0302%" height="15" fill="rgb(217,137,51)" fg:x="211084" fg:w="144"/><text x="44.5262%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::now (144 samples, 0.03%)</title><rect x="44.2762%" y="757" width="0.0302%" height="15" fill="rgb(218,209,53)" fg:x="211084" fg:w="144"/><text x="44.5262%" y="767.50"></text></g><g><title>__clock_gettime (130 samples, 0.03%)</title><rect x="44.2791%" y="741" width="0.0273%" height="15" fill="rgb(249,137,25)" fg:x="211098" fg:w="130"/><text x="44.5291%" y="751.50"></text></g><g><title>__vdso_clock_gettime (99 samples, 0.02%)</title><rect x="44.2856%" y="725" width="0.0208%" height="15" fill="rgb(239,155,26)" fg:x="211129" fg:w="99"/><text x="44.5356%" y="735.50"></text></g><g><title>[[vdso]] (85 samples, 0.02%)</title><rect x="44.2885%" y="709" width="0.0178%" height="15" fill="rgb(227,85,46)" fg:x="211143" fg:w="85"/><text x="44.5385%" y="719.50"></text></g><g><title>[libc-2.31.so] (48 samples, 0.01%)</title><rect x="44.3081%" y="693" width="0.0101%" height="15" fill="rgb(251,107,43)" fg:x="211236" fg:w="48"/><text x="44.5581%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (95 samples, 0.02%)</title><rect x="44.3074%" y="725" width="0.0199%" height="15" fill="rgb(234,170,33)" fg:x="211233" fg:w="95"/><text x="44.5574%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (95 samples, 0.02%)</title><rect x="44.3074%" y="709" width="0.0199%" height="15" fill="rgb(206,29,35)" fg:x="211233" fg:w="95"/><text x="44.5574%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (97 samples, 0.02%)</title><rect x="44.3072%" y="789" width="0.0203%" height="15" fill="rgb(227,138,25)" fg:x="211232" fg:w="97"/><text x="44.5572%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (97 samples, 0.02%)</title><rect x="44.3072%" y="773" width="0.0203%" height="15" fill="rgb(249,131,35)" fg:x="211232" fg:w="97"/><text x="44.5572%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (97 samples, 0.02%)</title><rect x="44.3072%" y="757" width="0.0203%" height="15" fill="rgb(239,6,40)" fg:x="211232" fg:w="97"/><text x="44.5572%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.02%)</title><rect x="44.3072%" y="741" width="0.0203%" height="15" fill="rgb(246,136,47)" fg:x="211232" fg:w="97"/><text x="44.5572%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (72 samples, 0.02%)</title><rect x="44.3280%" y="661" width="0.0151%" height="15" fill="rgb(253,58,26)" fg:x="211331" fg:w="72"/><text x="44.5780%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (72 samples, 0.02%)</title><rect x="44.3280%" y="645" width="0.0151%" height="15" fill="rgb(237,141,10)" fg:x="211331" fg:w="72"/><text x="44.5780%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.02%)</title><rect x="44.3276%" y="773" width="0.0159%" height="15" fill="rgb(234,156,12)" fg:x="211329" fg:w="76"/><text x="44.5776%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[parsed::http::Header]&gt; (76 samples, 0.02%)</title><rect x="44.3276%" y="757" width="0.0159%" height="15" fill="rgb(243,224,36)" fg:x="211329" fg:w="76"/><text x="44.5776%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Header&gt; (75 samples, 0.02%)</title><rect x="44.3278%" y="741" width="0.0157%" height="15" fill="rgb(205,229,51)" fg:x="211330" fg:w="75"/><text x="44.5778%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (75 samples, 0.02%)</title><rect x="44.3278%" y="725" width="0.0157%" height="15" fill="rgb(223,189,4)" fg:x="211330" fg:w="75"/><text x="44.5778%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (75 samples, 0.02%)</title><rect x="44.3278%" y="709" width="0.0157%" height="15" fill="rgb(249,167,54)" fg:x="211330" fg:w="75"/><text x="44.5778%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (75 samples, 0.02%)</title><rect x="44.3278%" y="693" width="0.0157%" height="15" fill="rgb(218,34,28)" fg:x="211330" fg:w="75"/><text x="44.5778%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.02%)</title><rect x="44.3278%" y="677" width="0.0157%" height="15" fill="rgb(232,109,42)" fg:x="211330" fg:w="75"/><text x="44.5778%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;parsed::http::Header&gt;&gt; (101 samples, 0.02%)</title><rect x="44.3276%" y="789" width="0.0212%" height="15" fill="rgb(248,214,46)" fg:x="211329" fg:w="101"/><text x="44.5776%" y="799.50"></text></g><g><title>uppercut_mio_server::protocol::process (12,558 samples, 2.63%)</title><rect x="41.7151%" y="837" width="2.6341%" height="15" fill="rgb(244,216,40)" fg:x="198874" fg:w="12558"/><text x="41.9651%" y="847.50">up..</text></g><g><title>uppercut_mio_server::protocol::handle (2,495 samples, 0.52%)</title><rect x="43.8258%" y="821" width="0.5233%" height="15" fill="rgb(231,226,31)" fg:x="208937" fg:w="2495"/><text x="44.0758%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Request&gt; (204 samples, 0.04%)</title><rect x="44.3064%" y="805" width="0.0428%" height="15" fill="rgb(238,38,43)" fg:x="211228" fg:w="204"/><text x="44.5564%" y="815.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (24,066 samples, 5.05%)</title><rect x="39.3022%" y="853" width="5.0480%" height="15" fill="rgb(208,88,43)" fg:x="187371" fg:w="24066"/><text x="39.5522%" y="863.50">&lt;upper..</text></g><g><title>__libc_malloc (56 samples, 0.01%)</title><rect x="44.3626%" y="597" width="0.0117%" height="15" fill="rgb(205,136,37)" fg:x="211496" fg:w="56"/><text x="44.6126%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (61 samples, 0.01%)</title><rect x="44.3624%" y="693" width="0.0128%" height="15" fill="rgb(237,34,14)" fg:x="211495" fg:w="61"/><text x="44.6124%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (61 samples, 0.01%)</title><rect x="44.3624%" y="677" width="0.0128%" height="15" fill="rgb(236,193,44)" fg:x="211495" fg:w="61"/><text x="44.6124%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (61 samples, 0.01%)</title><rect x="44.3624%" y="661" width="0.0128%" height="15" fill="rgb(231,48,10)" fg:x="211495" fg:w="61"/><text x="44.6124%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (61 samples, 0.01%)</title><rect x="44.3624%" y="645" width="0.0128%" height="15" fill="rgb(213,141,34)" fg:x="211495" fg:w="61"/><text x="44.6124%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (61 samples, 0.01%)</title><rect x="44.3624%" y="629" width="0.0128%" height="15" fill="rgb(249,130,34)" fg:x="211495" fg:w="61"/><text x="44.6124%" y="639.50"></text></g><g><title>alloc::alloc::alloc (61 samples, 0.01%)</title><rect x="44.3624%" y="613" width="0.0128%" height="15" fill="rgb(219,42,41)" fg:x="211495" fg:w="61"/><text x="44.6124%" y="623.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (70 samples, 0.01%)</title><rect x="44.3624%" y="821" width="0.0147%" height="15" fill="rgb(224,100,54)" fg:x="211495" fg:w="70"/><text x="44.6124%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (70 samples, 0.01%)</title><rect x="44.3624%" y="805" width="0.0147%" height="15" fill="rgb(229,200,27)" fg:x="211495" fg:w="70"/><text x="44.6124%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (70 samples, 0.01%)</title><rect x="44.3624%" y="789" width="0.0147%" height="15" fill="rgb(217,118,10)" fg:x="211495" fg:w="70"/><text x="44.6124%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (70 samples, 0.01%)</title><rect x="44.3624%" y="773" width="0.0147%" height="15" fill="rgb(206,22,3)" fg:x="211495" fg:w="70"/><text x="44.6124%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (70 samples, 0.01%)</title><rect x="44.3624%" y="757" width="0.0147%" height="15" fill="rgb(232,163,46)" fg:x="211495" fg:w="70"/><text x="44.6124%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (70 samples, 0.01%)</title><rect x="44.3624%" y="741" width="0.0147%" height="15" fill="rgb(206,95,13)" fg:x="211495" fg:w="70"/><text x="44.6124%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (70 samples, 0.01%)</title><rect x="44.3624%" y="725" width="0.0147%" height="15" fill="rgb(253,154,18)" fg:x="211495" fg:w="70"/><text x="44.6124%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (70 samples, 0.01%)</title><rect x="44.3624%" y="709" width="0.0147%" height="15" fill="rgb(219,32,23)" fg:x="211495" fg:w="70"/><text x="44.6124%" y="719.50"></text></g><g><title>__libc_malloc (76 samples, 0.02%)</title><rect x="44.4058%" y="693" width="0.0159%" height="15" fill="rgb(230,191,45)" fg:x="211702" fg:w="76"/><text x="44.6558%" y="703.50"></text></g><g><title>[libc-2.31.so] (70 samples, 0.01%)</title><rect x="44.4071%" y="677" width="0.0147%" height="15" fill="rgb(229,64,36)" fg:x="211708" fg:w="70"/><text x="44.6571%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (89 samples, 0.02%)</title><rect x="44.4035%" y="773" width="0.0187%" height="15" fill="rgb(205,129,25)" fg:x="211691" fg:w="89"/><text x="44.6535%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (78 samples, 0.02%)</title><rect x="44.4058%" y="757" width="0.0164%" height="15" fill="rgb(254,112,7)" fg:x="211702" fg:w="78"/><text x="44.6558%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (78 samples, 0.02%)</title><rect x="44.4058%" y="741" width="0.0164%" height="15" fill="rgb(226,53,48)" fg:x="211702" fg:w="78"/><text x="44.6558%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (78 samples, 0.02%)</title><rect x="44.4058%" y="725" width="0.0164%" height="15" fill="rgb(214,153,38)" fg:x="211702" fg:w="78"/><text x="44.6558%" y="735.50"></text></g><g><title>alloc::alloc::alloc (78 samples, 0.02%)</title><rect x="44.4058%" y="709" width="0.0164%" height="15" fill="rgb(243,101,7)" fg:x="211702" fg:w="78"/><text x="44.6558%" y="719.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (212 samples, 0.04%)</title><rect x="44.3840%" y="789" width="0.0445%" height="15" fill="rgb(240,140,22)" fg:x="211598" fg:w="212"/><text x="44.6340%" y="799.50"></text></g><g><title>__sched_yield (66 samples, 0.01%)</title><rect x="44.4473%" y="725" width="0.0138%" height="15" fill="rgb(235,114,2)" fg:x="211900" fg:w="66"/><text x="44.6973%" y="735.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (85 samples, 0.02%)</title><rect x="44.4465%" y="757" width="0.0178%" height="15" fill="rgb(242,59,12)" fg:x="211896" fg:w="85"/><text x="44.6965%" y="767.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (81 samples, 0.02%)</title><rect x="44.4473%" y="741" width="0.0170%" height="15" fill="rgb(252,134,9)" fg:x="211900" fg:w="81"/><text x="44.6973%" y="751.50"></text></g><g><title>futex_wake (148 samples, 0.03%)</title><rect x="44.4777%" y="581" width="0.0310%" height="15" fill="rgb(236,4,44)" fg:x="212045" fg:w="148"/><text x="44.7277%" y="591.50"></text></g><g><title>wake_up_q (129 samples, 0.03%)</title><rect x="44.4817%" y="565" width="0.0271%" height="15" fill="rgb(254,172,41)" fg:x="212064" fg:w="129"/><text x="44.7317%" y="575.50"></text></g><g><title>try_to_wake_up (128 samples, 0.03%)</title><rect x="44.4819%" y="549" width="0.0268%" height="15" fill="rgb(244,63,20)" fg:x="212065" fg:w="128"/><text x="44.7319%" y="559.50"></text></g><g><title>__lock_text_start (128 samples, 0.03%)</title><rect x="44.4819%" y="533" width="0.0268%" height="15" fill="rgb(250,73,31)" fg:x="212065" fg:w="128"/><text x="44.7319%" y="543.50"></text></g><g><title>do_futex (155 samples, 0.03%)</title><rect x="44.4767%" y="597" width="0.0325%" height="15" fill="rgb(241,38,36)" fg:x="212040" fg:w="155"/><text x="44.7267%" y="607.50"></text></g><g><title>__x64_sys_futex (159 samples, 0.03%)</title><rect x="44.4763%" y="613" width="0.0334%" height="15" fill="rgb(245,211,2)" fg:x="212038" fg:w="159"/><text x="44.7263%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (215 samples, 0.05%)</title><rect x="44.4650%" y="741" width="0.0451%" height="15" fill="rgb(206,120,28)" fg:x="211984" fg:w="215"/><text x="44.7150%" y="751.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (215 samples, 0.05%)</title><rect x="44.4650%" y="725" width="0.0451%" height="15" fill="rgb(211,59,34)" fg:x="211984" fg:w="215"/><text x="44.7150%" y="735.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (199 samples, 0.04%)</title><rect x="44.4683%" y="709" width="0.0417%" height="15" fill="rgb(233,168,5)" fg:x="212000" fg:w="199"/><text x="44.7183%" y="719.50"></text></g><g><title>std::thread::Thread::unpark (199 samples, 0.04%)</title><rect x="44.4683%" y="693" width="0.0417%" height="15" fill="rgb(234,33,13)" fg:x="212000" fg:w="199"/><text x="44.7183%" y="703.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (199 samples, 0.04%)</title><rect x="44.4683%" y="677" width="0.0417%" height="15" fill="rgb(231,150,26)" fg:x="212000" fg:w="199"/><text x="44.7183%" y="687.50"></text></g><g><title>syscall (194 samples, 0.04%)</title><rect x="44.4694%" y="661" width="0.0407%" height="15" fill="rgb(217,191,4)" fg:x="212005" fg:w="194"/><text x="44.7194%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (174 samples, 0.04%)</title><rect x="44.4736%" y="645" width="0.0365%" height="15" fill="rgb(246,198,38)" fg:x="212025" fg:w="174"/><text x="44.7236%" y="655.50"></text></g><g><title>do_syscall_64 (170 samples, 0.04%)</title><rect x="44.4744%" y="629" width="0.0357%" height="15" fill="rgb(245,64,37)" fg:x="212029" fg:w="170"/><text x="44.7244%" y="639.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (637 samples, 0.13%)</title><rect x="44.3773%" y="821" width="0.1336%" height="15" fill="rgb(250,30,36)" fg:x="211566" fg:w="637"/><text x="44.6273%" y="831.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (619 samples, 0.13%)</title><rect x="44.3811%" y="805" width="0.1298%" height="15" fill="rgb(217,86,53)" fg:x="211584" fg:w="619"/><text x="44.6311%" y="815.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (393 samples, 0.08%)</title><rect x="44.4285%" y="789" width="0.0824%" height="15" fill="rgb(228,157,16)" fg:x="211810" fg:w="393"/><text x="44.6785%" y="799.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (313 samples, 0.07%)</title><rect x="44.4452%" y="773" width="0.0657%" height="15" fill="rgb(217,59,31)" fg:x="211890" fg:w="313"/><text x="44.6952%" y="783.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (219 samples, 0.05%)</title><rect x="44.4650%" y="757" width="0.0459%" height="15" fill="rgb(237,138,41)" fg:x="211984" fg:w="219"/><text x="44.7150%" y="767.50"></text></g><g><title>&lt;uppercut::core::Local as uppercut::api::AnySender&gt;::send (759 samples, 0.16%)</title><rect x="44.3565%" y="837" width="0.1592%" height="15" fill="rgb(227,91,49)" fg:x="211467" fg:w="759"/><text x="44.6065%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (58 samples, 0.01%)</title><rect x="44.5277%" y="661" width="0.0122%" height="15" fill="rgb(247,21,44)" fg:x="212283" fg:w="58"/><text x="44.7777%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (58 samples, 0.01%)</title><rect x="44.5277%" y="645" width="0.0122%" height="15" fill="rgb(219,210,51)" fg:x="212283" fg:w="58"/><text x="44.7777%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (56 samples, 0.01%)</title><rect x="44.5281%" y="629" width="0.0117%" height="15" fill="rgb(209,140,6)" fg:x="212285" fg:w="56"/><text x="44.7781%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (56 samples, 0.01%)</title><rect x="44.5281%" y="613" width="0.0117%" height="15" fill="rgb(221,188,24)" fg:x="212285" fg:w="56"/><text x="44.7781%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (72 samples, 0.02%)</title><rect x="44.5260%" y="757" width="0.0151%" height="15" fill="rgb(232,154,20)" fg:x="212275" fg:w="72"/><text x="44.7760%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (65 samples, 0.01%)</title><rect x="44.5275%" y="741" width="0.0136%" height="15" fill="rgb(244,137,50)" fg:x="212282" fg:w="65"/><text x="44.7775%" y="751.50"></text></g><g><title>alloc::string::String::push_str (65 samples, 0.01%)</title><rect x="44.5275%" y="725" width="0.0136%" height="15" fill="rgb(225,185,43)" fg:x="212282" fg:w="65"/><text x="44.7775%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (65 samples, 0.01%)</title><rect x="44.5275%" y="709" width="0.0136%" height="15" fill="rgb(213,205,38)" fg:x="212282" fg:w="65"/><text x="44.7775%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (65 samples, 0.01%)</title><rect x="44.5275%" y="693" width="0.0136%" height="15" fill="rgb(236,73,12)" fg:x="212282" fg:w="65"/><text x="44.7775%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (65 samples, 0.01%)</title><rect x="44.5275%" y="677" width="0.0136%" height="15" fill="rgb(235,219,13)" fg:x="212282" fg:w="65"/><text x="44.7775%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (109 samples, 0.02%)</title><rect x="44.5233%" y="789" width="0.0229%" height="15" fill="rgb(218,59,36)" fg:x="212262" fg:w="109"/><text x="44.7733%" y="799.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (106 samples, 0.02%)</title><rect x="44.5239%" y="773" width="0.0222%" height="15" fill="rgb(205,110,39)" fg:x="212265" fg:w="106"/><text x="44.7739%" y="783.50"></text></g><g><title>alloc::fmt::format (149 samples, 0.03%)</title><rect x="44.5159%" y="837" width="0.0313%" height="15" fill="rgb(218,206,42)" fg:x="212227" fg:w="149"/><text x="44.7659%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (130 samples, 0.03%)</title><rect x="44.5199%" y="821" width="0.0273%" height="15" fill="rgb(248,125,24)" fg:x="212246" fg:w="130"/><text x="44.7699%" y="831.50"></text></g><g><title>core::fmt::write (127 samples, 0.03%)</title><rect x="44.5205%" y="805" width="0.0266%" height="15" fill="rgb(242,28,27)" fg:x="212249" fg:w="127"/><text x="44.7705%" y="815.50"></text></g><g><title>tcp_poll (88 samples, 0.02%)</title><rect x="44.7167%" y="645" width="0.0185%" height="15" fill="rgb(216,228,15)" fg:x="213184" fg:w="88"/><text x="44.9667%" y="655.50"></text></g><g><title>sock_poll (268 samples, 0.06%)</title><rect x="44.6877%" y="661" width="0.0562%" height="15" fill="rgb(235,116,46)" fg:x="213046" fg:w="268"/><text x="44.9377%" y="671.50"></text></g><g><title>ep_item_poll.isra.0 (351 samples, 0.07%)</title><rect x="44.6716%" y="677" width="0.0736%" height="15" fill="rgb(224,18,32)" fg:x="212969" fg:w="351"/><text x="44.9216%" y="687.50"></text></g><g><title>ep_send_events_proc (459 samples, 0.10%)</title><rect x="44.6529%" y="693" width="0.0963%" height="15" fill="rgb(252,5,12)" fg:x="212880" fg:w="459"/><text x="44.9029%" y="703.50"></text></g><g><title>ep_scan_ready_list.constprop.0 (539 samples, 0.11%)</title><rect x="44.6432%" y="709" width="0.1131%" height="15" fill="rgb(251,36,5)" fg:x="212834" fg:w="539"/><text x="44.8932%" y="719.50"></text></g><g><title>ep_poll (969 samples, 0.20%)</title><rect x="44.6319%" y="725" width="0.2033%" height="15" fill="rgb(217,53,14)" fg:x="212780" fg:w="969"/><text x="44.8819%" y="735.50"></text></g><g><title>schedule_hrtimeout_range (367 samples, 0.08%)</title><rect x="44.7582%" y="709" width="0.0770%" height="15" fill="rgb(215,86,45)" fg:x="213382" fg:w="367"/><text x="45.0082%" y="719.50"></text></g><g><title>schedule_hrtimeout_range_clock (366 samples, 0.08%)</title><rect x="44.7584%" y="693" width="0.0768%" height="15" fill="rgb(242,169,11)" fg:x="213383" fg:w="366"/><text x="45.0084%" y="703.50"></text></g><g><title>schedule (364 samples, 0.08%)</title><rect x="44.7588%" y="677" width="0.0764%" height="15" fill="rgb(211,213,45)" fg:x="213385" fg:w="364"/><text x="45.0088%" y="687.50"></text></g><g><title>__schedule (363 samples, 0.08%)</title><rect x="44.7590%" y="661" width="0.0761%" height="15" fill="rgb(205,88,11)" fg:x="213386" fg:w="363"/><text x="45.0090%" y="671.50"></text></g><g><title>finish_task_switch (357 samples, 0.07%)</title><rect x="44.7603%" y="645" width="0.0749%" height="15" fill="rgb(252,69,26)" fg:x="213392" fg:w="357"/><text x="45.0103%" y="655.50"></text></g><g><title>__x64_sys_epoll_wait (1,039 samples, 0.22%)</title><rect x="44.6191%" y="757" width="0.2179%" height="15" fill="rgb(246,123,37)" fg:x="212719" fg:w="1039"/><text x="44.8691%" y="767.50"></text></g><g><title>do_epoll_wait (1,035 samples, 0.22%)</title><rect x="44.6200%" y="741" width="0.2171%" height="15" fill="rgb(212,205,5)" fg:x="212723" fg:w="1035"/><text x="44.8700%" y="751.50"></text></g><g><title>mio::poll::Poll::poll (1,345 samples, 0.28%)</title><rect x="44.5551%" y="837" width="0.2821%" height="15" fill="rgb(253,148,0)" fg:x="212414" fg:w="1345"/><text x="44.8051%" y="847.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1,340 samples, 0.28%)</title><rect x="44.5562%" y="821" width="0.2811%" height="15" fill="rgb(239,22,4)" fg:x="212419" fg:w="1340"/><text x="44.8062%" y="831.50"></text></g><g><title>epoll_wait (1,311 samples, 0.27%)</title><rect x="44.5623%" y="805" width="0.2750%" height="15" fill="rgb(226,26,53)" fg:x="212448" fg:w="1311"/><text x="44.8123%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,115 samples, 0.23%)</title><rect x="44.6034%" y="789" width="0.2339%" height="15" fill="rgb(225,229,45)" fg:x="212644" fg:w="1115"/><text x="44.8534%" y="799.50"></text></g><g><title>do_syscall_64 (1,107 samples, 0.23%)</title><rect x="44.6051%" y="773" width="0.2322%" height="15" fill="rgb(220,60,37)" fg:x="212652" fg:w="1107"/><text x="44.8551%" y="783.50"></text></g><g><title>__libc_malloc (77 samples, 0.02%)</title><rect x="44.8379%" y="741" width="0.0162%" height="15" fill="rgb(217,180,35)" fg:x="213762" fg:w="77"/><text x="45.0879%" y="751.50"></text></g><g><title>std::panic::catch_unwind (26,471 samples, 5.55%)</title><rect x="39.3018%" y="933" width="5.5525%" height="15" fill="rgb(229,7,53)" fg:x="187369" fg:w="26471"/><text x="39.5518%" y="943.50">std::pa..</text></g><g><title>std::panicking::try (26,471 samples, 5.55%)</title><rect x="39.3018%" y="917" width="5.5525%" height="15" fill="rgb(254,137,3)" fg:x="187369" fg:w="26471"/><text x="39.5518%" y="927.50">std::pa..</text></g><g><title>std::panicking::try::do_call (26,471 samples, 5.55%)</title><rect x="39.3018%" y="901" width="5.5525%" height="15" fill="rgb(215,140,41)" fg:x="187369" fg:w="26471"/><text x="39.5518%" y="911.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26,471 samples, 5.55%)</title><rect x="39.3018%" y="885" width="5.5525%" height="15" fill="rgb(250,80,15)" fg:x="187369" fg:w="26471"/><text x="39.5518%" y="895.50">&lt;core::..</text></g><g><title>uppercut::core::worker_loop::{{closure}} (26,471 samples, 5.55%)</title><rect x="39.3018%" y="869" width="5.5525%" height="15" fill="rgb(252,191,6)" fg:x="187369" fg:w="26471"/><text x="39.5518%" y="879.50">uppercu..</text></g><g><title>&lt;uppercut_mio_server::server::Listener as uppercut::api::AnyActor&gt;::receive (2,403 samples, 0.50%)</title><rect x="44.3502%" y="853" width="0.5040%" height="15" fill="rgb(246,217,18)" fg:x="211437" fg:w="2403"/><text x="44.6002%" y="863.50"></text></g><g><title>uppercut::api::Envelope::of (81 samples, 0.02%)</title><rect x="44.8373%" y="837" width="0.0170%" height="15" fill="rgb(223,93,7)" fg:x="213759" fg:w="81"/><text x="45.0873%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (79 samples, 0.02%)</title><rect x="44.8377%" y="821" width="0.0166%" height="15" fill="rgb(225,55,52)" fg:x="213761" fg:w="79"/><text x="45.0877%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (79 samples, 0.02%)</title><rect x="44.8377%" y="805" width="0.0166%" height="15" fill="rgb(240,31,24)" fg:x="213761" fg:w="79"/><text x="45.0877%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (79 samples, 0.02%)</title><rect x="44.8377%" y="789" width="0.0166%" height="15" fill="rgb(205,56,52)" fg:x="213761" fg:w="79"/><text x="45.0877%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (79 samples, 0.02%)</title><rect x="44.8377%" y="773" width="0.0166%" height="15" fill="rgb(246,146,12)" fg:x="213761" fg:w="79"/><text x="45.0877%" y="783.50"></text></g><g><title>alloc::alloc::alloc (79 samples, 0.02%)</title><rect x="44.8377%" y="757" width="0.0166%" height="15" fill="rgb(239,84,36)" fg:x="213761" fg:w="79"/><text x="45.0877%" y="767.50"></text></g><g><title>worker-2 (70,290 samples, 14.74%)</title><rect x="30.1111%" y="1285" width="14.7438%" height="15" fill="rgb(207,41,40)" fg:x="143553" fg:w="70290"/><text x="30.3611%" y="1295.50">worker-2</text></g><g><title>clone (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1269" width="14.3119%" height="15" fill="rgb(241,179,25)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1279.50">clone</text></g><g><title>start_thread (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1253" width="14.3119%" height="15" fill="rgb(210,0,34)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1263.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1237" width="14.3119%" height="15" fill="rgb(225,217,29)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1247.50">std::sys::unix::thread..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1221" width="14.3119%" height="15" fill="rgb(216,191,38)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1231.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1205" width="14.3119%" height="15" fill="rgb(232,140,52)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1215.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1189" width="14.3119%" height="15" fill="rgb(223,158,51)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1199.50">core::ops::function::F..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1173" width="14.3119%" height="15" fill="rgb(235,29,51)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1183.50">std::thread::Builder::..</text></g><g><title>std::panic::catch_unwind (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1157" width="14.3119%" height="15" fill="rgb(215,181,18)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1167.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1141" width="14.3119%" height="15" fill="rgb(227,125,34)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1151.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1125" width="14.3119%" height="15" fill="rgb(230,197,49)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1135.50">std::panicking::try::d..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1109" width="14.3119%" height="15" fill="rgb(239,141,16)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1119.50">&lt;core::panic::unwind_s..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1093" width="14.3119%" height="15" fill="rgb(225,105,43)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1103.50">std::thread::Builder::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1077" width="14.3119%" height="15" fill="rgb(214,131,14)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1087.50">std::sys_common::backt..</text></g><g><title>uppercut::pool::Worker::new::{{closure}} (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1061" width="14.3119%" height="15" fill="rgb(229,177,11)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1071.50">uppercut::pool::Worker..</text></g><g><title>std::panic::catch_unwind (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1045" width="14.3119%" height="15" fill="rgb(231,180,14)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1055.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1029" width="14.3119%" height="15" fill="rgb(232,88,2)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (68,231 samples, 14.31%)</title><rect x="30.5430%" y="1013" width="14.3119%" height="15" fill="rgb(205,220,8)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1023.50">std::panicking::try::d..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (68,231 samples, 14.31%)</title><rect x="30.5430%" y="997" width="14.3119%" height="15" fill="rgb(225,23,53)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="1007.50">&lt;core::panic::unwind_s..</text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (68,231 samples, 14.31%)</title><rect x="30.5430%" y="981" width="14.3119%" height="15" fill="rgb(213,62,29)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="991.50">uppercut::pool::Worker..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68,231 samples, 14.31%)</title><rect x="30.5430%" y="965" width="14.3119%" height="15" fill="rgb(227,75,7)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="975.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>uppercut::core::worker_loop (68,231 samples, 14.31%)</title><rect x="30.5430%" y="949" width="14.3119%" height="15" fill="rgb(207,105,14)" fg:x="145612" fg:w="68231"/><text x="30.7930%" y="959.50">uppercut::core::worker..</text></g><g><title>__libc_malloc (94 samples, 0.02%)</title><rect x="44.8606%" y="757" width="0.0197%" height="15" fill="rgb(245,62,29)" fg:x="213870" fg:w="94"/><text x="45.1106%" y="767.50"></text></g><g><title>alloc::alloc::alloc (101 samples, 0.02%)</title><rect x="44.8606%" y="773" width="0.0212%" height="15" fill="rgb(236,202,4)" fg:x="213870" fg:w="101"/><text x="45.1106%" y="783.50"></text></g><g><title>alloc::string::String::with_capacity (102 samples, 0.02%)</title><rect x="44.8606%" y="885" width="0.0214%" height="15" fill="rgb(250,67,1)" fg:x="213870" fg:w="102"/><text x="45.1106%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (102 samples, 0.02%)</title><rect x="44.8606%" y="869" width="0.0214%" height="15" fill="rgb(253,115,44)" fg:x="213870" fg:w="102"/><text x="45.1106%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (102 samples, 0.02%)</title><rect x="44.8606%" y="853" width="0.0214%" height="15" fill="rgb(251,139,18)" fg:x="213870" fg:w="102"/><text x="45.1106%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (102 samples, 0.02%)</title><rect x="44.8606%" y="837" width="0.0214%" height="15" fill="rgb(218,22,32)" fg:x="213870" fg:w="102"/><text x="45.1106%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (102 samples, 0.02%)</title><rect x="44.8606%" y="821" width="0.0214%" height="15" fill="rgb(243,53,5)" fg:x="213870" fg:w="102"/><text x="45.1106%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (102 samples, 0.02%)</title><rect x="44.8606%" y="805" width="0.0214%" height="15" fill="rgb(227,56,16)" fg:x="213870" fg:w="102"/><text x="45.1106%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (102 samples, 0.02%)</title><rect x="44.8606%" y="789" width="0.0214%" height="15" fill="rgb(245,53,0)" fg:x="213870" fg:w="102"/><text x="45.1106%" y="799.50"></text></g><g><title>core::fmt::write (88 samples, 0.02%)</title><rect x="44.8838%" y="869" width="0.0185%" height="15" fill="rgb(216,170,35)" fg:x="213981" fg:w="88"/><text x="45.1338%" y="879.50"></text></g><g><title>core::fmt::Write::write_fmt (90 samples, 0.02%)</title><rect x="44.8836%" y="885" width="0.0189%" height="15" fill="rgb(211,200,8)" fg:x="213980" fg:w="90"/><text x="45.1336%" y="895.50"></text></g><g><title>alloc::fmt::format (207 samples, 0.04%)</title><rect x="44.8599%" y="901" width="0.0434%" height="15" fill="rgb(228,204,44)" fg:x="213867" fg:w="207"/><text x="45.1099%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (49 samples, 0.01%)</title><rect x="44.9294%" y="821" width="0.0103%" height="15" fill="rgb(214,121,17)" fg:x="214198" fg:w="49"/><text x="45.1794%" y="831.50"></text></g><g><title>alloc::string::String::push_str (49 samples, 0.01%)</title><rect x="44.9294%" y="805" width="0.0103%" height="15" fill="rgb(233,64,38)" fg:x="214198" fg:w="49"/><text x="45.1794%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (49 samples, 0.01%)</title><rect x="44.9294%" y="789" width="0.0103%" height="15" fill="rgb(253,54,19)" fg:x="214198" fg:w="49"/><text x="45.1794%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (49 samples, 0.01%)</title><rect x="44.9294%" y="773" width="0.0103%" height="15" fill="rgb(253,94,18)" fg:x="214198" fg:w="49"/><text x="45.1794%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (49 samples, 0.01%)</title><rect x="44.9294%" y="757" width="0.0103%" height="15" fill="rgb(227,57,52)" fg:x="214198" fg:w="49"/><text x="45.1794%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (79 samples, 0.02%)</title><rect x="44.9266%" y="837" width="0.0166%" height="15" fill="rgb(230,228,50)" fg:x="214185" fg:w="79"/><text x="45.1766%" y="847.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (53 samples, 0.01%)</title><rect x="44.9600%" y="821" width="0.0111%" height="15" fill="rgb(217,205,27)" fg:x="214344" fg:w="53"/><text x="45.2100%" y="831.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (54 samples, 0.01%)</title><rect x="44.9600%" y="837" width="0.0113%" height="15" fill="rgb(252,71,50)" fg:x="214344" fg:w="54"/><text x="45.2100%" y="847.50"></text></g><g><title>core::fmt::write (233 samples, 0.05%)</title><rect x="44.9249%" y="853" width="0.0489%" height="15" fill="rgb(209,86,4)" fg:x="214177" fg:w="233"/><text x="45.1749%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (235 samples, 0.05%)</title><rect x="44.9247%" y="869" width="0.0493%" height="15" fill="rgb(229,94,0)" fg:x="214176" fg:w="235"/><text x="45.1747%" y="879.50"></text></g><g><title>alloc::fmt::format (272 samples, 0.06%)</title><rect x="44.9172%" y="885" width="0.0571%" height="15" fill="rgb(252,223,21)" fg:x="214140" fg:w="272"/><text x="45.1672%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (57 samples, 0.01%)</title><rect x="44.9753%" y="885" width="0.0120%" height="15" fill="rgb(230,210,4)" fg:x="214417" fg:w="57"/><text x="45.2253%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (57 samples, 0.01%)</title><rect x="44.9753%" y="869" width="0.0120%" height="15" fill="rgb(240,149,38)" fg:x="214417" fg:w="57"/><text x="45.2253%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (57 samples, 0.01%)</title><rect x="44.9753%" y="853" width="0.0120%" height="15" fill="rgb(254,105,20)" fg:x="214417" fg:w="57"/><text x="45.2253%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.01%)</title><rect x="44.9753%" y="837" width="0.0120%" height="15" fill="rgb(253,87,46)" fg:x="214417" fg:w="57"/><text x="45.2253%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (57 samples, 0.01%)</title><rect x="44.9753%" y="821" width="0.0120%" height="15" fill="rgb(253,116,33)" fg:x="214417" fg:w="57"/><text x="45.2253%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (57 samples, 0.01%)</title><rect x="44.9753%" y="805" width="0.0120%" height="15" fill="rgb(229,198,5)" fg:x="214417" fg:w="57"/><text x="45.2253%" y="815.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (354 samples, 0.07%)</title><rect x="44.9145%" y="901" width="0.0743%" height="15" fill="rgb(242,38,37)" fg:x="214127" fg:w="354"/><text x="45.1645%" y="911.50"></text></g><g><title>parsed::stream::ByteStream::next (65 samples, 0.01%)</title><rect x="44.9887%" y="901" width="0.0136%" height="15" fill="rgb(242,69,53)" fg:x="214481" fg:w="65"/><text x="45.2387%" y="911.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (708 samples, 0.15%)</title><rect x="44.8549%" y="933" width="0.1485%" height="15" fill="rgb(249,80,16)" fg:x="213843" fg:w="708"/><text x="45.1049%" y="943.50"></text></g><g><title>parsed::parser::single::{{closure}} (708 samples, 0.15%)</title><rect x="44.8549%" y="917" width="0.1485%" height="15" fill="rgb(206,128,11)" fg:x="213843" fg:w="708"/><text x="45.1049%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (60 samples, 0.01%)</title><rect x="45.0162%" y="821" width="0.0126%" height="15" fill="rgb(212,35,20)" fg:x="214612" fg:w="60"/><text x="45.2662%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (60 samples, 0.01%)</title><rect x="45.0162%" y="805" width="0.0126%" height="15" fill="rgb(236,79,13)" fg:x="214612" fg:w="60"/><text x="45.2662%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (59 samples, 0.01%)</title><rect x="45.0164%" y="789" width="0.0124%" height="15" fill="rgb(233,123,3)" fg:x="214613" fg:w="59"/><text x="45.2664%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (59 samples, 0.01%)</title><rect x="45.0164%" y="773" width="0.0124%" height="15" fill="rgb(214,93,52)" fg:x="214613" fg:w="59"/><text x="45.2664%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (59 samples, 0.01%)</title><rect x="45.0164%" y="757" width="0.0124%" height="15" fill="rgb(251,37,40)" fg:x="214613" fg:w="59"/><text x="45.2664%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (59 samples, 0.01%)</title><rect x="45.0164%" y="741" width="0.0124%" height="15" fill="rgb(227,80,54)" fg:x="214613" fg:w="59"/><text x="45.2664%" y="751.50"></text></g><g><title>alloc::alloc::alloc (59 samples, 0.01%)</title><rect x="45.0164%" y="725" width="0.0124%" height="15" fill="rgb(254,48,11)" fg:x="214613" fg:w="59"/><text x="45.2664%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (95 samples, 0.02%)</title><rect x="45.0120%" y="869" width="0.0199%" height="15" fill="rgb(235,193,26)" fg:x="214592" fg:w="95"/><text x="45.2620%" y="879.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (92 samples, 0.02%)</title><rect x="45.0126%" y="853" width="0.0193%" height="15" fill="rgb(229,99,21)" fg:x="214595" fg:w="92"/><text x="45.2626%" y="863.50"></text></g><g><title>parsed::stream::ByteStream::get (92 samples, 0.02%)</title><rect x="45.0126%" y="837" width="0.0193%" height="15" fill="rgb(211,140,41)" fg:x="214595" fg:w="92"/><text x="45.2626%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (49 samples, 0.01%)</title><rect x="45.0584%" y="805" width="0.0103%" height="15" fill="rgb(240,227,30)" fg:x="214813" fg:w="49"/><text x="45.3084%" y="815.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (70 samples, 0.01%)</title><rect x="45.0716%" y="789" width="0.0147%" height="15" fill="rgb(215,224,45)" fg:x="214876" fg:w="70"/><text x="45.3216%" y="799.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (85 samples, 0.02%)</title><rect x="45.0697%" y="805" width="0.0178%" height="15" fill="rgb(206,123,31)" fg:x="214867" fg:w="85"/><text x="45.3197%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (181 samples, 0.04%)</title><rect x="45.0556%" y="837" width="0.0380%" height="15" fill="rgb(210,138,16)" fg:x="214800" fg:w="181"/><text x="45.3056%" y="847.50"></text></g><g><title>core::fmt::write (181 samples, 0.04%)</title><rect x="45.0556%" y="821" width="0.0380%" height="15" fill="rgb(228,57,28)" fg:x="214800" fg:w="181"/><text x="45.3056%" y="831.50"></text></g><g><title>alloc::fmt::format (257 samples, 0.05%)</title><rect x="45.0412%" y="853" width="0.0539%" height="15" fill="rgb(242,170,10)" fg:x="214731" fg:w="257"/><text x="45.2912%" y="863.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (260 samples, 0.05%)</title><rect x="45.0412%" y="869" width="0.0545%" height="15" fill="rgb(228,214,39)" fg:x="214731" fg:w="260"/><text x="45.2912%" y="879.50"></text></g><g><title>parsed::parser::before::{{closure}} (409 samples, 0.09%)</title><rect x="45.0120%" y="885" width="0.0858%" height="15" fill="rgb(218,179,33)" fg:x="214592" fg:w="409"/><text x="45.2620%" y="895.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (429 samples, 0.09%)</title><rect x="45.0082%" y="901" width="0.0900%" height="15" fill="rgb(235,193,39)" fg:x="214574" fg:w="429"/><text x="45.2582%" y="911.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (457 samples, 0.10%)</title><rect x="45.0072%" y="917" width="0.0959%" height="15" fill="rgb(219,221,36)" fg:x="214569" fg:w="457"/><text x="45.2572%" y="927.50"></text></g><g><title>alloc::string::String::reserve (72 samples, 0.02%)</title><rect x="45.1089%" y="837" width="0.0151%" height="15" fill="rgb(248,218,19)" fg:x="215054" fg:w="72"/><text x="45.3589%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (72 samples, 0.02%)</title><rect x="45.1089%" y="821" width="0.0151%" height="15" fill="rgb(205,50,9)" fg:x="215054" fg:w="72"/><text x="45.3589%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (72 samples, 0.02%)</title><rect x="45.1089%" y="805" width="0.0151%" height="15" fill="rgb(238,81,28)" fg:x="215054" fg:w="72"/><text x="45.3589%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (71 samples, 0.01%)</title><rect x="45.1091%" y="789" width="0.0149%" height="15" fill="rgb(235,110,19)" fg:x="215055" fg:w="71"/><text x="45.3591%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (71 samples, 0.01%)</title><rect x="45.1091%" y="773" width="0.0149%" height="15" fill="rgb(214,7,14)" fg:x="215055" fg:w="71"/><text x="45.3591%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (57 samples, 0.01%)</title><rect x="45.1240%" y="837" width="0.0120%" height="15" fill="rgb(211,77,3)" fg:x="215126" fg:w="57"/><text x="45.3740%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (139 samples, 0.03%)</title><rect x="45.1074%" y="853" width="0.0292%" height="15" fill="rgb(229,5,9)" fg:x="215047" fg:w="139"/><text x="45.3574%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (166 samples, 0.03%)</title><rect x="45.1045%" y="869" width="0.0348%" height="15" fill="rgb(225,90,11)" fg:x="215033" fg:w="166"/><text x="45.3545%" y="879.50"></text></g><g><title>parsed::http::as_string (170 samples, 0.04%)</title><rect x="45.1043%" y="901" width="0.0357%" height="15" fill="rgb(242,56,8)" fg:x="215032" fg:w="170"/><text x="45.3543%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (170 samples, 0.04%)</title><rect x="45.1043%" y="885" width="0.0357%" height="15" fill="rgb(249,212,39)" fg:x="215032" fg:w="170"/><text x="45.3543%" y="895.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (180 samples, 0.04%)</title><rect x="45.1030%" y="917" width="0.0378%" height="15" fill="rgb(236,90,9)" fg:x="215026" fg:w="180"/><text x="45.3530%" y="927.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1253" width="0.2872%" height="15" fill="rgb(206,88,35)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1263.50"></text></g><g><title>uppercut_mio_server::protocol::process (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1237" width="0.2872%" height="15" fill="rgb(205,126,30)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1247.50"></text></g><g><title>parsed::http::parse_http_request (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1221" width="0.2872%" height="15" fill="rgb(230,176,12)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1231.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1205" width="0.2872%" height="15" fill="rgb(243,19,9)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1215.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1189" width="0.2872%" height="15" fill="rgb(245,171,17)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1199.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1173" width="0.2872%" height="15" fill="rgb(227,52,21)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1183.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1157" width="0.2872%" height="15" fill="rgb(238,69,14)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1167.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1141" width="0.2872%" height="15" fill="rgb(241,156,39)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1151.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1125" width="0.2872%" height="15" fill="rgb(212,227,28)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1135.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1109" width="0.2872%" height="15" fill="rgb(209,118,27)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1119.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1093" width="0.2872%" height="15" fill="rgb(226,102,5)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1103.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1077" width="0.2872%" height="15" fill="rgb(223,34,3)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1087.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1061" width="0.2872%" height="15" fill="rgb(221,81,38)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1071.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1045" width="0.2872%" height="15" fill="rgb(236,219,28)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1055.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1029" width="0.2872%" height="15" fill="rgb(213,200,14)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1039.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="1013" width="0.2872%" height="15" fill="rgb(240,33,19)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1023.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="997" width="0.2872%" height="15" fill="rgb(233,113,27)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="1007.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="981" width="0.2872%" height="15" fill="rgb(220,221,18)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="991.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="965" width="0.2872%" height="15" fill="rgb(238,92,8)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,369 samples, 0.29%)</title><rect x="44.8549%" y="949" width="0.2872%" height="15" fill="rgb(222,164,16)" fg:x="213843" fg:w="1369"/><text x="45.1049%" y="959.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (661 samples, 0.14%)</title><rect x="45.0034%" y="933" width="0.1386%" height="15" fill="rgb(241,119,3)" fg:x="214551" fg:w="661"/><text x="45.2534%" y="943.50"></text></g><g><title>alloc::fmt::format (50 samples, 0.01%)</title><rect x="45.1488%" y="565" width="0.0105%" height="15" fill="rgb(241,44,8)" fg:x="215244" fg:w="50"/><text x="45.3988%" y="575.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (149 samples, 0.03%)</title><rect x="45.1488%" y="597" width="0.0313%" height="15" fill="rgb(230,36,40)" fg:x="215244" fg:w="149"/><text x="45.3988%" y="607.50"></text></g><g><title>parsed::parser::single::{{closure}} (149 samples, 0.03%)</title><rect x="45.1488%" y="581" width="0.0313%" height="15" fill="rgb(243,16,36)" fg:x="215244" fg:w="149"/><text x="45.3988%" y="591.50"></text></g><g><title>parsed::stream::ByteStream::next (60 samples, 0.01%)</title><rect x="45.1674%" y="565" width="0.0126%" height="15" fill="rgb(231,4,26)" fg:x="215333" fg:w="60"/><text x="45.4174%" y="575.50"></text></g><g><title>start_thread (201 samples, 0.04%)</title><rect x="45.1488%" y="1253" width="0.0422%" height="15" fill="rgb(240,9,31)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1263.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (201 samples, 0.04%)</title><rect x="45.1488%" y="1237" width="0.0422%" height="15" fill="rgb(207,173,15)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (201 samples, 0.04%)</title><rect x="45.1488%" y="1221" width="0.0422%" height="15" fill="rgb(224,192,53)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (201 samples, 0.04%)</title><rect x="45.1488%" y="1205" width="0.0422%" height="15" fill="rgb(223,67,28)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (201 samples, 0.04%)</title><rect x="45.1488%" y="1189" width="0.0422%" height="15" fill="rgb(211,20,47)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1199.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (201 samples, 0.04%)</title><rect x="45.1488%" y="1173" width="0.0422%" height="15" fill="rgb(240,228,2)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (201 samples, 0.04%)</title><rect x="45.1488%" y="1157" width="0.0422%" height="15" fill="rgb(248,151,12)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1167.50"></text></g><g><title>std::panicking::try (201 samples, 0.04%)</title><rect x="45.1488%" y="1141" width="0.0422%" height="15" fill="rgb(244,8,39)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (201 samples, 0.04%)</title><rect x="45.1488%" y="1125" width="0.0422%" height="15" fill="rgb(222,26,8)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (201 samples, 0.04%)</title><rect x="45.1488%" y="1109" width="0.0422%" height="15" fill="rgb(213,106,44)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (201 samples, 0.04%)</title><rect x="45.1488%" y="1093" width="0.0422%" height="15" fill="rgb(214,129,20)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1103.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (201 samples, 0.04%)</title><rect x="45.1488%" y="1077" width="0.0422%" height="15" fill="rgb(212,32,13)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1087.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (201 samples, 0.04%)</title><rect x="45.1488%" y="1061" width="0.0422%" height="15" fill="rgb(208,168,33)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (201 samples, 0.04%)</title><rect x="45.1488%" y="1045" width="0.0422%" height="15" fill="rgb(231,207,8)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1055.50"></text></g><g><title>std::panicking::try (201 samples, 0.04%)</title><rect x="45.1488%" y="1029" width="0.0422%" height="15" fill="rgb(235,219,23)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (201 samples, 0.04%)</title><rect x="45.1488%" y="1013" width="0.0422%" height="15" fill="rgb(226,216,26)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (201 samples, 0.04%)</title><rect x="45.1488%" y="997" width="0.0422%" height="15" fill="rgb(239,137,16)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="1007.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (201 samples, 0.04%)</title><rect x="45.1488%" y="981" width="0.0422%" height="15" fill="rgb(207,12,36)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (201 samples, 0.04%)</title><rect x="45.1488%" y="965" width="0.0422%" height="15" fill="rgb(210,214,24)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="975.50"></text></g><g><title>uppercut::core::worker_loop (201 samples, 0.04%)</title><rect x="45.1488%" y="949" width="0.0422%" height="15" fill="rgb(206,56,30)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="959.50"></text></g><g><title>std::panic::catch_unwind (201 samples, 0.04%)</title><rect x="45.1488%" y="933" width="0.0422%" height="15" fill="rgb(228,143,26)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="943.50"></text></g><g><title>std::panicking::try (201 samples, 0.04%)</title><rect x="45.1488%" y="917" width="0.0422%" height="15" fill="rgb(216,218,46)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="927.50"></text></g><g><title>std::panicking::try::do_call (201 samples, 0.04%)</title><rect x="45.1488%" y="901" width="0.0422%" height="15" fill="rgb(206,6,19)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (201 samples, 0.04%)</title><rect x="45.1488%" y="885" width="0.0422%" height="15" fill="rgb(239,177,51)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="895.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (201 samples, 0.04%)</title><rect x="45.1488%" y="869" width="0.0422%" height="15" fill="rgb(216,55,25)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="879.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (201 samples, 0.04%)</title><rect x="45.1488%" y="853" width="0.0422%" height="15" fill="rgb(231,163,29)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="863.50"></text></g><g><title>uppercut_mio_server::protocol::process (201 samples, 0.04%)</title><rect x="45.1488%" y="837" width="0.0422%" height="15" fill="rgb(232,149,50)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="847.50"></text></g><g><title>parsed::http::parse_http_request (201 samples, 0.04%)</title><rect x="45.1488%" y="821" width="0.0422%" height="15" fill="rgb(223,142,48)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="831.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (201 samples, 0.04%)</title><rect x="45.1488%" y="805" width="0.0422%" height="15" fill="rgb(245,83,23)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="815.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (201 samples, 0.04%)</title><rect x="45.1488%" y="789" width="0.0422%" height="15" fill="rgb(224,63,2)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="799.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (201 samples, 0.04%)</title><rect x="45.1488%" y="773" width="0.0422%" height="15" fill="rgb(218,65,53)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="783.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (201 samples, 0.04%)</title><rect x="45.1488%" y="757" width="0.0422%" height="15" fill="rgb(221,84,29)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="767.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (201 samples, 0.04%)</title><rect x="45.1488%" y="741" width="0.0422%" height="15" fill="rgb(234,0,32)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="751.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (201 samples, 0.04%)</title><rect x="45.1488%" y="725" width="0.0422%" height="15" fill="rgb(206,20,16)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="735.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (201 samples, 0.04%)</title><rect x="45.1488%" y="709" width="0.0422%" height="15" fill="rgb(244,172,18)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="719.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (201 samples, 0.04%)</title><rect x="45.1488%" y="693" width="0.0422%" height="15" fill="rgb(254,133,1)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="703.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (201 samples, 0.04%)</title><rect x="45.1488%" y="677" width="0.0422%" height="15" fill="rgb(222,206,41)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="687.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (201 samples, 0.04%)</title><rect x="45.1488%" y="661" width="0.0422%" height="15" fill="rgb(212,3,42)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="671.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (201 samples, 0.04%)</title><rect x="45.1488%" y="645" width="0.0422%" height="15" fill="rgb(241,11,4)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="655.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (201 samples, 0.04%)</title><rect x="45.1488%" y="629" width="0.0422%" height="15" fill="rgb(205,19,26)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (201 samples, 0.04%)</title><rect x="45.1488%" y="613" width="0.0422%" height="15" fill="rgb(210,179,32)" fg:x="215244" fg:w="201"/><text x="45.3988%" y="623.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (52 samples, 0.01%)</title><rect x="45.1800%" y="597" width="0.0109%" height="15" fill="rgb(227,116,49)" fg:x="215393" fg:w="52"/><text x="45.4300%" y="607.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (87 samples, 0.02%)</title><rect x="45.1909%" y="613" width="0.0182%" height="15" fill="rgb(211,146,6)" fg:x="215445" fg:w="87"/><text x="45.4409%" y="623.50"></text></g><g><title>parsed::parser::single::{{closure}} (87 samples, 0.02%)</title><rect x="45.1909%" y="597" width="0.0182%" height="15" fill="rgb(219,44,39)" fg:x="215445" fg:w="87"/><text x="45.4409%" y="607.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (60 samples, 0.01%)</title><rect x="45.1966%" y="581" width="0.0126%" height="15" fill="rgb(234,128,11)" fg:x="215472" fg:w="60"/><text x="45.4466%" y="591.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (119 samples, 0.02%)</title><rect x="45.1909%" y="1253" width="0.0250%" height="15" fill="rgb(220,183,53)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (119 samples, 0.02%)</title><rect x="45.1909%" y="1237" width="0.0250%" height="15" fill="rgb(213,219,32)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (119 samples, 0.02%)</title><rect x="45.1909%" y="1221" width="0.0250%" height="15" fill="rgb(232,156,16)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (119 samples, 0.02%)</title><rect x="45.1909%" y="1205" width="0.0250%" height="15" fill="rgb(246,135,34)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1215.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (119 samples, 0.02%)</title><rect x="45.1909%" y="1189" width="0.0250%" height="15" fill="rgb(241,99,0)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (119 samples, 0.02%)</title><rect x="45.1909%" y="1173" width="0.0250%" height="15" fill="rgb(222,103,45)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1183.50"></text></g><g><title>std::panicking::try (119 samples, 0.02%)</title><rect x="45.1909%" y="1157" width="0.0250%" height="15" fill="rgb(212,57,4)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (119 samples, 0.02%)</title><rect x="45.1909%" y="1141" width="0.0250%" height="15" fill="rgb(215,68,47)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (119 samples, 0.02%)</title><rect x="45.1909%" y="1125" width="0.0250%" height="15" fill="rgb(230,84,2)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (119 samples, 0.02%)</title><rect x="45.1909%" y="1109" width="0.0250%" height="15" fill="rgb(220,102,14)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (119 samples, 0.02%)</title><rect x="45.1909%" y="1093" width="0.0250%" height="15" fill="rgb(240,10,32)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1103.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (119 samples, 0.02%)</title><rect x="45.1909%" y="1077" width="0.0250%" height="15" fill="rgb(215,47,27)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (119 samples, 0.02%)</title><rect x="45.1909%" y="1061" width="0.0250%" height="15" fill="rgb(233,188,43)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1071.50"></text></g><g><title>std::panicking::try (119 samples, 0.02%)</title><rect x="45.1909%" y="1045" width="0.0250%" height="15" fill="rgb(253,190,1)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (119 samples, 0.02%)</title><rect x="45.1909%" y="1029" width="0.0250%" height="15" fill="rgb(206,114,52)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (119 samples, 0.02%)</title><rect x="45.1909%" y="1013" width="0.0250%" height="15" fill="rgb(233,120,37)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1023.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (119 samples, 0.02%)</title><rect x="45.1909%" y="997" width="0.0250%" height="15" fill="rgb(214,52,39)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (119 samples, 0.02%)</title><rect x="45.1909%" y="981" width="0.0250%" height="15" fill="rgb(223,80,29)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="991.50"></text></g><g><title>uppercut::core::worker_loop (119 samples, 0.02%)</title><rect x="45.1909%" y="965" width="0.0250%" height="15" fill="rgb(230,101,40)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="975.50"></text></g><g><title>std::panic::catch_unwind (119 samples, 0.02%)</title><rect x="45.1909%" y="949" width="0.0250%" height="15" fill="rgb(219,211,8)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="959.50"></text></g><g><title>std::panicking::try (119 samples, 0.02%)</title><rect x="45.1909%" y="933" width="0.0250%" height="15" fill="rgb(252,126,28)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="943.50"></text></g><g><title>std::panicking::try::do_call (119 samples, 0.02%)</title><rect x="45.1909%" y="917" width="0.0250%" height="15" fill="rgb(215,56,38)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (119 samples, 0.02%)</title><rect x="45.1909%" y="901" width="0.0250%" height="15" fill="rgb(249,55,44)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="911.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (119 samples, 0.02%)</title><rect x="45.1909%" y="885" width="0.0250%" height="15" fill="rgb(220,221,32)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="895.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (119 samples, 0.02%)</title><rect x="45.1909%" y="869" width="0.0250%" height="15" fill="rgb(212,216,41)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="879.50"></text></g><g><title>uppercut_mio_server::protocol::process (119 samples, 0.02%)</title><rect x="45.1909%" y="853" width="0.0250%" height="15" fill="rgb(228,213,43)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="863.50"></text></g><g><title>parsed::http::parse_http_request (119 samples, 0.02%)</title><rect x="45.1909%" y="837" width="0.0250%" height="15" fill="rgb(211,31,26)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="847.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (119 samples, 0.02%)</title><rect x="45.1909%" y="821" width="0.0250%" height="15" fill="rgb(229,202,19)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="831.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (119 samples, 0.02%)</title><rect x="45.1909%" y="805" width="0.0250%" height="15" fill="rgb(229,105,46)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="815.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (119 samples, 0.02%)</title><rect x="45.1909%" y="789" width="0.0250%" height="15" fill="rgb(235,108,1)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="799.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (119 samples, 0.02%)</title><rect x="45.1909%" y="773" width="0.0250%" height="15" fill="rgb(245,111,35)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="783.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (119 samples, 0.02%)</title><rect x="45.1909%" y="757" width="0.0250%" height="15" fill="rgb(219,185,31)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="767.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (119 samples, 0.02%)</title><rect x="45.1909%" y="741" width="0.0250%" height="15" fill="rgb(214,4,43)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="751.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (119 samples, 0.02%)</title><rect x="45.1909%" y="725" width="0.0250%" height="15" fill="rgb(235,227,40)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="735.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (119 samples, 0.02%)</title><rect x="45.1909%" y="709" width="0.0250%" height="15" fill="rgb(230,88,30)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="719.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (119 samples, 0.02%)</title><rect x="45.1909%" y="693" width="0.0250%" height="15" fill="rgb(216,217,1)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="703.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (119 samples, 0.02%)</title><rect x="45.1909%" y="677" width="0.0250%" height="15" fill="rgb(248,139,50)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="687.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (119 samples, 0.02%)</title><rect x="45.1909%" y="661" width="0.0250%" height="15" fill="rgb(233,1,21)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="671.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (119 samples, 0.02%)</title><rect x="45.1909%" y="645" width="0.0250%" height="15" fill="rgb(215,183,12)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="655.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (119 samples, 0.02%)</title><rect x="45.1909%" y="629" width="0.0250%" height="15" fill="rgb(229,104,42)" fg:x="215445" fg:w="119"/><text x="45.4409%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (61 samples, 0.01%)</title><rect x="45.2169%" y="677" width="0.0128%" height="15" fill="rgb(243,34,48)" fg:x="215569" fg:w="61"/><text x="45.4669%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (51 samples, 0.01%)</title><rect x="45.2383%" y="677" width="0.0107%" height="15" fill="rgb(239,11,44)" fg:x="215671" fg:w="51"/><text x="45.4883%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (51 samples, 0.01%)</title><rect x="45.2383%" y="661" width="0.0107%" height="15" fill="rgb(231,98,35)" fg:x="215671" fg:w="51"/><text x="45.4883%" y="671.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (178 samples, 0.04%)</title><rect x="45.2159%" y="773" width="0.0373%" height="15" fill="rgb(233,28,25)" fg:x="215564" fg:w="178"/><text x="45.4659%" y="783.50"></text></g><g><title>parsed::parser::single::{{closure}} (178 samples, 0.04%)</title><rect x="45.2159%" y="757" width="0.0373%" height="15" fill="rgb(234,123,11)" fg:x="215564" fg:w="178"/><text x="45.4659%" y="767.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (178 samples, 0.04%)</title><rect x="45.2159%" y="741" width="0.0373%" height="15" fill="rgb(220,69,3)" fg:x="215564" fg:w="178"/><text x="45.4659%" y="751.50"></text></g><g><title>alloc::fmt::format (178 samples, 0.04%)</title><rect x="45.2159%" y="725" width="0.0373%" height="15" fill="rgb(214,64,36)" fg:x="215564" fg:w="178"/><text x="45.4659%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (178 samples, 0.04%)</title><rect x="45.2159%" y="709" width="0.0373%" height="15" fill="rgb(211,138,32)" fg:x="215564" fg:w="178"/><text x="45.4659%" y="719.50"></text></g><g><title>core::fmt::write (178 samples, 0.04%)</title><rect x="45.2159%" y="693" width="0.0373%" height="15" fill="rgb(213,118,47)" fg:x="215564" fg:w="178"/><text x="45.4659%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (193 samples, 0.04%)</title><rect x="45.2159%" y="1253" width="0.0405%" height="15" fill="rgb(243,124,49)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1263.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (193 samples, 0.04%)</title><rect x="45.2159%" y="1237" width="0.0405%" height="15" fill="rgb(221,30,28)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (193 samples, 0.04%)</title><rect x="45.2159%" y="1221" width="0.0405%" height="15" fill="rgb(246,37,13)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1231.50"></text></g><g><title>std::panicking::try (193 samples, 0.04%)</title><rect x="45.2159%" y="1205" width="0.0405%" height="15" fill="rgb(249,66,14)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (193 samples, 0.04%)</title><rect x="45.2159%" y="1189" width="0.0405%" height="15" fill="rgb(213,166,5)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (193 samples, 0.04%)</title><rect x="45.2159%" y="1173" width="0.0405%" height="15" fill="rgb(221,66,24)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1183.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (193 samples, 0.04%)</title><rect x="45.2159%" y="1157" width="0.0405%" height="15" fill="rgb(210,132,17)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (193 samples, 0.04%)</title><rect x="45.2159%" y="1141" width="0.0405%" height="15" fill="rgb(243,202,5)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1151.50"></text></g><g><title>uppercut::core::worker_loop (193 samples, 0.04%)</title><rect x="45.2159%" y="1125" width="0.0405%" height="15" fill="rgb(233,70,48)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (193 samples, 0.04%)</title><rect x="45.2159%" y="1109" width="0.0405%" height="15" fill="rgb(238,41,26)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1119.50"></text></g><g><title>std::panicking::try (193 samples, 0.04%)</title><rect x="45.2159%" y="1093" width="0.0405%" height="15" fill="rgb(241,19,31)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (193 samples, 0.04%)</title><rect x="45.2159%" y="1077" width="0.0405%" height="15" fill="rgb(214,76,10)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (193 samples, 0.04%)</title><rect x="45.2159%" y="1061" width="0.0405%" height="15" fill="rgb(254,202,22)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1071.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (193 samples, 0.04%)</title><rect x="45.2159%" y="1045" width="0.0405%" height="15" fill="rgb(214,72,24)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1055.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (193 samples, 0.04%)</title><rect x="45.2159%" y="1029" width="0.0405%" height="15" fill="rgb(221,92,46)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1039.50"></text></g><g><title>uppercut_mio_server::protocol::process (193 samples, 0.04%)</title><rect x="45.2159%" y="1013" width="0.0405%" height="15" fill="rgb(246,13,50)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1023.50"></text></g><g><title>parsed::http::parse_http_request (193 samples, 0.04%)</title><rect x="45.2159%" y="997" width="0.0405%" height="15" fill="rgb(240,165,38)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="1007.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (193 samples, 0.04%)</title><rect x="45.2159%" y="981" width="0.0405%" height="15" fill="rgb(241,24,51)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="991.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (193 samples, 0.04%)</title><rect x="45.2159%" y="965" width="0.0405%" height="15" fill="rgb(227,51,44)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (193 samples, 0.04%)</title><rect x="45.2159%" y="949" width="0.0405%" height="15" fill="rgb(231,121,3)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="959.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (193 samples, 0.04%)</title><rect x="45.2159%" y="933" width="0.0405%" height="15" fill="rgb(245,3,41)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="943.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (193 samples, 0.04%)</title><rect x="45.2159%" y="917" width="0.0405%" height="15" fill="rgb(214,13,26)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="927.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (193 samples, 0.04%)</title><rect x="45.2159%" y="901" width="0.0405%" height="15" fill="rgb(252,75,11)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="911.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (193 samples, 0.04%)</title><rect x="45.2159%" y="885" width="0.0405%" height="15" fill="rgb(218,226,17)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="895.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (193 samples, 0.04%)</title><rect x="45.2159%" y="869" width="0.0405%" height="15" fill="rgb(248,89,38)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="879.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (193 samples, 0.04%)</title><rect x="45.2159%" y="853" width="0.0405%" height="15" fill="rgb(237,73,46)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="863.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (193 samples, 0.04%)</title><rect x="45.2159%" y="837" width="0.0405%" height="15" fill="rgb(242,78,33)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="847.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (193 samples, 0.04%)</title><rect x="45.2159%" y="821" width="0.0405%" height="15" fill="rgb(235,60,3)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="831.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (193 samples, 0.04%)</title><rect x="45.2159%" y="805" width="0.0405%" height="15" fill="rgb(216,172,19)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="815.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (193 samples, 0.04%)</title><rect x="45.2159%" y="789" width="0.0405%" height="15" fill="rgb(227,6,42)" fg:x="215564" fg:w="193"/><text x="45.4659%" y="799.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (70 samples, 0.01%)</title><rect x="45.2885%" y="757" width="0.0147%" height="15" fill="rgb(223,207,42)" fg:x="215910" fg:w="70"/><text x="45.5385%" y="767.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (82 samples, 0.02%)</title><rect x="45.2864%" y="773" width="0.0172%" height="15" fill="rgb(246,138,30)" fg:x="215900" fg:w="82"/><text x="45.5364%" y="783.50"></text></g><g><title>core::fmt::write (132 samples, 0.03%)</title><rect x="45.2782%" y="789" width="0.0277%" height="15" fill="rgb(251,199,47)" fg:x="215861" fg:w="132"/><text x="45.5282%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (136 samples, 0.03%)</title><rect x="45.2778%" y="805" width="0.0285%" height="15" fill="rgb(228,218,44)" fg:x="215859" fg:w="136"/><text x="45.5278%" y="815.50"></text></g><g><title>alloc::fmt::format (162 samples, 0.03%)</title><rect x="45.2727%" y="821" width="0.0340%" height="15" fill="rgb(220,68,6)" fg:x="215835" fg:w="162"/><text x="45.5227%" y="831.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (166 samples, 0.03%)</title><rect x="45.2727%" y="837" width="0.0348%" height="15" fill="rgb(240,60,26)" fg:x="215835" fg:w="166"/><text x="45.5227%" y="847.50"></text></g><g><title>parsed::parser::before::{{closure}} (232 samples, 0.05%)</title><rect x="45.2601%" y="853" width="0.0487%" height="15" fill="rgb(211,200,19)" fg:x="215775" fg:w="232"/><text x="45.5101%" y="863.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (237 samples, 0.05%)</title><rect x="45.2595%" y="869" width="0.0497%" height="15" fill="rgb(242,145,30)" fg:x="215772" fg:w="237"/><text x="45.5095%" y="879.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (324 samples, 0.07%)</title><rect x="45.2589%" y="885" width="0.0680%" height="15" fill="rgb(225,64,13)" fg:x="215769" fg:w="324"/><text x="45.5089%" y="895.50"></text></g><g><title>uppercut::core::worker_loop (337 samples, 0.07%)</title><rect x="45.2564%" y="1253" width="0.0707%" height="15" fill="rgb(218,103,35)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (337 samples, 0.07%)</title><rect x="45.2564%" y="1237" width="0.0707%" height="15" fill="rgb(216,93,46)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1247.50"></text></g><g><title>std::panicking::try (337 samples, 0.07%)</title><rect x="45.2564%" y="1221" width="0.0707%" height="15" fill="rgb(225,159,27)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (337 samples, 0.07%)</title><rect x="45.2564%" y="1205" width="0.0707%" height="15" fill="rgb(225,204,11)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1215.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (337 samples, 0.07%)</title><rect x="45.2564%" y="1189" width="0.0707%" height="15" fill="rgb(205,56,4)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1199.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (337 samples, 0.07%)</title><rect x="45.2564%" y="1173" width="0.0707%" height="15" fill="rgb(206,6,35)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1183.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (337 samples, 0.07%)</title><rect x="45.2564%" y="1157" width="0.0707%" height="15" fill="rgb(247,73,52)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1167.50"></text></g><g><title>uppercut_mio_server::protocol::process (337 samples, 0.07%)</title><rect x="45.2564%" y="1141" width="0.0707%" height="15" fill="rgb(246,97,4)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1151.50"></text></g><g><title>parsed::http::parse_http_request (337 samples, 0.07%)</title><rect x="45.2564%" y="1125" width="0.0707%" height="15" fill="rgb(212,37,15)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1135.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (337 samples, 0.07%)</title><rect x="45.2564%" y="1109" width="0.0707%" height="15" fill="rgb(208,130,40)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1119.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (337 samples, 0.07%)</title><rect x="45.2564%" y="1093" width="0.0707%" height="15" fill="rgb(236,55,29)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1103.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (337 samples, 0.07%)</title><rect x="45.2564%" y="1077" width="0.0707%" height="15" fill="rgb(209,156,45)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1087.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (337 samples, 0.07%)</title><rect x="45.2564%" y="1061" width="0.0707%" height="15" fill="rgb(249,107,4)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1071.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (337 samples, 0.07%)</title><rect x="45.2564%" y="1045" width="0.0707%" height="15" fill="rgb(227,7,13)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1055.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (337 samples, 0.07%)</title><rect x="45.2564%" y="1029" width="0.0707%" height="15" fill="rgb(250,129,14)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1039.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (337 samples, 0.07%)</title><rect x="45.2564%" y="1013" width="0.0707%" height="15" fill="rgb(229,92,13)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1023.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (337 samples, 0.07%)</title><rect x="45.2564%" y="997" width="0.0707%" height="15" fill="rgb(245,98,39)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="1007.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (337 samples, 0.07%)</title><rect x="45.2564%" y="981" width="0.0707%" height="15" fill="rgb(234,135,48)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="991.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (337 samples, 0.07%)</title><rect x="45.2564%" y="965" width="0.0707%" height="15" fill="rgb(230,98,28)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (337 samples, 0.07%)</title><rect x="45.2564%" y="949" width="0.0707%" height="15" fill="rgb(223,121,0)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="959.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (337 samples, 0.07%)</title><rect x="45.2564%" y="933" width="0.0707%" height="15" fill="rgb(234,173,33)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="943.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (337 samples, 0.07%)</title><rect x="45.2564%" y="917" width="0.0707%" height="15" fill="rgb(245,47,8)" fg:x="215757" fg:w="337"/><text x="45.5064%" y="927.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (325 samples, 0.07%)</title><rect x="45.2589%" y="901" width="0.0682%" height="15" fill="rgb(205,17,20)" fg:x="215769" fg:w="325"/><text x="45.5089%" y="911.50"></text></g><g><title>[unknown] (2,291 samples, 0.48%)</title><rect x="44.8549%" y="1269" width="0.4806%" height="15" fill="rgb(232,151,16)" fg:x="213843" fg:w="2291"/><text x="45.1049%" y="1279.50"></text></g><g><title>__libc_malloc (124 samples, 0.03%)</title><rect x="45.4254%" y="757" width="0.0260%" height="15" fill="rgb(208,30,32)" fg:x="216563" fg:w="124"/><text x="45.6754%" y="767.50"></text></g><g><title>alloc::alloc::alloc (147 samples, 0.03%)</title><rect x="45.4254%" y="773" width="0.0308%" height="15" fill="rgb(254,26,3)" fg:x="216563" fg:w="147"/><text x="45.6754%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (148 samples, 0.03%)</title><rect x="45.4254%" y="853" width="0.0310%" height="15" fill="rgb(240,177,30)" fg:x="216563" fg:w="148"/><text x="45.6754%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (148 samples, 0.03%)</title><rect x="45.4254%" y="837" width="0.0310%" height="15" fill="rgb(248,76,44)" fg:x="216563" fg:w="148"/><text x="45.6754%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (148 samples, 0.03%)</title><rect x="45.4254%" y="821" width="0.0310%" height="15" fill="rgb(241,186,54)" fg:x="216563" fg:w="148"/><text x="45.6754%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (148 samples, 0.03%)</title><rect x="45.4254%" y="805" width="0.0310%" height="15" fill="rgb(249,171,29)" fg:x="216563" fg:w="148"/><text x="45.6754%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (148 samples, 0.03%)</title><rect x="45.4254%" y="789" width="0.0310%" height="15" fill="rgb(237,151,44)" fg:x="216563" fg:w="148"/><text x="45.6754%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (237 samples, 0.05%)</title><rect x="45.4254%" y="917" width="0.0497%" height="15" fill="rgb(228,174,30)" fg:x="216563" fg:w="237"/><text x="45.6754%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (237 samples, 0.05%)</title><rect x="45.4254%" y="901" width="0.0497%" height="15" fill="rgb(252,14,37)" fg:x="216563" fg:w="237"/><text x="45.6754%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (237 samples, 0.05%)</title><rect x="45.4254%" y="885" width="0.0497%" height="15" fill="rgb(207,111,40)" fg:x="216563" fg:w="237"/><text x="45.6754%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (237 samples, 0.05%)</title><rect x="45.4254%" y="869" width="0.0497%" height="15" fill="rgb(248,171,54)" fg:x="216563" fg:w="237"/><text x="45.6754%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (89 samples, 0.02%)</title><rect x="45.4565%" y="853" width="0.0187%" height="15" fill="rgb(211,127,2)" fg:x="216711" fg:w="89"/><text x="45.7065%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (89 samples, 0.02%)</title><rect x="45.4565%" y="837" width="0.0187%" height="15" fill="rgb(236,87,47)" fg:x="216711" fg:w="89"/><text x="45.7065%" y="847.50"></text></g><g><title>[libc-2.31.so] (88 samples, 0.02%)</title><rect x="45.4567%" y="821" width="0.0185%" height="15" fill="rgb(223,190,45)" fg:x="216712" fg:w="88"/><text x="45.7067%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (260 samples, 0.05%)</title><rect x="45.4235%" y="933" width="0.0545%" height="15" fill="rgb(215,5,16)" fg:x="216554" fg:w="260"/><text x="45.6735%" y="943.50"></text></g><g><title>ip_protocol_deliver_rcu (67 samples, 0.01%)</title><rect x="46.3358%" y="645" width="0.0141%" height="15" fill="rgb(252,82,33)" fg:x="220903" fg:w="67"/><text x="46.5858%" y="655.50"></text></g><g><title>tcp_v4_rcv (52 samples, 0.01%)</title><rect x="46.3389%" y="629" width="0.0109%" height="15" fill="rgb(247,213,44)" fg:x="220918" fg:w="52"/><text x="46.5889%" y="639.50"></text></g><g><title>tcp_v4_do_rcv (48 samples, 0.01%)</title><rect x="46.3398%" y="613" width="0.0101%" height="15" fill="rgb(205,196,44)" fg:x="220922" fg:w="48"/><text x="46.5898%" y="623.50"></text></g><g><title>__netif_receive_skb_list_core (76 samples, 0.02%)</title><rect x="46.3341%" y="741" width="0.0159%" height="15" fill="rgb(237,96,54)" fg:x="220895" fg:w="76"/><text x="46.5841%" y="751.50"></text></g><g><title>ip_list_rcv (73 samples, 0.02%)</title><rect x="46.3347%" y="725" width="0.0153%" height="15" fill="rgb(230,113,34)" fg:x="220898" fg:w="73"/><text x="46.5847%" y="735.50"></text></g><g><title>ip_sublist_rcv (73 samples, 0.02%)</title><rect x="46.3347%" y="709" width="0.0153%" height="15" fill="rgb(221,224,12)" fg:x="220898" fg:w="73"/><text x="46.5847%" y="719.50"></text></g><g><title>ip_sublist_rcv_finish (68 samples, 0.01%)</title><rect x="46.3358%" y="693" width="0.0143%" height="15" fill="rgb(219,112,44)" fg:x="220903" fg:w="68"/><text x="46.5858%" y="703.50"></text></g><g><title>ip_local_deliver (68 samples, 0.01%)</title><rect x="46.3358%" y="677" width="0.0143%" height="15" fill="rgb(210,31,13)" fg:x="220903" fg:w="68"/><text x="46.5858%" y="687.50"></text></g><g><title>ip_local_deliver_finish (68 samples, 0.01%)</title><rect x="46.3358%" y="661" width="0.0143%" height="15" fill="rgb(230,25,16)" fg:x="220903" fg:w="68"/><text x="46.5858%" y="671.50"></text></g><g><title>netif_receive_skb_list_internal (80 samples, 0.02%)</title><rect x="46.3337%" y="757" width="0.0168%" height="15" fill="rgb(246,108,53)" fg:x="220893" fg:w="80"/><text x="46.5837%" y="767.50"></text></g><g><title>napi_complete_done (81 samples, 0.02%)</title><rect x="46.3337%" y="789" width="0.0170%" height="15" fill="rgb(241,172,50)" fg:x="220893" fg:w="81"/><text x="46.5837%" y="799.50"></text></g><g><title>gro_normal_list.part.0 (81 samples, 0.02%)</title><rect x="46.3337%" y="773" width="0.0170%" height="15" fill="rgb(235,141,10)" fg:x="220893" fg:w="81"/><text x="46.5837%" y="783.50"></text></g><g><title>net_rx_action (123 samples, 0.03%)</title><rect x="46.3322%" y="821" width="0.0258%" height="15" fill="rgb(220,174,43)" fg:x="220886" fg:w="123"/><text x="46.5822%" y="831.50"></text></g><g><title>virtnet_poll (120 samples, 0.03%)</title><rect x="46.3328%" y="805" width="0.0252%" height="15" fill="rgb(215,181,40)" fg:x="220889" fg:w="120"/><text x="46.5828%" y="815.50"></text></g><g><title>ret_from_intr (134 samples, 0.03%)</title><rect x="46.3301%" y="885" width="0.0281%" height="15" fill="rgb(230,97,2)" fg:x="220876" fg:w="134"/><text x="46.5801%" y="895.50"></text></g><g><title>do_IRQ (134 samples, 0.03%)</title><rect x="46.3301%" y="869" width="0.0281%" height="15" fill="rgb(211,25,27)" fg:x="220876" fg:w="134"/><text x="46.5801%" y="879.50"></text></g><g><title>irq_exit (134 samples, 0.03%)</title><rect x="46.3301%" y="853" width="0.0281%" height="15" fill="rgb(230,87,26)" fg:x="220876" fg:w="134"/><text x="46.5801%" y="863.50"></text></g><g><title>__softirqentry_text_start (134 samples, 0.03%)</title><rect x="46.3301%" y="837" width="0.0281%" height="15" fill="rgb(227,160,17)" fg:x="220876" fg:w="134"/><text x="46.5801%" y="847.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (399 samples, 0.08%)</title><rect x="46.2747%" y="917" width="0.0837%" height="15" fill="rgb(244,85,34)" fg:x="220612" fg:w="399"/><text x="46.5247%" y="927.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::counter (399 samples, 0.08%)</title><rect x="46.2747%" y="901" width="0.0837%" height="15" fill="rgb(207,70,0)" fg:x="220612" fg:w="399"/><text x="46.5247%" y="911.50"></text></g><g><title>ip_protocol_deliver_rcu (84 samples, 0.02%)</title><rect x="46.9569%" y="629" width="0.0176%" height="15" fill="rgb(223,129,7)" fg:x="223864" fg:w="84"/><text x="47.2069%" y="639.50"></text></g><g><title>tcp_v4_rcv (73 samples, 0.02%)</title><rect x="46.9592%" y="613" width="0.0153%" height="15" fill="rgb(246,105,7)" fg:x="223875" fg:w="73"/><text x="47.2092%" y="623.50"></text></g><g><title>tcp_v4_do_rcv (70 samples, 0.01%)</title><rect x="46.9598%" y="597" width="0.0147%" height="15" fill="rgb(215,154,42)" fg:x="223878" fg:w="70"/><text x="47.2098%" y="607.50"></text></g><g><title>tcp_rcv_established (68 samples, 0.01%)</title><rect x="46.9602%" y="581" width="0.0143%" height="15" fill="rgb(220,215,30)" fg:x="223880" fg:w="68"/><text x="47.2102%" y="591.50"></text></g><g><title>__netif_receive_skb_list_core (102 samples, 0.02%)</title><rect x="46.9533%" y="725" width="0.0214%" height="15" fill="rgb(228,81,51)" fg:x="223847" fg:w="102"/><text x="47.2033%" y="735.50"></text></g><g><title>ip_list_rcv (98 samples, 0.02%)</title><rect x="46.9541%" y="709" width="0.0206%" height="15" fill="rgb(247,71,54)" fg:x="223851" fg:w="98"/><text x="47.2041%" y="719.50"></text></g><g><title>ip_sublist_rcv (98 samples, 0.02%)</title><rect x="46.9541%" y="693" width="0.0206%" height="15" fill="rgb(234,176,34)" fg:x="223851" fg:w="98"/><text x="47.2041%" y="703.50"></text></g><g><title>ip_sublist_rcv_finish (86 samples, 0.02%)</title><rect x="46.9566%" y="677" width="0.0180%" height="15" fill="rgb(241,103,54)" fg:x="223863" fg:w="86"/><text x="47.2066%" y="687.50"></text></g><g><title>ip_local_deliver (86 samples, 0.02%)</title><rect x="46.9566%" y="661" width="0.0180%" height="15" fill="rgb(228,22,34)" fg:x="223863" fg:w="86"/><text x="47.2066%" y="671.50"></text></g><g><title>ip_local_deliver_finish (85 samples, 0.02%)</title><rect x="46.9569%" y="645" width="0.0178%" height="15" fill="rgb(241,179,48)" fg:x="223864" fg:w="85"/><text x="47.2069%" y="655.50"></text></g><g><title>napi_complete_done (106 samples, 0.02%)</title><rect x="46.9531%" y="773" width="0.0222%" height="15" fill="rgb(235,167,37)" fg:x="223846" fg:w="106"/><text x="47.2031%" y="783.50"></text></g><g><title>gro_normal_list.part.0 (106 samples, 0.02%)</title><rect x="46.9531%" y="757" width="0.0222%" height="15" fill="rgb(213,109,30)" fg:x="223846" fg:w="106"/><text x="47.2031%" y="767.50"></text></g><g><title>netif_receive_skb_list_internal (106 samples, 0.02%)</title><rect x="46.9531%" y="741" width="0.0222%" height="15" fill="rgb(222,172,16)" fg:x="223846" fg:w="106"/><text x="47.2031%" y="751.50"></text></g><g><title>__softirqentry_text_start (173 samples, 0.04%)</title><rect x="46.9483%" y="821" width="0.0363%" height="15" fill="rgb(233,192,5)" fg:x="223823" fg:w="173"/><text x="47.1983%" y="831.50"></text></g><g><title>net_rx_action (159 samples, 0.03%)</title><rect x="46.9512%" y="805" width="0.0334%" height="15" fill="rgb(247,189,41)" fg:x="223837" fg:w="159"/><text x="47.2012%" y="815.50"></text></g><g><title>virtnet_poll (156 samples, 0.03%)</title><rect x="46.9518%" y="789" width="0.0327%" height="15" fill="rgb(218,134,47)" fg:x="223840" fg:w="156"/><text x="47.2018%" y="799.50"></text></g><g><title>&lt;crossbeam_channel::flavors::zero::ZeroToken as core::default::Default&gt;::default (462 samples, 0.10%)</title><rect x="46.8878%" y="885" width="0.0969%" height="15" fill="rgb(216,29,3)" fg:x="223535" fg:w="462"/><text x="47.1378%" y="895.50"></text></g><g><title>ret_from_intr (174 samples, 0.04%)</title><rect x="46.9483%" y="869" width="0.0365%" height="15" fill="rgb(246,140,12)" fg:x="223823" fg:w="174"/><text x="47.1983%" y="879.50"></text></g><g><title>do_IRQ (174 samples, 0.04%)</title><rect x="46.9483%" y="853" width="0.0365%" height="15" fill="rgb(230,136,11)" fg:x="223823" fg:w="174"/><text x="47.1983%" y="863.50"></text></g><g><title>irq_exit (174 samples, 0.04%)</title><rect x="46.9483%" y="837" width="0.0365%" height="15" fill="rgb(247,22,47)" fg:x="223823" fg:w="174"/><text x="47.1983%" y="847.50"></text></g><g><title>ret_from_intr (59 samples, 0.01%)</title><rect x="46.9850%" y="885" width="0.0124%" height="15" fill="rgb(218,84,22)" fg:x="223998" fg:w="59"/><text x="47.2350%" y="895.50"></text></g><g><title>do_IRQ (59 samples, 0.01%)</title><rect x="46.9850%" y="869" width="0.0124%" height="15" fill="rgb(216,87,39)" fg:x="223998" fg:w="59"/><text x="47.2350%" y="879.50"></text></g><g><title>irq_exit (59 samples, 0.01%)</title><rect x="46.9850%" y="853" width="0.0124%" height="15" fill="rgb(221,178,8)" fg:x="223998" fg:w="59"/><text x="47.2350%" y="863.50"></text></g><g><title>__softirqentry_text_start (59 samples, 0.01%)</title><rect x="46.9850%" y="837" width="0.0124%" height="15" fill="rgb(230,42,11)" fg:x="223998" fg:w="59"/><text x="47.2350%" y="847.50"></text></g><g><title>net_rx_action (53 samples, 0.01%)</title><rect x="46.9862%" y="821" width="0.0111%" height="15" fill="rgb(237,229,4)" fg:x="224004" fg:w="53"/><text x="47.2362%" y="831.50"></text></g><g><title>virtnet_poll (53 samples, 0.01%)</title><rect x="46.9862%" y="805" width="0.0111%" height="15" fill="rgb(222,31,33)" fg:x="224004" fg:w="53"/><text x="47.2362%" y="815.50"></text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (596 samples, 0.13%)</title><rect x="46.8725%" y="901" width="0.1250%" height="15" fill="rgb(210,17,39)" fg:x="223462" fg:w="596"/><text x="47.1225%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (80 samples, 0.02%)</title><rect x="47.0124%" y="885" width="0.0168%" height="15" fill="rgb(244,93,20)" fg:x="224129" fg:w="80"/><text x="47.2624%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_or (80 samples, 0.02%)</title><rect x="47.0124%" y="869" width="0.0168%" height="15" fill="rgb(210,40,47)" fg:x="224129" fg:w="80"/><text x="47.2624%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (110 samples, 0.02%)</title><rect x="47.0303%" y="885" width="0.0231%" height="15" fill="rgb(239,211,47)" fg:x="224214" fg:w="110"/><text x="47.2803%" y="895.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (257 samples, 0.05%)</title><rect x="47.0001%" y="901" width="0.0539%" height="15" fill="rgb(251,223,49)" fg:x="224070" fg:w="257"/><text x="47.2501%" y="911.50"></text></g><g><title>tcp_v4_do_rcv (76 samples, 0.02%)</title><rect x="48.3941%" y="581" width="0.0159%" height="15" fill="rgb(221,149,5)" fg:x="230716" fg:w="76"/><text x="48.6441%" y="591.50"></text></g><g><title>tcp_rcv_established (75 samples, 0.02%)</title><rect x="48.3943%" y="565" width="0.0157%" height="15" fill="rgb(219,224,51)" fg:x="230717" fg:w="75"/><text x="48.6443%" y="575.50"></text></g><g><title>ip_list_rcv (117 samples, 0.02%)</title><rect x="48.3857%" y="693" width="0.0245%" height="15" fill="rgb(223,7,8)" fg:x="230676" fg:w="117"/><text x="48.6357%" y="703.50"></text></g><g><title>ip_sublist_rcv (115 samples, 0.02%)</title><rect x="48.3861%" y="677" width="0.0241%" height="15" fill="rgb(241,217,22)" fg:x="230678" fg:w="115"/><text x="48.6361%" y="687.50"></text></g><g><title>ip_sublist_rcv_finish (103 samples, 0.02%)</title><rect x="48.3887%" y="661" width="0.0216%" height="15" fill="rgb(248,209,0)" fg:x="230690" fg:w="103"/><text x="48.6387%" y="671.50"></text></g><g><title>ip_local_deliver (103 samples, 0.02%)</title><rect x="48.3887%" y="645" width="0.0216%" height="15" fill="rgb(217,205,4)" fg:x="230690" fg:w="103"/><text x="48.6387%" y="655.50"></text></g><g><title>ip_local_deliver_finish (102 samples, 0.02%)</title><rect x="48.3889%" y="629" width="0.0214%" height="15" fill="rgb(228,124,39)" fg:x="230691" fg:w="102"/><text x="48.6389%" y="639.50"></text></g><g><title>ip_protocol_deliver_rcu (102 samples, 0.02%)</title><rect x="48.3889%" y="613" width="0.0214%" height="15" fill="rgb(250,116,42)" fg:x="230691" fg:w="102"/><text x="48.6389%" y="623.50"></text></g><g><title>tcp_v4_rcv (85 samples, 0.02%)</title><rect x="48.3924%" y="597" width="0.0178%" height="15" fill="rgb(223,202,9)" fg:x="230708" fg:w="85"/><text x="48.6424%" y="607.50"></text></g><g><title>__netif_receive_skb_list_core (122 samples, 0.03%)</title><rect x="48.3849%" y="709" width="0.0256%" height="15" fill="rgb(242,222,40)" fg:x="230672" fg:w="122"/><text x="48.6349%" y="719.50"></text></g><g><title>napi_complete_done (127 samples, 0.03%)</title><rect x="48.3840%" y="757" width="0.0266%" height="15" fill="rgb(229,99,46)" fg:x="230668" fg:w="127"/><text x="48.6340%" y="767.50"></text></g><g><title>gro_normal_list.part.0 (125 samples, 0.03%)</title><rect x="48.3845%" y="741" width="0.0262%" height="15" fill="rgb(225,56,46)" fg:x="230670" fg:w="125"/><text x="48.6345%" y="751.50"></text></g><g><title>netif_receive_skb_list_internal (124 samples, 0.03%)</title><rect x="48.3847%" y="725" width="0.0260%" height="15" fill="rgb(227,94,5)" fg:x="230671" fg:w="124"/><text x="48.6347%" y="735.50"></text></g><g><title>__softirqentry_text_start (215 samples, 0.05%)</title><rect x="48.3771%" y="805" width="0.0451%" height="15" fill="rgb(205,112,38)" fg:x="230635" fg:w="215"/><text x="48.6271%" y="815.50"></text></g><g><title>net_rx_action (194 samples, 0.04%)</title><rect x="48.3815%" y="789" width="0.0407%" height="15" fill="rgb(231,133,46)" fg:x="230656" fg:w="194"/><text x="48.6315%" y="799.50"></text></g><g><title>virtnet_poll (192 samples, 0.04%)</title><rect x="48.3819%" y="773" width="0.0403%" height="15" fill="rgb(217,16,9)" fg:x="230658" fg:w="192"/><text x="48.6319%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (602 samples, 0.13%)</title><rect x="48.2962%" y="885" width="0.1263%" height="15" fill="rgb(249,173,9)" fg:x="230249" fg:w="602"/><text x="48.5462%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (602 samples, 0.13%)</title><rect x="48.2962%" y="869" width="0.1263%" height="15" fill="rgb(205,163,53)" fg:x="230249" fg:w="602"/><text x="48.5462%" y="879.50"></text></g><g><title>ret_from_intr (216 samples, 0.05%)</title><rect x="48.3771%" y="853" width="0.0453%" height="15" fill="rgb(217,54,41)" fg:x="230635" fg:w="216"/><text x="48.6271%" y="863.50"></text></g><g><title>do_IRQ (216 samples, 0.05%)</title><rect x="48.3771%" y="837" width="0.0453%" height="15" fill="rgb(228,216,12)" fg:x="230635" fg:w="216"/><text x="48.6271%" y="847.50"></text></g><g><title>irq_exit (216 samples, 0.05%)</title><rect x="48.3771%" y="821" width="0.0453%" height="15" fill="rgb(244,228,15)" fg:x="230635" fg:w="216"/><text x="48.6271%" y="831.50"></text></g><g><title>__inet_lookup_established (142 samples, 0.03%)</title><rect x="50.7513%" y="629" width="0.0298%" height="15" fill="rgb(221,176,53)" fg:x="241954" fg:w="142"/><text x="51.0013%" y="639.50"></text></g><g><title>ip_rcv_finish_core.isra.0 (217 samples, 0.05%)</title><rect x="50.7377%" y="661" width="0.0455%" height="15" fill="rgb(205,94,34)" fg:x="241889" fg:w="217"/><text x="50.9877%" y="671.50"></text></g><g><title>tcp_v4_early_demux (192 samples, 0.04%)</title><rect x="50.7430%" y="645" width="0.0403%" height="15" fill="rgb(213,110,48)" fg:x="241914" fg:w="192"/><text x="50.9930%" y="655.50"></text></g><g><title>kfree_skb (61 samples, 0.01%)</title><rect x="50.8109%" y="549" width="0.0128%" height="15" fill="rgb(236,142,28)" fg:x="242238" fg:w="61"/><text x="51.0609%" y="559.50"></text></g><g><title>raw_rcv_skb (196 samples, 0.04%)</title><rect x="50.8092%" y="565" width="0.0411%" height="15" fill="rgb(225,135,29)" fg:x="242230" fg:w="196"/><text x="51.0592%" y="575.50"></text></g><g><title>sock_queue_rcv_skb (119 samples, 0.02%)</title><rect x="50.8254%" y="549" width="0.0250%" height="15" fill="rgb(252,45,31)" fg:x="242307" fg:w="119"/><text x="51.0754%" y="559.50"></text></g><g><title>sk_filter_trim_cap (93 samples, 0.02%)</title><rect x="50.8308%" y="533" width="0.0195%" height="15" fill="rgb(211,187,50)" fg:x="242333" fg:w="93"/><text x="51.0808%" y="543.50"></text></g><g><title>raw_rcv (210 samples, 0.04%)</title><rect x="50.8069%" y="581" width="0.0440%" height="15" fill="rgb(229,109,7)" fg:x="242219" fg:w="210"/><text x="51.0569%" y="591.50"></text></g><g><title>raw_local_deliver (370 samples, 0.08%)</title><rect x="50.7990%" y="597" width="0.0776%" height="15" fill="rgb(251,131,51)" fg:x="242181" fg:w="370"/><text x="51.0490%" y="607.50"></text></g><g><title>skb_clone (122 samples, 0.03%)</title><rect x="50.8510%" y="581" width="0.0256%" height="15" fill="rgb(251,180,35)" fg:x="242429" fg:w="122"/><text x="51.1010%" y="591.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (48 samples, 0.01%)</title><rect x="50.9030%" y="565" width="0.0101%" height="15" fill="rgb(211,46,32)" fg:x="242677" fg:w="48"/><text x="51.1530%" y="575.50"></text></g><g><title>sk_filter_trim_cap (70 samples, 0.01%)</title><rect x="50.9007%" y="581" width="0.0147%" height="15" fill="rgb(248,123,17)" fg:x="242666" fg:w="70"/><text x="51.1507%" y="591.50"></text></g><g><title>kfree_skbmem (84 samples, 0.02%)</title><rect x="51.0108%" y="501" width="0.0176%" height="15" fill="rgb(227,141,18)" fg:x="243191" fg:w="84"/><text x="51.2608%" y="511.50"></text></g><g><title>kmem_cache_free (73 samples, 0.02%)</title><rect x="51.0131%" y="485" width="0.0153%" height="15" fill="rgb(216,102,9)" fg:x="243202" fg:w="73"/><text x="51.2631%" y="495.50"></text></g><g><title>__slab_free (49 samples, 0.01%)</title><rect x="51.0182%" y="469" width="0.0103%" height="15" fill="rgb(253,47,13)" fg:x="243226" fg:w="49"/><text x="51.2682%" y="479.50"></text></g><g><title>skb_release_data (230 samples, 0.05%)</title><rect x="51.0286%" y="485" width="0.0482%" height="15" fill="rgb(226,93,23)" fg:x="243276" fg:w="230"/><text x="51.2786%" y="495.50"></text></g><g><title>skb_free_head (73 samples, 0.02%)</title><rect x="51.0616%" y="469" width="0.0153%" height="15" fill="rgb(247,104,17)" fg:x="243433" fg:w="73"/><text x="51.3116%" y="479.50"></text></g><g><title>kfree (72 samples, 0.02%)</title><rect x="51.0618%" y="453" width="0.0151%" height="15" fill="rgb(233,203,26)" fg:x="243434" fg:w="72"/><text x="51.3118%" y="463.50"></text></g><g><title>__slab_free (51 samples, 0.01%)</title><rect x="51.0662%" y="437" width="0.0107%" height="15" fill="rgb(244,98,49)" fg:x="243455" fg:w="51"/><text x="51.3162%" y="447.50"></text></g><g><title>skb_release_all (237 samples, 0.05%)</title><rect x="51.0284%" y="501" width="0.0497%" height="15" fill="rgb(235,134,22)" fg:x="243275" fg:w="237"/><text x="51.2784%" y="511.50"></text></g><g><title>__kfree_skb (325 samples, 0.07%)</title><rect x="51.0106%" y="517" width="0.0682%" height="15" fill="rgb(221,70,32)" fg:x="243190" fg:w="325"/><text x="51.2606%" y="527.50"></text></g><g><title>tcp_clean_rtx_queue (473 samples, 0.10%)</title><rect x="50.9905%" y="533" width="0.0992%" height="15" fill="rgb(238,15,50)" fg:x="243094" fg:w="473"/><text x="51.2405%" y="543.50"></text></g><g><title>tcp_ack (666 samples, 0.14%)</title><rect x="50.9577%" y="549" width="0.1397%" height="15" fill="rgb(215,221,48)" fg:x="242938" fg:w="666"/><text x="51.2077%" y="559.50"></text></g><g><title>__lock_text_start (697 samples, 0.15%)</title><rect x="51.1037%" y="485" width="0.1462%" height="15" fill="rgb(236,73,3)" fg:x="243634" fg:w="697"/><text x="51.3537%" y="495.50"></text></g><g><title>__wake_up_common_lock (707 samples, 0.15%)</title><rect x="51.1021%" y="501" width="0.1483%" height="15" fill="rgb(250,107,11)" fg:x="243626" fg:w="707"/><text x="51.3521%" y="511.50"></text></g><g><title>tcp_data_ready (730 samples, 0.15%)</title><rect x="51.0974%" y="549" width="0.1531%" height="15" fill="rgb(242,39,14)" fg:x="243604" fg:w="730"/><text x="51.3474%" y="559.50"></text></g><g><title>sock_def_readable (727 samples, 0.15%)</title><rect x="51.0981%" y="533" width="0.1525%" height="15" fill="rgb(248,164,37)" fg:x="243607" fg:w="727"/><text x="51.3481%" y="543.50"></text></g><g><title>__wake_up_sync_key (710 samples, 0.15%)</title><rect x="51.1016%" y="517" width="0.1489%" height="15" fill="rgb(217,60,12)" fg:x="243624" fg:w="710"/><text x="51.3516%" y="527.50"></text></g><g><title>ktime_get (79 samples, 0.02%)</title><rect x="51.2606%" y="533" width="0.0166%" height="15" fill="rgb(240,125,29)" fg:x="244382" fg:w="79"/><text x="51.5106%" y="543.50"></text></g><g><title>tcp_mstamp_refresh (125 samples, 0.03%)</title><rect x="51.2533%" y="549" width="0.0262%" height="15" fill="rgb(208,207,28)" fg:x="244347" fg:w="125"/><text x="51.5033%" y="559.50"></text></g><g><title>tcp_queue_rcv (58 samples, 0.01%)</title><rect x="51.2797%" y="549" width="0.0122%" height="15" fill="rgb(209,159,27)" fg:x="244473" fg:w="58"/><text x="51.5297%" y="559.50"></text></g><g><title>tcp_v4_do_rcv (1,808 samples, 0.38%)</title><rect x="50.9168%" y="581" width="0.3792%" height="15" fill="rgb(251,176,53)" fg:x="242743" fg:w="1808"/><text x="51.1668%" y="591.50"></text></g><g><title>tcp_rcv_established (1,749 samples, 0.37%)</title><rect x="50.9292%" y="565" width="0.3669%" height="15" fill="rgb(211,85,7)" fg:x="242802" fg:w="1749"/><text x="51.1792%" y="575.50"></text></g><g><title>ip_protocol_deliver_rcu (2,430 samples, 0.51%)</title><rect x="50.7889%" y="613" width="0.5097%" height="15" fill="rgb(216,64,54)" fg:x="242133" fg:w="2430"/><text x="51.0389%" y="623.50"></text></g><g><title>tcp_v4_rcv (1,992 samples, 0.42%)</title><rect x="50.8808%" y="597" width="0.4178%" height="15" fill="rgb(217,54,24)" fg:x="242571" fg:w="1992"/><text x="51.1308%" y="607.50"></text></g><g><title>ip_local_deliver (2,453 samples, 0.51%)</title><rect x="50.7849%" y="645" width="0.5145%" height="15" fill="rgb(208,206,53)" fg:x="242114" fg:w="2453"/><text x="51.0349%" y="655.50"></text></g><g><title>ip_local_deliver_finish (2,434 samples, 0.51%)</title><rect x="50.7889%" y="629" width="0.5105%" height="15" fill="rgb(251,74,39)" fg:x="242133" fg:w="2434"/><text x="51.0389%" y="639.50"></text></g><g><title>ip_sublist_rcv_finish (2,463 samples, 0.52%)</title><rect x="50.7832%" y="661" width="0.5166%" height="15" fill="rgb(226,47,5)" fg:x="242106" fg:w="2463"/><text x="51.0332%" y="671.50"></text></g><g><title>ip_list_rcv (2,757 samples, 0.58%)</title><rect x="50.7220%" y="693" width="0.5783%" height="15" fill="rgb(234,111,33)" fg:x="241814" fg:w="2757"/><text x="50.9720%" y="703.50"></text></g><g><title>ip_sublist_rcv (2,725 samples, 0.57%)</title><rect x="50.7287%" y="677" width="0.5716%" height="15" fill="rgb(251,14,10)" fg:x="241846" fg:w="2725"/><text x="50.9787%" y="687.50"></text></g><g><title>__netif_receive_skb_list_core (2,807 samples, 0.59%)</title><rect x="50.7117%" y="709" width="0.5888%" height="15" fill="rgb(232,43,0)" fg:x="241765" fg:w="2807"/><text x="50.9617%" y="719.50"></text></g><g><title>ktime_get_with_offset (48 samples, 0.01%)</title><rect x="51.3013%" y="709" width="0.0101%" height="15" fill="rgb(222,68,43)" fg:x="244576" fg:w="48"/><text x="51.5513%" y="719.50"></text></g><g><title>netif_receive_skb_list_internal (2,911 samples, 0.61%)</title><rect x="50.7067%" y="725" width="0.6106%" height="15" fill="rgb(217,24,23)" fg:x="241741" fg:w="2911"/><text x="50.9567%" y="735.50"></text></g><g><title>gro_normal_list.part.0 (2,919 samples, 0.61%)</title><rect x="50.7052%" y="741" width="0.6123%" height="15" fill="rgb(229,209,14)" fg:x="241734" fg:w="2919"/><text x="50.9552%" y="751.50"></text></g><g><title>napi_complete_done (2,936 samples, 0.62%)</title><rect x="50.7018%" y="757" width="0.6158%" height="15" fill="rgb(250,149,48)" fg:x="241718" fg:w="2936"/><text x="50.9518%" y="767.50"></text></g><g><title>__skb_gro_checksum_complete (48 samples, 0.01%)</title><rect x="51.3412%" y="677" width="0.0101%" height="15" fill="rgb(210,120,37)" fg:x="244766" fg:w="48"/><text x="51.5912%" y="687.50"></text></g><g><title>tcp4_gro_receive (94 samples, 0.02%)</title><rect x="51.3368%" y="693" width="0.0197%" height="15" fill="rgb(210,21,8)" fg:x="244745" fg:w="94"/><text x="51.5868%" y="703.50"></text></g><g><title>inet_gro_receive (117 samples, 0.02%)</title><rect x="51.3324%" y="709" width="0.0245%" height="15" fill="rgb(243,145,7)" fg:x="244724" fg:w="117"/><text x="51.5824%" y="719.50"></text></g><g><title>dev_gro_receive (152 samples, 0.03%)</title><rect x="51.3254%" y="725" width="0.0319%" height="15" fill="rgb(238,178,32)" fg:x="244691" fg:w="152"/><text x="51.5754%" y="735.50"></text></g><g><title>tcp_v4_do_rcv (101 samples, 0.02%)</title><rect x="51.3684%" y="549" width="0.0212%" height="15" fill="rgb(222,4,10)" fg:x="244896" fg:w="101"/><text x="51.6184%" y="559.50"></text></g><g><title>tcp_rcv_established (96 samples, 0.02%)</title><rect x="51.3695%" y="533" width="0.0201%" height="15" fill="rgb(239,7,37)" fg:x="244901" fg:w="96"/><text x="51.6195%" y="543.50"></text></g><g><title>__netif_receive_skb_list_core (154 samples, 0.03%)</title><rect x="51.3575%" y="677" width="0.0323%" height="15" fill="rgb(215,31,37)" fg:x="244844" fg:w="154"/><text x="51.6075%" y="687.50"></text></g><g><title>ip_list_rcv (153 samples, 0.03%)</title><rect x="51.3578%" y="661" width="0.0321%" height="15" fill="rgb(224,83,33)" fg:x="244845" fg:w="153"/><text x="51.6078%" y="671.50"></text></g><g><title>ip_sublist_rcv (151 samples, 0.03%)</title><rect x="51.3582%" y="645" width="0.0317%" height="15" fill="rgb(239,55,3)" fg:x="244847" fg:w="151"/><text x="51.6082%" y="655.50"></text></g><g><title>ip_sublist_rcv_finish (134 samples, 0.03%)</title><rect x="51.3617%" y="629" width="0.0281%" height="15" fill="rgb(247,92,11)" fg:x="244864" fg:w="134"/><text x="51.6117%" y="639.50"></text></g><g><title>ip_local_deliver (133 samples, 0.03%)</title><rect x="51.3619%" y="613" width="0.0279%" height="15" fill="rgb(239,200,7)" fg:x="244865" fg:w="133"/><text x="51.6119%" y="623.50"></text></g><g><title>ip_local_deliver_finish (132 samples, 0.03%)</title><rect x="51.3622%" y="597" width="0.0277%" height="15" fill="rgb(227,115,8)" fg:x="244866" fg:w="132"/><text x="51.6122%" y="607.50"></text></g><g><title>ip_protocol_deliver_rcu (132 samples, 0.03%)</title><rect x="51.3622%" y="581" width="0.0277%" height="15" fill="rgb(215,189,27)" fg:x="244866" fg:w="132"/><text x="51.6122%" y="591.50"></text></g><g><title>tcp_v4_rcv (112 samples, 0.02%)</title><rect x="51.3664%" y="565" width="0.0235%" height="15" fill="rgb(251,216,39)" fg:x="244886" fg:w="112"/><text x="51.6164%" y="575.50"></text></g><g><title>napi_gro_receive (318 samples, 0.07%)</title><rect x="51.3240%" y="741" width="0.0667%" height="15" fill="rgb(207,29,47)" fg:x="244684" fg:w="318"/><text x="51.5740%" y="751.50"></text></g><g><title>gro_normal_one (159 samples, 0.03%)</title><rect x="51.3573%" y="725" width="0.0334%" height="15" fill="rgb(210,71,34)" fg:x="244843" fg:w="159"/><text x="51.6073%" y="735.50"></text></g><g><title>gro_normal_list.part.0 (159 samples, 0.03%)</title><rect x="51.3573%" y="709" width="0.0334%" height="15" fill="rgb(253,217,51)" fg:x="244843" fg:w="159"/><text x="51.6073%" y="719.50"></text></g><g><title>netif_receive_skb_list_internal (159 samples, 0.03%)</title><rect x="51.3573%" y="693" width="0.0334%" height="15" fill="rgb(222,117,46)" fg:x="244843" fg:w="159"/><text x="51.6073%" y="703.50"></text></g><g><title>memcpy_erms (86 samples, 0.02%)</title><rect x="51.4177%" y="725" width="0.0180%" height="15" fill="rgb(226,132,6)" fg:x="245131" fg:w="86"/><text x="51.6677%" y="735.50"></text></g><g><title>__kmalloc_reserve.isra.0 (79 samples, 0.02%)</title><rect x="51.4656%" y="677" width="0.0166%" height="15" fill="rgb(254,145,51)" fg:x="245359" fg:w="79"/><text x="51.7156%" y="687.50"></text></g><g><title>__alloc_skb (246 samples, 0.05%)</title><rect x="51.4475%" y="693" width="0.0516%" height="15" fill="rgb(231,199,27)" fg:x="245273" fg:w="246"/><text x="51.6975%" y="703.50"></text></g><g><title>__napi_alloc_skb (257 samples, 0.05%)</title><rect x="51.4469%" y="709" width="0.0539%" height="15" fill="rgb(245,158,14)" fg:x="245270" fg:w="257"/><text x="51.6969%" y="719.50"></text></g><g><title>page_to_skb (334 samples, 0.07%)</title><rect x="51.4358%" y="725" width="0.0701%" height="15" fill="rgb(240,113,14)" fg:x="245217" fg:w="334"/><text x="51.6858%" y="735.50"></text></g><g><title>receive_buf (896 samples, 0.19%)</title><rect x="51.3181%" y="757" width="0.1879%" height="15" fill="rgb(210,20,13)" fg:x="244656" fg:w="896"/><text x="51.5681%" y="767.50"></text></g><g><title>receive_mergeable (550 samples, 0.12%)</title><rect x="51.3907%" y="741" width="0.1154%" height="15" fill="rgb(241,144,13)" fg:x="245002" fg:w="550"/><text x="51.6407%" y="751.50"></text></g><g><title>clear_page_erms (134 samples, 0.03%)</title><rect x="51.5209%" y="677" width="0.0281%" height="15" fill="rgb(235,43,34)" fg:x="245623" fg:w="134"/><text x="51.7709%" y="687.50"></text></g><g><title>__alloc_pages_nodemask (149 samples, 0.03%)</title><rect x="51.5203%" y="709" width="0.0313%" height="15" fill="rgb(208,36,20)" fg:x="245620" fg:w="149"/><text x="51.7703%" y="719.50"></text></g><g><title>get_page_from_freelist (148 samples, 0.03%)</title><rect x="51.5205%" y="693" width="0.0310%" height="15" fill="rgb(239,204,10)" fg:x="245621" fg:w="148"/><text x="51.7705%" y="703.50"></text></g><g><title>skb_page_frag_refill (163 samples, 0.03%)</title><rect x="51.5176%" y="741" width="0.0342%" height="15" fill="rgb(217,84,43)" fg:x="245607" fg:w="163"/><text x="51.7676%" y="751.50"></text></g><g><title>alloc_pages_current (153 samples, 0.03%)</title><rect x="51.5197%" y="725" width="0.0321%" height="15" fill="rgb(241,170,50)" fg:x="245617" fg:w="153"/><text x="51.7697%" y="735.50"></text></g><g><title>try_fill_recv (250 samples, 0.05%)</title><rect x="51.5067%" y="757" width="0.0524%" height="15" fill="rgb(226,205,29)" fg:x="245555" fg:w="250"/><text x="51.7567%" y="767.50"></text></g><g><title>virtqueue_get_buf_ctx (86 samples, 0.02%)</title><rect x="51.5604%" y="757" width="0.0180%" height="15" fill="rgb(233,113,1)" fg:x="245811" fg:w="86"/><text x="51.8104%" y="767.50"></text></g><g><title>virtnet_poll (4,319 samples, 0.91%)</title><rect x="50.6735%" y="773" width="0.9059%" height="15" fill="rgb(253,98,13)" fg:x="241583" fg:w="4319"/><text x="50.9235%" y="783.50"></text></g><g><title>net_rx_action (4,361 samples, 0.91%)</title><rect x="50.6668%" y="789" width="0.9147%" height="15" fill="rgb(211,115,12)" fg:x="241551" fg:w="4361"/><text x="50.9168%" y="799.50"></text></g><g><title>__softirqentry_text_start (4,743 samples, 0.99%)</title><rect x="50.5879%" y="805" width="0.9949%" height="15" fill="rgb(208,12,16)" fg:x="241175" fg:w="4743"/><text x="50.8379%" y="815.50"></text></g><g><title>ret_from_intr (4,756 samples, 1.00%)</title><rect x="50.5879%" y="853" width="0.9976%" height="15" fill="rgb(237,193,54)" fg:x="241175" fg:w="4756"/><text x="50.8379%" y="863.50"></text></g><g><title>do_IRQ (4,756 samples, 1.00%)</title><rect x="50.5879%" y="837" width="0.9976%" height="15" fill="rgb(243,22,42)" fg:x="241175" fg:w="4756"/><text x="50.8379%" y="847.50"></text></g><g><title>irq_exit (4,756 samples, 1.00%)</title><rect x="50.5879%" y="821" width="0.9976%" height="15" fill="rgb(233,151,36)" fg:x="241175" fg:w="4756"/><text x="50.8379%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15,096 samples, 3.17%)</title><rect x="48.4224%" y="885" width="3.1665%" height="15" fill="rgb(237,57,45)" fg:x="230851" fg:w="15096"/><text x="48.6724%" y="895.50">cor..</text></g><g><title>core::sync::atomic::atomic_load (15,096 samples, 3.17%)</title><rect x="48.4224%" y="869" width="3.1665%" height="15" fill="rgb(221,88,17)" fg:x="230851" fg:w="15096"/><text x="48.6724%" y="879.50">cor..</text></g><g><title>__netif_receive_skb_list_core (67 samples, 0.01%)</title><rect x="51.6481%" y="725" width="0.0141%" height="15" fill="rgb(230,79,15)" fg:x="246229" fg:w="67"/><text x="51.8981%" y="735.50"></text></g><g><title>ip_list_rcv (67 samples, 0.01%)</title><rect x="51.6481%" y="709" width="0.0141%" height="15" fill="rgb(213,57,13)" fg:x="246229" fg:w="67"/><text x="51.8981%" y="719.50"></text></g><g><title>ip_sublist_rcv (66 samples, 0.01%)</title><rect x="51.6483%" y="693" width="0.0138%" height="15" fill="rgb(222,116,39)" fg:x="246230" fg:w="66"/><text x="51.8983%" y="703.50"></text></g><g><title>ip_sublist_rcv_finish (60 samples, 0.01%)</title><rect x="51.6495%" y="677" width="0.0126%" height="15" fill="rgb(245,107,2)" fg:x="246236" fg:w="60"/><text x="51.8995%" y="687.50"></text></g><g><title>ip_local_deliver (60 samples, 0.01%)</title><rect x="51.6495%" y="661" width="0.0126%" height="15" fill="rgb(238,1,10)" fg:x="246236" fg:w="60"/><text x="51.8995%" y="671.50"></text></g><g><title>ip_local_deliver_finish (60 samples, 0.01%)</title><rect x="51.6495%" y="645" width="0.0126%" height="15" fill="rgb(249,4,48)" fg:x="246236" fg:w="60"/><text x="51.8995%" y="655.50"></text></g><g><title>ip_protocol_deliver_rcu (60 samples, 0.01%)</title><rect x="51.6495%" y="629" width="0.0126%" height="15" fill="rgb(223,151,18)" fg:x="246236" fg:w="60"/><text x="51.8995%" y="639.50"></text></g><g><title>napi_complete_done (68 samples, 0.01%)</title><rect x="51.6481%" y="773" width="0.0143%" height="15" fill="rgb(227,65,43)" fg:x="246229" fg:w="68"/><text x="51.8981%" y="783.50"></text></g><g><title>gro_normal_list.part.0 (68 samples, 0.01%)</title><rect x="51.6481%" y="757" width="0.0143%" height="15" fill="rgb(218,40,45)" fg:x="246229" fg:w="68"/><text x="51.8981%" y="767.50"></text></g><g><title>netif_receive_skb_list_internal (68 samples, 0.01%)</title><rect x="51.6481%" y="741" width="0.0143%" height="15" fill="rgb(252,121,31)" fg:x="246229" fg:w="68"/><text x="51.8981%" y="751.50"></text></g><g><title>ret_from_intr (114 samples, 0.02%)</title><rect x="51.6455%" y="869" width="0.0239%" height="15" fill="rgb(219,158,43)" fg:x="246217" fg:w="114"/><text x="51.8955%" y="879.50"></text></g><g><title>do_IRQ (114 samples, 0.02%)</title><rect x="51.6455%" y="853" width="0.0239%" height="15" fill="rgb(231,162,42)" fg:x="246217" fg:w="114"/><text x="51.8955%" y="863.50"></text></g><g><title>irq_exit (114 samples, 0.02%)</title><rect x="51.6455%" y="837" width="0.0239%" height="15" fill="rgb(217,179,25)" fg:x="246217" fg:w="114"/><text x="51.8955%" y="847.50"></text></g><g><title>__softirqentry_text_start (114 samples, 0.02%)</title><rect x="51.6455%" y="821" width="0.0239%" height="15" fill="rgb(206,212,31)" fg:x="246217" fg:w="114"/><text x="51.8955%" y="831.50"></text></g><g><title>net_rx_action (105 samples, 0.02%)</title><rect x="51.6474%" y="805" width="0.0220%" height="15" fill="rgb(235,144,12)" fg:x="246226" fg:w="105"/><text x="51.8974%" y="815.50"></text></g><g><title>virtnet_poll (105 samples, 0.02%)</title><rect x="51.6474%" y="789" width="0.0220%" height="15" fill="rgb(213,51,10)" fg:x="246226" fg:w="105"/><text x="51.8974%" y="799.50"></text></g><g><title>core::sync::atomic::fence (385 samples, 0.08%)</title><rect x="51.5889%" y="885" width="0.0808%" height="15" fill="rgb(231,145,14)" fg:x="245947" fg:w="385"/><text x="51.8389%" y="895.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::spin (54 samples, 0.01%)</title><rect x="51.6743%" y="885" width="0.0113%" height="15" fill="rgb(235,15,28)" fg:x="246354" fg:w="54"/><text x="51.9243%" y="895.50"></text></g><g><title>__inet_lookup_established (107 samples, 0.02%)</title><rect x="51.7844%" y="661" width="0.0224%" height="15" fill="rgb(237,206,10)" fg:x="246879" fg:w="107"/><text x="52.0344%" y="671.50"></text></g><g><title>ip_rcv_finish_core.isra.0 (160 samples, 0.03%)</title><rect x="51.7743%" y="693" width="0.0336%" height="15" fill="rgb(236,227,27)" fg:x="246831" fg:w="160"/><text x="52.0243%" y="703.50"></text></g><g><title>tcp_v4_early_demux (134 samples, 0.03%)</title><rect x="51.7798%" y="677" width="0.0281%" height="15" fill="rgb(246,83,35)" fg:x="246857" fg:w="134"/><text x="52.0298%" y="687.50"></text></g><g><title>kfree_skb (58 samples, 0.01%)</title><rect x="51.8236%" y="581" width="0.0122%" height="15" fill="rgb(220,136,24)" fg:x="247066" fg:w="58"/><text x="52.0736%" y="591.50"></text></g><g><title>raw_rcv_skb (146 samples, 0.03%)</title><rect x="51.8228%" y="597" width="0.0306%" height="15" fill="rgb(217,3,25)" fg:x="247062" fg:w="146"/><text x="52.0728%" y="607.50"></text></g><g><title>sock_queue_rcv_skb (75 samples, 0.02%)</title><rect x="51.8377%" y="581" width="0.0157%" height="15" fill="rgb(239,24,14)" fg:x="247133" fg:w="75"/><text x="52.0877%" y="591.50"></text></g><g><title>sk_filter_trim_cap (59 samples, 0.01%)</title><rect x="51.8410%" y="565" width="0.0124%" height="15" fill="rgb(244,16,53)" fg:x="247149" fg:w="59"/><text x="52.0910%" y="575.50"></text></g><g><title>raw_rcv (163 samples, 0.03%)</title><rect x="51.8213%" y="613" width="0.0342%" height="15" fill="rgb(208,175,44)" fg:x="247055" fg:w="163"/><text x="52.0713%" y="623.50"></text></g><g><title>raw_local_deliver (265 samples, 0.06%)</title><rect x="51.8167%" y="629" width="0.0556%" height="15" fill="rgb(252,18,48)" fg:x="247033" fg:w="265"/><text x="52.0667%" y="639.50"></text></g><g><title>skb_clone (80 samples, 0.02%)</title><rect x="51.8555%" y="613" width="0.0168%" height="15" fill="rgb(234,199,32)" fg:x="247218" fg:w="80"/><text x="52.1055%" y="623.50"></text></g><g><title>kfree_skbmem (56 samples, 0.01%)</title><rect x="51.9679%" y="533" width="0.0117%" height="15" fill="rgb(225,77,54)" fg:x="247754" fg:w="56"/><text x="52.2179%" y="543.50"></text></g><g><title>skb_release_data (123 samples, 0.03%)</title><rect x="51.9799%" y="517" width="0.0258%" height="15" fill="rgb(225,42,25)" fg:x="247811" fg:w="123"/><text x="52.2299%" y="527.50"></text></g><g><title>skb_release_all (130 samples, 0.03%)</title><rect x="51.9799%" y="533" width="0.0273%" height="15" fill="rgb(242,227,46)" fg:x="247811" fg:w="130"/><text x="52.2299%" y="543.50"></text></g><g><title>__kfree_skb (190 samples, 0.04%)</title><rect x="51.9677%" y="549" width="0.0399%" height="15" fill="rgb(246,197,35)" fg:x="247753" fg:w="190"/><text x="52.2177%" y="559.50"></text></g><g><title>tcp_clean_rtx_queue (288 samples, 0.06%)</title><rect x="51.9541%" y="565" width="0.0604%" height="15" fill="rgb(215,159,26)" fg:x="247688" fg:w="288"/><text x="52.2041%" y="575.50"></text></g><g><title>tcp_ack (407 samples, 0.09%)</title><rect x="51.9342%" y="581" width="0.0854%" height="15" fill="rgb(212,194,50)" fg:x="247593" fg:w="407"/><text x="52.1842%" y="591.50"></text></g><g><title>__lock_text_start (380 samples, 0.08%)</title><rect x="52.0239%" y="517" width="0.0797%" height="15" fill="rgb(246,132,1)" fg:x="248021" fg:w="380"/><text x="52.2739%" y="527.50"></text></g><g><title>tcp_data_ready (403 samples, 0.08%)</title><rect x="52.0195%" y="581" width="0.0845%" height="15" fill="rgb(217,71,7)" fg:x="248000" fg:w="403"/><text x="52.2695%" y="591.50"></text></g><g><title>sock_def_readable (400 samples, 0.08%)</title><rect x="52.0202%" y="565" width="0.0839%" height="15" fill="rgb(252,59,32)" fg:x="248003" fg:w="400"/><text x="52.2702%" y="575.50"></text></g><g><title>__wake_up_sync_key (387 samples, 0.08%)</title><rect x="52.0229%" y="549" width="0.0812%" height="15" fill="rgb(253,204,25)" fg:x="248016" fg:w="387"/><text x="52.2729%" y="559.50"></text></g><g><title>__wake_up_common_lock (386 samples, 0.08%)</title><rect x="52.0231%" y="533" width="0.0810%" height="15" fill="rgb(232,21,16)" fg:x="248017" fg:w="386"/><text x="52.2731%" y="543.50"></text></g><g><title>ktime_get (51 samples, 0.01%)</title><rect x="52.1095%" y="565" width="0.0107%" height="15" fill="rgb(248,90,29)" fg:x="248429" fg:w="51"/><text x="52.3595%" y="575.50"></text></g><g><title>tcp_mstamp_refresh (70 samples, 0.01%)</title><rect x="52.1062%" y="581" width="0.0147%" height="15" fill="rgb(249,223,7)" fg:x="248413" fg:w="70"/><text x="52.3562%" y="591.50"></text></g><g><title>tcp_rcv_established (1,048 samples, 0.22%)</title><rect x="51.9111%" y="597" width="0.2198%" height="15" fill="rgb(231,119,42)" fg:x="247483" fg:w="1048"/><text x="52.1611%" y="607.50"></text></g><g><title>tcp_v4_do_rcv (1,099 samples, 0.23%)</title><rect x="51.9006%" y="613" width="0.2305%" height="15" fill="rgb(215,41,35)" fg:x="247433" fg:w="1099"/><text x="52.1506%" y="623.50"></text></g><g><title>ip_protocol_deliver_rcu (1,537 samples, 0.32%)</title><rect x="51.8106%" y="645" width="0.3224%" height="15" fill="rgb(220,44,45)" fg:x="247004" fg:w="1537"/><text x="52.0606%" y="655.50"></text></g><g><title>tcp_v4_rcv (1,227 samples, 0.26%)</title><rect x="51.8756%" y="629" width="0.2574%" height="15" fill="rgb(253,197,36)" fg:x="247314" fg:w="1227"/><text x="52.1256%" y="639.50"></text></g><g><title>ip_local_deliver (1,548 samples, 0.32%)</title><rect x="51.8089%" y="677" width="0.3247%" height="15" fill="rgb(245,225,54)" fg:x="246996" fg:w="1548"/><text x="52.0589%" y="687.50"></text></g><g><title>ip_local_deliver_finish (1,540 samples, 0.32%)</title><rect x="51.8106%" y="661" width="0.3230%" height="15" fill="rgb(239,94,37)" fg:x="247004" fg:w="1540"/><text x="52.0606%" y="671.50"></text></g><g><title>ip_sublist_rcv_finish (1,554 samples, 0.33%)</title><rect x="51.8079%" y="693" width="0.3260%" height="15" fill="rgb(242,217,10)" fg:x="246991" fg:w="1554"/><text x="52.0579%" y="703.50"></text></g><g><title>ip_list_rcv (1,752 samples, 0.37%)</title><rect x="51.7666%" y="725" width="0.3675%" height="15" fill="rgb(250,193,7)" fg:x="246794" fg:w="1752"/><text x="52.0166%" y="735.50"></text></g><g><title>ip_sublist_rcv (1,736 samples, 0.36%)</title><rect x="51.7699%" y="709" width="0.3641%" height="15" fill="rgb(230,104,19)" fg:x="246810" fg:w="1736"/><text x="52.0199%" y="719.50"></text></g><g><title>__netif_receive_skb_list_core (1,777 samples, 0.37%)</title><rect x="51.7615%" y="741" width="0.3727%" height="15" fill="rgb(230,181,4)" fg:x="246770" fg:w="1777"/><text x="52.0115%" y="751.50"></text></g><g><title>netif_receive_skb_list_internal (1,829 samples, 0.38%)</title><rect x="51.7599%" y="757" width="0.3836%" height="15" fill="rgb(216,219,49)" fg:x="246762" fg:w="1829"/><text x="52.0099%" y="767.50"></text></g><g><title>napi_complete_done (1,842 samples, 0.39%)</title><rect x="51.7573%" y="789" width="0.3864%" height="15" fill="rgb(254,144,0)" fg:x="246750" fg:w="1842"/><text x="52.0073%" y="799.50"></text></g><g><title>gro_normal_list.part.0 (1,832 samples, 0.38%)</title><rect x="51.7594%" y="773" width="0.3843%" height="15" fill="rgb(205,209,38)" fg:x="246760" fg:w="1832"/><text x="52.0094%" y="783.50"></text></g><g><title>dev_gro_receive (80 samples, 0.02%)</title><rect x="52.1477%" y="757" width="0.0168%" height="15" fill="rgb(240,21,42)" fg:x="248611" fg:w="80"/><text x="52.3977%" y="767.50"></text></g><g><title>inet_gro_receive (63 samples, 0.01%)</title><rect x="52.1513%" y="741" width="0.0132%" height="15" fill="rgb(241,132,3)" fg:x="248628" fg:w="63"/><text x="52.4013%" y="751.50"></text></g><g><title>__netif_receive_skb_list_core (92 samples, 0.02%)</title><rect x="52.1645%" y="709" width="0.0193%" height="15" fill="rgb(225,14,2)" fg:x="248691" fg:w="92"/><text x="52.4145%" y="719.50"></text></g><g><title>ip_list_rcv (91 samples, 0.02%)</title><rect x="52.1647%" y="693" width="0.0191%" height="15" fill="rgb(210,141,35)" fg:x="248692" fg:w="91"/><text x="52.4147%" y="703.50"></text></g><g><title>ip_sublist_rcv (89 samples, 0.02%)</title><rect x="52.1651%" y="677" width="0.0187%" height="15" fill="rgb(251,14,44)" fg:x="248694" fg:w="89"/><text x="52.4151%" y="687.50"></text></g><g><title>ip_sublist_rcv_finish (82 samples, 0.02%)</title><rect x="52.1666%" y="661" width="0.0172%" height="15" fill="rgb(247,48,18)" fg:x="248701" fg:w="82"/><text x="52.4166%" y="671.50"></text></g><g><title>ip_local_deliver (81 samples, 0.02%)</title><rect x="52.1668%" y="645" width="0.0170%" height="15" fill="rgb(225,0,40)" fg:x="248702" fg:w="81"/><text x="52.4168%" y="655.50"></text></g><g><title>ip_local_deliver_finish (81 samples, 0.02%)</title><rect x="52.1668%" y="629" width="0.0170%" height="15" fill="rgb(221,31,33)" fg:x="248702" fg:w="81"/><text x="52.4168%" y="639.50"></text></g><g><title>ip_protocol_deliver_rcu (81 samples, 0.02%)</title><rect x="52.1668%" y="613" width="0.0170%" height="15" fill="rgb(237,42,40)" fg:x="248702" fg:w="81"/><text x="52.4168%" y="623.50"></text></g><g><title>tcp_v4_rcv (66 samples, 0.01%)</title><rect x="52.1699%" y="597" width="0.0138%" height="15" fill="rgb(233,51,29)" fg:x="248717" fg:w="66"/><text x="52.4199%" y="607.50"></text></g><g><title>tcp_v4_do_rcv (60 samples, 0.01%)</title><rect x="52.1712%" y="581" width="0.0126%" height="15" fill="rgb(226,58,20)" fg:x="248723" fg:w="60"/><text x="52.4212%" y="591.50"></text></g><g><title>tcp_rcv_established (54 samples, 0.01%)</title><rect x="52.1724%" y="565" width="0.0113%" height="15" fill="rgb(208,98,7)" fg:x="248729" fg:w="54"/><text x="52.4224%" y="575.50"></text></g><g><title>gro_normal_one (94 samples, 0.02%)</title><rect x="52.1645%" y="757" width="0.0197%" height="15" fill="rgb(228,143,44)" fg:x="248691" fg:w="94"/><text x="52.4145%" y="767.50"></text></g><g><title>gro_normal_list.part.0 (94 samples, 0.02%)</title><rect x="52.1645%" y="741" width="0.0197%" height="15" fill="rgb(246,55,38)" fg:x="248691" fg:w="94"/><text x="52.4145%" y="751.50"></text></g><g><title>netif_receive_skb_list_internal (94 samples, 0.02%)</title><rect x="52.1645%" y="725" width="0.0197%" height="15" fill="rgb(247,87,16)" fg:x="248691" fg:w="94"/><text x="52.4145%" y="735.50"></text></g><g><title>napi_gro_receive (178 samples, 0.04%)</title><rect x="52.1471%" y="773" width="0.0373%" height="15" fill="rgb(234,129,42)" fg:x="248608" fg:w="178"/><text x="52.3971%" y="783.50"></text></g><g><title>memcpy_erms (49 samples, 0.01%)</title><rect x="52.2033%" y="757" width="0.0103%" height="15" fill="rgb(220,82,16)" fg:x="248876" fg:w="49"/><text x="52.4533%" y="767.50"></text></g><g><title>__kmalloc_reserve.isra.0 (64 samples, 0.01%)</title><rect x="52.2320%" y="709" width="0.0134%" height="15" fill="rgb(211,88,4)" fg:x="249013" fg:w="64"/><text x="52.4820%" y="719.50"></text></g><g><title>__alloc_skb (175 samples, 0.04%)</title><rect x="52.2209%" y="725" width="0.0367%" height="15" fill="rgb(248,151,21)" fg:x="248960" fg:w="175"/><text x="52.4709%" y="735.50"></text></g><g><title>__napi_alloc_skb (181 samples, 0.04%)</title><rect x="52.2205%" y="741" width="0.0380%" height="15" fill="rgb(238,163,6)" fg:x="248958" fg:w="181"/><text x="52.4705%" y="751.50"></text></g><g><title>page_to_skb (227 samples, 0.05%)</title><rect x="52.2136%" y="757" width="0.0476%" height="15" fill="rgb(209,183,11)" fg:x="248925" fg:w="227"/><text x="52.4636%" y="767.50"></text></g><g><title>receive_buf (562 samples, 0.12%)</title><rect x="52.1437%" y="789" width="0.1179%" height="15" fill="rgb(219,37,20)" fg:x="248592" fg:w="562"/><text x="52.3937%" y="799.50"></text></g><g><title>receive_mergeable (368 samples, 0.08%)</title><rect x="52.1844%" y="773" width="0.0772%" height="15" fill="rgb(210,158,4)" fg:x="248786" fg:w="368"/><text x="52.4344%" y="783.50"></text></g><g><title>clear_page_erms (74 samples, 0.02%)</title><rect x="52.2696%" y="709" width="0.0155%" height="15" fill="rgb(221,167,53)" fg:x="249192" fg:w="74"/><text x="52.5196%" y="719.50"></text></g><g><title>skb_page_frag_refill (95 samples, 0.02%)</title><rect x="52.2681%" y="773" width="0.0199%" height="15" fill="rgb(237,151,45)" fg:x="249185" fg:w="95"/><text x="52.5181%" y="783.50"></text></g><g><title>alloc_pages_current (91 samples, 0.02%)</title><rect x="52.2689%" y="757" width="0.0191%" height="15" fill="rgb(231,39,3)" fg:x="249189" fg:w="91"/><text x="52.5189%" y="767.50"></text></g><g><title>__alloc_pages_nodemask (91 samples, 0.02%)</title><rect x="52.2689%" y="741" width="0.0191%" height="15" fill="rgb(212,167,28)" fg:x="249189" fg:w="91"/><text x="52.5189%" y="751.50"></text></g><g><title>get_page_from_freelist (89 samples, 0.02%)</title><rect x="52.2694%" y="725" width="0.0187%" height="15" fill="rgb(232,178,8)" fg:x="249191" fg:w="89"/><text x="52.5194%" y="735.50"></text></g><g><title>try_fill_recv (134 samples, 0.03%)</title><rect x="52.2620%" y="789" width="0.0281%" height="15" fill="rgb(225,151,20)" fg:x="249156" fg:w="134"/><text x="52.5120%" y="799.50"></text></g><g><title>virtnet_poll (2,677 samples, 0.56%)</title><rect x="51.7376%" y="805" width="0.5615%" height="15" fill="rgb(238,3,37)" fg:x="246656" fg:w="2677"/><text x="51.9876%" y="815.50"></text></g><g><title>net_rx_action (2,712 samples, 0.57%)</title><rect x="51.7328%" y="821" width="0.5689%" height="15" fill="rgb(251,147,42)" fg:x="246633" fg:w="2712"/><text x="51.9828%" y="831.50"></text></g><g><title>__softirqentry_text_start (2,940 samples, 0.62%)</title><rect x="51.6856%" y="837" width="0.6167%" height="15" fill="rgb(208,173,10)" fg:x="246408" fg:w="2940"/><text x="51.9356%" y="847.50"></text></g><g><title>ret_from_intr (2,945 samples, 0.62%)</title><rect x="51.6856%" y="885" width="0.6177%" height="15" fill="rgb(246,225,4)" fg:x="246408" fg:w="2945"/><text x="51.9356%" y="895.50"></text></g><g><title>do_IRQ (2,945 samples, 0.62%)</title><rect x="51.6856%" y="869" width="0.6177%" height="15" fill="rgb(248,102,6)" fg:x="246408" fg:w="2945"/><text x="51.9356%" y="879.50"></text></g><g><title>irq_exit (2,945 samples, 0.62%)</title><rect x="51.6856%" y="853" width="0.6177%" height="15" fill="rgb(232,6,21)" fg:x="246408" fg:w="2945"/><text x="51.9356%" y="863.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (25,030 samples, 5.25%)</title><rect x="47.0540%" y="901" width="5.2502%" height="15" fill="rgb(221,179,22)" fg:x="224327" fg:w="25030"/><text x="47.3040%" y="911.50">crossb..</text></g><g><title>ip_rcv_finish_core.isra.0 (59 samples, 0.01%)</title><rect x="52.3453%" y="709" width="0.0124%" height="15" fill="rgb(252,50,20)" fg:x="249553" fg:w="59"/><text x="52.5953%" y="719.50"></text></g><g><title>tcp_v4_early_demux (52 samples, 0.01%)</title><rect x="52.3468%" y="693" width="0.0109%" height="15" fill="rgb(222,56,38)" fg:x="249560" fg:w="52"/><text x="52.5968%" y="703.50"></text></g><g><title>raw_rcv_skb (58 samples, 0.01%)</title><rect x="52.3629%" y="613" width="0.0122%" height="15" fill="rgb(206,193,29)" fg:x="249637" fg:w="58"/><text x="52.6129%" y="623.50"></text></g><g><title>raw_rcv (67 samples, 0.01%)</title><rect x="52.3614%" y="629" width="0.0141%" height="15" fill="rgb(239,192,45)" fg:x="249630" fg:w="67"/><text x="52.6114%" y="639.50"></text></g><g><title>raw_local_deliver (112 samples, 0.02%)</title><rect x="52.3600%" y="645" width="0.0235%" height="15" fill="rgb(254,18,36)" fg:x="249623" fg:w="112"/><text x="52.6100%" y="655.50"></text></g><g><title>skb_release_data (80 samples, 0.02%)</title><rect x="52.4313%" y="533" width="0.0168%" height="15" fill="rgb(221,127,11)" fg:x="249963" fg:w="80"/><text x="52.6813%" y="543.50"></text></g><g><title>__kfree_skb (104 samples, 0.02%)</title><rect x="52.4265%" y="565" width="0.0218%" height="15" fill="rgb(234,146,35)" fg:x="249940" fg:w="104"/><text x="52.6765%" y="575.50"></text></g><g><title>skb_release_all (82 samples, 0.02%)</title><rect x="52.4311%" y="549" width="0.0172%" height="15" fill="rgb(254,201,37)" fg:x="249962" fg:w="82"/><text x="52.6811%" y="559.50"></text></g><g><title>tcp_clean_rtx_queue (151 samples, 0.03%)</title><rect x="52.4197%" y="581" width="0.0317%" height="15" fill="rgb(211,202,23)" fg:x="249908" fg:w="151"/><text x="52.6697%" y="591.50"></text></g><g><title>tcp_ack (205 samples, 0.04%)</title><rect x="52.4101%" y="597" width="0.0430%" height="15" fill="rgb(237,91,2)" fg:x="249862" fg:w="205"/><text x="52.6601%" y="607.50"></text></g><g><title>tcp_data_ready (206 samples, 0.04%)</title><rect x="52.4531%" y="597" width="0.0432%" height="15" fill="rgb(226,228,36)" fg:x="250067" fg:w="206"/><text x="52.7031%" y="607.50"></text></g><g><title>sock_def_readable (206 samples, 0.04%)</title><rect x="52.4531%" y="581" width="0.0432%" height="15" fill="rgb(213,63,50)" fg:x="250067" fg:w="206"/><text x="52.7031%" y="591.50"></text></g><g><title>__wake_up_sync_key (201 samples, 0.04%)</title><rect x="52.4541%" y="565" width="0.0422%" height="15" fill="rgb(235,194,19)" fg:x="250072" fg:w="201"/><text x="52.7041%" y="575.50"></text></g><g><title>__wake_up_common_lock (200 samples, 0.04%)</title><rect x="52.4544%" y="549" width="0.0420%" height="15" fill="rgb(207,204,18)" fg:x="250073" fg:w="200"/><text x="52.7044%" y="559.50"></text></g><g><title>__lock_text_start (198 samples, 0.04%)</title><rect x="52.4548%" y="533" width="0.0415%" height="15" fill="rgb(248,8,7)" fg:x="250075" fg:w="198"/><text x="52.7048%" y="543.50"></text></g><g><title>tcp_v4_do_rcv (540 samples, 0.11%)</title><rect x="52.3950%" y="629" width="0.1133%" height="15" fill="rgb(223,145,47)" fg:x="249790" fg:w="540"/><text x="52.6450%" y="639.50"></text></g><g><title>tcp_rcv_established (522 samples, 0.11%)</title><rect x="52.3988%" y="613" width="0.1095%" height="15" fill="rgb(228,84,11)" fg:x="249808" fg:w="522"/><text x="52.6488%" y="623.50"></text></g><g><title>ip_local_deliver (724 samples, 0.15%)</title><rect x="52.3577%" y="693" width="0.1519%" height="15" fill="rgb(218,76,45)" fg:x="249612" fg:w="724"/><text x="52.6077%" y="703.50"></text></g><g><title>ip_local_deliver_finish (719 samples, 0.15%)</title><rect x="52.3587%" y="677" width="0.1508%" height="15" fill="rgb(223,80,15)" fg:x="249617" fg:w="719"/><text x="52.6087%" y="687.50"></text></g><g><title>ip_protocol_deliver_rcu (719 samples, 0.15%)</title><rect x="52.3587%" y="661" width="0.1508%" height="15" fill="rgb(219,218,33)" fg:x="249617" fg:w="719"/><text x="52.6087%" y="671.50"></text></g><g><title>tcp_v4_rcv (598 samples, 0.13%)</title><rect x="52.3841%" y="645" width="0.1254%" height="15" fill="rgb(208,51,11)" fg:x="249738" fg:w="598"/><text x="52.6341%" y="655.50"></text></g><g><title>ip_sublist_rcv_finish (725 samples, 0.15%)</title><rect x="52.3577%" y="709" width="0.1521%" height="15" fill="rgb(229,165,39)" fg:x="249612" fg:w="725"/><text x="52.6077%" y="719.50"></text></g><g><title>ip_list_rcv (800 samples, 0.17%)</title><rect x="52.3421%" y="741" width="0.1678%" height="15" fill="rgb(241,100,24)" fg:x="249538" fg:w="800"/><text x="52.5921%" y="751.50"></text></g><g><title>ip_sublist_rcv (791 samples, 0.17%)</title><rect x="52.3440%" y="725" width="0.1659%" height="15" fill="rgb(228,14,23)" fg:x="249547" fg:w="791"/><text x="52.5940%" y="735.50"></text></g><g><title>__netif_receive_skb_list_core (816 samples, 0.17%)</title><rect x="52.3390%" y="757" width="0.1712%" height="15" fill="rgb(247,116,52)" fg:x="249523" fg:w="816"/><text x="52.5890%" y="767.50"></text></g><g><title>netif_receive_skb_list_internal (844 samples, 0.18%)</title><rect x="52.3365%" y="773" width="0.1770%" height="15" fill="rgb(216,149,33)" fg:x="249511" fg:w="844"/><text x="52.5865%" y="783.50"></text></g><g><title>gro_normal_list.part.0 (849 samples, 0.18%)</title><rect x="52.3358%" y="789" width="0.1781%" height="15" fill="rgb(238,142,29)" fg:x="249508" fg:w="849"/><text x="52.5858%" y="799.50"></text></g><g><title>napi_complete_done (854 samples, 0.18%)</title><rect x="52.3350%" y="805" width="0.1791%" height="15" fill="rgb(224,83,40)" fg:x="249504" fg:w="854"/><text x="52.5850%" y="815.50"></text></g><g><title>napi_gro_receive (74 samples, 0.02%)</title><rect x="52.5158%" y="789" width="0.0155%" height="15" fill="rgb(234,165,11)" fg:x="250366" fg:w="74"/><text x="52.7658%" y="799.50"></text></g><g><title>__alloc_skb (93 samples, 0.02%)</title><rect x="52.5471%" y="741" width="0.0195%" height="15" fill="rgb(215,96,23)" fg:x="250515" fg:w="93"/><text x="52.7971%" y="751.50"></text></g><g><title>__napi_alloc_skb (96 samples, 0.02%)</title><rect x="52.5469%" y="757" width="0.0201%" height="15" fill="rgb(233,179,26)" fg:x="250514" fg:w="96"/><text x="52.7969%" y="767.50"></text></g><g><title>page_to_skb (117 samples, 0.02%)</title><rect x="52.5439%" y="773" width="0.0245%" height="15" fill="rgb(225,129,33)" fg:x="250500" fg:w="117"/><text x="52.7939%" y="783.50"></text></g><g><title>receive_buf (260 samples, 0.05%)</title><rect x="52.5141%" y="805" width="0.0545%" height="15" fill="rgb(237,49,13)" fg:x="250358" fg:w="260"/><text x="52.7641%" y="815.50"></text></g><g><title>receive_mergeable (178 samples, 0.04%)</title><rect x="52.5313%" y="789" width="0.0373%" height="15" fill="rgb(211,3,31)" fg:x="250440" fg:w="178"/><text x="52.7813%" y="799.50"></text></g><g><title>try_fill_recv (54 samples, 0.01%)</title><rect x="52.5693%" y="805" width="0.0113%" height="15" fill="rgb(216,152,19)" fg:x="250621" fg:w="54"/><text x="52.8193%" y="815.50"></text></g><g><title>virtnet_poll (1,223 samples, 0.26%)</title><rect x="52.3281%" y="821" width="0.2565%" height="15" fill="rgb(251,121,35)" fg:x="249471" fg:w="1223"/><text x="52.5781%" y="831.50"></text></g><g><title>net_rx_action (1,232 samples, 0.26%)</title><rect x="52.3264%" y="837" width="0.2584%" height="15" fill="rgb(210,217,47)" fg:x="249463" fg:w="1232"/><text x="52.5764%" y="847.50"></text></g><g><title>__softirqentry_text_start (1,340 samples, 0.28%)</title><rect x="52.3042%" y="853" width="0.2811%" height="15" fill="rgb(244,116,22)" fg:x="249357" fg:w="1340"/><text x="52.5542%" y="863.50"></text></g><g><title>ret_from_intr (1,341 samples, 0.28%)</title><rect x="52.3042%" y="901" width="0.2813%" height="15" fill="rgb(228,17,21)" fg:x="249357" fg:w="1341"/><text x="52.5542%" y="911.50"></text></g><g><title>do_IRQ (1,341 samples, 0.28%)</title><rect x="52.3042%" y="885" width="0.2813%" height="15" fill="rgb(240,149,34)" fg:x="249357" fg:w="1341"/><text x="52.5542%" y="895.50"></text></g><g><title>irq_exit (1,341 samples, 0.28%)</title><rect x="52.3042%" y="869" width="0.2813%" height="15" fill="rgb(208,125,47)" fg:x="249357" fg:w="1341"/><text x="52.5542%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (29,682 samples, 6.23%)</title><rect x="46.3599%" y="917" width="6.2260%" height="15" fill="rgb(249,186,39)" fg:x="221018" fg:w="29682"/><text x="46.6099%" y="927.50">crossbea..</text></g><g><title>__inet_lookup_established (62 samples, 0.01%)</title><rect x="52.6519%" y="693" width="0.0130%" height="15" fill="rgb(240,220,33)" fg:x="251015" fg:w="62"/><text x="52.9019%" y="703.50"></text></g><g><title>ip_rcv_finish_core.isra.0 (87 samples, 0.02%)</title><rect x="52.6473%" y="725" width="0.0182%" height="15" fill="rgb(243,110,23)" fg:x="250993" fg:w="87"/><text x="52.8973%" y="735.50"></text></g><g><title>tcp_v4_early_demux (77 samples, 0.02%)</title><rect x="52.6494%" y="709" width="0.0162%" height="15" fill="rgb(219,163,46)" fg:x="251003" fg:w="77"/><text x="52.8994%" y="719.50"></text></g><g><title>raw_rcv_skb (111 samples, 0.02%)</title><rect x="52.6731%" y="629" width="0.0233%" height="15" fill="rgb(216,126,30)" fg:x="251116" fg:w="111"/><text x="52.9231%" y="639.50"></text></g><g><title>sock_queue_rcv_skb (67 samples, 0.01%)</title><rect x="52.6824%" y="613" width="0.0141%" height="15" fill="rgb(208,139,11)" fg:x="251160" fg:w="67"/><text x="52.9324%" y="623.50"></text></g><g><title>sk_filter_trim_cap (51 samples, 0.01%)</title><rect x="52.6857%" y="597" width="0.0107%" height="15" fill="rgb(213,118,36)" fg:x="251176" fg:w="51"/><text x="52.9357%" y="607.50"></text></g><g><title>raw_rcv (119 samples, 0.02%)</title><rect x="52.6723%" y="645" width="0.0250%" height="15" fill="rgb(226,43,17)" fg:x="251112" fg:w="119"/><text x="52.9223%" y="655.50"></text></g><g><title>raw_local_deliver (174 samples, 0.04%)</title><rect x="52.6691%" y="661" width="0.0365%" height="15" fill="rgb(254,217,4)" fg:x="251097" fg:w="174"/><text x="52.9191%" y="671.50"></text></g><g><title>skb_release_data (84 samples, 0.02%)</title><rect x="52.7692%" y="549" width="0.0176%" height="15" fill="rgb(210,134,47)" fg:x="251574" fg:w="84"/><text x="53.0192%" y="559.50"></text></g><g><title>skb_release_all (89 samples, 0.02%)</title><rect x="52.7692%" y="565" width="0.0187%" height="15" fill="rgb(237,24,49)" fg:x="251574" fg:w="89"/><text x="53.0192%" y="575.50"></text></g><g><title>__kfree_skb (128 samples, 0.03%)</title><rect x="52.7614%" y="581" width="0.0268%" height="15" fill="rgb(251,39,46)" fg:x="251537" fg:w="128"/><text x="53.0114%" y="591.50"></text></g><g><title>tcp_clean_rtx_queue (190 samples, 0.04%)</title><rect x="52.7522%" y="597" width="0.0399%" height="15" fill="rgb(251,220,3)" fg:x="251493" fg:w="190"/><text x="53.0022%" y="607.50"></text></g><g><title>tcp_ack (279 samples, 0.06%)</title><rect x="52.7371%" y="613" width="0.0585%" height="15" fill="rgb(228,105,12)" fg:x="251421" fg:w="279"/><text x="52.9871%" y="623.50"></text></g><g><title>tcp_data_ready (258 samples, 0.05%)</title><rect x="52.7958%" y="613" width="0.0541%" height="15" fill="rgb(215,196,1)" fg:x="251701" fg:w="258"/><text x="53.0458%" y="623.50"></text></g><g><title>sock_def_readable (257 samples, 0.05%)</title><rect x="52.7960%" y="597" width="0.0539%" height="15" fill="rgb(214,33,39)" fg:x="251702" fg:w="257"/><text x="53.0460%" y="607.50"></text></g><g><title>__wake_up_sync_key (251 samples, 0.05%)</title><rect x="52.7973%" y="581" width="0.0526%" height="15" fill="rgb(220,19,52)" fg:x="251708" fg:w="251"/><text x="53.0473%" y="591.50"></text></g><g><title>__wake_up_common_lock (251 samples, 0.05%)</title><rect x="52.7973%" y="565" width="0.0526%" height="15" fill="rgb(221,78,38)" fg:x="251708" fg:w="251"/><text x="53.0473%" y="575.50"></text></g><g><title>__lock_text_start (248 samples, 0.05%)</title><rect x="52.7979%" y="549" width="0.0520%" height="15" fill="rgb(253,30,16)" fg:x="251711" fg:w="248"/><text x="53.0479%" y="559.50"></text></g><g><title>tcp_v4_do_rcv (685 samples, 0.14%)</title><rect x="52.7195%" y="645" width="0.1437%" height="15" fill="rgb(242,65,0)" fg:x="251337" fg:w="685"/><text x="52.9695%" y="655.50"></text></g><g><title>tcp_rcv_established (662 samples, 0.14%)</title><rect x="52.7243%" y="629" width="0.1389%" height="15" fill="rgb(235,201,12)" fg:x="251360" fg:w="662"/><text x="52.9743%" y="639.50"></text></g><g><title>ip_protocol_deliver_rcu (938 samples, 0.20%)</title><rect x="52.6668%" y="677" width="0.1968%" height="15" fill="rgb(233,161,9)" fg:x="251086" fg:w="938"/><text x="52.9168%" y="687.50"></text></g><g><title>tcp_v4_rcv (740 samples, 0.16%)</title><rect x="52.7084%" y="661" width="0.1552%" height="15" fill="rgb(241,207,41)" fg:x="251284" fg:w="740"/><text x="52.9584%" y="671.50"></text></g><g><title>ip_local_deliver (945 samples, 0.20%)</title><rect x="52.6658%" y="709" width="0.1982%" height="15" fill="rgb(212,69,46)" fg:x="251081" fg:w="945"/><text x="52.9158%" y="719.50"></text></g><g><title>ip_local_deliver_finish (940 samples, 0.20%)</title><rect x="52.6668%" y="693" width="0.1972%" height="15" fill="rgb(239,69,45)" fg:x="251086" fg:w="940"/><text x="52.9168%" y="703.50"></text></g><g><title>__netif_receive_skb_list_core (1,077 samples, 0.23%)</title><rect x="52.6383%" y="773" width="0.2259%" height="15" fill="rgb(242,117,48)" fg:x="250950" fg:w="1077"/><text x="52.8883%" y="783.50"></text></g><g><title>ip_list_rcv (1,053 samples, 0.22%)</title><rect x="52.6433%" y="757" width="0.2209%" height="15" fill="rgb(228,41,36)" fg:x="250974" fg:w="1053"/><text x="52.8933%" y="767.50"></text></g><g><title>ip_sublist_rcv (1,041 samples, 0.22%)</title><rect x="52.6459%" y="741" width="0.2184%" height="15" fill="rgb(212,3,32)" fg:x="250986" fg:w="1041"/><text x="52.8959%" y="751.50"></text></g><g><title>ip_sublist_rcv_finish (947 samples, 0.20%)</title><rect x="52.6656%" y="725" width="0.1986%" height="15" fill="rgb(233,41,49)" fg:x="251080" fg:w="947"/><text x="52.9156%" y="735.50"></text></g><g><title>netif_receive_skb_list_internal (1,114 samples, 0.23%)</title><rect x="52.6366%" y="789" width="0.2337%" height="15" fill="rgb(252,170,49)" fg:x="250942" fg:w="1114"/><text x="52.8866%" y="799.50"></text></g><g><title>napi_complete_done (1,126 samples, 0.24%)</title><rect x="52.6343%" y="821" width="0.2362%" height="15" fill="rgb(229,53,26)" fg:x="250931" fg:w="1126"/><text x="52.8843%" y="831.50"></text></g><g><title>gro_normal_list.part.0 (1,119 samples, 0.23%)</title><rect x="52.6358%" y="805" width="0.2347%" height="15" fill="rgb(217,157,12)" fg:x="250938" fg:w="1119"/><text x="52.8858%" y="815.50"></text></g><g><title>dev_gro_receive (50 samples, 0.01%)</title><rect x="52.8720%" y="789" width="0.0105%" height="15" fill="rgb(227,17,9)" fg:x="252064" fg:w="50"/><text x="53.1220%" y="799.50"></text></g><g><title>__netif_receive_skb_list_core (57 samples, 0.01%)</title><rect x="52.8825%" y="741" width="0.0120%" height="15" fill="rgb(218,84,12)" fg:x="252114" fg:w="57"/><text x="53.1325%" y="751.50"></text></g><g><title>ip_list_rcv (57 samples, 0.01%)</title><rect x="52.8825%" y="725" width="0.0120%" height="15" fill="rgb(212,79,24)" fg:x="252114" fg:w="57"/><text x="53.1325%" y="735.50"></text></g><g><title>ip_sublist_rcv (57 samples, 0.01%)</title><rect x="52.8825%" y="709" width="0.0120%" height="15" fill="rgb(217,222,37)" fg:x="252114" fg:w="57"/><text x="53.1325%" y="719.50"></text></g><g><title>ip_sublist_rcv_finish (50 samples, 0.01%)</title><rect x="52.8839%" y="693" width="0.0105%" height="15" fill="rgb(246,208,8)" fg:x="252121" fg:w="50"/><text x="53.1339%" y="703.50"></text></g><g><title>ip_local_deliver (49 samples, 0.01%)</title><rect x="52.8841%" y="677" width="0.0103%" height="15" fill="rgb(244,133,10)" fg:x="252122" fg:w="49"/><text x="53.1341%" y="687.50"></text></g><g><title>gro_normal_one (58 samples, 0.01%)</title><rect x="52.8825%" y="789" width="0.0122%" height="15" fill="rgb(209,219,41)" fg:x="252114" fg:w="58"/><text x="53.1325%" y="799.50"></text></g><g><title>gro_normal_list.part.0 (58 samples, 0.01%)</title><rect x="52.8825%" y="773" width="0.0122%" height="15" fill="rgb(253,175,45)" fg:x="252114" fg:w="58"/><text x="53.1325%" y="783.50"></text></g><g><title>netif_receive_skb_list_internal (58 samples, 0.01%)</title><rect x="52.8825%" y="757" width="0.0122%" height="15" fill="rgb(235,100,37)" fg:x="252114" fg:w="58"/><text x="53.1325%" y="767.50"></text></g><g><title>napi_gro_receive (110 samples, 0.02%)</title><rect x="52.8718%" y="805" width="0.0231%" height="15" fill="rgb(225,87,19)" fg:x="252063" fg:w="110"/><text x="53.1218%" y="815.50"></text></g><g><title>__alloc_skb (99 samples, 0.02%)</title><rect x="52.9209%" y="757" width="0.0208%" height="15" fill="rgb(217,152,17)" fg:x="252297" fg:w="99"/><text x="53.1709%" y="767.50"></text></g><g><title>__napi_alloc_skb (106 samples, 0.02%)</title><rect x="52.9202%" y="773" width="0.0222%" height="15" fill="rgb(235,72,13)" fg:x="252294" fg:w="106"/><text x="53.1702%" y="783.50"></text></g><g><title>receive_buf (353 samples, 0.07%)</title><rect x="52.8705%" y="821" width="0.0740%" height="15" fill="rgb(233,140,18)" fg:x="252057" fg:w="353"/><text x="53.1205%" y="831.50"></text></g><g><title>receive_mergeable (237 samples, 0.05%)</title><rect x="52.8948%" y="805" width="0.0497%" height="15" fill="rgb(207,212,28)" fg:x="252173" fg:w="237"/><text x="53.1448%" y="815.50"></text></g><g><title>page_to_skb (141 samples, 0.03%)</title><rect x="52.9150%" y="789" width="0.0296%" height="15" fill="rgb(220,130,25)" fg:x="252269" fg:w="141"/><text x="53.1650%" y="799.50"></text></g><g><title>skb_page_frag_refill (55 samples, 0.01%)</title><rect x="52.9473%" y="805" width="0.0115%" height="15" fill="rgb(205,55,34)" fg:x="252423" fg:w="55"/><text x="53.1973%" y="815.50"></text></g><g><title>alloc_pages_current (50 samples, 0.01%)</title><rect x="52.9483%" y="789" width="0.0105%" height="15" fill="rgb(237,54,35)" fg:x="252428" fg:w="50"/><text x="53.1983%" y="799.50"></text></g><g><title>__alloc_pages_nodemask (49 samples, 0.01%)</title><rect x="52.9485%" y="773" width="0.0103%" height="15" fill="rgb(208,67,23)" fg:x="252429" fg:w="49"/><text x="53.1985%" y="783.50"></text></g><g><title>try_fill_recv (79 samples, 0.02%)</title><rect x="52.9446%" y="821" width="0.0166%" height="15" fill="rgb(206,207,50)" fg:x="252410" fg:w="79"/><text x="53.1946%" y="831.50"></text></g><g><title>virtnet_poll (1,663 samples, 0.35%)</title><rect x="52.6215%" y="837" width="0.3488%" height="15" fill="rgb(213,211,42)" fg:x="250870" fg:w="1663"/><text x="52.8715%" y="847.50"></text></g><g><title>net_rx_action (1,687 samples, 0.35%)</title><rect x="52.6182%" y="853" width="0.3539%" height="15" fill="rgb(252,197,50)" fg:x="250854" fg:w="1687"/><text x="52.8682%" y="863.50"></text></g><g><title>__softirqentry_text_start (1,844 samples, 0.39%)</title><rect x="52.5859%" y="869" width="0.3868%" height="15" fill="rgb(251,211,41)" fg:x="250700" fg:w="1844"/><text x="52.8359%" y="879.50"></text></g><g><title>ret_from_intr (1,847 samples, 0.39%)</title><rect x="52.5859%" y="917" width="0.3874%" height="15" fill="rgb(229,211,5)" fg:x="250700" fg:w="1847"/><text x="52.8359%" y="927.50"></text></g><g><title>do_IRQ (1,847 samples, 0.39%)</title><rect x="52.5859%" y="901" width="0.3874%" height="15" fill="rgb(239,36,31)" fg:x="250700" fg:w="1847"/><text x="52.8359%" y="911.50"></text></g><g><title>irq_exit (1,847 samples, 0.39%)</title><rect x="52.5859%" y="885" width="0.3874%" height="15" fill="rgb(248,67,31)" fg:x="250700" fg:w="1847"/><text x="52.8359%" y="895.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (35,705 samples, 7.49%)</title><rect x="45.4860%" y="933" width="7.4893%" height="15" fill="rgb(249,55,44)" fg:x="216852" fg:w="35705"/><text x="45.7360%" y="943.50">crossbeam_..</text></g><g><title>[libc-2.31.so] (56 samples, 0.01%)</title><rect x="53.0016%" y="773" width="0.0117%" height="15" fill="rgb(216,82,12)" fg:x="252682" fg:w="56"/><text x="53.2516%" y="783.50"></text></g><g><title>[libc-2.31.so] (84 samples, 0.02%)</title><rect x="52.9983%" y="789" width="0.0176%" height="15" fill="rgb(242,174,1)" fg:x="252666" fg:w="84"/><text x="53.2483%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (102 samples, 0.02%)</title><rect x="52.9951%" y="885" width="0.0214%" height="15" fill="rgb(208,120,29)" fg:x="252651" fg:w="102"/><text x="53.2451%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (92 samples, 0.02%)</title><rect x="52.9972%" y="869" width="0.0193%" height="15" fill="rgb(221,105,43)" fg:x="252661" fg:w="92"/><text x="53.2472%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (92 samples, 0.02%)</title><rect x="52.9972%" y="853" width="0.0193%" height="15" fill="rgb(234,124,22)" fg:x="252661" fg:w="92"/><text x="53.2472%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (92 samples, 0.02%)</title><rect x="52.9972%" y="837" width="0.0193%" height="15" fill="rgb(212,23,30)" fg:x="252661" fg:w="92"/><text x="53.2472%" y="847.50"></text></g><g><title>alloc::alloc::alloc (92 samples, 0.02%)</title><rect x="52.9972%" y="821" width="0.0193%" height="15" fill="rgb(219,122,53)" fg:x="252661" fg:w="92"/><text x="53.2472%" y="831.50"></text></g><g><title>__libc_malloc (92 samples, 0.02%)</title><rect x="52.9972%" y="805" width="0.0193%" height="15" fill="rgb(248,84,24)" fg:x="252661" fg:w="92"/><text x="53.2472%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (49 samples, 0.01%)</title><rect x="53.0171%" y="885" width="0.0103%" height="15" fill="rgb(245,115,18)" fg:x="252756" fg:w="49"/><text x="53.2671%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (49 samples, 0.01%)</title><rect x="53.0171%" y="869" width="0.0103%" height="15" fill="rgb(227,176,51)" fg:x="252756" fg:w="49"/><text x="53.2671%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (295 samples, 0.06%)</title><rect x="52.9817%" y="901" width="0.0619%" height="15" fill="rgb(229,63,42)" fg:x="252587" fg:w="295"/><text x="53.2317%" y="911.50"></text></g><g><title>ret_from_intr (71 samples, 0.01%)</title><rect x="53.0287%" y="885" width="0.0149%" height="15" fill="rgb(247,202,24)" fg:x="252811" fg:w="71"/><text x="53.2787%" y="895.50"></text></g><g><title>do_IRQ (71 samples, 0.01%)</title><rect x="53.0287%" y="869" width="0.0149%" height="15" fill="rgb(244,173,20)" fg:x="252811" fg:w="71"/><text x="53.2787%" y="879.50"></text></g><g><title>irq_exit (71 samples, 0.01%)</title><rect x="53.0287%" y="853" width="0.0149%" height="15" fill="rgb(242,81,47)" fg:x="252811" fg:w="71"/><text x="53.2787%" y="863.50"></text></g><g><title>__softirqentry_text_start (71 samples, 0.01%)</title><rect x="53.0287%" y="837" width="0.0149%" height="15" fill="rgb(231,185,54)" fg:x="252811" fg:w="71"/><text x="53.2787%" y="847.50"></text></g><g><title>net_rx_action (65 samples, 0.01%)</title><rect x="53.0299%" y="821" width="0.0136%" height="15" fill="rgb(243,55,32)" fg:x="252817" fg:w="65"/><text x="53.2799%" y="831.50"></text></g><g><title>virtnet_poll (65 samples, 0.01%)</title><rect x="53.0299%" y="805" width="0.0136%" height="15" fill="rgb(208,167,19)" fg:x="252817" fg:w="65"/><text x="53.2799%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (51 samples, 0.01%)</title><rect x="53.0505%" y="885" width="0.0107%" height="15" fill="rgb(231,72,35)" fg:x="252915" fg:w="51"/><text x="53.3005%" y="895.50"></text></g><g><title>core::ptr::write (51 samples, 0.01%)</title><rect x="53.0505%" y="869" width="0.0107%" height="15" fill="rgb(250,173,51)" fg:x="252915" fg:w="51"/><text x="53.3005%" y="879.50"></text></g><g><title>do_sched_yield (67 samples, 0.01%)</title><rect x="53.0784%" y="773" width="0.0141%" height="15" fill="rgb(209,5,22)" fg:x="253048" fg:w="67"/><text x="53.3284%" y="783.50"></text></g><g><title>schedule (59 samples, 0.01%)</title><rect x="53.0801%" y="757" width="0.0124%" height="15" fill="rgb(250,174,19)" fg:x="253056" fg:w="59"/><text x="53.3301%" y="767.50"></text></g><g><title>__schedule (59 samples, 0.01%)</title><rect x="53.0801%" y="741" width="0.0124%" height="15" fill="rgb(217,3,49)" fg:x="253056" fg:w="59"/><text x="53.3301%" y="751.50"></text></g><g><title>__x64_sys_sched_yield (69 samples, 0.01%)</title><rect x="53.0784%" y="789" width="0.0145%" height="15" fill="rgb(218,225,5)" fg:x="253048" fg:w="69"/><text x="53.3284%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (100 samples, 0.02%)</title><rect x="53.0750%" y="821" width="0.0210%" height="15" fill="rgb(236,89,11)" fg:x="253032" fg:w="100"/><text x="53.3250%" y="831.50"></text></g><g><title>do_syscall_64 (95 samples, 0.02%)</title><rect x="53.0761%" y="805" width="0.0199%" height="15" fill="rgb(206,33,28)" fg:x="253037" fg:w="95"/><text x="53.3261%" y="815.50"></text></g><g><title>__sched_yield (167 samples, 0.04%)</title><rect x="53.0692%" y="837" width="0.0350%" height="15" fill="rgb(241,56,42)" fg:x="253004" fg:w="167"/><text x="53.3192%" y="847.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (221 samples, 0.05%)</title><rect x="53.0692%" y="853" width="0.0464%" height="15" fill="rgb(222,44,11)" fg:x="253004" fg:w="221"/><text x="53.3192%" y="863.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (245 samples, 0.05%)</title><rect x="53.0643%" y="869" width="0.0514%" height="15" fill="rgb(234,111,20)" fg:x="252981" fg:w="245"/><text x="53.3143%" y="879.50"></text></g><g><title>ip_protocol_deliver_rcu (61 samples, 0.01%)</title><rect x="53.1703%" y="389" width="0.0128%" height="15" fill="rgb(237,77,6)" fg:x="253486" fg:w="61"/><text x="53.4203%" y="399.50"></text></g><g><title>ip_list_rcv (77 samples, 0.02%)</title><rect x="53.1671%" y="469" width="0.0162%" height="15" fill="rgb(235,111,23)" fg:x="253471" fg:w="77"/><text x="53.4171%" y="479.50"></text></g><g><title>ip_sublist_rcv (75 samples, 0.02%)</title><rect x="53.1675%" y="453" width="0.0157%" height="15" fill="rgb(251,135,29)" fg:x="253473" fg:w="75"/><text x="53.4175%" y="463.50"></text></g><g><title>ip_sublist_rcv_finish (62 samples, 0.01%)</title><rect x="53.1703%" y="437" width="0.0130%" height="15" fill="rgb(217,57,1)" fg:x="253486" fg:w="62"/><text x="53.4203%" y="447.50"></text></g><g><title>ip_local_deliver (62 samples, 0.01%)</title><rect x="53.1703%" y="421" width="0.0130%" height="15" fill="rgb(249,119,31)" fg:x="253486" fg:w="62"/><text x="53.4203%" y="431.50"></text></g><g><title>ip_local_deliver_finish (62 samples, 0.01%)</title><rect x="53.1703%" y="405" width="0.0130%" height="15" fill="rgb(233,164,33)" fg:x="253486" fg:w="62"/><text x="53.4203%" y="415.50"></text></g><g><title>__netif_receive_skb_list_core (79 samples, 0.02%)</title><rect x="53.1669%" y="485" width="0.0166%" height="15" fill="rgb(250,217,43)" fg:x="253470" fg:w="79"/><text x="53.4169%" y="495.50"></text></g><g><title>napi_complete_done (82 samples, 0.02%)</title><rect x="53.1667%" y="533" width="0.0172%" height="15" fill="rgb(232,154,50)" fg:x="253469" fg:w="82"/><text x="53.4167%" y="543.50"></text></g><g><title>gro_normal_list.part.0 (82 samples, 0.02%)</title><rect x="53.1667%" y="517" width="0.0172%" height="15" fill="rgb(227,190,8)" fg:x="253469" fg:w="82"/><text x="53.4167%" y="527.50"></text></g><g><title>netif_receive_skb_list_internal (82 samples, 0.02%)</title><rect x="53.1667%" y="501" width="0.0172%" height="15" fill="rgb(209,217,32)" fg:x="253469" fg:w="82"/><text x="53.4167%" y="511.50"></text></g><g><title>__lock_text_start (236 samples, 0.05%)</title><rect x="53.1426%" y="645" width="0.0495%" height="15" fill="rgb(243,203,50)" fg:x="253354" fg:w="236"/><text x="53.3926%" y="655.50"></text></g><g><title>ret_from_intr (135 samples, 0.03%)</title><rect x="53.1638%" y="629" width="0.0283%" height="15" fill="rgb(232,152,27)" fg:x="253455" fg:w="135"/><text x="53.4138%" y="639.50"></text></g><g><title>do_IRQ (135 samples, 0.03%)</title><rect x="53.1638%" y="613" width="0.0283%" height="15" fill="rgb(240,34,29)" fg:x="253455" fg:w="135"/><text x="53.4138%" y="623.50"></text></g><g><title>irq_exit (135 samples, 0.03%)</title><rect x="53.1638%" y="597" width="0.0283%" height="15" fill="rgb(215,185,52)" fg:x="253455" fg:w="135"/><text x="53.4138%" y="607.50"></text></g><g><title>__softirqentry_text_start (135 samples, 0.03%)</title><rect x="53.1638%" y="581" width="0.0283%" height="15" fill="rgb(240,89,49)" fg:x="253455" fg:w="135"/><text x="53.4138%" y="591.50"></text></g><g><title>net_rx_action (126 samples, 0.03%)</title><rect x="53.1656%" y="565" width="0.0264%" height="15" fill="rgb(225,12,52)" fg:x="253464" fg:w="126"/><text x="53.4156%" y="575.50"></text></g><g><title>virtnet_poll (125 samples, 0.03%)</title><rect x="53.1659%" y="549" width="0.0262%" height="15" fill="rgb(239,128,45)" fg:x="253465" fg:w="125"/><text x="53.4159%" y="559.50"></text></g><g><title>futex_wake (282 samples, 0.06%)</title><rect x="53.1331%" y="693" width="0.0592%" height="15" fill="rgb(211,78,47)" fg:x="253309" fg:w="282"/><text x="53.3831%" y="703.50"></text></g><g><title>wake_up_q (241 samples, 0.05%)</title><rect x="53.1417%" y="677" width="0.0506%" height="15" fill="rgb(232,31,21)" fg:x="253350" fg:w="241"/><text x="53.3917%" y="687.50"></text></g><g><title>try_to_wake_up (238 samples, 0.05%)</title><rect x="53.1424%" y="661" width="0.0499%" height="15" fill="rgb(222,168,14)" fg:x="253353" fg:w="238"/><text x="53.3924%" y="671.50"></text></g><g><title>do_futex (298 samples, 0.06%)</title><rect x="53.1321%" y="709" width="0.0625%" height="15" fill="rgb(209,128,24)" fg:x="253304" fg:w="298"/><text x="53.3821%" y="719.50"></text></g><g><title>__x64_sys_futex (303 samples, 0.06%)</title><rect x="53.1321%" y="725" width="0.0636%" height="15" fill="rgb(249,35,13)" fg:x="253304" fg:w="303"/><text x="53.3821%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (326 samples, 0.07%)</title><rect x="53.1300%" y="757" width="0.0684%" height="15" fill="rgb(218,7,2)" fg:x="253294" fg:w="326"/><text x="53.3800%" y="767.50"></text></g><g><title>do_syscall_64 (323 samples, 0.07%)</title><rect x="53.1306%" y="741" width="0.0678%" height="15" fill="rgb(238,107,27)" fg:x="253297" fg:w="323"/><text x="53.3806%" y="751.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (381 samples, 0.08%)</title><rect x="53.1239%" y="821" width="0.0799%" height="15" fill="rgb(217,88,38)" fg:x="253265" fg:w="381"/><text x="53.3739%" y="831.50"></text></g><g><title>std::thread::Thread::unpark (381 samples, 0.08%)</title><rect x="53.1239%" y="805" width="0.0799%" height="15" fill="rgb(230,207,0)" fg:x="253265" fg:w="381"/><text x="53.3739%" y="815.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (381 samples, 0.08%)</title><rect x="53.1239%" y="789" width="0.0799%" height="15" fill="rgb(249,64,54)" fg:x="253265" fg:w="381"/><text x="53.3739%" y="799.50"></text></g><g><title>syscall (373 samples, 0.08%)</title><rect x="53.1256%" y="773" width="0.0782%" height="15" fill="rgb(231,7,11)" fg:x="253273" fg:w="373"/><text x="53.3756%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (417 samples, 0.09%)</title><rect x="53.1174%" y="853" width="0.0875%" height="15" fill="rgb(205,149,21)" fg:x="253234" fg:w="417"/><text x="53.3674%" y="863.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (417 samples, 0.09%)</title><rect x="53.1174%" y="837" width="0.0875%" height="15" fill="rgb(215,126,34)" fg:x="253234" fg:w="417"/><text x="53.3674%" y="847.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (431 samples, 0.09%)</title><rect x="53.1174%" y="869" width="0.0904%" height="15" fill="rgb(241,132,45)" fg:x="253234" fg:w="431"/><text x="53.3674%" y="879.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (701 samples, 0.15%)</title><rect x="53.0618%" y="885" width="0.1470%" height="15" fill="rgb(252,69,32)" fg:x="252969" fg:w="701"/><text x="53.3118%" y="895.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (820 samples, 0.17%)</title><rect x="53.0436%" y="901" width="0.1720%" height="15" fill="rgb(232,204,19)" fg:x="252882" fg:w="820"/><text x="53.2936%" y="911.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1,138 samples, 0.24%)</title><rect x="52.9790%" y="917" width="0.2387%" height="15" fill="rgb(249,15,47)" fg:x="252574" fg:w="1138"/><text x="53.2290%" y="927.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1,169 samples, 0.25%)</title><rect x="52.9754%" y="933" width="0.2452%" height="15" fill="rgb(209,227,23)" fg:x="252557" fg:w="1169"/><text x="53.2254%" y="943.50"></text></g><g><title>ip_protocol_deliver_rcu (138 samples, 0.03%)</title><rect x="53.2332%" y="693" width="0.0289%" height="15" fill="rgb(248,92,24)" fg:x="253786" fg:w="138"/><text x="53.4832%" y="703.50"></text></g><g><title>tcp_v4_rcv (114 samples, 0.02%)</title><rect x="53.2382%" y="677" width="0.0239%" height="15" fill="rgb(247,59,2)" fg:x="253810" fg:w="114"/><text x="53.4882%" y="687.50"></text></g><g><title>tcp_v4_do_rcv (102 samples, 0.02%)</title><rect x="53.2407%" y="661" width="0.0214%" height="15" fill="rgb(221,30,5)" fg:x="253822" fg:w="102"/><text x="53.4907%" y="671.50"></text></g><g><title>tcp_rcv_established (99 samples, 0.02%)</title><rect x="53.2414%" y="645" width="0.0208%" height="15" fill="rgb(208,108,53)" fg:x="253825" fg:w="99"/><text x="53.4914%" y="655.50"></text></g><g><title>__netif_receive_skb_list_core (160 samples, 0.03%)</title><rect x="53.2290%" y="789" width="0.0336%" height="15" fill="rgb(211,183,26)" fg:x="253766" fg:w="160"/><text x="53.4790%" y="799.50"></text></g><g><title>ip_list_rcv (157 samples, 0.03%)</title><rect x="53.2296%" y="773" width="0.0329%" height="15" fill="rgb(232,132,4)" fg:x="253769" fg:w="157"/><text x="53.4796%" y="783.50"></text></g><g><title>ip_sublist_rcv (156 samples, 0.03%)</title><rect x="53.2298%" y="757" width="0.0327%" height="15" fill="rgb(253,128,37)" fg:x="253770" fg:w="156"/><text x="53.4798%" y="767.50"></text></g><g><title>ip_sublist_rcv_finish (141 samples, 0.03%)</title><rect x="53.2330%" y="741" width="0.0296%" height="15" fill="rgb(221,58,24)" fg:x="253785" fg:w="141"/><text x="53.4830%" y="751.50"></text></g><g><title>ip_local_deliver (141 samples, 0.03%)</title><rect x="53.2330%" y="725" width="0.0296%" height="15" fill="rgb(230,54,45)" fg:x="253785" fg:w="141"/><text x="53.4830%" y="735.50"></text></g><g><title>ip_local_deliver_finish (140 samples, 0.03%)</title><rect x="53.2332%" y="709" width="0.0294%" height="15" fill="rgb(254,21,18)" fg:x="253786" fg:w="140"/><text x="53.4832%" y="719.50"></text></g><g><title>napi_complete_done (170 samples, 0.04%)</title><rect x="53.2286%" y="837" width="0.0357%" height="15" fill="rgb(221,108,0)" fg:x="253764" fg:w="170"/><text x="53.4786%" y="847.50"></text></g><g><title>gro_normal_list.part.0 (169 samples, 0.04%)</title><rect x="53.2288%" y="821" width="0.0354%" height="15" fill="rgb(206,95,1)" fg:x="253765" fg:w="169"/><text x="53.4788%" y="831.50"></text></g><g><title>netif_receive_skb_list_internal (169 samples, 0.04%)</title><rect x="53.2288%" y="805" width="0.0354%" height="15" fill="rgb(237,52,5)" fg:x="253765" fg:w="169"/><text x="53.4788%" y="815.50"></text></g><g><title>receive_buf (57 samples, 0.01%)</title><rect x="53.2642%" y="837" width="0.0120%" height="15" fill="rgb(218,150,34)" fg:x="253934" fg:w="57"/><text x="53.5142%" y="847.50"></text></g><g><title>virtnet_poll (261 samples, 0.05%)</title><rect x="53.2265%" y="853" width="0.0547%" height="15" fill="rgb(235,194,28)" fg:x="253754" fg:w="261"/><text x="53.4765%" y="863.50"></text></g><g><title>ret_from_intr (290 samples, 0.06%)</title><rect x="53.2206%" y="933" width="0.0608%" height="15" fill="rgb(245,92,18)" fg:x="253726" fg:w="290"/><text x="53.4706%" y="943.50"></text></g><g><title>do_IRQ (290 samples, 0.06%)</title><rect x="53.2206%" y="917" width="0.0608%" height="15" fill="rgb(253,203,53)" fg:x="253726" fg:w="290"/><text x="53.4706%" y="927.50"></text></g><g><title>irq_exit (290 samples, 0.06%)</title><rect x="53.2206%" y="901" width="0.0608%" height="15" fill="rgb(249,185,47)" fg:x="253726" fg:w="290"/><text x="53.4706%" y="911.50"></text></g><g><title>__softirqentry_text_start (290 samples, 0.06%)</title><rect x="53.2206%" y="885" width="0.0608%" height="15" fill="rgb(252,194,52)" fg:x="253726" fg:w="290"/><text x="53.4706%" y="895.50"></text></g><g><title>net_rx_action (263 samples, 0.06%)</title><rect x="53.2263%" y="869" width="0.0552%" height="15" fill="rgb(210,53,36)" fg:x="253753" fg:w="263"/><text x="53.4763%" y="879.50"></text></g><g><title>kfree_skbmem (82 samples, 0.02%)</title><rect x="53.4473%" y="565" width="0.0172%" height="15" fill="rgb(237,37,25)" fg:x="254807" fg:w="82"/><text x="53.6973%" y="575.50"></text></g><g><title>kmem_cache_free (82 samples, 0.02%)</title><rect x="53.4473%" y="549" width="0.0172%" height="15" fill="rgb(242,116,27)" fg:x="254807" fg:w="82"/><text x="53.6973%" y="559.50"></text></g><g><title>skb_release_data (77 samples, 0.02%)</title><rect x="53.4658%" y="549" width="0.0162%" height="15" fill="rgb(213,185,26)" fg:x="254895" fg:w="77"/><text x="53.7158%" y="559.50"></text></g><g><title>skb_release_all (124 samples, 0.03%)</title><rect x="53.4648%" y="565" width="0.0260%" height="15" fill="rgb(225,204,8)" fg:x="254890" fg:w="124"/><text x="53.7148%" y="575.50"></text></g><g><title>__kfree_skb (216 samples, 0.05%)</title><rect x="53.4473%" y="581" width="0.0453%" height="15" fill="rgb(254,111,37)" fg:x="254807" fg:w="216"/><text x="53.6973%" y="591.50"></text></g><g><title>release_sock (55 samples, 0.01%)</title><rect x="53.5073%" y="581" width="0.0115%" height="15" fill="rgb(242,35,9)" fg:x="255093" fg:w="55"/><text x="53.7573%" y="591.50"></text></g><g><title>ret_from_intr (56 samples, 0.01%)</title><rect x="53.5189%" y="581" width="0.0117%" height="15" fill="rgb(232,138,49)" fg:x="255148" fg:w="56"/><text x="53.7689%" y="591.50"></text></g><g><title>do_IRQ (56 samples, 0.01%)</title><rect x="53.5189%" y="565" width="0.0117%" height="15" fill="rgb(247,56,4)" fg:x="255148" fg:w="56"/><text x="53.7689%" y="575.50"></text></g><g><title>irq_exit (56 samples, 0.01%)</title><rect x="53.5189%" y="549" width="0.0117%" height="15" fill="rgb(226,179,17)" fg:x="255148" fg:w="56"/><text x="53.7689%" y="559.50"></text></g><g><title>__softirqentry_text_start (56 samples, 0.01%)</title><rect x="53.5189%" y="533" width="0.0117%" height="15" fill="rgb(216,163,45)" fg:x="255148" fg:w="56"/><text x="53.7689%" y="543.50"></text></g><g><title>net_rx_action (49 samples, 0.01%)</title><rect x="53.5203%" y="517" width="0.0103%" height="15" fill="rgb(211,157,3)" fg:x="255155" fg:w="49"/><text x="53.7703%" y="527.50"></text></g><g><title>virtnet_poll (48 samples, 0.01%)</title><rect x="53.5205%" y="501" width="0.0101%" height="15" fill="rgb(234,44,20)" fg:x="255156" fg:w="48"/><text x="53.7705%" y="511.50"></text></g><g><title>__check_object_size (112 samples, 0.02%)</title><rect x="53.5377%" y="533" width="0.0235%" height="15" fill="rgb(254,138,23)" fg:x="255238" fg:w="112"/><text x="53.7877%" y="543.50"></text></g><g><title>copy_user_generic_unrolled (56 samples, 0.01%)</title><rect x="53.5726%" y="517" width="0.0117%" height="15" fill="rgb(206,119,39)" fg:x="255404" fg:w="56"/><text x="53.8226%" y="527.50"></text></g><g><title>_copy_to_iter (98 samples, 0.02%)</title><rect x="53.5669%" y="533" width="0.0206%" height="15" fill="rgb(231,105,52)" fg:x="255377" fg:w="98"/><text x="53.8169%" y="543.50"></text></g><g><title>__skb_datagram_iter (281 samples, 0.06%)</title><rect x="53.5315%" y="565" width="0.0589%" height="15" fill="rgb(250,20,5)" fg:x="255208" fg:w="281"/><text x="53.7815%" y="575.50"></text></g><g><title>simple_copy_to_iter (253 samples, 0.05%)</title><rect x="53.5373%" y="549" width="0.0531%" height="15" fill="rgb(215,198,30)" fg:x="255236" fg:w="253"/><text x="53.7873%" y="559.50"></text></g><g><title>skb_copy_datagram_iter (290 samples, 0.06%)</title><rect x="53.5306%" y="581" width="0.0608%" height="15" fill="rgb(246,142,8)" fg:x="255204" fg:w="290"/><text x="53.7806%" y="591.50"></text></g><g><title>ktime_get (61 samples, 0.01%)</title><rect x="53.6030%" y="549" width="0.0128%" height="15" fill="rgb(243,26,38)" fg:x="255549" fg:w="61"/><text x="53.8530%" y="559.50"></text></g><g><title>tcp_rcv_space_adjust (114 samples, 0.02%)</title><rect x="53.5986%" y="581" width="0.0239%" height="15" fill="rgb(205,133,28)" fg:x="255528" fg:w="114"/><text x="53.8486%" y="591.50"></text></g><g><title>tcp_mstamp_refresh (99 samples, 0.02%)</title><rect x="53.6017%" y="565" width="0.0208%" height="15" fill="rgb(212,34,0)" fg:x="255543" fg:w="99"/><text x="53.8517%" y="575.50"></text></g><g><title>inet_recvmsg (997 samples, 0.21%)</title><rect x="53.4218%" y="613" width="0.2091%" height="15" fill="rgb(251,226,22)" fg:x="254685" fg:w="997"/><text x="53.6718%" y="623.50"></text></g><g><title>tcp_recvmsg (926 samples, 0.19%)</title><rect x="53.4366%" y="597" width="0.1942%" height="15" fill="rgb(252,119,9)" fg:x="254756" fg:w="926"/><text x="53.6866%" y="607.50"></text></g><g><title>security_socket_recvmsg (65 samples, 0.01%)</title><rect x="53.6317%" y="613" width="0.0136%" height="15" fill="rgb(213,150,50)" fg:x="255686" fg:w="65"/><text x="53.8817%" y="623.50"></text></g><g><title>sock_recvmsg (1,117 samples, 0.23%)</title><rect x="53.4121%" y="629" width="0.2343%" height="15" fill="rgb(212,24,39)" fg:x="254639" fg:w="1117"/><text x="53.6621%" y="639.50"></text></g><g><title>virtnet_poll (51 samples, 0.01%)</title><rect x="53.6642%" y="485" width="0.0107%" height="15" fill="rgb(213,46,39)" fg:x="255841" fg:w="51"/><text x="53.9142%" y="495.50"></text></g><g><title>__fget_light (137 samples, 0.03%)</title><rect x="53.6464%" y="597" width="0.0287%" height="15" fill="rgb(239,106,12)" fg:x="255756" fg:w="137"/><text x="53.8964%" y="607.50"></text></g><g><title>__fget (137 samples, 0.03%)</title><rect x="53.6464%" y="581" width="0.0287%" height="15" fill="rgb(249,229,21)" fg:x="255756" fg:w="137"/><text x="53.8964%" y="591.50"></text></g><g><title>ret_from_intr (55 samples, 0.01%)</title><rect x="53.6636%" y="565" width="0.0115%" height="15" fill="rgb(212,158,3)" fg:x="255838" fg:w="55"/><text x="53.9136%" y="575.50"></text></g><g><title>do_IRQ (55 samples, 0.01%)</title><rect x="53.6636%" y="549" width="0.0115%" height="15" fill="rgb(253,26,48)" fg:x="255838" fg:w="55"/><text x="53.9136%" y="559.50"></text></g><g><title>irq_exit (55 samples, 0.01%)</title><rect x="53.6636%" y="533" width="0.0115%" height="15" fill="rgb(238,178,20)" fg:x="255838" fg:w="55"/><text x="53.9136%" y="543.50"></text></g><g><title>__softirqentry_text_start (55 samples, 0.01%)</title><rect x="53.6636%" y="517" width="0.0115%" height="15" fill="rgb(208,86,15)" fg:x="255838" fg:w="55"/><text x="53.9136%" y="527.50"></text></g><g><title>net_rx_action (52 samples, 0.01%)</title><rect x="53.6642%" y="501" width="0.0109%" height="15" fill="rgb(239,42,53)" fg:x="255841" fg:w="52"/><text x="53.9142%" y="511.50"></text></g><g><title>__fdget (138 samples, 0.03%)</title><rect x="53.6464%" y="613" width="0.0289%" height="15" fill="rgb(245,226,8)" fg:x="255756" fg:w="138"/><text x="53.8964%" y="623.50"></text></g><g><title>__sys_recvfrom (1,348 samples, 0.28%)</title><rect x="53.3972%" y="645" width="0.2828%" height="15" fill="rgb(216,176,32)" fg:x="254568" fg:w="1348"/><text x="53.6472%" y="655.50"></text></g><g><title>sockfd_lookup_light (160 samples, 0.03%)</title><rect x="53.6464%" y="629" width="0.0336%" height="15" fill="rgb(231,186,21)" fg:x="255756" fg:w="160"/><text x="53.8964%" y="639.50"></text></g><g><title>__x64_sys_recvfrom (1,392 samples, 0.29%)</title><rect x="53.3972%" y="661" width="0.2920%" height="15" fill="rgb(205,95,49)" fg:x="254568" fg:w="1392"/><text x="53.6472%" y="671.50"></text></g><g><title>virtnet_poll (61 samples, 0.01%)</title><rect x="53.6911%" y="581" width="0.0128%" height="15" fill="rgb(217,145,8)" fg:x="255969" fg:w="61"/><text x="53.9411%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,591 samples, 0.33%)</title><rect x="53.3704%" y="693" width="0.3337%" height="15" fill="rgb(239,144,48)" fg:x="254440" fg:w="1591"/><text x="53.6204%" y="703.50"></text></g><g><title>do_syscall_64 (1,556 samples, 0.33%)</title><rect x="53.3777%" y="677" width="0.3264%" height="15" fill="rgb(214,189,23)" fg:x="254475" fg:w="1556"/><text x="53.6277%" y="687.50"></text></g><g><title>ret_from_intr (69 samples, 0.01%)</title><rect x="53.6896%" y="661" width="0.0145%" height="15" fill="rgb(229,157,17)" fg:x="255962" fg:w="69"/><text x="53.9396%" y="671.50"></text></g><g><title>do_IRQ (69 samples, 0.01%)</title><rect x="53.6896%" y="645" width="0.0145%" height="15" fill="rgb(230,5,48)" fg:x="255962" fg:w="69"/><text x="53.9396%" y="655.50"></text></g><g><title>irq_exit (69 samples, 0.01%)</title><rect x="53.6896%" y="629" width="0.0145%" height="15" fill="rgb(224,156,48)" fg:x="255962" fg:w="69"/><text x="53.9396%" y="639.50"></text></g><g><title>__softirqentry_text_start (69 samples, 0.01%)</title><rect x="53.6896%" y="613" width="0.0145%" height="15" fill="rgb(223,14,29)" fg:x="255962" fg:w="69"/><text x="53.9396%" y="623.50"></text></g><g><title>net_rx_action (62 samples, 0.01%)</title><rect x="53.6911%" y="597" width="0.0130%" height="15" fill="rgb(229,96,36)" fg:x="255969" fg:w="62"/><text x="53.9411%" y="607.50"></text></g><g><title>ip_local_deliver (100 samples, 0.02%)</title><rect x="53.7154%" y="485" width="0.0210%" height="15" fill="rgb(231,102,53)" fg:x="256085" fg:w="100"/><text x="53.9654%" y="495.50"></text></g><g><title>ip_local_deliver_finish (98 samples, 0.02%)</title><rect x="53.7158%" y="469" width="0.0206%" height="15" fill="rgb(210,77,38)" fg:x="256087" fg:w="98"/><text x="53.9658%" y="479.50"></text></g><g><title>ip_protocol_deliver_rcu (98 samples, 0.02%)</title><rect x="53.7158%" y="453" width="0.0206%" height="15" fill="rgb(235,131,6)" fg:x="256087" fg:w="98"/><text x="53.9658%" y="463.50"></text></g><g><title>tcp_v4_rcv (85 samples, 0.02%)</title><rect x="53.7186%" y="437" width="0.0178%" height="15" fill="rgb(252,55,38)" fg:x="256100" fg:w="85"/><text x="53.9686%" y="447.50"></text></g><g><title>tcp_v4_do_rcv (77 samples, 0.02%)</title><rect x="53.7202%" y="421" width="0.0162%" height="15" fill="rgb(246,38,14)" fg:x="256108" fg:w="77"/><text x="53.9702%" y="431.50"></text></g><g><title>tcp_rcv_established (74 samples, 0.02%)</title><rect x="53.7209%" y="405" width="0.0155%" height="15" fill="rgb(242,27,5)" fg:x="256111" fg:w="74"/><text x="53.9709%" y="415.50"></text></g><g><title>ip_sublist_rcv (113 samples, 0.02%)</title><rect x="53.7129%" y="517" width="0.0237%" height="15" fill="rgb(228,65,35)" fg:x="256073" fg:w="113"/><text x="53.9629%" y="527.50"></text></g><g><title>ip_sublist_rcv_finish (102 samples, 0.02%)</title><rect x="53.7152%" y="501" width="0.0214%" height="15" fill="rgb(245,93,11)" fg:x="256084" fg:w="102"/><text x="53.9652%" y="511.50"></text></g><g><title>__netif_receive_skb_list_core (116 samples, 0.02%)</title><rect x="53.7125%" y="549" width="0.0243%" height="15" fill="rgb(213,1,31)" fg:x="256071" fg:w="116"/><text x="53.9625%" y="559.50"></text></g><g><title>ip_list_rcv (114 samples, 0.02%)</title><rect x="53.7129%" y="533" width="0.0239%" height="15" fill="rgb(237,205,14)" fg:x="256073" fg:w="114"/><text x="53.9629%" y="543.50"></text></g><g><title>napi_complete_done (119 samples, 0.02%)</title><rect x="53.7125%" y="597" width="0.0250%" height="15" fill="rgb(232,118,45)" fg:x="256071" fg:w="119"/><text x="53.9625%" y="607.50"></text></g><g><title>gro_normal_list.part.0 (119 samples, 0.02%)</title><rect x="53.7125%" y="581" width="0.0250%" height="15" fill="rgb(218,5,6)" fg:x="256071" fg:w="119"/><text x="53.9625%" y="591.50"></text></g><g><title>netif_receive_skb_list_internal (119 samples, 0.02%)</title><rect x="53.7125%" y="565" width="0.0250%" height="15" fill="rgb(251,87,51)" fg:x="256071" fg:w="119"/><text x="53.9625%" y="575.50"></text></g><g><title>net_rx_action (172 samples, 0.04%)</title><rect x="53.7106%" y="629" width="0.0361%" height="15" fill="rgb(207,225,20)" fg:x="256062" fg:w="172"/><text x="53.9606%" y="639.50"></text></g><g><title>virtnet_poll (171 samples, 0.04%)</title><rect x="53.7108%" y="613" width="0.0359%" height="15" fill="rgb(222,78,54)" fg:x="256063" fg:w="171"/><text x="53.9608%" y="623.50"></text></g><g><title>__softirqentry_text_start (204 samples, 0.04%)</title><rect x="53.7041%" y="645" width="0.0428%" height="15" fill="rgb(232,85,16)" fg:x="256031" fg:w="204"/><text x="53.9541%" y="655.50"></text></g><g><title>ret_from_intr (206 samples, 0.04%)</title><rect x="53.7041%" y="693" width="0.0432%" height="15" fill="rgb(244,25,33)" fg:x="256031" fg:w="206"/><text x="53.9541%" y="703.50"></text></g><g><title>do_IRQ (206 samples, 0.04%)</title><rect x="53.7041%" y="677" width="0.0432%" height="15" fill="rgb(233,24,36)" fg:x="256031" fg:w="206"/><text x="53.9541%" y="687.50"></text></g><g><title>irq_exit (206 samples, 0.04%)</title><rect x="53.7041%" y="661" width="0.0432%" height="15" fill="rgb(253,49,54)" fg:x="256031" fg:w="206"/><text x="53.9541%" y="671.50"></text></g><g><title>__libc_recv (2,082 samples, 0.44%)</title><rect x="53.3108%" y="709" width="0.4367%" height="15" fill="rgb(245,12,22)" fg:x="254156" fg:w="2082"/><text x="53.5608%" y="719.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2,096 samples, 0.44%)</title><rect x="53.3085%" y="821" width="0.4396%" height="15" fill="rgb(253,141,28)" fg:x="254145" fg:w="2096"/><text x="53.5585%" y="831.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (2,096 samples, 0.44%)</title><rect x="53.3085%" y="805" width="0.4396%" height="15" fill="rgb(225,207,27)" fg:x="254145" fg:w="2096"/><text x="53.5585%" y="815.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (2,096 samples, 0.44%)</title><rect x="53.3085%" y="789" width="0.4396%" height="15" fill="rgb(220,84,2)" fg:x="254145" fg:w="2096"/><text x="53.5585%" y="799.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2,096 samples, 0.44%)</title><rect x="53.3085%" y="773" width="0.4396%" height="15" fill="rgb(224,37,37)" fg:x="254145" fg:w="2096"/><text x="53.5585%" y="783.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2,087 samples, 0.44%)</title><rect x="53.3104%" y="757" width="0.4378%" height="15" fill="rgb(220,143,18)" fg:x="254154" fg:w="2087"/><text x="53.5604%" y="767.50"></text></g><g><title>std::sys::unix::net::Socket::read (2,087 samples, 0.44%)</title><rect x="53.3104%" y="741" width="0.4378%" height="15" fill="rgb(210,88,33)" fg:x="254154" fg:w="2087"/><text x="53.5604%" y="751.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2,087 samples, 0.44%)</title><rect x="53.3104%" y="725" width="0.4378%" height="15" fill="rgb(219,87,51)" fg:x="254154" fg:w="2087"/><text x="53.5604%" y="735.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2,104 samples, 0.44%)</title><rect x="53.3072%" y="837" width="0.4413%" height="15" fill="rgb(211,7,35)" fg:x="254139" fg:w="2104"/><text x="53.5572%" y="847.50"></text></g><g><title>[libc-2.31.so] (113 samples, 0.02%)</title><rect x="53.7639%" y="757" width="0.0237%" height="15" fill="rgb(232,77,2)" fg:x="256316" fg:w="113"/><text x="54.0139%" y="767.50"></text></g><g><title>ret_from_intr (58 samples, 0.01%)</title><rect x="53.7754%" y="741" width="0.0122%" height="15" fill="rgb(249,94,25)" fg:x="256371" fg:w="58"/><text x="54.0254%" y="751.50"></text></g><g><title>do_IRQ (58 samples, 0.01%)</title><rect x="53.7754%" y="725" width="0.0122%" height="15" fill="rgb(215,112,2)" fg:x="256371" fg:w="58"/><text x="54.0254%" y="735.50"></text></g><g><title>irq_exit (58 samples, 0.01%)</title><rect x="53.7754%" y="709" width="0.0122%" height="15" fill="rgb(226,115,48)" fg:x="256371" fg:w="58"/><text x="54.0254%" y="719.50"></text></g><g><title>__softirqentry_text_start (58 samples, 0.01%)</title><rect x="53.7754%" y="693" width="0.0122%" height="15" fill="rgb(249,196,10)" fg:x="256371" fg:w="58"/><text x="54.0254%" y="703.50"></text></g><g><title>net_rx_action (53 samples, 0.01%)</title><rect x="53.7765%" y="677" width="0.0111%" height="15" fill="rgb(237,109,14)" fg:x="256376" fg:w="53"/><text x="54.0265%" y="687.50"></text></g><g><title>virtnet_poll (52 samples, 0.01%)</title><rect x="53.7767%" y="661" width="0.0109%" height="15" fill="rgb(217,103,53)" fg:x="256377" fg:w="52"/><text x="54.0267%" y="671.50"></text></g><g><title>__netif_receive_skb_list_core (48 samples, 0.01%)</title><rect x="53.8054%" y="597" width="0.0101%" height="15" fill="rgb(244,137,9)" fg:x="256514" fg:w="48"/><text x="54.0554%" y="607.50"></text></g><g><title>napi_complete_done (50 samples, 0.01%)</title><rect x="53.8052%" y="645" width="0.0105%" height="15" fill="rgb(227,201,3)" fg:x="256513" fg:w="50"/><text x="54.0552%" y="655.50"></text></g><g><title>gro_normal_list.part.0 (49 samples, 0.01%)</title><rect x="53.8054%" y="629" width="0.0103%" height="15" fill="rgb(243,94,6)" fg:x="256514" fg:w="49"/><text x="54.0554%" y="639.50"></text></g><g><title>netif_receive_skb_list_internal (49 samples, 0.01%)</title><rect x="53.8054%" y="613" width="0.0103%" height="15" fill="rgb(235,118,5)" fg:x="256514" fg:w="49"/><text x="54.0554%" y="623.50"></text></g><g><title>net_rx_action (64 samples, 0.01%)</title><rect x="53.8046%" y="677" width="0.0134%" height="15" fill="rgb(247,10,30)" fg:x="256510" fg:w="64"/><text x="54.0546%" y="687.50"></text></g><g><title>virtnet_poll (64 samples, 0.01%)</title><rect x="53.8046%" y="661" width="0.0134%" height="15" fill="rgb(205,26,28)" fg:x="256510" fg:w="64"/><text x="54.0546%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (260 samples, 0.05%)</title><rect x="53.7639%" y="789" width="0.0545%" height="15" fill="rgb(206,99,35)" fg:x="256316" fg:w="260"/><text x="54.0139%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (260 samples, 0.05%)</title><rect x="53.7639%" y="773" width="0.0545%" height="15" fill="rgb(238,130,40)" fg:x="256316" fg:w="260"/><text x="54.0139%" y="783.50"></text></g><g><title>cfree (139 samples, 0.03%)</title><rect x="53.7892%" y="757" width="0.0292%" height="15" fill="rgb(224,126,31)" fg:x="256437" fg:w="139"/><text x="54.0392%" y="767.50"></text></g><g><title>ret_from_intr (68 samples, 0.01%)</title><rect x="53.8041%" y="741" width="0.0143%" height="15" fill="rgb(254,105,17)" fg:x="256508" fg:w="68"/><text x="54.0541%" y="751.50"></text></g><g><title>do_IRQ (68 samples, 0.01%)</title><rect x="53.8041%" y="725" width="0.0143%" height="15" fill="rgb(216,87,36)" fg:x="256508" fg:w="68"/><text x="54.0541%" y="735.50"></text></g><g><title>irq_exit (68 samples, 0.01%)</title><rect x="53.8041%" y="709" width="0.0143%" height="15" fill="rgb(240,21,12)" fg:x="256508" fg:w="68"/><text x="54.0541%" y="719.50"></text></g><g><title>__softirqentry_text_start (68 samples, 0.01%)</title><rect x="53.8041%" y="693" width="0.0143%" height="15" fill="rgb(245,192,34)" fg:x="256508" fg:w="68"/><text x="54.0541%" y="703.50"></text></g><g><title>alloc::alloc::box_free (264 samples, 0.06%)</title><rect x="53.7632%" y="805" width="0.0554%" height="15" fill="rgb(226,100,49)" fg:x="256313" fg:w="264"/><text x="54.0132%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt; (285 samples, 0.06%)</title><rect x="53.7624%" y="821" width="0.0598%" height="15" fill="rgb(245,188,27)" fg:x="256309" fg:w="285"/><text x="54.0124%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;uppercut::api::Envelope&gt; (301 samples, 0.06%)</title><rect x="53.7609%" y="837" width="0.0631%" height="15" fill="rgb(212,170,8)" fg:x="256302" fg:w="301"/><text x="54.0109%" y="847.50"></text></g><g><title>ip_list_rcv (49 samples, 0.01%)</title><rect x="53.8746%" y="645" width="0.0103%" height="15" fill="rgb(217,113,29)" fg:x="256844" fg:w="49"/><text x="54.1246%" y="655.50"></text></g><g><title>ip_sublist_rcv (49 samples, 0.01%)</title><rect x="53.8746%" y="629" width="0.0103%" height="15" fill="rgb(237,30,3)" fg:x="256844" fg:w="49"/><text x="54.1246%" y="639.50"></text></g><g><title>napi_complete_done (52 samples, 0.01%)</title><rect x="53.8742%" y="709" width="0.0109%" height="15" fill="rgb(227,19,28)" fg:x="256842" fg:w="52"/><text x="54.1242%" y="719.50"></text></g><g><title>gro_normal_list.part.0 (52 samples, 0.01%)</title><rect x="53.8742%" y="693" width="0.0109%" height="15" fill="rgb(239,172,45)" fg:x="256842" fg:w="52"/><text x="54.1242%" y="703.50"></text></g><g><title>netif_receive_skb_list_internal (52 samples, 0.01%)</title><rect x="53.8742%" y="677" width="0.0109%" height="15" fill="rgb(254,55,39)" fg:x="256842" fg:w="52"/><text x="54.1242%" y="687.50"></text></g><g><title>__netif_receive_skb_list_core (52 samples, 0.01%)</title><rect x="53.8742%" y="661" width="0.0109%" height="15" fill="rgb(249,208,12)" fg:x="256842" fg:w="52"/><text x="54.1242%" y="671.50"></text></g><g><title>virtnet_poll (74 samples, 0.02%)</title><rect x="53.8736%" y="725" width="0.0155%" height="15" fill="rgb(240,52,13)" fg:x="256839" fg:w="74"/><text x="54.1236%" y="735.50"></text></g><g><title>__softirqentry_text_start (85 samples, 0.02%)</title><rect x="53.8715%" y="757" width="0.0178%" height="15" fill="rgb(252,149,13)" fg:x="256829" fg:w="85"/><text x="54.1215%" y="767.50"></text></g><g><title>net_rx_action (76 samples, 0.02%)</title><rect x="53.8734%" y="741" width="0.0159%" height="15" fill="rgb(232,81,48)" fg:x="256838" fg:w="76"/><text x="54.1234%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (209 samples, 0.04%)</title><rect x="53.8457%" y="821" width="0.0438%" height="15" fill="rgb(222,144,2)" fg:x="256706" fg:w="209"/><text x="54.0957%" y="831.50"></text></g><g><title>ret_from_intr (86 samples, 0.02%)</title><rect x="53.8715%" y="805" width="0.0180%" height="15" fill="rgb(216,81,32)" fg:x="256829" fg:w="86"/><text x="54.1215%" y="815.50"></text></g><g><title>do_IRQ (86 samples, 0.02%)</title><rect x="53.8715%" y="789" width="0.0180%" height="15" fill="rgb(244,78,51)" fg:x="256829" fg:w="86"/><text x="54.1215%" y="799.50"></text></g><g><title>irq_exit (86 samples, 0.02%)</title><rect x="53.8715%" y="773" width="0.0180%" height="15" fill="rgb(217,66,21)" fg:x="256829" fg:w="86"/><text x="54.1215%" y="783.50"></text></g><g><title>parsed::stream::ByteStream::cap (48 samples, 0.01%)</title><rect x="53.8895%" y="821" width="0.0101%" height="15" fill="rgb(247,101,42)" fg:x="256915" fg:w="48"/><text x="54.1395%" y="831.50"></text></g><g><title>parsed::stream::ByteStream::put (324 samples, 0.07%)</title><rect x="53.8343%" y="837" width="0.0680%" height="15" fill="rgb(227,81,39)" fg:x="256652" fg:w="324"/><text x="54.0843%" y="847.50"></text></g><g><title>napi_complete_done (51 samples, 0.01%)</title><rect x="53.9059%" y="741" width="0.0107%" height="15" fill="rgb(220,223,44)" fg:x="256993" fg:w="51"/><text x="54.1559%" y="751.50"></text></g><g><title>gro_normal_list.part.0 (51 samples, 0.01%)</title><rect x="53.9059%" y="725" width="0.0107%" height="15" fill="rgb(205,218,2)" fg:x="256993" fg:w="51"/><text x="54.1559%" y="735.50"></text></g><g><title>netif_receive_skb_list_internal (51 samples, 0.01%)</title><rect x="53.9059%" y="709" width="0.0107%" height="15" fill="rgb(212,207,28)" fg:x="256993" fg:w="51"/><text x="54.1559%" y="719.50"></text></g><g><title>__netif_receive_skb_list_core (51 samples, 0.01%)</title><rect x="53.9059%" y="693" width="0.0107%" height="15" fill="rgb(224,12,41)" fg:x="256993" fg:w="51"/><text x="54.1559%" y="703.50"></text></g><g><title>ip_list_rcv (49 samples, 0.01%)</title><rect x="53.9063%" y="677" width="0.0103%" height="15" fill="rgb(216,118,12)" fg:x="256995" fg:w="49"/><text x="54.1563%" y="687.50"></text></g><g><title>ip_sublist_rcv (49 samples, 0.01%)</title><rect x="53.9063%" y="661" width="0.0103%" height="15" fill="rgb(252,97,46)" fg:x="256995" fg:w="49"/><text x="54.1563%" y="671.50"></text></g><g><title>__softirqentry_text_start (95 samples, 0.02%)</title><rect x="53.9023%" y="789" width="0.0199%" height="15" fill="rgb(244,206,19)" fg:x="256976" fg:w="95"/><text x="54.1523%" y="799.50"></text></g><g><title>net_rx_action (84 samples, 0.02%)</title><rect x="53.9046%" y="773" width="0.0176%" height="15" fill="rgb(231,84,31)" fg:x="256987" fg:w="84"/><text x="54.1546%" y="783.50"></text></g><g><title>virtnet_poll (80 samples, 0.02%)</title><rect x="53.9055%" y="757" width="0.0168%" height="15" fill="rgb(244,133,0)" fg:x="256991" fg:w="80"/><text x="54.1555%" y="767.50"></text></g><g><title>ret_from_intr (96 samples, 0.02%)</title><rect x="53.9023%" y="837" width="0.0201%" height="15" fill="rgb(223,15,50)" fg:x="256976" fg:w="96"/><text x="54.1523%" y="847.50"></text></g><g><title>do_IRQ (96 samples, 0.02%)</title><rect x="53.9023%" y="821" width="0.0201%" height="15" fill="rgb(250,118,49)" fg:x="256976" fg:w="96"/><text x="54.1523%" y="831.50"></text></g><g><title>irq_exit (96 samples, 0.02%)</title><rect x="53.9023%" y="805" width="0.0201%" height="15" fill="rgb(248,25,38)" fg:x="256976" fg:w="96"/><text x="54.1523%" y="815.50"></text></g><g><title>apparmor_socket_sendmsg (57 samples, 0.01%)</title><rect x="54.0640%" y="629" width="0.0120%" height="15" fill="rgb(215,70,14)" fg:x="257747" fg:w="57"/><text x="54.3140%" y="639.50"></text></g><g><title>_raw_spin_unlock_bh (50 samples, 0.01%)</title><rect x="54.1110%" y="581" width="0.0105%" height="15" fill="rgb(215,28,15)" fg:x="257971" fg:w="50"/><text x="54.3610%" y="591.50"></text></g><g><title>__local_bh_enable_ip (49 samples, 0.01%)</title><rect x="54.1112%" y="565" width="0.0103%" height="15" fill="rgb(243,6,28)" fg:x="257972" fg:w="49"/><text x="54.3612%" y="575.50"></text></g><g><title>release_sock (67 samples, 0.01%)</title><rect x="54.1089%" y="597" width="0.0141%" height="15" fill="rgb(222,130,1)" fg:x="257961" fg:w="67"/><text x="54.3589%" y="607.50"></text></g><g><title>copy_user_enhanced_fast_string (125 samples, 0.03%)</title><rect x="54.1777%" y="565" width="0.0262%" height="15" fill="rgb(236,166,44)" fg:x="258289" fg:w="125"/><text x="54.4277%" y="575.50"></text></g><g><title>ret_from_intr (65 samples, 0.01%)</title><rect x="54.1903%" y="549" width="0.0136%" height="15" fill="rgb(221,108,14)" fg:x="258349" fg:w="65"/><text x="54.4403%" y="559.50"></text></g><g><title>do_IRQ (65 samples, 0.01%)</title><rect x="54.1903%" y="533" width="0.0136%" height="15" fill="rgb(252,3,45)" fg:x="258349" fg:w="65"/><text x="54.4403%" y="543.50"></text></g><g><title>irq_exit (65 samples, 0.01%)</title><rect x="54.1903%" y="517" width="0.0136%" height="15" fill="rgb(237,68,30)" fg:x="258349" fg:w="65"/><text x="54.4403%" y="527.50"></text></g><g><title>__softirqentry_text_start (65 samples, 0.01%)</title><rect x="54.1903%" y="501" width="0.0136%" height="15" fill="rgb(211,79,22)" fg:x="258349" fg:w="65"/><text x="54.4403%" y="511.50"></text></g><g><title>net_rx_action (60 samples, 0.01%)</title><rect x="54.1913%" y="485" width="0.0126%" height="15" fill="rgb(252,185,21)" fg:x="258354" fg:w="60"/><text x="54.4413%" y="495.50"></text></g><g><title>virtnet_poll (59 samples, 0.01%)</title><rect x="54.1916%" y="469" width="0.0124%" height="15" fill="rgb(225,189,26)" fg:x="258355" fg:w="59"/><text x="54.4416%" y="479.50"></text></g><g><title>_copy_from_iter_full (143 samples, 0.03%)</title><rect x="54.1773%" y="581" width="0.0300%" height="15" fill="rgb(241,30,40)" fg:x="258287" fg:w="143"/><text x="54.4273%" y="591.50"></text></g><g><title>napi_complete_done (56 samples, 0.01%)</title><rect x="54.2155%" y="485" width="0.0117%" height="15" fill="rgb(235,215,44)" fg:x="258469" fg:w="56"/><text x="54.4655%" y="495.50"></text></g><g><title>gro_normal_list.part.0 (56 samples, 0.01%)</title><rect x="54.2155%" y="469" width="0.0117%" height="15" fill="rgb(205,8,29)" fg:x="258469" fg:w="56"/><text x="54.4655%" y="479.50"></text></g><g><title>netif_receive_skb_list_internal (55 samples, 0.01%)</title><rect x="54.2157%" y="453" width="0.0115%" height="15" fill="rgb(241,137,42)" fg:x="258470" fg:w="55"/><text x="54.4657%" y="463.50"></text></g><g><title>__netif_receive_skb_list_core (55 samples, 0.01%)</title><rect x="54.2157%" y="437" width="0.0115%" height="15" fill="rgb(237,155,2)" fg:x="258470" fg:w="55"/><text x="54.4657%" y="447.50"></text></g><g><title>ip_list_rcv (52 samples, 0.01%)</title><rect x="54.2163%" y="421" width="0.0109%" height="15" fill="rgb(245,29,42)" fg:x="258473" fg:w="52"/><text x="54.4663%" y="431.50"></text></g><g><title>ip_sublist_rcv (52 samples, 0.01%)</title><rect x="54.2163%" y="405" width="0.0109%" height="15" fill="rgb(234,101,35)" fg:x="258473" fg:w="52"/><text x="54.4663%" y="415.50"></text></g><g><title>ip_sublist_rcv_finish (51 samples, 0.01%)</title><rect x="54.2165%" y="389" width="0.0107%" height="15" fill="rgb(228,64,37)" fg:x="258474" fg:w="51"/><text x="54.4665%" y="399.50"></text></g><g><title>ip_local_deliver (50 samples, 0.01%)</title><rect x="54.2167%" y="373" width="0.0105%" height="15" fill="rgb(217,214,36)" fg:x="258475" fg:w="50"/><text x="54.4667%" y="383.50"></text></g><g><title>ip_local_deliver_finish (50 samples, 0.01%)</title><rect x="54.2167%" y="357" width="0.0105%" height="15" fill="rgb(243,70,3)" fg:x="258475" fg:w="50"/><text x="54.4667%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (50 samples, 0.01%)</title><rect x="54.2167%" y="341" width="0.0105%" height="15" fill="rgb(253,158,52)" fg:x="258475" fg:w="50"/><text x="54.4667%" y="351.50"></text></g><g><title>ret_from_intr (93 samples, 0.02%)</title><rect x="54.2127%" y="581" width="0.0195%" height="15" fill="rgb(234,111,54)" fg:x="258456" fg:w="93"/><text x="54.4627%" y="591.50"></text></g><g><title>do_IRQ (93 samples, 0.02%)</title><rect x="54.2127%" y="565" width="0.0195%" height="15" fill="rgb(217,70,32)" fg:x="258456" fg:w="93"/><text x="54.4627%" y="575.50"></text></g><g><title>irq_exit (93 samples, 0.02%)</title><rect x="54.2127%" y="549" width="0.0195%" height="15" fill="rgb(234,18,33)" fg:x="258456" fg:w="93"/><text x="54.4627%" y="559.50"></text></g><g><title>__softirqentry_text_start (93 samples, 0.02%)</title><rect x="54.2127%" y="533" width="0.0195%" height="15" fill="rgb(234,12,49)" fg:x="258456" fg:w="93"/><text x="54.4627%" y="543.50"></text></g><g><title>net_rx_action (86 samples, 0.02%)</title><rect x="54.2142%" y="517" width="0.0180%" height="15" fill="rgb(236,10,21)" fg:x="258463" fg:w="86"/><text x="54.4642%" y="527.50"></text></g><g><title>virtnet_poll (84 samples, 0.02%)</title><rect x="54.2146%" y="501" width="0.0176%" height="15" fill="rgb(248,182,45)" fg:x="258465" fg:w="84"/><text x="54.4646%" y="511.50"></text></g><g><title>__kmalloc_node_track_caller (104 samples, 0.02%)</title><rect x="54.2515%" y="533" width="0.0218%" height="15" fill="rgb(217,95,36)" fg:x="258641" fg:w="104"/><text x="54.5015%" y="543.50"></text></g><g><title>ret_from_intr (50 samples, 0.01%)</title><rect x="54.2629%" y="517" width="0.0105%" height="15" fill="rgb(212,110,31)" fg:x="258695" fg:w="50"/><text x="54.5129%" y="527.50"></text></g><g><title>do_IRQ (50 samples, 0.01%)</title><rect x="54.2629%" y="501" width="0.0105%" height="15" fill="rgb(206,32,53)" fg:x="258695" fg:w="50"/><text x="54.5129%" y="511.50"></text></g><g><title>irq_exit (50 samples, 0.01%)</title><rect x="54.2629%" y="485" width="0.0105%" height="15" fill="rgb(246,141,37)" fg:x="258695" fg:w="50"/><text x="54.5129%" y="495.50"></text></g><g><title>__softirqentry_text_start (50 samples, 0.01%)</title><rect x="54.2629%" y="469" width="0.0105%" height="15" fill="rgb(219,16,7)" fg:x="258695" fg:w="50"/><text x="54.5129%" y="479.50"></text></g><g><title>net_rx_action (48 samples, 0.01%)</title><rect x="54.2633%" y="453" width="0.0101%" height="15" fill="rgb(230,205,45)" fg:x="258697" fg:w="48"/><text x="54.5133%" y="463.50"></text></g><g><title>__kmalloc_reserve.isra.0 (184 samples, 0.04%)</title><rect x="54.2509%" y="549" width="0.0386%" height="15" fill="rgb(231,43,49)" fg:x="258638" fg:w="184"/><text x="54.5009%" y="559.50"></text></g><g><title>kmem_cache_alloc_node (76 samples, 0.02%)</title><rect x="54.2916%" y="549" width="0.0159%" height="15" fill="rgb(212,106,34)" fg:x="258832" fg:w="76"/><text x="54.5416%" y="559.50"></text></g><g><title>__alloc_skb (375 samples, 0.08%)</title><rect x="54.2453%" y="565" width="0.0787%" height="15" fill="rgb(206,83,17)" fg:x="258611" fg:w="375"/><text x="54.4953%" y="575.50"></text></g><g><title>sk_stream_alloc_skb (404 samples, 0.08%)</title><rect x="54.2436%" y="581" width="0.0847%" height="15" fill="rgb(244,154,49)" fg:x="258603" fg:w="404"/><text x="54.4936%" y="591.50"></text></g><g><title>skb_entail (55 samples, 0.01%)</title><rect x="54.3283%" y="581" width="0.0115%" height="15" fill="rgb(244,149,49)" fg:x="259007" fg:w="55"/><text x="54.5783%" y="591.50"></text></g><g><title>__inet_lookup_established (65 samples, 0.01%)</title><rect x="54.5272%" y="181" width="0.0136%" height="15" fill="rgb(227,134,18)" fg:x="259955" fg:w="65"/><text x="54.7772%" y="191.50"></text></g><g><title>ip_rcv_finish_core.isra.0 (109 samples, 0.02%)</title><rect x="54.5192%" y="213" width="0.0229%" height="15" fill="rgb(237,116,36)" fg:x="259917" fg:w="109"/><text x="54.7692%" y="223.50"></text></g><g><title>tcp_v4_early_demux (98 samples, 0.02%)</title><rect x="54.5215%" y="197" width="0.0206%" height="15" fill="rgb(205,129,40)" fg:x="259928" fg:w="98"/><text x="54.7715%" y="207.50"></text></g><g><title>raw_rcv_skb (119 samples, 0.02%)</title><rect x="54.5588%" y="117" width="0.0250%" height="15" fill="rgb(236,178,4)" fg:x="260106" fg:w="119"/><text x="54.8088%" y="127.50"></text></g><g><title>sock_queue_rcv_skb (71 samples, 0.01%)</title><rect x="54.5689%" y="101" width="0.0149%" height="15" fill="rgb(251,76,53)" fg:x="260154" fg:w="71"/><text x="54.8189%" y="111.50"></text></g><g><title>sk_filter_trim_cap (55 samples, 0.01%)</title><rect x="54.5723%" y="85" width="0.0115%" height="15" fill="rgb(242,92,40)" fg:x="260170" fg:w="55"/><text x="54.8223%" y="95.50"></text></g><g><title>raw_rcv (134 samples, 0.03%)</title><rect x="54.5565%" y="133" width="0.0281%" height="15" fill="rgb(209,45,30)" fg:x="260095" fg:w="134"/><text x="54.8065%" y="143.50"></text></g><g><title>skb_clone (62 samples, 0.01%)</title><rect x="54.5849%" y="133" width="0.0130%" height="15" fill="rgb(218,157,36)" fg:x="260230" fg:w="62"/><text x="54.8349%" y="143.50"></text></g><g><title>raw_local_deliver (221 samples, 0.05%)</title><rect x="54.5517%" y="149" width="0.0464%" height="15" fill="rgb(222,186,16)" fg:x="260072" fg:w="221"/><text x="54.8017%" y="159.50"></text></g><g><title>kfree_skbmem (61 samples, 0.01%)</title><rect x="54.6692%" y="53" width="0.0128%" height="15" fill="rgb(254,72,35)" fg:x="260632" fg:w="61"/><text x="54.9192%" y="63.50"></text></g><g><title>kmem_cache_free (51 samples, 0.01%)</title><rect x="54.6713%" y="37" width="0.0107%" height="15" fill="rgb(224,25,35)" fg:x="260642" fg:w="51"/><text x="54.9213%" y="47.50"></text></g><g><title>skb_release_data (118 samples, 0.02%)</title><rect x="54.6824%" y="37" width="0.0248%" height="15" fill="rgb(206,135,52)" fg:x="260695" fg:w="118"/><text x="54.9324%" y="47.50"></text></g><g><title>skb_release_all (125 samples, 0.03%)</title><rect x="54.6822%" y="53" width="0.0262%" height="15" fill="rgb(229,174,47)" fg:x="260694" fg:w="125"/><text x="54.9322%" y="63.50"></text></g><g><title>__kfree_skb (190 samples, 0.04%)</title><rect x="54.6692%" y="69" width="0.0399%" height="15" fill="rgb(242,184,21)" fg:x="260632" fg:w="190"/><text x="54.9192%" y="79.50"></text></g><g><title>tcp_clean_rtx_queue (275 samples, 0.06%)</title><rect x="54.6589%" y="85" width="0.0577%" height="15" fill="rgb(213,22,45)" fg:x="260583" fg:w="275"/><text x="54.9089%" y="95.50"></text></g><g><title>tcp_ack (404 samples, 0.08%)</title><rect x="54.6373%" y="101" width="0.0847%" height="15" fill="rgb(237,81,54)" fg:x="260480" fg:w="404"/><text x="54.8873%" y="111.50"></text></g><g><title>__lock_text_start (366 samples, 0.08%)</title><rect x="54.7256%" y="37" width="0.0768%" height="15" fill="rgb(248,177,18)" fg:x="260901" fg:w="366"/><text x="54.9756%" y="47.50"></text></g><g><title>__wake_up_common_lock (371 samples, 0.08%)</title><rect x="54.7248%" y="53" width="0.0778%" height="15" fill="rgb(254,31,16)" fg:x="260897" fg:w="371"/><text x="54.9748%" y="63.50"></text></g><g><title>tcp_data_ready (385 samples, 0.08%)</title><rect x="54.7220%" y="101" width="0.0808%" height="15" fill="rgb(235,20,31)" fg:x="260884" fg:w="385"/><text x="54.9720%" y="111.50"></text></g><g><title>sock_def_readable (385 samples, 0.08%)</title><rect x="54.7220%" y="85" width="0.0808%" height="15" fill="rgb(240,56,43)" fg:x="260884" fg:w="385"/><text x="54.9720%" y="95.50"></text></g><g><title>__wake_up_sync_key (372 samples, 0.08%)</title><rect x="54.7248%" y="69" width="0.0780%" height="15" fill="rgb(237,197,51)" fg:x="260897" fg:w="372"/><text x="54.9748%" y="79.50"></text></g><g><title>tcp_mstamp_refresh (57 samples, 0.01%)</title><rect x="54.8034%" y="101" width="0.0120%" height="15" fill="rgb(241,162,44)" fg:x="261272" fg:w="57"/><text x="55.0534%" y="111.50"></text></g><g><title>tcp_v4_do_rcv (995 samples, 0.21%)</title><rect x="54.6134%" y="133" width="0.2087%" height="15" fill="rgb(224,23,20)" fg:x="260366" fg:w="995"/><text x="54.8634%" y="143.50"></text></g><g><title>tcp_rcv_established (963 samples, 0.20%)</title><rect x="54.6201%" y="117" width="0.2020%" height="15" fill="rgb(250,109,34)" fg:x="260398" fg:w="963"/><text x="54.8701%" y="127.50"></text></g><g><title>ip_protocol_deliver_rcu (1,319 samples, 0.28%)</title><rect x="54.5465%" y="165" width="0.2767%" height="15" fill="rgb(214,175,50)" fg:x="260047" fg:w="1319"/><text x="54.7965%" y="175.50"></text></g><g><title>tcp_v4_rcv (1,065 samples, 0.22%)</title><rect x="54.5997%" y="149" width="0.2234%" height="15" fill="rgb(213,182,5)" fg:x="260301" fg:w="1065"/><text x="54.8497%" y="159.50"></text></g><g><title>ip_local_deliver (1,345 samples, 0.28%)</title><rect x="54.5423%" y="197" width="0.2821%" height="15" fill="rgb(209,199,19)" fg:x="260027" fg:w="1345"/><text x="54.7923%" y="207.50"></text></g><g><title>ip_local_deliver_finish (1,325 samples, 0.28%)</title><rect x="54.5465%" y="181" width="0.2779%" height="15" fill="rgb(236,224,42)" fg:x="260047" fg:w="1325"/><text x="54.7965%" y="191.50"></text></g><g><title>ip_list_rcv (1,497 samples, 0.31%)</title><rect x="54.5106%" y="245" width="0.3140%" height="15" fill="rgb(246,226,29)" fg:x="259876" fg:w="1497"/><text x="54.7606%" y="255.50"></text></g><g><title>ip_sublist_rcv (1,475 samples, 0.31%)</title><rect x="54.5152%" y="229" width="0.3094%" height="15" fill="rgb(227,223,11)" fg:x="259898" fg:w="1475"/><text x="54.7652%" y="239.50"></text></g><g><title>ip_sublist_rcv_finish (1,347 samples, 0.28%)</title><rect x="54.5421%" y="213" width="0.2825%" height="15" fill="rgb(219,7,51)" fg:x="260026" fg:w="1347"/><text x="54.7921%" y="223.50"></text></g><g><title>__netif_receive_skb_list_core (1,545 samples, 0.32%)</title><rect x="54.5009%" y="261" width="0.3241%" height="15" fill="rgb(245,167,10)" fg:x="259830" fg:w="1545"/><text x="54.7509%" y="271.50"></text></g><g><title>napi_complete_done (1,602 samples, 0.34%)</title><rect x="54.4972%" y="309" width="0.3360%" height="15" fill="rgb(237,224,16)" fg:x="259812" fg:w="1602"/><text x="54.7472%" y="319.50"></text></g><g><title>gro_normal_list.part.0 (1,593 samples, 0.33%)</title><rect x="54.4991%" y="293" width="0.3341%" height="15" fill="rgb(226,132,13)" fg:x="259821" fg:w="1593"/><text x="54.7491%" y="303.50"></text></g><g><title>netif_receive_skb_list_internal (1,588 samples, 0.33%)</title><rect x="54.5001%" y="277" width="0.3331%" height="15" fill="rgb(214,140,3)" fg:x="259826" fg:w="1588"/><text x="54.7501%" y="287.50"></text></g><g><title>inet_gro_receive (51 samples, 0.01%)</title><rect x="54.8397%" y="261" width="0.0107%" height="15" fill="rgb(221,177,4)" fg:x="261445" fg:w="51"/><text x="55.0897%" y="271.50"></text></g><g><title>dev_gro_receive (72 samples, 0.02%)</title><rect x="54.8359%" y="277" width="0.0151%" height="15" fill="rgb(238,139,3)" fg:x="261427" fg:w="72"/><text x="55.0859%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (70 samples, 0.01%)</title><rect x="54.8544%" y="133" width="0.0147%" height="15" fill="rgb(216,17,39)" fg:x="261515" fg:w="70"/><text x="55.1044%" y="143.50"></text></g><g><title>tcp_v4_rcv (57 samples, 0.01%)</title><rect x="54.8571%" y="117" width="0.0120%" height="15" fill="rgb(238,120,9)" fg:x="261528" fg:w="57"/><text x="55.1071%" y="127.50"></text></g><g><title>gro_normal_one (87 samples, 0.02%)</title><rect x="54.8510%" y="277" width="0.0182%" height="15" fill="rgb(244,92,53)" fg:x="261499" fg:w="87"/><text x="55.1010%" y="287.50"></text></g><g><title>gro_normal_list.part.0 (87 samples, 0.02%)</title><rect x="54.8510%" y="261" width="0.0182%" height="15" fill="rgb(224,148,33)" fg:x="261499" fg:w="87"/><text x="55.1010%" y="271.50"></text></g><g><title>netif_receive_skb_list_internal (87 samples, 0.02%)</title><rect x="54.8510%" y="245" width="0.0182%" height="15" fill="rgb(243,6,36)" fg:x="261499" fg:w="87"/><text x="55.1010%" y="255.50"></text></g><g><title>__netif_receive_skb_list_core (86 samples, 0.02%)</title><rect x="54.8512%" y="229" width="0.0180%" height="15" fill="rgb(230,102,11)" fg:x="261500" fg:w="86"/><text x="55.1012%" y="239.50"></text></g><g><title>ip_list_rcv (84 samples, 0.02%)</title><rect x="54.8517%" y="213" width="0.0176%" height="15" fill="rgb(234,148,36)" fg:x="261502" fg:w="84"/><text x="55.1017%" y="223.50"></text></g><g><title>ip_sublist_rcv (81 samples, 0.02%)</title><rect x="54.8523%" y="197" width="0.0170%" height="15" fill="rgb(251,153,25)" fg:x="261505" fg:w="81"/><text x="55.1023%" y="207.50"></text></g><g><title>ip_sublist_rcv_finish (72 samples, 0.02%)</title><rect x="54.8542%" y="181" width="0.0151%" height="15" fill="rgb(215,129,8)" fg:x="261514" fg:w="72"/><text x="55.1042%" y="191.50"></text></g><g><title>ip_local_deliver (72 samples, 0.02%)</title><rect x="54.8542%" y="165" width="0.0151%" height="15" fill="rgb(224,128,35)" fg:x="261514" fg:w="72"/><text x="55.1042%" y="175.50"></text></g><g><title>ip_local_deliver_finish (72 samples, 0.02%)</title><rect x="54.8542%" y="149" width="0.0151%" height="15" fill="rgb(237,56,52)" fg:x="261514" fg:w="72"/><text x="55.1042%" y="159.50"></text></g><g><title>napi_gro_receive (161 samples, 0.03%)</title><rect x="54.8359%" y="293" width="0.0338%" height="15" fill="rgb(234,213,19)" fg:x="261427" fg:w="161"/><text x="55.0859%" y="303.50"></text></g><g><title>__alloc_skb (137 samples, 0.03%)</title><rect x="54.8980%" y="245" width="0.0287%" height="15" fill="rgb(252,82,23)" fg:x="261723" fg:w="137"/><text x="55.1480%" y="255.50"></text></g><g><title>__napi_alloc_skb (142 samples, 0.03%)</title><rect x="54.8980%" y="261" width="0.0298%" height="15" fill="rgb(254,201,21)" fg:x="261723" fg:w="142"/><text x="55.1480%" y="271.50"></text></g><g><title>page_to_skb (177 samples, 0.04%)</title><rect x="54.8928%" y="277" width="0.0371%" height="15" fill="rgb(250,186,11)" fg:x="261698" fg:w="177"/><text x="55.1428%" y="287.50"></text></g><g><title>receive_buf (462 samples, 0.10%)</title><rect x="54.8334%" y="309" width="0.0969%" height="15" fill="rgb(211,174,5)" fg:x="261415" fg:w="462"/><text x="55.0834%" y="319.50"></text></g><g><title>receive_mergeable (289 samples, 0.06%)</title><rect x="54.8697%" y="293" width="0.0606%" height="15" fill="rgb(214,121,10)" fg:x="261588" fg:w="289"/><text x="55.1197%" y="303.50"></text></g><g><title>clear_page_erms (50 samples, 0.01%)</title><rect x="54.9354%" y="229" width="0.0105%" height="15" fill="rgb(241,66,2)" fg:x="261901" fg:w="50"/><text x="55.1854%" y="239.50"></text></g><g><title>skb_page_frag_refill (65 samples, 0.01%)</title><rect x="54.9341%" y="293" width="0.0136%" height="15" fill="rgb(220,167,19)" fg:x="261895" fg:w="65"/><text x="55.1841%" y="303.50"></text></g><g><title>alloc_pages_current (61 samples, 0.01%)</title><rect x="54.9349%" y="277" width="0.0128%" height="15" fill="rgb(231,54,50)" fg:x="261899" fg:w="61"/><text x="55.1849%" y="287.50"></text></g><g><title>__alloc_pages_nodemask (60 samples, 0.01%)</title><rect x="54.9351%" y="261" width="0.0126%" height="15" fill="rgb(239,217,53)" fg:x="261900" fg:w="60"/><text x="55.1851%" y="271.50"></text></g><g><title>get_page_from_freelist (59 samples, 0.01%)</title><rect x="54.9354%" y="245" width="0.0124%" height="15" fill="rgb(248,8,0)" fg:x="261901" fg:w="59"/><text x="55.1854%" y="255.50"></text></g><g><title>try_fill_recv (100 samples, 0.02%)</title><rect x="54.9303%" y="309" width="0.0210%" height="15" fill="rgb(229,118,37)" fg:x="261877" fg:w="100"/><text x="55.1803%" y="319.50"></text></g><g><title>virtnet_poll (2,266 samples, 0.48%)</title><rect x="54.4844%" y="325" width="0.4753%" height="15" fill="rgb(253,223,43)" fg:x="259751" fg:w="2266"/><text x="54.7344%" y="335.50"></text></g><g><title>net_rx_action (2,289 samples, 0.48%)</title><rect x="54.4810%" y="341" width="0.4801%" height="15" fill="rgb(211,77,36)" fg:x="259735" fg:w="2289"/><text x="54.7310%" y="351.50"></text></g><g><title>__softirqentry_text_start (2,301 samples, 0.48%)</title><rect x="54.4793%" y="357" width="0.4826%" height="15" fill="rgb(219,3,53)" fg:x="259727" fg:w="2301"/><text x="54.7293%" y="367.50"></text></g><g><title>do_softirq_own_stack (2,309 samples, 0.48%)</title><rect x="54.4793%" y="373" width="0.4843%" height="15" fill="rgb(244,45,42)" fg:x="259727" fg:w="2309"/><text x="54.7293%" y="383.50"></text></g><g><title>do_softirq.part.0 (2,317 samples, 0.49%)</title><rect x="54.4779%" y="389" width="0.4860%" height="15" fill="rgb(225,95,27)" fg:x="259720" fg:w="2317"/><text x="54.7279%" y="399.50"></text></g><g><title>__local_bh_enable_ip (2,327 samples, 0.49%)</title><rect x="54.4764%" y="405" width="0.4881%" height="15" fill="rgb(207,74,8)" fg:x="259713" fg:w="2327"/><text x="54.7264%" y="415.50"></text></g><g><title>fq_codel_dequeue (142 samples, 0.03%)</title><rect x="54.9863%" y="357" width="0.0298%" height="15" fill="rgb(243,63,36)" fg:x="262144" fg:w="142"/><text x="55.2363%" y="367.50"></text></g><g><title>codel_dequeue.constprop.0 (49 samples, 0.01%)</title><rect x="55.0058%" y="341" width="0.0103%" height="15" fill="rgb(211,180,12)" fg:x="262237" fg:w="49"/><text x="55.2558%" y="351.50"></text></g><g><title>free_old_xmit_skbs (63 samples, 0.01%)</title><rect x="55.0287%" y="309" width="0.0132%" height="15" fill="rgb(254,166,49)" fg:x="262346" fg:w="63"/><text x="55.2787%" y="319.50"></text></g><g><title>iowrite16 (208 samples, 0.04%)</title><rect x="55.0602%" y="293" width="0.0436%" height="15" fill="rgb(205,19,0)" fg:x="262496" fg:w="208"/><text x="55.3102%" y="303.50"></text></g><g><title>virtqueue_notify (212 samples, 0.04%)</title><rect x="55.0597%" y="309" width="0.0445%" height="15" fill="rgb(224,172,32)" fg:x="262494" fg:w="212"/><text x="55.3097%" y="319.50"></text></g><g><title>start_xmit (384 samples, 0.08%)</title><rect x="55.0245%" y="325" width="0.0805%" height="15" fill="rgb(254,136,30)" fg:x="262326" fg:w="384"/><text x="55.2745%" y="335.50"></text></g><g><title>dev_hard_start_xmit (392 samples, 0.08%)</title><rect x="55.0237%" y="341" width="0.0822%" height="15" fill="rgb(246,19,35)" fg:x="262322" fg:w="392"/><text x="55.2737%" y="351.50"></text></g><g><title>__qdisc_run (637 samples, 0.13%)</title><rect x="54.9809%" y="373" width="0.1336%" height="15" fill="rgb(219,24,36)" fg:x="262118" fg:w="637"/><text x="55.2309%" y="383.50"></text></g><g><title>sch_direct_xmit (469 samples, 0.10%)</title><rect x="55.0161%" y="357" width="0.0984%" height="15" fill="rgb(251,55,1)" fg:x="262286" fg:w="469"/><text x="55.2661%" y="367.50"></text></g><g><title>_raw_spin_lock (93 samples, 0.02%)</title><rect x="55.1147%" y="373" width="0.0195%" height="15" fill="rgb(218,117,39)" fg:x="262756" fg:w="93"/><text x="55.3647%" y="383.50"></text></g><g><title>native_queued_spin_lock_slowpath (49 samples, 0.01%)</title><rect x="55.1239%" y="357" width="0.0103%" height="15" fill="rgb(248,169,11)" fg:x="262800" fg:w="49"/><text x="55.3739%" y="367.50"></text></g><g><title>fq_codel_enqueue (49 samples, 0.01%)</title><rect x="55.1384%" y="373" width="0.0103%" height="15" fill="rgb(244,40,44)" fg:x="262869" fg:w="49"/><text x="55.3884%" y="383.50"></text></g><g><title>__dev_kfree_skb_any (53 samples, 0.01%)</title><rect x="55.1753%" y="293" width="0.0111%" height="15" fill="rgb(234,62,37)" fg:x="263045" fg:w="53"/><text x="55.4253%" y="303.50"></text></g><g><title>consume_skb (51 samples, 0.01%)</title><rect x="55.1757%" y="277" width="0.0107%" height="15" fill="rgb(207,117,42)" fg:x="263047" fg:w="51"/><text x="55.4257%" y="287.50"></text></g><g><title>napi_consume_skb (55 samples, 0.01%)</title><rect x="55.1751%" y="309" width="0.0115%" height="15" fill="rgb(213,43,2)" fg:x="263044" fg:w="55"/><text x="55.4251%" y="319.50"></text></g><g><title>free_old_xmit_skbs (160 samples, 0.03%)</title><rect x="55.1694%" y="325" width="0.0336%" height="15" fill="rgb(244,202,51)" fg:x="263017" fg:w="160"/><text x="55.4194%" y="335.50"></text></g><g><title>virtqueue_get_buf (78 samples, 0.02%)</title><rect x="55.1866%" y="309" width="0.0164%" height="15" fill="rgb(253,174,46)" fg:x="263099" fg:w="78"/><text x="55.4366%" y="319.50"></text></g><g><title>virtqueue_get_buf_ctx (78 samples, 0.02%)</title><rect x="55.1866%" y="293" width="0.0164%" height="15" fill="rgb(251,23,1)" fg:x="263099" fg:w="78"/><text x="55.4366%" y="303.50"></text></g><g><title>virtqueue_add_outbuf (97 samples, 0.02%)</title><rect x="55.2108%" y="325" width="0.0203%" height="15" fill="rgb(253,26,1)" fg:x="263214" fg:w="97"/><text x="55.4608%" y="335.50"></text></g><g><title>iowrite16 (1,176 samples, 0.25%)</title><rect x="55.2426%" y="309" width="0.2467%" height="15" fill="rgb(216,89,31)" fg:x="263366" fg:w="1176"/><text x="55.4926%" y="319.50"></text></g><g><title>virtqueue_notify (1,186 samples, 0.25%)</title><rect x="55.2424%" y="325" width="0.2488%" height="15" fill="rgb(209,109,5)" fg:x="263365" fg:w="1186"/><text x="55.4924%" y="335.50"></text></g><g><title>start_xmit (1,593 samples, 0.33%)</title><rect x="55.1604%" y="341" width="0.3341%" height="15" fill="rgb(229,63,13)" fg:x="262974" fg:w="1593"/><text x="55.4104%" y="351.50"></text></g><g><title>dev_hard_start_xmit (1,611 samples, 0.34%)</title><rect x="55.1583%" y="357" width="0.3379%" height="15" fill="rgb(238,137,54)" fg:x="262964" fg:w="1611"/><text x="55.4083%" y="367.50"></text></g><g><title>validate_xmit_skb (53 samples, 0.01%)</title><rect x="55.5006%" y="341" width="0.0111%" height="15" fill="rgb(228,1,9)" fg:x="264596" fg:w="53"/><text x="55.7506%" y="351.50"></text></g><g><title>__dev_queue_xmit (2,618 samples, 0.55%)</title><rect x="54.9653%" y="389" width="0.5491%" height="15" fill="rgb(249,120,48)" fg:x="262044" fg:w="2618"/><text x="55.2153%" y="399.50"></text></g><g><title>sch_direct_xmit (1,739 samples, 0.36%)</title><rect x="55.1497%" y="373" width="0.3648%" height="15" fill="rgb(209,72,36)" fg:x="262923" fg:w="1739"/><text x="55.3997%" y="383.50"></text></g><g><title>validate_xmit_skb_list (76 samples, 0.02%)</title><rect x="55.4985%" y="357" width="0.0159%" height="15" fill="rgb(247,98,49)" fg:x="264586" fg:w="76"/><text x="55.7485%" y="367.50"></text></g><g><title>dev_queue_xmit (2,664 samples, 0.56%)</title><rect x="54.9645%" y="405" width="0.5588%" height="15" fill="rgb(233,75,36)" fg:x="262040" fg:w="2664"/><text x="55.2145%" y="415.50"></text></g><g><title>ip_finish_output2 (5,064 samples, 1.06%)</title><rect x="54.4632%" y="421" width="1.0622%" height="15" fill="rgb(225,14,24)" fg:x="259650" fg:w="5064"/><text x="54.7132%" y="431.50"></text></g><g><title>__ip_finish_output (5,108 samples, 1.07%)</title><rect x="54.4575%" y="437" width="1.0714%" height="15" fill="rgb(237,193,20)" fg:x="259623" fg:w="5108"/><text x="54.7075%" y="447.50"></text></g><g><title>ip_finish_output (5,195 samples, 1.09%)</title><rect x="54.4477%" y="453" width="1.0897%" height="15" fill="rgb(239,122,19)" fg:x="259576" fg:w="5195"/><text x="54.6977%" y="463.50"></text></g><g><title>ip_output (5,239 samples, 1.10%)</title><rect x="54.4412%" y="469" width="1.0989%" height="15" fill="rgb(231,220,10)" fg:x="259545" fg:w="5239"/><text x="54.6912%" y="479.50"></text></g><g><title>ip_local_out (5,307 samples, 1.11%)</title><rect x="54.4311%" y="485" width="1.1132%" height="15" fill="rgb(220,66,15)" fg:x="259497" fg:w="5307"/><text x="54.6811%" y="495.50"></text></g><g><title>__ip_queue_xmit (5,484 samples, 1.15%)</title><rect x="54.4164%" y="501" width="1.1503%" height="15" fill="rgb(215,171,52)" fg:x="259427" fg:w="5484"/><text x="54.6664%" y="511.50"></text></g><g><title>ip_queue_xmit (5,517 samples, 1.16%)</title><rect x="54.4164%" y="517" width="1.1572%" height="15" fill="rgb(241,169,50)" fg:x="259427" fg:w="5517"/><text x="54.6664%" y="527.50"></text></g><g><title>__netif_receive_skb_list_core (49 samples, 0.01%)</title><rect x="55.5751%" y="373" width="0.0103%" height="15" fill="rgb(236,189,0)" fg:x="264951" fg:w="49"/><text x="55.8251%" y="383.50"></text></g><g><title>napi_complete_done (51 samples, 0.01%)</title><rect x="55.5749%" y="421" width="0.0107%" height="15" fill="rgb(217,147,20)" fg:x="264950" fg:w="51"/><text x="55.8249%" y="431.50"></text></g><g><title>gro_normal_list.part.0 (50 samples, 0.01%)</title><rect x="55.5751%" y="405" width="0.0105%" height="15" fill="rgb(206,188,39)" fg:x="264951" fg:w="50"/><text x="55.8251%" y="415.50"></text></g><g><title>netif_receive_skb_list_internal (50 samples, 0.01%)</title><rect x="55.5751%" y="389" width="0.0105%" height="15" fill="rgb(227,118,25)" fg:x="264951" fg:w="50"/><text x="55.8251%" y="399.50"></text></g><g><title>virtnet_poll (70 samples, 0.01%)</title><rect x="55.5745%" y="437" width="0.0147%" height="15" fill="rgb(248,171,40)" fg:x="264948" fg:w="70"/><text x="55.8245%" y="447.50"></text></g><g><title>ret_from_intr (75 samples, 0.02%)</title><rect x="55.5736%" y="517" width="0.0157%" height="15" fill="rgb(251,90,54)" fg:x="264944" fg:w="75"/><text x="55.8236%" y="527.50"></text></g><g><title>do_IRQ (75 samples, 0.02%)</title><rect x="55.5736%" y="501" width="0.0157%" height="15" fill="rgb(234,11,46)" fg:x="264944" fg:w="75"/><text x="55.8236%" y="511.50"></text></g><g><title>irq_exit (75 samples, 0.02%)</title><rect x="55.5736%" y="485" width="0.0157%" height="15" fill="rgb(229,134,13)" fg:x="264944" fg:w="75"/><text x="55.8236%" y="495.50"></text></g><g><title>__softirqentry_text_start (75 samples, 0.02%)</title><rect x="55.5736%" y="469" width="0.0157%" height="15" fill="rgb(223,129,3)" fg:x="264944" fg:w="75"/><text x="55.8236%" y="479.50"></text></g><g><title>net_rx_action (71 samples, 0.01%)</title><rect x="55.5745%" y="453" width="0.0149%" height="15" fill="rgb(221,124,13)" fg:x="264948" fg:w="71"/><text x="55.8245%" y="463.50"></text></g><g><title>skb_clone (56 samples, 0.01%)</title><rect x="55.5894%" y="517" width="0.0117%" height="15" fill="rgb(234,3,18)" fg:x="265019" fg:w="56"/><text x="55.8394%" y="527.50"></text></g><g><title>__tcp_transmit_skb (5,858 samples, 1.23%)</title><rect x="54.3856%" y="533" width="1.2288%" height="15" fill="rgb(249,199,20)" fg:x="259280" fg:w="5858"/><text x="54.6356%" y="543.50"></text></g><g><title>pvclock_clocksource_read (50 samples, 0.01%)</title><rect x="55.6395%" y="501" width="0.0105%" height="15" fill="rgb(224,134,6)" fg:x="265258" fg:w="50"/><text x="55.8895%" y="511.50"></text></g><g><title>kvm_clock_get_cycles (56 samples, 0.01%)</title><rect x="55.6389%" y="517" width="0.0117%" height="15" fill="rgb(254,83,26)" fg:x="265255" fg:w="56"/><text x="55.8889%" y="527.50"></text></g><g><title>ktime_get (85 samples, 0.02%)</title><rect x="55.6378%" y="533" width="0.0178%" height="15" fill="rgb(217,88,9)" fg:x="265250" fg:w="85"/><text x="55.8878%" y="543.50"></text></g><g><title>virtnet_poll (69 samples, 0.01%)</title><rect x="55.6645%" y="453" width="0.0145%" height="15" fill="rgb(225,73,2)" fg:x="265377" fg:w="69"/><text x="55.9145%" y="463.50"></text></g><g><title>ret_from_intr (72 samples, 0.02%)</title><rect x="55.6640%" y="533" width="0.0151%" height="15" fill="rgb(226,44,39)" fg:x="265375" fg:w="72"/><text x="55.9140%" y="543.50"></text></g><g><title>do_IRQ (72 samples, 0.02%)</title><rect x="55.6640%" y="517" width="0.0151%" height="15" fill="rgb(228,53,17)" fg:x="265375" fg:w="72"/><text x="55.9140%" y="527.50"></text></g><g><title>irq_exit (72 samples, 0.02%)</title><rect x="55.6640%" y="501" width="0.0151%" height="15" fill="rgb(212,27,27)" fg:x="265375" fg:w="72"/><text x="55.9140%" y="511.50"></text></g><g><title>__softirqentry_text_start (72 samples, 0.02%)</title><rect x="55.6640%" y="485" width="0.0151%" height="15" fill="rgb(241,50,6)" fg:x="265375" fg:w="72"/><text x="55.9140%" y="495.50"></text></g><g><title>net_rx_action (70 samples, 0.01%)</title><rect x="55.6645%" y="469" width="0.0147%" height="15" fill="rgb(225,28,51)" fg:x="265377" fg:w="70"/><text x="55.9145%" y="479.50"></text></g><g><title>mod_timer (62 samples, 0.01%)</title><rect x="55.7117%" y="485" width="0.0130%" height="15" fill="rgb(215,33,16)" fg:x="265602" fg:w="62"/><text x="55.9617%" y="495.50"></text></g><g><title>tcp_event_new_data_sent (191 samples, 0.04%)</title><rect x="55.6854%" y="533" width="0.0401%" height="15" fill="rgb(243,40,39)" fg:x="265477" fg:w="191"/><text x="55.9354%" y="543.50"></text></g><g><title>tcp_rearm_rto (95 samples, 0.02%)</title><rect x="55.7056%" y="517" width="0.0199%" height="15" fill="rgb(225,11,42)" fg:x="265573" fg:w="95"/><text x="55.9556%" y="527.50"></text></g><g><title>sk_reset_timer (71 samples, 0.01%)</title><rect x="55.7106%" y="501" width="0.0149%" height="15" fill="rgb(241,220,38)" fg:x="265597" fg:w="71"/><text x="55.9606%" y="511.50"></text></g><g><title>tcp_schedule_loss_probe (51 samples, 0.01%)</title><rect x="55.7352%" y="533" width="0.0107%" height="15" fill="rgb(244,52,35)" fg:x="265714" fg:w="51"/><text x="55.9852%" y="543.50"></text></g><g><title>__tcp_push_pending_frames (6,731 samples, 1.41%)</title><rect x="54.3447%" y="565" width="1.4119%" height="15" fill="rgb(246,42,46)" fg:x="259085" fg:w="6731"/><text x="54.5947%" y="575.50"></text></g><g><title>tcp_write_xmit (6,643 samples, 1.39%)</title><rect x="54.3631%" y="549" width="1.3934%" height="15" fill="rgb(205,184,13)" fg:x="259173" fg:w="6643"/><text x="54.6131%" y="559.50"></text></g><g><title>tcp_push (6,754 samples, 1.42%)</title><rect x="54.3438%" y="581" width="1.4167%" height="15" fill="rgb(209,48,36)" fg:x="259081" fg:w="6754"/><text x="54.5938%" y="591.50"></text></g><g><title>tcp_current_mss (58 samples, 0.01%)</title><rect x="55.7744%" y="565" width="0.0122%" height="15" fill="rgb(244,34,51)" fg:x="265901" fg:w="58"/><text x="56.0244%" y="575.50"></text></g><g><title>tcp_send_mss (128 samples, 0.03%)</title><rect x="55.7624%" y="581" width="0.0268%" height="15" fill="rgb(221,107,33)" fg:x="265844" fg:w="128"/><text x="56.0124%" y="591.50"></text></g><g><title>tcp_sendmsg_locked (7,860 samples, 1.65%)</title><rect x="54.1414%" y="597" width="1.6487%" height="15" fill="rgb(224,203,12)" fg:x="258116" fg:w="7860"/><text x="54.3914%" y="607.50"></text></g><g><title>tcp_sendmsg (8,166 samples, 1.71%)</title><rect x="54.0863%" y="613" width="1.7129%" height="15" fill="rgb(230,215,18)" fg:x="257853" fg:w="8166"/><text x="54.3363%" y="623.50"></text></g><g><title>inet_sendmsg (8,224 samples, 1.73%)</title><rect x="54.0768%" y="629" width="1.7250%" height="15" fill="rgb(206,185,35)" fg:x="257808" fg:w="8224"/><text x="54.3268%" y="639.50"></text></g><g><title>security_socket_sendmsg (64 samples, 0.01%)</title><rect x="55.8065%" y="629" width="0.0134%" height="15" fill="rgb(228,140,34)" fg:x="266054" fg:w="64"/><text x="56.0565%" y="639.50"></text></g><g><title>sock_sendmsg (8,396 samples, 1.76%)</title><rect x="54.0603%" y="645" width="1.7611%" height="15" fill="rgb(208,93,13)" fg:x="257729" fg:w="8396"/><text x="54.3103%" y="655.50"></text></g><g><title>__fget (57 samples, 0.01%)</title><rect x="55.8226%" y="597" width="0.0120%" height="15" fill="rgb(221,193,39)" fg:x="266131" fg:w="57"/><text x="56.0726%" y="607.50"></text></g><g><title>__fdget (59 samples, 0.01%)</title><rect x="55.8224%" y="629" width="0.0124%" height="15" fill="rgb(241,132,34)" fg:x="266130" fg:w="59"/><text x="56.0724%" y="639.50"></text></g><g><title>__fget_light (59 samples, 0.01%)</title><rect x="55.8224%" y="613" width="0.0124%" height="15" fill="rgb(221,141,10)" fg:x="266130" fg:w="59"/><text x="56.0724%" y="623.50"></text></g><g><title>__sys_sendto (8,614 samples, 1.81%)</title><rect x="54.0330%" y="661" width="1.8068%" height="15" fill="rgb(226,90,31)" fg:x="257599" fg:w="8614"/><text x="54.2830%" y="671.50">_..</text></g><g><title>sockfd_lookup_light (88 samples, 0.02%)</title><rect x="55.8214%" y="645" width="0.0185%" height="15" fill="rgb(243,75,5)" fg:x="266125" fg:w="88"/><text x="56.0714%" y="655.50"></text></g><g><title>__x64_sys_sendto (8,663 samples, 1.82%)</title><rect x="54.0328%" y="677" width="1.8171%" height="15" fill="rgb(227,156,21)" fg:x="257598" fg:w="8663"/><text x="54.2828%" y="687.50">_..</text></g><g><title>ip_list_rcv (57 samples, 0.01%)</title><rect x="55.8551%" y="517" width="0.0120%" height="15" fill="rgb(250,195,8)" fg:x="266286" fg:w="57"/><text x="56.1051%" y="527.50"></text></g><g><title>ip_sublist_rcv (56 samples, 0.01%)</title><rect x="55.8553%" y="501" width="0.0117%" height="15" fill="rgb(220,134,5)" fg:x="266287" fg:w="56"/><text x="56.1053%" y="511.50"></text></g><g><title>ip_sublist_rcv_finish (49 samples, 0.01%)</title><rect x="55.8568%" y="485" width="0.0103%" height="15" fill="rgb(246,106,34)" fg:x="266294" fg:w="49"/><text x="56.1068%" y="495.50"></text></g><g><title>ip_local_deliver (49 samples, 0.01%)</title><rect x="55.8568%" y="469" width="0.0103%" height="15" fill="rgb(205,1,4)" fg:x="266294" fg:w="49"/><text x="56.1068%" y="479.50"></text></g><g><title>ip_local_deliver_finish (49 samples, 0.01%)</title><rect x="55.8568%" y="453" width="0.0103%" height="15" fill="rgb(224,151,29)" fg:x="266294" fg:w="49"/><text x="56.1068%" y="463.50"></text></g><g><title>ip_protocol_deliver_rcu (49 samples, 0.01%)</title><rect x="55.8568%" y="437" width="0.0103%" height="15" fill="rgb(251,196,0)" fg:x="266294" fg:w="49"/><text x="56.1068%" y="447.50"></text></g><g><title>__netif_receive_skb_list_core (59 samples, 0.01%)</title><rect x="55.8549%" y="533" width="0.0124%" height="15" fill="rgb(212,127,0)" fg:x="266285" fg:w="59"/><text x="56.1049%" y="543.50"></text></g><g><title>napi_complete_done (63 samples, 0.01%)</title><rect x="55.8545%" y="581" width="0.0132%" height="15" fill="rgb(236,71,53)" fg:x="266283" fg:w="63"/><text x="56.1045%" y="591.50"></text></g><g><title>gro_normal_list.part.0 (63 samples, 0.01%)</title><rect x="55.8545%" y="565" width="0.0132%" height="15" fill="rgb(227,99,0)" fg:x="266283" fg:w="63"/><text x="56.1045%" y="575.50"></text></g><g><title>netif_receive_skb_list_internal (63 samples, 0.01%)</title><rect x="55.8545%" y="549" width="0.0132%" height="15" fill="rgb(239,89,21)" fg:x="266283" fg:w="63"/><text x="56.1045%" y="559.50"></text></g><g><title>virtnet_poll (98 samples, 0.02%)</title><rect x="55.8532%" y="597" width="0.0206%" height="15" fill="rgb(243,122,19)" fg:x="266277" fg:w="98"/><text x="56.1032%" y="607.50"></text></g><g><title>net_rx_action (102 samples, 0.02%)</title><rect x="55.8526%" y="613" width="0.0214%" height="15" fill="rgb(229,192,45)" fg:x="266274" fg:w="102"/><text x="56.1026%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8,919 samples, 1.87%)</title><rect x="54.0034%" y="709" width="1.8708%" height="15" fill="rgb(235,165,35)" fg:x="257458" fg:w="8919"/><text x="54.2534%" y="719.50">e..</text></g><g><title>do_syscall_64 (8,881 samples, 1.86%)</title><rect x="54.0114%" y="693" width="1.8628%" height="15" fill="rgb(253,202,0)" fg:x="257496" fg:w="8881"/><text x="54.2614%" y="703.50">d..</text></g><g><title>ret_from_intr (113 samples, 0.02%)</title><rect x="55.8505%" y="677" width="0.0237%" height="15" fill="rgb(235,51,20)" fg:x="266264" fg:w="113"/><text x="56.1005%" y="687.50"></text></g><g><title>do_IRQ (113 samples, 0.02%)</title><rect x="55.8505%" y="661" width="0.0237%" height="15" fill="rgb(218,95,46)" fg:x="266264" fg:w="113"/><text x="56.1005%" y="671.50"></text></g><g><title>irq_exit (113 samples, 0.02%)</title><rect x="55.8505%" y="645" width="0.0237%" height="15" fill="rgb(212,81,10)" fg:x="266264" fg:w="113"/><text x="56.1005%" y="655.50"></text></g><g><title>__softirqentry_text_start (113 samples, 0.02%)</title><rect x="55.8505%" y="629" width="0.0237%" height="15" fill="rgb(240,59,0)" fg:x="266264" fg:w="113"/><text x="56.1005%" y="639.50"></text></g><g><title>tcp_v4_do_rcv (108 samples, 0.02%)</title><rect x="55.8941%" y="437" width="0.0227%" height="15" fill="rgb(212,191,42)" fg:x="266472" fg:w="108"/><text x="56.1441%" y="447.50"></text></g><g><title>tcp_rcv_established (104 samples, 0.02%)</title><rect x="55.8950%" y="421" width="0.0218%" height="15" fill="rgb(233,140,3)" fg:x="266476" fg:w="104"/><text x="56.1450%" y="431.50"></text></g><g><title>__netif_receive_skb_list_core (161 samples, 0.03%)</title><rect x="55.8832%" y="565" width="0.0338%" height="15" fill="rgb(215,69,23)" fg:x="266420" fg:w="161"/><text x="56.1332%" y="575.50"></text></g><g><title>ip_list_rcv (160 samples, 0.03%)</title><rect x="55.8835%" y="549" width="0.0336%" height="15" fill="rgb(240,202,20)" fg:x="266421" fg:w="160"/><text x="56.1335%" y="559.50"></text></g><g><title>ip_sublist_rcv (159 samples, 0.03%)</title><rect x="55.8837%" y="533" width="0.0334%" height="15" fill="rgb(209,146,50)" fg:x="266422" fg:w="159"/><text x="56.1337%" y="543.50"></text></g><g><title>ip_sublist_rcv_finish (147 samples, 0.03%)</title><rect x="55.8862%" y="517" width="0.0308%" height="15" fill="rgb(253,102,54)" fg:x="266434" fg:w="147"/><text x="56.1362%" y="527.50"></text></g><g><title>ip_local_deliver (146 samples, 0.03%)</title><rect x="55.8864%" y="501" width="0.0306%" height="15" fill="rgb(250,173,47)" fg:x="266435" fg:w="146"/><text x="56.1364%" y="511.50"></text></g><g><title>ip_local_deliver_finish (144 samples, 0.03%)</title><rect x="55.8868%" y="485" width="0.0302%" height="15" fill="rgb(232,142,7)" fg:x="266437" fg:w="144"/><text x="56.1368%" y="495.50"></text></g><g><title>ip_protocol_deliver_rcu (144 samples, 0.03%)</title><rect x="55.8868%" y="469" width="0.0302%" height="15" fill="rgb(230,157,47)" fg:x="266437" fg:w="144"/><text x="56.1368%" y="479.50"></text></g><g><title>tcp_v4_rcv (113 samples, 0.02%)</title><rect x="55.8933%" y="453" width="0.0237%" height="15" fill="rgb(214,177,35)" fg:x="266468" fg:w="113"/><text x="56.1433%" y="463.50"></text></g><g><title>napi_complete_done (166 samples, 0.03%)</title><rect x="55.8828%" y="613" width="0.0348%" height="15" fill="rgb(234,119,46)" fg:x="266418" fg:w="166"/><text x="56.1328%" y="623.50"></text></g><g><title>gro_normal_list.part.0 (166 samples, 0.03%)</title><rect x="55.8828%" y="597" width="0.0348%" height="15" fill="rgb(241,180,50)" fg:x="266418" fg:w="166"/><text x="56.1328%" y="607.50"></text></g><g><title>netif_receive_skb_list_internal (166 samples, 0.03%)</title><rect x="55.8828%" y="581" width="0.0348%" height="15" fill="rgb(221,54,25)" fg:x="266418" fg:w="166"/><text x="56.1328%" y="591.50"></text></g><g><title>receive_buf (48 samples, 0.01%)</title><rect x="55.9176%" y="613" width="0.0101%" height="15" fill="rgb(209,157,44)" fg:x="266584" fg:w="48"/><text x="56.1676%" y="623.50"></text></g><g><title>net_rx_action (246 samples, 0.05%)</title><rect x="55.8790%" y="645" width="0.0516%" height="15" fill="rgb(246,115,41)" fg:x="266400" fg:w="246"/><text x="56.1290%" y="655.50"></text></g><g><title>virtnet_poll (244 samples, 0.05%)</title><rect x="55.8795%" y="629" width="0.0512%" height="15" fill="rgb(229,86,1)" fg:x="266402" fg:w="244"/><text x="56.1295%" y="639.50"></text></g><g><title>ret_from_intr (271 samples, 0.06%)</title><rect x="55.8742%" y="709" width="0.0568%" height="15" fill="rgb(240,108,53)" fg:x="266377" fg:w="271"/><text x="56.1242%" y="719.50"></text></g><g><title>do_IRQ (271 samples, 0.06%)</title><rect x="55.8742%" y="693" width="0.0568%" height="15" fill="rgb(227,134,2)" fg:x="266377" fg:w="271"/><text x="56.1242%" y="703.50"></text></g><g><title>irq_exit (271 samples, 0.06%)</title><rect x="55.8742%" y="677" width="0.0568%" height="15" fill="rgb(213,129,25)" fg:x="266377" fg:w="271"/><text x="56.1242%" y="687.50"></text></g><g><title>__softirqentry_text_start (271 samples, 0.06%)</title><rect x="55.8742%" y="661" width="0.0568%" height="15" fill="rgb(226,35,21)" fg:x="266377" fg:w="271"/><text x="56.1242%" y="671.50"></text></g><g><title>__libc_send (9,516 samples, 2.00%)</title><rect x="53.9354%" y="725" width="1.9960%" height="15" fill="rgb(208,129,26)" fg:x="257134" fg:w="9516"/><text x="54.1854%" y="735.50">_..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (9,551 samples, 2.00%)</title><rect x="53.9294%" y="805" width="2.0034%" height="15" fill="rgb(224,83,6)" fg:x="257105" fg:w="9551"/><text x="54.1794%" y="815.50">m..</text></g><g><title>mio::sys::unix::IoSourceState::do_io (9,551 samples, 2.00%)</title><rect x="53.9294%" y="789" width="2.0034%" height="15" fill="rgb(227,52,39)" fg:x="257105" fg:w="9551"/><text x="54.1794%" y="799.50">m..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (9,551 samples, 2.00%)</title><rect x="53.9294%" y="773" width="2.0034%" height="15" fill="rgb(241,30,17)" fg:x="257105" fg:w="9551"/><text x="54.1794%" y="783.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (9,550 samples, 2.00%)</title><rect x="53.9296%" y="757" width="2.0032%" height="15" fill="rgb(246,186,42)" fg:x="257106" fg:w="9550"/><text x="54.1796%" y="767.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (9,535 samples, 2.00%)</title><rect x="53.9327%" y="741" width="2.0000%" height="15" fill="rgb(221,169,15)" fg:x="257121" fg:w="9535"/><text x="54.1827%" y="751.50">s..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (9,575 samples, 2.01%)</title><rect x="53.9271%" y="821" width="2.0084%" height="15" fill="rgb(235,108,21)" fg:x="257094" fg:w="9575"/><text x="54.1771%" y="831.50">&lt;..</text></g><g><title>std::io::Write::write_all (9,643 samples, 2.02%)</title><rect x="53.9224%" y="837" width="2.0227%" height="15" fill="rgb(219,148,30)" fg:x="257072" fg:w="9643"/><text x="54.1724%" y="847.50">s..</text></g><g><title>__netif_receive_skb_list_core (68 samples, 0.01%)</title><rect x="56.0085%" y="405" width="0.0143%" height="15" fill="rgb(220,109,5)" fg:x="267017" fg:w="68"/><text x="56.2585%" y="415.50"></text></g><g><title>ip_list_rcv (66 samples, 0.01%)</title><rect x="56.0089%" y="389" width="0.0138%" height="15" fill="rgb(213,203,48)" fg:x="267019" fg:w="66"/><text x="56.2589%" y="399.50"></text></g><g><title>ip_sublist_rcv (65 samples, 0.01%)</title><rect x="56.0091%" y="373" width="0.0136%" height="15" fill="rgb(244,71,33)" fg:x="267020" fg:w="65"/><text x="56.2591%" y="383.50"></text></g><g><title>ip_sublist_rcv_finish (59 samples, 0.01%)</title><rect x="56.0104%" y="357" width="0.0124%" height="15" fill="rgb(209,23,2)" fg:x="267026" fg:w="59"/><text x="56.2604%" y="367.50"></text></g><g><title>ip_local_deliver (59 samples, 0.01%)</title><rect x="56.0104%" y="341" width="0.0124%" height="15" fill="rgb(219,97,7)" fg:x="267026" fg:w="59"/><text x="56.2604%" y="351.50"></text></g><g><title>ip_local_deliver_finish (58 samples, 0.01%)</title><rect x="56.0106%" y="325" width="0.0122%" height="15" fill="rgb(216,161,23)" fg:x="267027" fg:w="58"/><text x="56.2606%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (58 samples, 0.01%)</title><rect x="56.0106%" y="309" width="0.0122%" height="15" fill="rgb(207,45,42)" fg:x="267027" fg:w="58"/><text x="56.2606%" y="319.50"></text></g><g><title>tcp_v4_rcv (50 samples, 0.01%)</title><rect x="56.0122%" y="293" width="0.0105%" height="15" fill="rgb(241,61,4)" fg:x="267035" fg:w="50"/><text x="56.2622%" y="303.50"></text></g><g><title>napi_complete_done (71 samples, 0.01%)</title><rect x="56.0083%" y="453" width="0.0149%" height="15" fill="rgb(236,170,1)" fg:x="267016" fg:w="71"/><text x="56.2583%" y="463.50"></text></g><g><title>gro_normal_list.part.0 (71 samples, 0.01%)</title><rect x="56.0083%" y="437" width="0.0149%" height="15" fill="rgb(239,72,5)" fg:x="267016" fg:w="71"/><text x="56.2583%" y="447.50"></text></g><g><title>netif_receive_skb_list_internal (71 samples, 0.01%)</title><rect x="56.0083%" y="421" width="0.0149%" height="15" fill="rgb(214,13,50)" fg:x="267016" fg:w="71"/><text x="56.2583%" y="431.50"></text></g><g><title>net_rx_action (91 samples, 0.02%)</title><rect x="56.0080%" y="485" width="0.0191%" height="15" fill="rgb(224,88,9)" fg:x="267015" fg:w="91"/><text x="56.2580%" y="495.50"></text></g><g><title>virtnet_poll (91 samples, 0.02%)</title><rect x="56.0080%" y="469" width="0.0191%" height="15" fill="rgb(238,192,34)" fg:x="267015" fg:w="91"/><text x="56.2580%" y="479.50"></text></g><g><title>[libc-2.31.so] (233 samples, 0.05%)</title><rect x="55.9785%" y="565" width="0.0489%" height="15" fill="rgb(217,203,50)" fg:x="266874" fg:w="233"/><text x="56.2285%" y="575.50"></text></g><g><title>ret_from_intr (101 samples, 0.02%)</title><rect x="56.0062%" y="549" width="0.0212%" height="15" fill="rgb(241,123,32)" fg:x="267006" fg:w="101"/><text x="56.2562%" y="559.50"></text></g><g><title>do_IRQ (101 samples, 0.02%)</title><rect x="56.0062%" y="533" width="0.0212%" height="15" fill="rgb(248,151,39)" fg:x="267006" fg:w="101"/><text x="56.2562%" y="543.50"></text></g><g><title>irq_exit (101 samples, 0.02%)</title><rect x="56.0062%" y="517" width="0.0212%" height="15" fill="rgb(208,89,6)" fg:x="267006" fg:w="101"/><text x="56.2562%" y="527.50"></text></g><g><title>__softirqentry_text_start (101 samples, 0.02%)</title><rect x="56.0062%" y="501" width="0.0212%" height="15" fill="rgb(254,43,26)" fg:x="267006" fg:w="101"/><text x="56.2562%" y="511.50"></text></g><g><title>[libc-2.31.so] (264 samples, 0.06%)</title><rect x="55.9749%" y="581" width="0.0554%" height="15" fill="rgb(216,158,13)" fg:x="266857" fg:w="264"/><text x="56.2249%" y="591.50"></text></g><g><title>realloc (357 samples, 0.07%)</title><rect x="55.9657%" y="597" width="0.0749%" height="15" fill="rgb(212,47,37)" fg:x="266813" fg:w="357"/><text x="56.2157%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (372 samples, 0.08%)</title><rect x="55.9627%" y="645" width="0.0780%" height="15" fill="rgb(254,16,10)" fg:x="266799" fg:w="372"/><text x="56.2127%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (372 samples, 0.08%)</title><rect x="55.9627%" y="629" width="0.0780%" height="15" fill="rgb(223,228,16)" fg:x="266799" fg:w="372"/><text x="56.2127%" y="639.50"></text></g><g><title>alloc::alloc::realloc (372 samples, 0.08%)</title><rect x="55.9627%" y="613" width="0.0780%" height="15" fill="rgb(249,108,50)" fg:x="266799" fg:w="372"/><text x="56.2127%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (383 samples, 0.08%)</title><rect x="55.9615%" y="661" width="0.0803%" height="15" fill="rgb(208,220,5)" fg:x="266793" fg:w="383"/><text x="56.2115%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (406 samples, 0.09%)</title><rect x="55.9585%" y="677" width="0.0852%" height="15" fill="rgb(217,89,48)" fg:x="266779" fg:w="406"/><text x="56.2085%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (411 samples, 0.09%)</title><rect x="55.9577%" y="693" width="0.0862%" height="15" fill="rgb(212,113,41)" fg:x="266775" fg:w="411"/><text x="56.2077%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (419 samples, 0.09%)</title><rect x="55.9562%" y="725" width="0.0879%" height="15" fill="rgb(231,127,5)" fg:x="266768" fg:w="419"/><text x="56.2062%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (419 samples, 0.09%)</title><rect x="55.9562%" y="709" width="0.0879%" height="15" fill="rgb(217,141,17)" fg:x="266768" fg:w="419"/><text x="56.2062%" y="719.50"></text></g><g><title>alloc::string::String::push_str (450 samples, 0.09%)</title><rect x="55.9556%" y="789" width="0.0944%" height="15" fill="rgb(245,125,54)" fg:x="266765" fg:w="450"/><text x="56.2056%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (450 samples, 0.09%)</title><rect x="55.9556%" y="773" width="0.0944%" height="15" fill="rgb(248,125,3)" fg:x="266765" fg:w="450"/><text x="56.2056%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (450 samples, 0.09%)</title><rect x="55.9556%" y="757" width="0.0944%" height="15" fill="rgb(236,119,51)" fg:x="266765" fg:w="450"/><text x="56.2056%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (450 samples, 0.09%)</title><rect x="55.9556%" y="741" width="0.0944%" height="15" fill="rgb(239,99,8)" fg:x="266765" fg:w="450"/><text x="56.2056%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (462 samples, 0.10%)</title><rect x="55.9546%" y="805" width="0.0969%" height="15" fill="rgb(224,228,4)" fg:x="266760" fg:w="462"/><text x="56.2046%" y="815.50"></text></g><g><title>[libc-2.31.so] (75 samples, 0.02%)</title><rect x="56.0796%" y="517" width="0.0157%" height="15" fill="rgb(220,131,45)" fg:x="267356" fg:w="75"/><text x="56.3296%" y="527.50"></text></g><g><title>__softirqentry_text_start (62 samples, 0.01%)</title><rect x="56.0955%" y="469" width="0.0130%" height="15" fill="rgb(215,62,5)" fg:x="267432" fg:w="62"/><text x="56.3455%" y="479.50"></text></g><g><title>net_rx_action (57 samples, 0.01%)</title><rect x="56.0966%" y="453" width="0.0120%" height="15" fill="rgb(253,12,24)" fg:x="267437" fg:w="57"/><text x="56.3466%" y="463.50"></text></g><g><title>virtnet_poll (56 samples, 0.01%)</title><rect x="56.0968%" y="437" width="0.0117%" height="15" fill="rgb(248,120,50)" fg:x="267438" fg:w="56"/><text x="56.3468%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (200 samples, 0.04%)</title><rect x="56.0668%" y="581" width="0.0420%" height="15" fill="rgb(245,194,10)" fg:x="267295" fg:w="200"/><text x="56.3168%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (200 samples, 0.04%)</title><rect x="56.0668%" y="565" width="0.0420%" height="15" fill="rgb(241,149,38)" fg:x="267295" fg:w="200"/><text x="56.3168%" y="575.50"></text></g><g><title>alloc::alloc::realloc (200 samples, 0.04%)</title><rect x="56.0668%" y="549" width="0.0420%" height="15" fill="rgb(219,215,7)" fg:x="267295" fg:w="200"/><text x="56.3168%" y="559.50"></text></g><g><title>realloc (185 samples, 0.04%)</title><rect x="56.0699%" y="533" width="0.0388%" height="15" fill="rgb(208,120,31)" fg:x="267310" fg:w="185"/><text x="56.3199%" y="543.50"></text></g><g><title>ret_from_intr (63 samples, 0.01%)</title><rect x="56.0955%" y="517" width="0.0132%" height="15" fill="rgb(244,30,8)" fg:x="267432" fg:w="63"/><text x="56.3455%" y="527.50"></text></g><g><title>do_IRQ (63 samples, 0.01%)</title><rect x="56.0955%" y="501" width="0.0132%" height="15" fill="rgb(238,35,44)" fg:x="267432" fg:w="63"/><text x="56.3455%" y="511.50"></text></g><g><title>irq_exit (63 samples, 0.01%)</title><rect x="56.0955%" y="485" width="0.0132%" height="15" fill="rgb(243,218,37)" fg:x="267432" fg:w="63"/><text x="56.3455%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (235 samples, 0.05%)</title><rect x="56.0653%" y="597" width="0.0493%" height="15" fill="rgb(218,169,10)" fg:x="267288" fg:w="235"/><text x="56.3153%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (252 samples, 0.05%)</title><rect x="56.0638%" y="613" width="0.0529%" height="15" fill="rgb(221,144,10)" fg:x="267281" fg:w="252"/><text x="56.3138%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (257 samples, 0.05%)</title><rect x="56.0634%" y="661" width="0.0539%" height="15" fill="rgb(226,41,38)" fg:x="267279" fg:w="257"/><text x="56.3134%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (257 samples, 0.05%)</title><rect x="56.0634%" y="645" width="0.0539%" height="15" fill="rgb(228,3,1)" fg:x="267279" fg:w="257"/><text x="56.3134%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (256 samples, 0.05%)</title><rect x="56.0636%" y="629" width="0.0537%" height="15" fill="rgb(209,129,12)" fg:x="267280" fg:w="256"/><text x="56.3136%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (305 samples, 0.06%)</title><rect x="56.0626%" y="741" width="0.0640%" height="15" fill="rgb(213,136,33)" fg:x="267275" fg:w="305"/><text x="56.3126%" y="751.50"></text></g><g><title>alloc::string::String::push_str (305 samples, 0.06%)</title><rect x="56.0626%" y="725" width="0.0640%" height="15" fill="rgb(209,181,29)" fg:x="267275" fg:w="305"/><text x="56.3126%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (305 samples, 0.06%)</title><rect x="56.0626%" y="709" width="0.0640%" height="15" fill="rgb(234,173,18)" fg:x="267275" fg:w="305"/><text x="56.3126%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (305 samples, 0.06%)</title><rect x="56.0626%" y="693" width="0.0640%" height="15" fill="rgb(227,73,47)" fg:x="267275" fg:w="305"/><text x="56.3126%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (305 samples, 0.06%)</title><rect x="56.0626%" y="677" width="0.0640%" height="15" fill="rgb(234,9,34)" fg:x="267275" fg:w="305"/><text x="56.3126%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (331 samples, 0.07%)</title><rect x="56.0594%" y="757" width="0.0694%" height="15" fill="rgb(235,172,15)" fg:x="267260" fg:w="331"/><text x="56.3094%" y="767.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (55 samples, 0.01%)</title><rect x="56.1360%" y="741" width="0.0115%" height="15" fill="rgb(245,61,2)" fg:x="267625" fg:w="55"/><text x="56.3860%" y="751.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u16&gt;::fmt (57 samples, 0.01%)</title><rect x="56.1358%" y="757" width="0.0120%" height="15" fill="rgb(238,39,47)" fg:x="267624" fg:w="57"/><text x="56.3858%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (449 samples, 0.09%)</title><rect x="56.0571%" y="789" width="0.0942%" height="15" fill="rgb(234,37,24)" fg:x="267249" fg:w="449"/><text x="56.3071%" y="799.50"></text></g><g><title>core::fmt::write (446 samples, 0.09%)</title><rect x="56.0578%" y="773" width="0.0936%" height="15" fill="rgb(248,223,24)" fg:x="267252" fg:w="446"/><text x="56.3078%" y="783.50"></text></g><g><title>alloc::fmt::format (478 samples, 0.10%)</title><rect x="56.0519%" y="805" width="0.1003%" height="15" fill="rgb(223,12,15)" fg:x="267224" fg:w="478"/><text x="56.3019%" y="815.50"></text></g><g><title>alloc::str::join_generic_copy (134 samples, 0.03%)</title><rect x="56.1521%" y="773" width="0.0281%" height="15" fill="rgb(249,6,3)" fg:x="267702" fg:w="134"/><text x="56.4021%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (137 samples, 0.03%)</title><rect x="56.1521%" y="805" width="0.0287%" height="15" fill="rgb(237,105,33)" fg:x="267702" fg:w="137"/><text x="56.4021%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (137 samples, 0.03%)</title><rect x="56.1521%" y="789" width="0.0287%" height="15" fill="rgb(252,208,35)" fg:x="267702" fg:w="137"/><text x="56.4021%" y="799.50"></text></g><g><title>ip_protocol_deliver_rcu (49 samples, 0.01%)</title><rect x="56.2614%" y="85" width="0.0103%" height="15" fill="rgb(215,181,35)" fg:x="268223" fg:w="49"/><text x="56.5114%" y="95.50"></text></g><g><title>__netif_receive_skb_list_core (53 samples, 0.01%)</title><rect x="56.2608%" y="181" width="0.0111%" height="15" fill="rgb(246,212,3)" fg:x="268220" fg:w="53"/><text x="56.5108%" y="191.50"></text></g><g><title>ip_list_rcv (53 samples, 0.01%)</title><rect x="56.2608%" y="165" width="0.0111%" height="15" fill="rgb(247,156,24)" fg:x="268220" fg:w="53"/><text x="56.5108%" y="175.50"></text></g><g><title>ip_sublist_rcv (52 samples, 0.01%)</title><rect x="56.2610%" y="149" width="0.0109%" height="15" fill="rgb(248,9,31)" fg:x="268221" fg:w="52"/><text x="56.5110%" y="159.50"></text></g><g><title>ip_sublist_rcv_finish (50 samples, 0.01%)</title><rect x="56.2614%" y="133" width="0.0105%" height="15" fill="rgb(234,26,45)" fg:x="268223" fg:w="50"/><text x="56.5114%" y="143.50"></text></g><g><title>ip_local_deliver (50 samples, 0.01%)</title><rect x="56.2614%" y="117" width="0.0105%" height="15" fill="rgb(249,11,32)" fg:x="268223" fg:w="50"/><text x="56.5114%" y="127.50"></text></g><g><title>ip_local_deliver_finish (50 samples, 0.01%)</title><rect x="56.2614%" y="101" width="0.0105%" height="15" fill="rgb(249,162,33)" fg:x="268223" fg:w="50"/><text x="56.5114%" y="111.50"></text></g><g><title>napi_complete_done (55 samples, 0.01%)</title><rect x="56.2606%" y="229" width="0.0115%" height="15" fill="rgb(232,4,32)" fg:x="268219" fg:w="55"/><text x="56.5106%" y="239.50"></text></g><g><title>gro_normal_list.part.0 (55 samples, 0.01%)</title><rect x="56.2606%" y="213" width="0.0115%" height="15" fill="rgb(212,5,45)" fg:x="268219" fg:w="55"/><text x="56.5106%" y="223.50"></text></g><g><title>netif_receive_skb_list_internal (55 samples, 0.01%)</title><rect x="56.2606%" y="197" width="0.0115%" height="15" fill="rgb(227,95,13)" fg:x="268219" fg:w="55"/><text x="56.5106%" y="207.50"></text></g><g><title>virtnet_poll (78 samples, 0.02%)</title><rect x="56.2604%" y="245" width="0.0164%" height="15" fill="rgb(223,205,10)" fg:x="268218" fg:w="78"/><text x="56.5104%" y="255.50"></text></g><g><title>ret_from_intr (86 samples, 0.02%)</title><rect x="56.2589%" y="325" width="0.0180%" height="15" fill="rgb(222,178,8)" fg:x="268211" fg:w="86"/><text x="56.5089%" y="335.50"></text></g><g><title>do_IRQ (86 samples, 0.02%)</title><rect x="56.2589%" y="309" width="0.0180%" height="15" fill="rgb(216,13,22)" fg:x="268211" fg:w="86"/><text x="56.5089%" y="319.50"></text></g><g><title>irq_exit (86 samples, 0.02%)</title><rect x="56.2589%" y="293" width="0.0180%" height="15" fill="rgb(240,167,12)" fg:x="268211" fg:w="86"/><text x="56.5089%" y="303.50"></text></g><g><title>__softirqentry_text_start (86 samples, 0.02%)</title><rect x="56.2589%" y="277" width="0.0180%" height="15" fill="rgb(235,68,35)" fg:x="268211" fg:w="86"/><text x="56.5089%" y="287.50"></text></g><g><title>net_rx_action (80 samples, 0.02%)</title><rect x="56.2602%" y="261" width="0.0168%" height="15" fill="rgb(253,40,27)" fg:x="268217" fg:w="80"/><text x="56.5102%" y="271.50"></text></g><g><title>[libc-2.31.so] (171 samples, 0.04%)</title><rect x="56.2413%" y="341" width="0.0359%" height="15" fill="rgb(214,19,28)" fg:x="268127" fg:w="171"/><text x="56.4913%" y="351.50"></text></g><g><title>[libc-2.31.so] (225 samples, 0.05%)</title><rect x="56.2354%" y="357" width="0.0472%" height="15" fill="rgb(210,167,45)" fg:x="268099" fg:w="225"/><text x="56.4854%" y="367.50"></text></g><g><title>napi_complete_done (71 samples, 0.01%)</title><rect x="56.2847%" y="261" width="0.0149%" height="15" fill="rgb(232,97,40)" fg:x="268334" fg:w="71"/><text x="56.5347%" y="271.50"></text></g><g><title>gro_normal_list.part.0 (71 samples, 0.01%)</title><rect x="56.2847%" y="245" width="0.0149%" height="15" fill="rgb(250,35,23)" fg:x="268334" fg:w="71"/><text x="56.5347%" y="255.50"></text></g><g><title>netif_receive_skb_list_internal (71 samples, 0.01%)</title><rect x="56.2847%" y="229" width="0.0149%" height="15" fill="rgb(248,47,53)" fg:x="268334" fg:w="71"/><text x="56.5347%" y="239.50"></text></g><g><title>__netif_receive_skb_list_core (71 samples, 0.01%)</title><rect x="56.2847%" y="213" width="0.0149%" height="15" fill="rgb(226,58,50)" fg:x="268334" fg:w="71"/><text x="56.5347%" y="223.50"></text></g><g><title>ip_list_rcv (71 samples, 0.01%)</title><rect x="56.2847%" y="197" width="0.0149%" height="15" fill="rgb(217,105,26)" fg:x="268334" fg:w="71"/><text x="56.5347%" y="207.50"></text></g><g><title>ip_sublist_rcv (70 samples, 0.01%)</title><rect x="56.2849%" y="181" width="0.0147%" height="15" fill="rgb(208,64,1)" fg:x="268335" fg:w="70"/><text x="56.5349%" y="191.50"></text></g><g><title>ip_sublist_rcv_finish (63 samples, 0.01%)</title><rect x="56.2864%" y="165" width="0.0132%" height="15" fill="rgb(214,80,1)" fg:x="268342" fg:w="63"/><text x="56.5364%" y="175.50"></text></g><g><title>ip_local_deliver (63 samples, 0.01%)</title><rect x="56.2864%" y="149" width="0.0132%" height="15" fill="rgb(206,175,26)" fg:x="268342" fg:w="63"/><text x="56.5364%" y="159.50"></text></g><g><title>ip_local_deliver_finish (63 samples, 0.01%)</title><rect x="56.2864%" y="133" width="0.0132%" height="15" fill="rgb(235,156,37)" fg:x="268342" fg:w="63"/><text x="56.5364%" y="143.50"></text></g><g><title>ip_protocol_deliver_rcu (63 samples, 0.01%)</title><rect x="56.2864%" y="117" width="0.0132%" height="15" fill="rgb(213,100,9)" fg:x="268342" fg:w="63"/><text x="56.5364%" y="127.50"></text></g><g><title>tcp_v4_rcv (51 samples, 0.01%)</title><rect x="56.2889%" y="101" width="0.0107%" height="15" fill="rgb(241,15,13)" fg:x="268354" fg:w="51"/><text x="56.5389%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (447 samples, 0.09%)</title><rect x="56.2098%" y="421" width="0.0938%" height="15" fill="rgb(205,97,43)" fg:x="267977" fg:w="447"/><text x="56.4598%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (447 samples, 0.09%)</title><rect x="56.2098%" y="405" width="0.0938%" height="15" fill="rgb(216,106,32)" fg:x="267977" fg:w="447"/><text x="56.4598%" y="415.50"></text></g><g><title>alloc::alloc::realloc (447 samples, 0.09%)</title><rect x="56.2098%" y="389" width="0.0938%" height="15" fill="rgb(226,200,8)" fg:x="267977" fg:w="447"/><text x="56.4598%" y="399.50"></text></g><g><title>realloc (423 samples, 0.09%)</title><rect x="56.2149%" y="373" width="0.0887%" height="15" fill="rgb(244,54,29)" fg:x="268001" fg:w="423"/><text x="56.4649%" y="383.50"></text></g><g><title>ret_from_intr (99 samples, 0.02%)</title><rect x="56.2828%" y="357" width="0.0208%" height="15" fill="rgb(252,169,12)" fg:x="268325" fg:w="99"/><text x="56.5328%" y="367.50"></text></g><g><title>do_IRQ (99 samples, 0.02%)</title><rect x="56.2828%" y="341" width="0.0208%" height="15" fill="rgb(231,199,11)" fg:x="268325" fg:w="99"/><text x="56.5328%" y="351.50"></text></g><g><title>irq_exit (99 samples, 0.02%)</title><rect x="56.2828%" y="325" width="0.0208%" height="15" fill="rgb(233,191,18)" fg:x="268325" fg:w="99"/><text x="56.5328%" y="335.50"></text></g><g><title>__softirqentry_text_start (99 samples, 0.02%)</title><rect x="56.2828%" y="309" width="0.0208%" height="15" fill="rgb(215,83,47)" fg:x="268325" fg:w="99"/><text x="56.5328%" y="319.50"></text></g><g><title>net_rx_action (94 samples, 0.02%)</title><rect x="56.2839%" y="293" width="0.0197%" height="15" fill="rgb(251,67,19)" fg:x="268330" fg:w="94"/><text x="56.5339%" y="303.50"></text></g><g><title>virtnet_poll (93 samples, 0.02%)</title><rect x="56.2841%" y="277" width="0.0195%" height="15" fill="rgb(240,7,20)" fg:x="268331" fg:w="93"/><text x="56.5341%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (543 samples, 0.11%)</title><rect x="56.2077%" y="437" width="0.1139%" height="15" fill="rgb(210,150,26)" fg:x="267967" fg:w="543"/><text x="56.4577%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (617 samples, 0.13%)</title><rect x="56.2031%" y="453" width="0.1294%" height="15" fill="rgb(228,75,42)" fg:x="267945" fg:w="617"/><text x="56.4531%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (624 samples, 0.13%)</title><rect x="56.2027%" y="469" width="0.1309%" height="15" fill="rgb(237,134,48)" fg:x="267943" fg:w="624"/><text x="56.4527%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (634 samples, 0.13%)</title><rect x="56.2014%" y="485" width="0.1330%" height="15" fill="rgb(205,80,50)" fg:x="267937" fg:w="634"/><text x="56.4514%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (638 samples, 0.13%)</title><rect x="56.2010%" y="501" width="0.1338%" height="15" fill="rgb(217,74,48)" fg:x="267935" fg:w="638"/><text x="56.4510%" y="511.50"></text></g><g><title>[libc-2.31.so] (68 samples, 0.01%)</title><rect x="56.3353%" y="485" width="0.0143%" height="15" fill="rgb(205,82,50)" fg:x="268575" fg:w="68"/><text x="56.5853%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (73 samples, 0.02%)</title><rect x="56.3348%" y="501" width="0.0153%" height="15" fill="rgb(228,1,33)" fg:x="268573" fg:w="73"/><text x="56.5848%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (727 samples, 0.15%)</title><rect x="56.2002%" y="581" width="0.1525%" height="15" fill="rgb(214,50,23)" fg:x="267931" fg:w="727"/><text x="56.4502%" y="591.50"></text></g><g><title>alloc::string::String::push_str (727 samples, 0.15%)</title><rect x="56.2002%" y="565" width="0.1525%" height="15" fill="rgb(210,62,9)" fg:x="267931" fg:w="727"/><text x="56.4502%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (727 samples, 0.15%)</title><rect x="56.2002%" y="549" width="0.1525%" height="15" fill="rgb(210,104,37)" fg:x="267931" fg:w="727"/><text x="56.4502%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (727 samples, 0.15%)</title><rect x="56.2002%" y="533" width="0.1525%" height="15" fill="rgb(232,104,43)" fg:x="267931" fg:w="727"/><text x="56.4502%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (727 samples, 0.15%)</title><rect x="56.2002%" y="517" width="0.1525%" height="15" fill="rgb(244,52,6)" fg:x="267931" fg:w="727"/><text x="56.4502%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (765 samples, 0.16%)</title><rect x="56.1970%" y="597" width="0.1605%" height="15" fill="rgb(211,174,52)" fg:x="267916" fg:w="765"/><text x="56.4470%" y="607.50"></text></g><g><title>core::fmt::write (860 samples, 0.18%)</title><rect x="56.1949%" y="613" width="0.1804%" height="15" fill="rgb(229,48,4)" fg:x="267906" fg:w="860"/><text x="56.4449%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (874 samples, 0.18%)</title><rect x="56.1939%" y="629" width="0.1833%" height="15" fill="rgb(205,155,16)" fg:x="267901" fg:w="874"/><text x="56.4439%" y="639.50"></text></g><g><title>alloc::fmt::format (910 samples, 0.19%)</title><rect x="56.1886%" y="645" width="0.1909%" height="15" fill="rgb(211,141,53)" fg:x="267876" fg:w="910"/><text x="56.4386%" y="655.50"></text></g><g><title>napi_complete_done (52 samples, 0.01%)</title><rect x="56.4026%" y="421" width="0.0109%" height="15" fill="rgb(240,148,11)" fg:x="268896" fg:w="52"/><text x="56.6526%" y="431.50"></text></g><g><title>gro_normal_list.part.0 (51 samples, 0.01%)</title><rect x="56.4028%" y="405" width="0.0107%" height="15" fill="rgb(214,45,23)" fg:x="268897" fg:w="51"/><text x="56.6528%" y="415.50"></text></g><g><title>netif_receive_skb_list_internal (51 samples, 0.01%)</title><rect x="56.4028%" y="389" width="0.0107%" height="15" fill="rgb(248,74,26)" fg:x="268897" fg:w="51"/><text x="56.6528%" y="399.50"></text></g><g><title>__netif_receive_skb_list_core (50 samples, 0.01%)</title><rect x="56.4030%" y="373" width="0.0105%" height="15" fill="rgb(218,121,16)" fg:x="268898" fg:w="50"/><text x="56.6530%" y="383.50"></text></g><g><title>ip_list_rcv (49 samples, 0.01%)</title><rect x="56.4032%" y="357" width="0.0103%" height="15" fill="rgb(218,10,47)" fg:x="268899" fg:w="49"/><text x="56.6532%" y="367.50"></text></g><g><title>ip_sublist_rcv (49 samples, 0.01%)</title><rect x="56.4032%" y="341" width="0.0103%" height="15" fill="rgb(227,99,14)" fg:x="268899" fg:w="49"/><text x="56.6532%" y="351.50"></text></g><g><title>virtnet_poll (84 samples, 0.02%)</title><rect x="56.4022%" y="437" width="0.0176%" height="15" fill="rgb(229,83,46)" fg:x="268894" fg:w="84"/><text x="56.6522%" y="447.50"></text></g><g><title>net_rx_action (86 samples, 0.02%)</title><rect x="56.4020%" y="453" width="0.0180%" height="15" fill="rgb(228,25,1)" fg:x="268893" fg:w="86"/><text x="56.6520%" y="463.50"></text></g><g><title>[libc-2.31.so] (176 samples, 0.04%)</title><rect x="56.3833%" y="533" width="0.0369%" height="15" fill="rgb(252,190,15)" fg:x="268804" fg:w="176"/><text x="56.6333%" y="543.50"></text></g><g><title>ret_from_intr (97 samples, 0.02%)</title><rect x="56.3999%" y="517" width="0.0203%" height="15" fill="rgb(213,103,51)" fg:x="268883" fg:w="97"/><text x="56.6499%" y="527.50"></text></g><g><title>do_IRQ (97 samples, 0.02%)</title><rect x="56.3999%" y="501" width="0.0203%" height="15" fill="rgb(220,38,44)" fg:x="268883" fg:w="97"/><text x="56.6499%" y="511.50"></text></g><g><title>irq_exit (97 samples, 0.02%)</title><rect x="56.3999%" y="485" width="0.0203%" height="15" fill="rgb(210,45,26)" fg:x="268883" fg:w="97"/><text x="56.6499%" y="495.50"></text></g><g><title>__softirqentry_text_start (97 samples, 0.02%)</title><rect x="56.3999%" y="469" width="0.0203%" height="15" fill="rgb(205,95,48)" fg:x="268883" fg:w="97"/><text x="56.6499%" y="479.50"></text></g><g><title>cfree (56 samples, 0.01%)</title><rect x="56.4227%" y="533" width="0.0117%" height="15" fill="rgb(225,179,37)" fg:x="268992" fg:w="56"/><text x="56.6727%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (247 samples, 0.05%)</title><rect x="56.3829%" y="565" width="0.0518%" height="15" fill="rgb(230,209,3)" fg:x="268802" fg:w="247"/><text x="56.6329%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (247 samples, 0.05%)</title><rect x="56.3829%" y="549" width="0.0518%" height="15" fill="rgb(248,12,46)" fg:x="268802" fg:w="247"/><text x="56.6329%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Header&gt; (257 samples, 0.05%)</title><rect x="56.3820%" y="645" width="0.0539%" height="15" fill="rgb(234,18,0)" fg:x="268798" fg:w="257"/><text x="56.6320%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (257 samples, 0.05%)</title><rect x="56.3820%" y="629" width="0.0539%" height="15" fill="rgb(238,197,14)" fg:x="268798" fg:w="257"/><text x="56.6320%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (257 samples, 0.05%)</title><rect x="56.3820%" y="613" width="0.0539%" height="15" fill="rgb(251,162,48)" fg:x="268798" fg:w="257"/><text x="56.6320%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (257 samples, 0.05%)</title><rect x="56.3820%" y="597" width="0.0539%" height="15" fill="rgb(237,73,42)" fg:x="268798" fg:w="257"/><text x="56.6320%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (257 samples, 0.05%)</title><rect x="56.3820%" y="581" width="0.0539%" height="15" fill="rgb(211,108,8)" fg:x="268798" fg:w="257"/><text x="56.6320%" y="591.50"></text></g><g><title>&lt;parsed::http::Response as core::convert::Into&lt;alloc::string::String&gt;&gt;::into::{{closure}} (1,187 samples, 0.25%)</title><rect x="56.1876%" y="661" width="0.2490%" height="15" fill="rgb(213,45,22)" fg:x="267871" fg:w="1187"/><text x="56.4376%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,211 samples, 0.25%)</title><rect x="56.1870%" y="677" width="0.2540%" height="15" fill="rgb(252,154,5)" fg:x="267868" fg:w="1211"/><text x="56.4370%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,262 samples, 0.26%)</title><rect x="56.1851%" y="693" width="0.2647%" height="15" fill="rgb(221,79,52)" fg:x="267859" fg:w="1262"/><text x="56.4351%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,271 samples, 0.27%)</title><rect x="56.1840%" y="709" width="0.2666%" height="15" fill="rgb(229,220,36)" fg:x="267854" fg:w="1271"/><text x="56.4340%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,274 samples, 0.27%)</title><rect x="56.1838%" y="741" width="0.2672%" height="15" fill="rgb(211,17,16)" fg:x="267853" fg:w="1274"/><text x="56.4338%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,274 samples, 0.27%)</title><rect x="56.1838%" y="725" width="0.2672%" height="15" fill="rgb(222,55,31)" fg:x="267853" fg:w="1274"/><text x="56.4338%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,306 samples, 0.27%)</title><rect x="56.1838%" y="757" width="0.2739%" height="15" fill="rgb(221,221,31)" fg:x="267853" fg:w="1306"/><text x="56.4338%" y="767.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1,325 samples, 0.28%)</title><rect x="56.1819%" y="773" width="0.2779%" height="15" fill="rgb(227,168,26)" fg:x="267844" fg:w="1325"/><text x="56.4319%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,328 samples, 0.28%)</title><rect x="56.1815%" y="805" width="0.2786%" height="15" fill="rgb(224,139,9)" fg:x="267842" fg:w="1328"/><text x="56.4315%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,328 samples, 0.28%)</title><rect x="56.1815%" y="789" width="0.2786%" height="15" fill="rgb(254,172,0)" fg:x="267842" fg:w="1328"/><text x="56.4315%" y="799.50"></text></g><g><title>virtnet_poll (48 samples, 0.01%)</title><rect x="56.4724%" y="613" width="0.0101%" height="15" fill="rgb(235,203,1)" fg:x="269229" fg:w="48"/><text x="56.7224%" y="623.50"></text></g><g><title>__softirqentry_text_start (51 samples, 0.01%)</title><rect x="56.4720%" y="645" width="0.0107%" height="15" fill="rgb(216,205,24)" fg:x="269227" fg:w="51"/><text x="56.7220%" y="655.50"></text></g><g><title>net_rx_action (49 samples, 0.01%)</title><rect x="56.4724%" y="629" width="0.0103%" height="15" fill="rgb(233,24,6)" fg:x="269229" fg:w="49"/><text x="56.7224%" y="639.50"></text></g><g><title>[libc-2.31.so] (107 samples, 0.02%)</title><rect x="56.4605%" y="709" width="0.0224%" height="15" fill="rgb(244,110,9)" fg:x="269172" fg:w="107"/><text x="56.7105%" y="719.50"></text></g><g><title>ret_from_intr (52 samples, 0.01%)</title><rect x="56.4720%" y="693" width="0.0109%" height="15" fill="rgb(239,222,42)" fg:x="269227" fg:w="52"/><text x="56.7220%" y="703.50"></text></g><g><title>do_IRQ (52 samples, 0.01%)</title><rect x="56.4720%" y="677" width="0.0109%" height="15" fill="rgb(218,145,13)" fg:x="269227" fg:w="52"/><text x="56.7220%" y="687.50"></text></g><g><title>irq_exit (52 samples, 0.01%)</title><rect x="56.4720%" y="661" width="0.0109%" height="15" fill="rgb(207,69,11)" fg:x="269227" fg:w="52"/><text x="56.7220%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (174 samples, 0.04%)</title><rect x="56.4601%" y="805" width="0.0365%" height="15" fill="rgb(220,223,22)" fg:x="269170" fg:w="174"/><text x="56.7101%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (174 samples, 0.04%)</title><rect x="56.4601%" y="789" width="0.0365%" height="15" fill="rgb(245,102,5)" fg:x="269170" fg:w="174"/><text x="56.7101%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (174 samples, 0.04%)</title><rect x="56.4601%" y="773" width="0.0365%" height="15" fill="rgb(211,148,2)" fg:x="269170" fg:w="174"/><text x="56.7101%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (174 samples, 0.04%)</title><rect x="56.4601%" y="757" width="0.0365%" height="15" fill="rgb(241,13,44)" fg:x="269170" fg:w="174"/><text x="56.7101%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (172 samples, 0.04%)</title><rect x="56.4605%" y="741" width="0.0361%" height="15" fill="rgb(219,137,21)" fg:x="269172" fg:w="172"/><text x="56.7105%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (172 samples, 0.04%)</title><rect x="56.4605%" y="725" width="0.0361%" height="15" fill="rgb(242,206,5)" fg:x="269172" fg:w="172"/><text x="56.7105%" y="735.50"></text></g><g><title>[libc-2.31.so] (83 samples, 0.02%)</title><rect x="56.4970%" y="661" width="0.0174%" height="15" fill="rgb(217,114,22)" fg:x="269346" fg:w="83"/><text x="56.7470%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (123 samples, 0.03%)</title><rect x="56.4968%" y="693" width="0.0258%" height="15" fill="rgb(253,206,42)" fg:x="269345" fg:w="123"/><text x="56.7468%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (123 samples, 0.03%)</title><rect x="56.4968%" y="677" width="0.0258%" height="15" fill="rgb(236,102,18)" fg:x="269345" fg:w="123"/><text x="56.7468%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (125 samples, 0.03%)</title><rect x="56.4966%" y="789" width="0.0262%" height="15" fill="rgb(208,59,49)" fg:x="269344" fg:w="125"/><text x="56.7466%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (125 samples, 0.03%)</title><rect x="56.4966%" y="773" width="0.0262%" height="15" fill="rgb(215,194,28)" fg:x="269344" fg:w="125"/><text x="56.7466%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (125 samples, 0.03%)</title><rect x="56.4966%" y="757" width="0.0262%" height="15" fill="rgb(243,207,11)" fg:x="269344" fg:w="125"/><text x="56.7466%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (125 samples, 0.03%)</title><rect x="56.4966%" y="741" width="0.0262%" height="15" fill="rgb(254,179,35)" fg:x="269344" fg:w="125"/><text x="56.7466%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (125 samples, 0.03%)</title><rect x="56.4966%" y="725" width="0.0262%" height="15" fill="rgb(235,97,3)" fg:x="269344" fg:w="125"/><text x="56.7466%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (125 samples, 0.03%)</title><rect x="56.4966%" y="709" width="0.0262%" height="15" fill="rgb(215,155,33)" fg:x="269344" fg:w="125"/><text x="56.7466%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (157 samples, 0.03%)</title><rect x="56.4966%" y="805" width="0.0329%" height="15" fill="rgb(223,128,12)" fg:x="269344" fg:w="157"/><text x="56.7466%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (60 samples, 0.01%)</title><rect x="56.5381%" y="741" width="0.0126%" height="15" fill="rgb(208,157,18)" fg:x="269542" fg:w="60"/><text x="56.7881%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (100 samples, 0.02%)</title><rect x="56.5301%" y="757" width="0.0210%" height="15" fill="rgb(249,70,54)" fg:x="269504" fg:w="100"/><text x="56.7801%" y="767.50"></text></g><g><title>parsed::http::as_string (107 samples, 0.02%)</title><rect x="56.5295%" y="805" width="0.0224%" height="15" fill="rgb(244,118,24)" fg:x="269501" fg:w="107"/><text x="56.7795%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (106 samples, 0.02%)</title><rect x="56.5297%" y="789" width="0.0222%" height="15" fill="rgb(211,54,0)" fg:x="269502" fg:w="106"/><text x="56.7797%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (106 samples, 0.02%)</title><rect x="56.5297%" y="773" width="0.0222%" height="15" fill="rgb(245,137,45)" fg:x="269502" fg:w="106"/><text x="56.7797%" y="783.50"></text></g><g><title>&lt;parsed::http::Response as core::convert::Into&lt;alloc::string::String&gt;&gt;::into (2,877 samples, 0.60%)</title><rect x="55.9514%" y="821" width="0.6035%" height="15" fill="rgb(232,154,31)" fg:x="266745" fg:w="2877"/><text x="56.2014%" y="831.50"></text></g><g><title>[libc-2.31.so] (104 samples, 0.02%)</title><rect x="56.5557%" y="725" width="0.0218%" height="15" fill="rgb(253,6,39)" fg:x="269626" fg:w="104"/><text x="56.8057%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (122 samples, 0.03%)</title><rect x="56.5557%" y="757" width="0.0256%" height="15" fill="rgb(234,183,24)" fg:x="269626" fg:w="122"/><text x="56.8057%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (122 samples, 0.03%)</title><rect x="56.5557%" y="741" width="0.0256%" height="15" fill="rgb(252,84,40)" fg:x="269626" fg:w="122"/><text x="56.8057%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (127 samples, 0.03%)</title><rect x="56.5555%" y="821" width="0.0266%" height="15" fill="rgb(224,65,2)" fg:x="269625" fg:w="127"/><text x="56.8055%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (127 samples, 0.03%)</title><rect x="56.5555%" y="805" width="0.0266%" height="15" fill="rgb(229,38,24)" fg:x="269625" fg:w="127"/><text x="56.8055%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (127 samples, 0.03%)</title><rect x="56.5555%" y="789" width="0.0266%" height="15" fill="rgb(218,131,50)" fg:x="269625" fg:w="127"/><text x="56.8055%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (127 samples, 0.03%)</title><rect x="56.5555%" y="773" width="0.0266%" height="15" fill="rgb(233,106,18)" fg:x="269625" fg:w="127"/><text x="56.8055%" y="783.50"></text></g><g><title>core::fmt::Formatter::pad_integral (51 samples, 0.01%)</title><rect x="56.6342%" y="629" width="0.0107%" height="15" fill="rgb(220,216,11)" fg:x="270000" fg:w="51"/><text x="56.8842%" y="639.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (100 samples, 0.02%)</title><rect x="56.6266%" y="645" width="0.0210%" height="15" fill="rgb(251,100,45)" fg:x="269964" fg:w="100"/><text x="56.8766%" y="655.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (118 samples, 0.02%)</title><rect x="56.6239%" y="661" width="0.0248%" height="15" fill="rgb(235,143,32)" fg:x="269951" fg:w="118"/><text x="56.8739%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (168 samples, 0.04%)</title><rect x="56.6155%" y="693" width="0.0352%" height="15" fill="rgb(248,124,34)" fg:x="269911" fg:w="168"/><text x="56.8655%" y="703.50"></text></g><g><title>core::fmt::write (168 samples, 0.04%)</title><rect x="56.6155%" y="677" width="0.0352%" height="15" fill="rgb(225,221,4)" fg:x="269911" fg:w="168"/><text x="56.8655%" y="687.50"></text></g><g><title>alloc::fmt::format (213 samples, 0.04%)</title><rect x="56.6071%" y="709" width="0.0447%" height="15" fill="rgb(242,27,43)" fg:x="269871" fg:w="213"/><text x="56.8571%" y="719.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (215 samples, 0.05%)</title><rect x="56.6071%" y="725" width="0.0451%" height="15" fill="rgb(227,54,8)" fg:x="269871" fg:w="215"/><text x="56.8571%" y="735.50"></text></g><g><title>parsed::parser::bytes::{{closure}} (278 samples, 0.06%)</title><rect x="56.5987%" y="741" width="0.0583%" height="15" fill="rgb(253,139,49)" fg:x="269831" fg:w="278"/><text x="56.8487%" y="751.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (291 samples, 0.06%)</title><rect x="56.5981%" y="757" width="0.0610%" height="15" fill="rgb(231,26,43)" fg:x="269828" fg:w="291"/><text x="56.8481%" y="767.50"></text></g><g><title>core::fmt::write (96 samples, 0.02%)</title><rect x="56.6910%" y="629" width="0.0201%" height="15" fill="rgb(207,121,39)" fg:x="270271" fg:w="96"/><text x="56.9410%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (102 samples, 0.02%)</title><rect x="56.6904%" y="645" width="0.0214%" height="15" fill="rgb(223,101,35)" fg:x="270268" fg:w="102"/><text x="56.9404%" y="655.50"></text></g><g><title>alloc::fmt::format (153 samples, 0.03%)</title><rect x="56.6803%" y="661" width="0.0321%" height="15" fill="rgb(232,87,23)" fg:x="270220" fg:w="153"/><text x="56.9303%" y="671.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.01%)</title><rect x="56.7445%" y="485" width="0.0107%" height="15" fill="rgb(225,180,29)" fg:x="270526" fg:w="51"/><text x="56.9945%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (57 samples, 0.01%)</title><rect x="56.7441%" y="501" width="0.0120%" height="15" fill="rgb(225,25,17)" fg:x="270524" fg:w="57"/><text x="56.9941%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (72 samples, 0.02%)</title><rect x="56.7416%" y="581" width="0.0151%" height="15" fill="rgb(223,8,52)" fg:x="270512" fg:w="72"/><text x="56.9916%" y="591.50"></text></g><g><title>alloc::string::String::push_str (72 samples, 0.02%)</title><rect x="56.7416%" y="565" width="0.0151%" height="15" fill="rgb(246,42,21)" fg:x="270512" fg:w="72"/><text x="56.9916%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (72 samples, 0.02%)</title><rect x="56.7416%" y="549" width="0.0151%" height="15" fill="rgb(205,64,43)" fg:x="270512" fg:w="72"/><text x="56.9916%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (72 samples, 0.02%)</title><rect x="56.7416%" y="533" width="0.0151%" height="15" fill="rgb(221,160,13)" fg:x="270512" fg:w="72"/><text x="56.9916%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (72 samples, 0.02%)</title><rect x="56.7416%" y="517" width="0.0151%" height="15" fill="rgb(239,58,35)" fg:x="270512" fg:w="72"/><text x="56.9916%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (119 samples, 0.02%)</title><rect x="56.7374%" y="597" width="0.0250%" height="15" fill="rgb(251,26,40)" fg:x="270492" fg:w="119"/><text x="56.9874%" y="607.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (62 samples, 0.01%)</title><rect x="56.7739%" y="581" width="0.0130%" height="15" fill="rgb(247,0,4)" fg:x="270666" fg:w="62"/><text x="57.0239%" y="591.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (67 samples, 0.01%)</title><rect x="56.7730%" y="597" width="0.0141%" height="15" fill="rgb(218,130,10)" fg:x="270662" fg:w="67"/><text x="57.0230%" y="607.50"></text></g><g><title>core::fmt::write (285 samples, 0.06%)</title><rect x="56.7330%" y="613" width="0.0598%" height="15" fill="rgb(239,32,7)" fg:x="270471" fg:w="285"/><text x="56.9830%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (289 samples, 0.06%)</title><rect x="56.7328%" y="629" width="0.0606%" height="15" fill="rgb(210,192,24)" fg:x="270470" fg:w="289"/><text x="56.9828%" y="639.50"></text></g><g><title>alloc::fmt::format (332 samples, 0.07%)</title><rect x="56.7246%" y="645" width="0.0696%" height="15" fill="rgb(226,212,17)" fg:x="270431" fg:w="332"/><text x="56.9746%" y="655.50"></text></g><g><title>[libc-2.31.so] (48 samples, 0.01%)</title><rect x="56.7963%" y="549" width="0.0101%" height="15" fill="rgb(219,201,28)" fg:x="270773" fg:w="48"/><text x="57.0463%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (93 samples, 0.02%)</title><rect x="56.7957%" y="645" width="0.0195%" height="15" fill="rgb(235,207,41)" fg:x="270770" fg:w="93"/><text x="57.0457%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (93 samples, 0.02%)</title><rect x="56.7957%" y="629" width="0.0195%" height="15" fill="rgb(241,95,54)" fg:x="270770" fg:w="93"/><text x="57.0457%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (93 samples, 0.02%)</title><rect x="56.7957%" y="613" width="0.0195%" height="15" fill="rgb(248,12,23)" fg:x="270770" fg:w="93"/><text x="57.0457%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.02%)</title><rect x="56.7957%" y="597" width="0.0195%" height="15" fill="rgb(228,173,4)" fg:x="270770" fg:w="93"/><text x="57.0457%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (91 samples, 0.02%)</title><rect x="56.7961%" y="581" width="0.0191%" height="15" fill="rgb(254,99,5)" fg:x="270772" fg:w="91"/><text x="57.0461%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (91 samples, 0.02%)</title><rect x="56.7961%" y="565" width="0.0191%" height="15" fill="rgb(212,184,17)" fg:x="270772" fg:w="91"/><text x="57.0461%" y="575.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (452 samples, 0.09%)</title><rect x="56.7225%" y="661" width="0.0948%" height="15" fill="rgb(252,174,1)" fg:x="270421" fg:w="452"/><text x="56.9725%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (52 samples, 0.01%)</title><rect x="56.8181%" y="645" width="0.0109%" height="15" fill="rgb(241,118,51)" fg:x="270877" fg:w="52"/><text x="57.0681%" y="655.50"></text></g><g><title>parsed::stream::ByteStream::get (51 samples, 0.01%)</title><rect x="56.8290%" y="645" width="0.0107%" height="15" fill="rgb(227,94,47)" fg:x="270929" fg:w="51"/><text x="57.0790%" y="655.50"></text></g><g><title>parsed::stream::ByteStream::next (112 samples, 0.02%)</title><rect x="56.8173%" y="661" width="0.0235%" height="15" fill="rgb(229,104,2)" fg:x="270873" fg:w="112"/><text x="57.0673%" y="671.50"></text></g><g><title>parsed::parser::single::{{closure}} (813 samples, 0.17%)</title><rect x="56.6715%" y="677" width="0.1705%" height="15" fill="rgb(219,28,31)" fg:x="270178" fg:w="813"/><text x="56.9215%" y="687.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (823 samples, 0.17%)</title><rect x="56.6702%" y="693" width="0.1726%" height="15" fill="rgb(233,109,36)" fg:x="270172" fg:w="823"/><text x="56.9202%" y="703.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (51 samples, 0.01%)</title><rect x="56.8529%" y="661" width="0.0107%" height="15" fill="rgb(246,88,11)" fg:x="271043" fg:w="51"/><text x="57.1029%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (56 samples, 0.01%)</title><rect x="56.8521%" y="693" width="0.0117%" height="15" fill="rgb(209,212,17)" fg:x="271039" fg:w="56"/><text x="57.1021%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (56 samples, 0.01%)</title><rect x="56.8521%" y="677" width="0.0117%" height="15" fill="rgb(243,59,29)" fg:x="271039" fg:w="56"/><text x="57.1021%" y="687.50"></text></g><g><title>parsed::parser::exact::{{closure}} (942 samples, 0.20%)</title><rect x="56.6684%" y="709" width="0.1976%" height="15" fill="rgb(244,205,48)" fg:x="270163" fg:w="942"/><text x="56.9184%" y="719.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (946 samples, 0.20%)</title><rect x="56.6681%" y="725" width="0.1984%" height="15" fill="rgb(227,30,6)" fg:x="270162" fg:w="946"/><text x="56.9181%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (49 samples, 0.01%)</title><rect x="56.8876%" y="405" width="0.0103%" height="15" fill="rgb(220,205,48)" fg:x="271208" fg:w="49"/><text x="57.1376%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (49 samples, 0.01%)</title><rect x="56.8876%" y="389" width="0.0103%" height="15" fill="rgb(250,94,14)" fg:x="271208" fg:w="49"/><text x="57.1376%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.01%)</title><rect x="56.8876%" y="373" width="0.0103%" height="15" fill="rgb(216,119,42)" fg:x="271208" fg:w="49"/><text x="57.1376%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.01%)</title><rect x="56.8876%" y="357" width="0.0103%" height="15" fill="rgb(232,155,0)" fg:x="271208" fg:w="49"/><text x="57.1376%" y="367.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.01%)</title><rect x="56.8876%" y="341" width="0.0103%" height="15" fill="rgb(212,24,32)" fg:x="271208" fg:w="49"/><text x="57.1376%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (52 samples, 0.01%)</title><rect x="56.8871%" y="421" width="0.0109%" height="15" fill="rgb(216,69,20)" fg:x="271206" fg:w="52"/><text x="57.1371%" y="431.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (53 samples, 0.01%)</title><rect x="56.8871%" y="549" width="0.0111%" height="15" fill="rgb(229,73,31)" fg:x="271206" fg:w="53"/><text x="57.1371%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (53 samples, 0.01%)</title><rect x="56.8871%" y="533" width="0.0111%" height="15" fill="rgb(224,219,20)" fg:x="271206" fg:w="53"/><text x="57.1371%" y="543.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (53 samples, 0.01%)</title><rect x="56.8871%" y="517" width="0.0111%" height="15" fill="rgb(215,146,41)" fg:x="271206" fg:w="53"/><text x="57.1371%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (53 samples, 0.01%)</title><rect x="56.8871%" y="501" width="0.0111%" height="15" fill="rgb(244,71,31)" fg:x="271206" fg:w="53"/><text x="57.1371%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (53 samples, 0.01%)</title><rect x="56.8871%" y="485" width="0.0111%" height="15" fill="rgb(224,24,11)" fg:x="271206" fg:w="53"/><text x="57.1371%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (53 samples, 0.01%)</title><rect x="56.8871%" y="469" width="0.0111%" height="15" fill="rgb(229,76,15)" fg:x="271206" fg:w="53"/><text x="57.1371%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (53 samples, 0.01%)</title><rect x="56.8871%" y="453" width="0.0111%" height="15" fill="rgb(209,93,2)" fg:x="271206" fg:w="53"/><text x="57.1371%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (53 samples, 0.01%)</title><rect x="56.8871%" y="437" width="0.0111%" height="15" fill="rgb(216,200,50)" fg:x="271206" fg:w="53"/><text x="57.1371%" y="447.50"></text></g><g><title>ip_local_deliver (92 samples, 0.02%)</title><rect x="56.9580%" y="165" width="0.0193%" height="15" fill="rgb(211,67,34)" fg:x="271544" fg:w="92"/><text x="57.2080%" y="175.50"></text></g><g><title>ip_local_deliver_finish (92 samples, 0.02%)</title><rect x="56.9580%" y="149" width="0.0193%" height="15" fill="rgb(225,87,47)" fg:x="271544" fg:w="92"/><text x="57.2080%" y="159.50"></text></g><g><title>ip_protocol_deliver_rcu (92 samples, 0.02%)</title><rect x="56.9580%" y="133" width="0.0193%" height="15" fill="rgb(217,185,16)" fg:x="271544" fg:w="92"/><text x="57.2080%" y="143.50"></text></g><g><title>tcp_v4_rcv (75 samples, 0.02%)</title><rect x="56.9616%" y="117" width="0.0157%" height="15" fill="rgb(205,0,0)" fg:x="271561" fg:w="75"/><text x="57.2116%" y="127.50"></text></g><g><title>tcp_v4_do_rcv (70 samples, 0.01%)</title><rect x="56.9626%" y="101" width="0.0147%" height="15" fill="rgb(207,116,45)" fg:x="271566" fg:w="70"/><text x="57.2126%" y="111.50"></text></g><g><title>tcp_rcv_established (68 samples, 0.01%)</title><rect x="56.9631%" y="85" width="0.0143%" height="15" fill="rgb(221,156,26)" fg:x="271568" fg:w="68"/><text x="57.2131%" y="95.50"></text></g><g><title>napi_complete_done (103 samples, 0.02%)</title><rect x="56.9559%" y="277" width="0.0216%" height="15" fill="rgb(213,140,4)" fg:x="271534" fg:w="103"/><text x="57.2059%" y="287.50"></text></g><g><title>gro_normal_list.part.0 (103 samples, 0.02%)</title><rect x="56.9559%" y="261" width="0.0216%" height="15" fill="rgb(231,224,15)" fg:x="271534" fg:w="103"/><text x="57.2059%" y="271.50"></text></g><g><title>netif_receive_skb_list_internal (102 samples, 0.02%)</title><rect x="56.9561%" y="245" width="0.0214%" height="15" fill="rgb(244,76,20)" fg:x="271535" fg:w="102"/><text x="57.2061%" y="255.50"></text></g><g><title>__netif_receive_skb_list_core (100 samples, 0.02%)</title><rect x="56.9566%" y="229" width="0.0210%" height="15" fill="rgb(238,117,7)" fg:x="271537" fg:w="100"/><text x="57.2066%" y="239.50"></text></g><g><title>ip_list_rcv (100 samples, 0.02%)</title><rect x="56.9566%" y="213" width="0.0210%" height="15" fill="rgb(235,1,10)" fg:x="271537" fg:w="100"/><text x="57.2066%" y="223.50"></text></g><g><title>ip_sublist_rcv (100 samples, 0.02%)</title><rect x="56.9566%" y="197" width="0.0210%" height="15" fill="rgb(216,165,6)" fg:x="271537" fg:w="100"/><text x="57.2066%" y="207.50"></text></g><g><title>ip_sublist_rcv_finish (94 samples, 0.02%)</title><rect x="56.9578%" y="181" width="0.0197%" height="15" fill="rgb(246,91,35)" fg:x="271543" fg:w="94"/><text x="57.2078%" y="191.50"></text></g><g><title>[libc-2.31.so] (337 samples, 0.07%)</title><rect x="56.9152%" y="389" width="0.0707%" height="15" fill="rgb(228,96,24)" fg:x="271340" fg:w="337"/><text x="57.1652%" y="399.50"></text></g><g><title>ret_from_intr (158 samples, 0.03%)</title><rect x="56.9528%" y="373" width="0.0331%" height="15" fill="rgb(254,217,53)" fg:x="271519" fg:w="158"/><text x="57.2028%" y="383.50"></text></g><g><title>do_IRQ (158 samples, 0.03%)</title><rect x="56.9528%" y="357" width="0.0331%" height="15" fill="rgb(209,60,0)" fg:x="271519" fg:w="158"/><text x="57.2028%" y="367.50"></text></g><g><title>irq_exit (158 samples, 0.03%)</title><rect x="56.9528%" y="341" width="0.0331%" height="15" fill="rgb(250,93,26)" fg:x="271519" fg:w="158"/><text x="57.2028%" y="351.50"></text></g><g><title>__softirqentry_text_start (158 samples, 0.03%)</title><rect x="56.9528%" y="325" width="0.0331%" height="15" fill="rgb(211,9,40)" fg:x="271519" fg:w="158"/><text x="57.2028%" y="335.50"></text></g><g><title>net_rx_action (145 samples, 0.03%)</title><rect x="56.9555%" y="309" width="0.0304%" height="15" fill="rgb(242,57,20)" fg:x="271532" fg:w="145"/><text x="57.2055%" y="319.50"></text></g><g><title>virtnet_poll (145 samples, 0.03%)</title><rect x="56.9555%" y="293" width="0.0304%" height="15" fill="rgb(248,85,48)" fg:x="271532" fg:w="145"/><text x="57.2055%" y="303.50"></text></g><g><title>net_rx_action (63 samples, 0.01%)</title><rect x="56.9884%" y="325" width="0.0132%" height="15" fill="rgb(212,117,2)" fg:x="271689" fg:w="63"/><text x="57.2384%" y="335.50"></text></g><g><title>virtnet_poll (62 samples, 0.01%)</title><rect x="56.9887%" y="309" width="0.0130%" height="15" fill="rgb(243,19,3)" fg:x="271690" fg:w="62"/><text x="57.2387%" y="319.50"></text></g><g><title>__softirqentry_text_start (70 samples, 0.01%)</title><rect x="56.9872%" y="341" width="0.0147%" height="15" fill="rgb(232,217,24)" fg:x="271683" fg:w="70"/><text x="57.2372%" y="351.50"></text></g><g><title>__libc_malloc (483 samples, 0.10%)</title><rect x="56.9008%" y="405" width="0.1013%" height="15" fill="rgb(224,175,40)" fg:x="271271" fg:w="483"/><text x="57.1508%" y="415.50"></text></g><g><title>ret_from_intr (71 samples, 0.01%)</title><rect x="56.9872%" y="389" width="0.0149%" height="15" fill="rgb(212,162,32)" fg:x="271683" fg:w="71"/><text x="57.2372%" y="399.50"></text></g><g><title>do_IRQ (71 samples, 0.01%)</title><rect x="56.9872%" y="373" width="0.0149%" height="15" fill="rgb(215,9,4)" fg:x="271683" fg:w="71"/><text x="57.2372%" y="383.50"></text></g><g><title>irq_exit (71 samples, 0.01%)</title><rect x="56.9872%" y="357" width="0.0149%" height="15" fill="rgb(242,42,7)" fg:x="271683" fg:w="71"/><text x="57.2372%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (492 samples, 0.10%)</title><rect x="56.8999%" y="453" width="0.1032%" height="15" fill="rgb(242,184,45)" fg:x="271267" fg:w="492"/><text x="57.1499%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (492 samples, 0.10%)</title><rect x="56.8999%" y="437" width="0.1032%" height="15" fill="rgb(228,111,51)" fg:x="271267" fg:w="492"/><text x="57.1499%" y="447.50"></text></g><g><title>alloc::alloc::alloc (491 samples, 0.10%)</title><rect x="56.9001%" y="421" width="0.1030%" height="15" fill="rgb(236,147,17)" fg:x="271268" fg:w="491"/><text x="57.1501%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (493 samples, 0.10%)</title><rect x="56.8999%" y="517" width="0.1034%" height="15" fill="rgb(210,75,22)" fg:x="271267" fg:w="493"/><text x="57.1499%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (493 samples, 0.10%)</title><rect x="56.8999%" y="501" width="0.1034%" height="15" fill="rgb(217,159,45)" fg:x="271267" fg:w="493"/><text x="57.1499%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (493 samples, 0.10%)</title><rect x="56.8999%" y="485" width="0.1034%" height="15" fill="rgb(245,165,53)" fg:x="271267" fg:w="493"/><text x="57.1499%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (493 samples, 0.10%)</title><rect x="56.8999%" y="469" width="0.1034%" height="15" fill="rgb(251,190,50)" fg:x="271267" fg:w="493"/><text x="57.1499%" y="479.50"></text></g><g><title>alloc::string::String::with_capacity (496 samples, 0.10%)</title><rect x="56.8995%" y="533" width="0.1040%" height="15" fill="rgb(208,203,29)" fg:x="271265" fg:w="496"/><text x="57.1495%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (49 samples, 0.01%)</title><rect x="57.0115%" y="501" width="0.0103%" height="15" fill="rgb(207,209,35)" fg:x="271799" fg:w="49"/><text x="57.2615%" y="511.50"></text></g><g><title>core::fmt::write (102 samples, 0.02%)</title><rect x="57.0054%" y="517" width="0.0214%" height="15" fill="rgb(230,144,49)" fg:x="271770" fg:w="102"/><text x="57.2554%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (104 samples, 0.02%)</title><rect x="57.0052%" y="533" width="0.0218%" height="15" fill="rgb(229,31,6)" fg:x="271769" fg:w="104"/><text x="57.2552%" y="543.50"></text></g><g><title>alloc::fmt::format (620 samples, 0.13%)</title><rect x="56.8983%" y="549" width="0.1300%" height="15" fill="rgb(251,129,24)" fg:x="271259" fg:w="620"/><text x="57.1483%" y="559.50"></text></g><g><title>__libc_malloc (49 samples, 0.01%)</title><rect x="57.0419%" y="389" width="0.0103%" height="15" fill="rgb(235,105,15)" fg:x="271944" fg:w="49"/><text x="57.2919%" y="399.50"></text></g><g><title>alloc::string::String::with_capacity (55 samples, 0.01%)</title><rect x="57.0417%" y="517" width="0.0115%" height="15" fill="rgb(216,52,43)" fg:x="271943" fg:w="55"/><text x="57.2917%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (55 samples, 0.01%)</title><rect x="57.0417%" y="501" width="0.0115%" height="15" fill="rgb(238,144,41)" fg:x="271943" fg:w="55"/><text x="57.2917%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (55 samples, 0.01%)</title><rect x="57.0417%" y="485" width="0.0115%" height="15" fill="rgb(243,63,9)" fg:x="271943" fg:w="55"/><text x="57.2917%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (55 samples, 0.01%)</title><rect x="57.0417%" y="469" width="0.0115%" height="15" fill="rgb(246,208,1)" fg:x="271943" fg:w="55"/><text x="57.2917%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (55 samples, 0.01%)</title><rect x="57.0417%" y="453" width="0.0115%" height="15" fill="rgb(233,182,18)" fg:x="271943" fg:w="55"/><text x="57.2917%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (55 samples, 0.01%)</title><rect x="57.0417%" y="437" width="0.0115%" height="15" fill="rgb(242,224,8)" fg:x="271943" fg:w="55"/><text x="57.2917%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (55 samples, 0.01%)</title><rect x="57.0417%" y="421" width="0.0115%" height="15" fill="rgb(243,54,37)" fg:x="271943" fg:w="55"/><text x="57.2917%" y="431.50"></text></g><g><title>alloc::alloc::alloc (54 samples, 0.01%)</title><rect x="57.0419%" y="405" width="0.0113%" height="15" fill="rgb(233,192,12)" fg:x="271944" fg:w="54"/><text x="57.2919%" y="415.50"></text></g><g><title>[libc-2.31.so] (59 samples, 0.01%)</title><rect x="57.0696%" y="373" width="0.0124%" height="15" fill="rgb(251,192,53)" fg:x="272076" fg:w="59"/><text x="57.3196%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (65 samples, 0.01%)</title><rect x="57.0688%" y="389" width="0.0136%" height="15" fill="rgb(246,141,26)" fg:x="272072" fg:w="65"/><text x="57.3188%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (85 samples, 0.02%)</title><rect x="57.0652%" y="469" width="0.0178%" height="15" fill="rgb(239,195,19)" fg:x="272055" fg:w="85"/><text x="57.3152%" y="479.50"></text></g><g><title>alloc::string::String::push_str (85 samples, 0.02%)</title><rect x="57.0652%" y="453" width="0.0178%" height="15" fill="rgb(241,16,39)" fg:x="272055" fg:w="85"/><text x="57.3152%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (85 samples, 0.02%)</title><rect x="57.0652%" y="437" width="0.0178%" height="15" fill="rgb(223,13,53)" fg:x="272055" fg:w="85"/><text x="57.3152%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (85 samples, 0.02%)</title><rect x="57.0652%" y="421" width="0.0178%" height="15" fill="rgb(214,227,0)" fg:x="272055" fg:w="85"/><text x="57.3152%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (85 samples, 0.02%)</title><rect x="57.0652%" y="405" width="0.0178%" height="15" fill="rgb(228,103,26)" fg:x="272055" fg:w="85"/><text x="57.3152%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (143 samples, 0.03%)</title><rect x="57.0585%" y="485" width="0.0300%" height="15" fill="rgb(254,177,53)" fg:x="272023" fg:w="143"/><text x="57.3085%" y="495.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (60 samples, 0.01%)</title><rect x="57.0984%" y="469" width="0.0126%" height="15" fill="rgb(208,201,34)" fg:x="272213" fg:w="60"/><text x="57.3484%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (63 samples, 0.01%)</title><rect x="57.0979%" y="485" width="0.0132%" height="15" fill="rgb(212,39,5)" fg:x="272211" fg:w="63"/><text x="57.3479%" y="495.50"></text></g><g><title>core::fmt::write (292 samples, 0.06%)</title><rect x="57.0564%" y="501" width="0.0612%" height="15" fill="rgb(246,117,3)" fg:x="272013" fg:w="292"/><text x="57.3064%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (298 samples, 0.06%)</title><rect x="57.0556%" y="517" width="0.0625%" height="15" fill="rgb(244,118,39)" fg:x="272009" fg:w="298"/><text x="57.3056%" y="527.50"></text></g><g><title>alloc::fmt::format (368 samples, 0.08%)</title><rect x="57.0413%" y="533" width="0.0772%" height="15" fill="rgb(241,64,10)" fg:x="271941" fg:w="368"/><text x="57.2913%" y="543.50"></text></g><g><title>__softirqentry_text_start (50 samples, 0.01%)</title><rect x="57.1288%" y="373" width="0.0105%" height="15" fill="rgb(229,39,44)" fg:x="272358" fg:w="50"/><text x="57.3788%" y="383.50"></text></g><g><title>[libc-2.31.so] (96 samples, 0.02%)</title><rect x="57.1193%" y="437" width="0.0201%" height="15" fill="rgb(230,226,3)" fg:x="272313" fg:w="96"/><text x="57.3693%" y="447.50"></text></g><g><title>ret_from_intr (51 samples, 0.01%)</title><rect x="57.1288%" y="421" width="0.0107%" height="15" fill="rgb(222,13,42)" fg:x="272358" fg:w="51"/><text x="57.3788%" y="431.50"></text></g><g><title>do_IRQ (51 samples, 0.01%)</title><rect x="57.1288%" y="405" width="0.0107%" height="15" fill="rgb(247,180,54)" fg:x="272358" fg:w="51"/><text x="57.3788%" y="415.50"></text></g><g><title>irq_exit (51 samples, 0.01%)</title><rect x="57.1288%" y="389" width="0.0107%" height="15" fill="rgb(205,96,16)" fg:x="272358" fg:w="51"/><text x="57.3788%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (120 samples, 0.03%)</title><rect x="57.1191%" y="469" width="0.0252%" height="15" fill="rgb(205,100,21)" fg:x="272312" fg:w="120"/><text x="57.3691%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (120 samples, 0.03%)</title><rect x="57.1191%" y="453" width="0.0252%" height="15" fill="rgb(248,51,4)" fg:x="272312" fg:w="120"/><text x="57.3691%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (121 samples, 0.03%)</title><rect x="57.1191%" y="533" width="0.0254%" height="15" fill="rgb(217,197,30)" fg:x="272312" fg:w="121"/><text x="57.3691%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (121 samples, 0.03%)</title><rect x="57.1191%" y="517" width="0.0254%" height="15" fill="rgb(240,179,40)" fg:x="272312" fg:w="121"/><text x="57.3691%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (121 samples, 0.03%)</title><rect x="57.1191%" y="501" width="0.0254%" height="15" fill="rgb(212,185,35)" fg:x="272312" fg:w="121"/><text x="57.3691%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 samples, 0.03%)</title><rect x="57.1191%" y="485" width="0.0254%" height="15" fill="rgb(251,222,31)" fg:x="272312" fg:w="121"/><text x="57.3691%" y="495.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (533 samples, 0.11%)</title><rect x="57.0373%" y="549" width="0.1118%" height="15" fill="rgb(208,140,36)" fg:x="271922" fg:w="533"/><text x="57.2873%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (58 samples, 0.01%)</title><rect x="57.1502%" y="533" width="0.0122%" height="15" fill="rgb(220,148,1)" fg:x="272460" fg:w="58"/><text x="57.4002%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::get (53 samples, 0.01%)</title><rect x="57.1623%" y="533" width="0.0111%" height="15" fill="rgb(254,4,28)" fg:x="272518" fg:w="53"/><text x="57.4123%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::next (117 samples, 0.02%)</title><rect x="57.1491%" y="549" width="0.0245%" height="15" fill="rgb(222,185,44)" fg:x="272455" fg:w="117"/><text x="57.3991%" y="559.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,376 samples, 0.29%)</title><rect x="56.8855%" y="581" width="0.2886%" height="15" fill="rgb(215,74,39)" fg:x="271198" fg:w="1376"/><text x="57.1355%" y="591.50"></text></g><g><title>parsed::parser::single::{{closure}} (1,375 samples, 0.29%)</title><rect x="56.8857%" y="565" width="0.2884%" height="15" fill="rgb(247,86,4)" fg:x="271199" fg:w="1375"/><text x="57.1357%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (55 samples, 0.01%)</title><rect x="57.1741%" y="581" width="0.0115%" height="15" fill="rgb(231,105,32)" fg:x="272574" fg:w="55"/><text x="57.4241%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (52 samples, 0.01%)</title><rect x="57.1860%" y="549" width="0.0109%" height="15" fill="rgb(222,65,35)" fg:x="272631" fg:w="52"/><text x="57.4360%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (54 samples, 0.01%)</title><rect x="57.1858%" y="581" width="0.0113%" height="15" fill="rgb(218,145,35)" fg:x="272630" fg:w="54"/><text x="57.4358%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (54 samples, 0.01%)</title><rect x="57.1858%" y="565" width="0.0113%" height="15" fill="rgb(208,7,15)" fg:x="272630" fg:w="54"/><text x="57.4358%" y="575.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,501 samples, 0.31%)</title><rect x="56.8840%" y="597" width="0.3148%" height="15" fill="rgb(209,83,13)" fg:x="271191" fg:w="1501"/><text x="57.1340%" y="607.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,517 samples, 0.32%)</title><rect x="56.8823%" y="613" width="0.3182%" height="15" fill="rgb(218,3,10)" fg:x="271183" fg:w="1517"/><text x="57.1323%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (55 samples, 0.01%)</title><rect x="57.2062%" y="501" width="0.0115%" height="15" fill="rgb(211,219,4)" fg:x="272727" fg:w="55"/><text x="57.4562%" y="511.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (99 samples, 0.02%)</title><rect x="57.2041%" y="533" width="0.0208%" height="15" fill="rgb(228,194,12)" fg:x="272717" fg:w="99"/><text x="57.4541%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::get (99 samples, 0.02%)</title><rect x="57.2041%" y="517" width="0.0208%" height="15" fill="rgb(210,175,7)" fg:x="272717" fg:w="99"/><text x="57.4541%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (101 samples, 0.02%)</title><rect x="57.2041%" y="549" width="0.0212%" height="15" fill="rgb(243,132,6)" fg:x="272717" fg:w="101"/><text x="57.4541%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad_integral (48 samples, 0.01%)</title><rect x="57.2567%" y="453" width="0.0101%" height="15" fill="rgb(207,72,18)" fg:x="272968" fg:w="48"/><text x="57.5067%" y="463.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (94 samples, 0.02%)</title><rect x="57.2485%" y="469" width="0.0197%" height="15" fill="rgb(236,1,18)" fg:x="272929" fg:w="94"/><text x="57.4985%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (112 samples, 0.02%)</title><rect x="57.2460%" y="485" width="0.0235%" height="15" fill="rgb(227,0,18)" fg:x="272917" fg:w="112"/><text x="57.4960%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (173 samples, 0.04%)</title><rect x="57.2370%" y="517" width="0.0363%" height="15" fill="rgb(247,37,5)" fg:x="272874" fg:w="173"/><text x="57.4870%" y="527.50"></text></g><g><title>core::fmt::write (172 samples, 0.04%)</title><rect x="57.2372%" y="501" width="0.0361%" height="15" fill="rgb(237,179,24)" fg:x="272875" fg:w="172"/><text x="57.4872%" y="511.50"></text></g><g><title>alloc::fmt::format (216 samples, 0.05%)</title><rect x="57.2288%" y="533" width="0.0453%" height="15" fill="rgb(226,53,20)" fg:x="272835" fg:w="216"/><text x="57.4788%" y="543.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (220 samples, 0.05%)</title><rect x="57.2286%" y="549" width="0.0461%" height="15" fill="rgb(247,75,7)" fg:x="272834" fg:w="220"/><text x="57.4786%" y="559.50"></text></g><g><title>parsed::parser::before::{{closure}} (362 samples, 0.08%)</title><rect x="57.2037%" y="565" width="0.0759%" height="15" fill="rgb(233,96,12)" fg:x="272715" fg:w="362"/><text x="57.4537%" y="575.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (369 samples, 0.08%)</title><rect x="57.2026%" y="581" width="0.0774%" height="15" fill="rgb(224,125,0)" fg:x="272710" fg:w="369"/><text x="57.4526%" y="591.50"></text></g><g><title>core::fmt::write (49 samples, 0.01%)</title><rect x="57.2907%" y="485" width="0.0103%" height="15" fill="rgb(224,92,25)" fg:x="273130" fg:w="49"/><text x="57.5407%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (53 samples, 0.01%)</title><rect x="57.2905%" y="501" width="0.0111%" height="15" fill="rgb(224,42,24)" fg:x="273129" fg:w="53"/><text x="57.5405%" y="511.50"></text></g><g><title>alloc::fmt::format (78 samples, 0.02%)</title><rect x="57.2855%" y="517" width="0.0164%" height="15" fill="rgb(234,132,49)" fg:x="273105" fg:w="78"/><text x="57.5355%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (63 samples, 0.01%)</title><rect x="57.3173%" y="453" width="0.0132%" height="15" fill="rgb(248,100,35)" fg:x="273257" fg:w="63"/><text x="57.5673%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (147 samples, 0.03%)</title><rect x="57.3150%" y="485" width="0.0308%" height="15" fill="rgb(239,94,40)" fg:x="273246" fg:w="147"/><text x="57.5650%" y="495.50"></text></g><g><title>core::fmt::write (147 samples, 0.03%)</title><rect x="57.3150%" y="469" width="0.0308%" height="15" fill="rgb(235,139,28)" fg:x="273246" fg:w="147"/><text x="57.5650%" y="479.50"></text></g><g><title>alloc::fmt::format (178 samples, 0.04%)</title><rect x="57.3090%" y="501" width="0.0373%" height="15" fill="rgb(217,144,7)" fg:x="273217" fg:w="178"/><text x="57.5590%" y="511.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (228 samples, 0.05%)</title><rect x="57.3079%" y="517" width="0.0478%" height="15" fill="rgb(227,55,4)" fg:x="273212" fg:w="228"/><text x="57.5579%" y="527.50"></text></g><g><title>parsed::stream::ByteStream::next (71 samples, 0.01%)</title><rect x="57.3557%" y="517" width="0.0149%" height="15" fill="rgb(252,82,54)" fg:x="273440" fg:w="71"/><text x="57.6057%" y="527.50"></text></g><g><title>parsed::parser::single::{{closure}} (430 samples, 0.09%)</title><rect x="57.2806%" y="533" width="0.0902%" height="15" fill="rgb(245,172,4)" fg:x="273082" fg:w="430"/><text x="57.5306%" y="543.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (433 samples, 0.09%)</title><rect x="57.2806%" y="549" width="0.0908%" height="15" fill="rgb(207,26,27)" fg:x="273082" fg:w="433"/><text x="57.5306%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (56 samples, 0.01%)</title><rect x="57.3807%" y="469" width="0.0117%" height="15" fill="rgb(252,98,18)" fg:x="273559" fg:w="56"/><text x="57.6307%" y="479.50"></text></g><g><title>core::fmt::write (52 samples, 0.01%)</title><rect x="57.3815%" y="453" width="0.0109%" height="15" fill="rgb(244,8,26)" fg:x="273563" fg:w="52"/><text x="57.6315%" y="463.50"></text></g><g><title>alloc::fmt::format (81 samples, 0.02%)</title><rect x="57.3759%" y="485" width="0.0170%" height="15" fill="rgb(237,173,45)" fg:x="273536" fg:w="81"/><text x="57.6259%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (53 samples, 0.01%)</title><rect x="57.4098%" y="421" width="0.0111%" height="15" fill="rgb(208,213,49)" fg:x="273698" fg:w="53"/><text x="57.6598%" y="431.50"></text></g><g><title>alloc::fmt::format (171 samples, 0.04%)</title><rect x="57.4008%" y="469" width="0.0359%" height="15" fill="rgb(212,122,37)" fg:x="273655" fg:w="171"/><text x="57.6508%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (140 samples, 0.03%)</title><rect x="57.4073%" y="453" width="0.0294%" height="15" fill="rgb(213,80,17)" fg:x="273686" fg:w="140"/><text x="57.6573%" y="463.50"></text></g><g><title>core::fmt::write (140 samples, 0.03%)</title><rect x="57.4073%" y="437" width="0.0294%" height="15" fill="rgb(206,210,43)" fg:x="273686" fg:w="140"/><text x="57.6573%" y="447.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (238 samples, 0.05%)</title><rect x="57.3991%" y="485" width="0.0499%" height="15" fill="rgb(229,214,3)" fg:x="273647" fg:w="238"/><text x="57.6491%" y="495.50"></text></g><g><title>parsed::stream::ByteStream::next (56 samples, 0.01%)</title><rect x="57.4491%" y="485" width="0.0117%" height="15" fill="rgb(235,213,29)" fg:x="273885" fg:w="56"/><text x="57.6991%" y="495.50"></text></g><g><title>parsed::parser::single::{{closure}} (425 samples, 0.09%)</title><rect x="57.3723%" y="501" width="0.0891%" height="15" fill="rgb(248,135,26)" fg:x="273519" fg:w="425"/><text x="57.6223%" y="511.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (428 samples, 0.09%)</title><rect x="57.3719%" y="517" width="0.0898%" height="15" fill="rgb(242,188,12)" fg:x="273517" fg:w="428"/><text x="57.6219%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (51 samples, 0.01%)</title><rect x="57.4640%" y="453" width="0.0107%" height="15" fill="rgb(245,38,12)" fg:x="273956" fg:w="51"/><text x="57.7140%" y="463.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (50 samples, 0.01%)</title><rect x="57.4642%" y="437" width="0.0105%" height="15" fill="rgb(218,42,13)" fg:x="273957" fg:w="50"/><text x="57.7142%" y="447.50"></text></g><g><title>parsed::stream::ByteStream::get (50 samples, 0.01%)</title><rect x="57.4642%" y="421" width="0.0105%" height="15" fill="rgb(238,132,49)" fg:x="273957" fg:w="50"/><text x="57.7142%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (48 samples, 0.01%)</title><rect x="57.5055%" y="293" width="0.0101%" height="15" fill="rgb(209,196,19)" fg:x="274154" fg:w="48"/><text x="57.7555%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (61 samples, 0.01%)</title><rect x="57.5038%" y="373" width="0.0128%" height="15" fill="rgb(244,131,22)" fg:x="274146" fg:w="61"/><text x="57.7538%" y="383.50"></text></g><g><title>alloc::string::String::push_str (61 samples, 0.01%)</title><rect x="57.5038%" y="357" width="0.0128%" height="15" fill="rgb(223,18,34)" fg:x="274146" fg:w="61"/><text x="57.7538%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (61 samples, 0.01%)</title><rect x="57.5038%" y="341" width="0.0128%" height="15" fill="rgb(252,124,54)" fg:x="274146" fg:w="61"/><text x="57.7538%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (61 samples, 0.01%)</title><rect x="57.5038%" y="325" width="0.0128%" height="15" fill="rgb(229,106,42)" fg:x="274146" fg:w="61"/><text x="57.7538%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (61 samples, 0.01%)</title><rect x="57.5038%" y="309" width="0.0128%" height="15" fill="rgb(221,129,1)" fg:x="274146" fg:w="61"/><text x="57.7538%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (90 samples, 0.02%)</title><rect x="57.5003%" y="389" width="0.0189%" height="15" fill="rgb(229,74,15)" fg:x="274129" fg:w="90"/><text x="57.7503%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 samples, 0.01%)</title><rect x="57.5286%" y="357" width="0.0138%" height="15" fill="rgb(210,206,50)" fg:x="274264" fg:w="66"/><text x="57.7786%" y="367.50"></text></g><g><title>core::fmt::Formatter::pad_integral (85 samples, 0.02%)</title><rect x="57.5424%" y="357" width="0.0178%" height="15" fill="rgb(251,114,31)" fg:x="274330" fg:w="85"/><text x="57.7924%" y="367.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (185 samples, 0.04%)</title><rect x="57.5256%" y="373" width="0.0388%" height="15" fill="rgb(215,225,28)" fg:x="274250" fg:w="185"/><text x="57.7756%" y="383.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (225 samples, 0.05%)</title><rect x="57.5208%" y="389" width="0.0472%" height="15" fill="rgb(237,109,14)" fg:x="274227" fg:w="225"/><text x="57.7708%" y="399.50"></text></g><g><title>core::fmt::write (362 samples, 0.08%)</title><rect x="57.4979%" y="405" width="0.0759%" height="15" fill="rgb(230,13,37)" fg:x="274118" fg:w="362"/><text x="57.7479%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (366 samples, 0.08%)</title><rect x="57.4977%" y="421" width="0.0768%" height="15" fill="rgb(231,40,28)" fg:x="274117" fg:w="366"/><text x="57.7477%" y="431.50"></text></g><g><title>alloc::fmt::format (437 samples, 0.09%)</title><rect x="57.4847%" y="437" width="0.0917%" height="15" fill="rgb(231,202,18)" fg:x="274055" fg:w="437"/><text x="57.7347%" y="447.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (447 samples, 0.09%)</title><rect x="57.4839%" y="453" width="0.0938%" height="15" fill="rgb(225,33,18)" fg:x="274051" fg:w="447"/><text x="57.7339%" y="463.50"></text></g><g><title>parsed::parser::before::{{closure}} (556 samples, 0.12%)</title><rect x="57.4635%" y="469" width="0.1166%" height="15" fill="rgb(223,64,47)" fg:x="273954" fg:w="556"/><text x="57.7135%" y="479.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (564 samples, 0.12%)</title><rect x="57.4625%" y="485" width="0.1183%" height="15" fill="rgb(234,114,13)" fg:x="273949" fg:w="564"/><text x="57.7125%" y="495.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (570 samples, 0.12%)</title><rect x="57.4619%" y="501" width="0.1196%" height="15" fill="rgb(248,56,40)" fg:x="273946" fg:w="570"/><text x="57.7119%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (48 samples, 0.01%)</title><rect x="57.5821%" y="453" width="0.0101%" height="15" fill="rgb(221,194,21)" fg:x="274519" fg:w="48"/><text x="57.8321%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (49 samples, 0.01%)</title><rect x="57.5821%" y="469" width="0.0103%" height="15" fill="rgb(242,108,46)" fg:x="274519" fg:w="49"/><text x="57.8321%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (54 samples, 0.01%)</title><rect x="57.5818%" y="485" width="0.0113%" height="15" fill="rgb(220,106,10)" fg:x="274518" fg:w="54"/><text x="57.8318%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (67 samples, 0.01%)</title><rect x="57.5934%" y="437" width="0.0141%" height="15" fill="rgb(211,88,4)" fg:x="274573" fg:w="67"/><text x="57.8434%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (72 samples, 0.02%)</title><rect x="57.5934%" y="453" width="0.0151%" height="15" fill="rgb(214,95,34)" fg:x="274573" fg:w="72"/><text x="57.8434%" y="463.50"></text></g><g><title>parsed::http::as_string (76 samples, 0.02%)</title><rect x="57.5932%" y="485" width="0.0159%" height="15" fill="rgb(250,160,33)" fg:x="274572" fg:w="76"/><text x="57.8432%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (76 samples, 0.02%)</title><rect x="57.5932%" y="469" width="0.0159%" height="15" fill="rgb(225,29,10)" fg:x="274572" fg:w="76"/><text x="57.8432%" y="479.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (133 samples, 0.03%)</title><rect x="57.5814%" y="501" width="0.0279%" height="15" fill="rgb(224,28,30)" fg:x="274516" fg:w="133"/><text x="57.8314%" y="511.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (705 samples, 0.15%)</title><rect x="57.4617%" y="517" width="0.1479%" height="15" fill="rgb(231,77,4)" fg:x="273945" fg:w="705"/><text x="57.7117%" y="527.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,945 samples, 0.41%)</title><rect x="57.2022%" y="597" width="0.4080%" height="15" fill="rgb(209,63,21)" fg:x="272708" fg:w="1945"/><text x="57.4522%" y="607.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,572 samples, 0.33%)</title><rect x="57.2804%" y="581" width="0.3297%" height="15" fill="rgb(226,22,11)" fg:x="273081" fg:w="1572"/><text x="57.5304%" y="591.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,572 samples, 0.33%)</title><rect x="57.2804%" y="565" width="0.3297%" height="15" fill="rgb(216,82,30)" fg:x="273081" fg:w="1572"/><text x="57.5304%" y="575.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,136 samples, 0.24%)</title><rect x="57.3719%" y="549" width="0.2383%" height="15" fill="rgb(246,227,38)" fg:x="273517" fg:w="1136"/><text x="57.6219%" y="559.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,136 samples, 0.24%)</title><rect x="57.3719%" y="533" width="0.2383%" height="15" fill="rgb(251,203,53)" fg:x="273517" fg:w="1136"/><text x="57.6219%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (51 samples, 0.01%)</title><rect x="57.6213%" y="405" width="0.0107%" height="15" fill="rgb(254,101,1)" fg:x="274706" fg:w="51"/><text x="57.8713%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (53 samples, 0.01%)</title><rect x="57.6213%" y="469" width="0.0111%" height="15" fill="rgb(241,180,5)" fg:x="274706" fg:w="53"/><text x="57.8713%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (53 samples, 0.01%)</title><rect x="57.6213%" y="453" width="0.0111%" height="15" fill="rgb(218,168,4)" fg:x="274706" fg:w="53"/><text x="57.8713%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (53 samples, 0.01%)</title><rect x="57.6213%" y="437" width="0.0111%" height="15" fill="rgb(224,223,32)" fg:x="274706" fg:w="53"/><text x="57.8713%" y="447.50"></text></g><g><title>alloc::string::String::push (53 samples, 0.01%)</title><rect x="57.6213%" y="421" width="0.0111%" height="15" fill="rgb(236,106,22)" fg:x="274706" fg:w="53"/><text x="57.8713%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (62 samples, 0.01%)</title><rect x="57.6196%" y="485" width="0.0130%" height="15" fill="rgb(206,121,5)" fg:x="274698" fg:w="62"/><text x="57.8696%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.01%)</title><rect x="57.6196%" y="501" width="0.0136%" height="15" fill="rgb(233,87,28)" fg:x="274698" fg:w="65"/><text x="57.8696%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (89 samples, 0.02%)</title><rect x="57.6196%" y="517" width="0.0187%" height="15" fill="rgb(236,137,17)" fg:x="274698" fg:w="89"/><text x="57.8696%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (124 samples, 0.03%)</title><rect x="57.6133%" y="533" width="0.0260%" height="15" fill="rgb(209,183,38)" fg:x="274668" fg:w="124"/><text x="57.8633%" y="543.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (2,087 samples, 0.44%)</title><rect x="57.2022%" y="613" width="0.4378%" height="15" fill="rgb(206,162,44)" fg:x="272708" fg:w="2087"/><text x="57.4522%" y="623.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (142 samples, 0.03%)</title><rect x="57.6102%" y="597" width="0.0298%" height="15" fill="rgb(237,70,39)" fg:x="274653" fg:w="142"/><text x="57.8602%" y="607.50"></text></g><g><title>parsed::http::as_string (131 samples, 0.03%)</title><rect x="57.6125%" y="581" width="0.0275%" height="15" fill="rgb(212,176,5)" fg:x="274664" fg:w="131"/><text x="57.8625%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (131 samples, 0.03%)</title><rect x="57.6125%" y="565" width="0.0275%" height="15" fill="rgb(232,95,16)" fg:x="274664" fg:w="131"/><text x="57.8625%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (131 samples, 0.03%)</title><rect x="57.6125%" y="549" width="0.0275%" height="15" fill="rgb(219,115,35)" fg:x="274664" fg:w="131"/><text x="57.8625%" y="559.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (3,614 samples, 0.76%)</title><rect x="56.8821%" y="629" width="0.7581%" height="15" fill="rgb(251,67,27)" fg:x="271182" fg:w="3614"/><text x="57.1321%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (3,658 samples, 0.77%)</title><rect x="56.8821%" y="645" width="0.7673%" height="15" fill="rgb(222,95,40)" fg:x="271182" fg:w="3658"/><text x="57.1321%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (65 samples, 0.01%)</title><rect x="57.6521%" y="597" width="0.0136%" height="15" fill="rgb(250,35,16)" fg:x="274853" fg:w="65"/><text x="57.9021%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (65 samples, 0.01%)</title><rect x="57.6521%" y="581" width="0.0136%" height="15" fill="rgb(224,86,44)" fg:x="274853" fg:w="65"/><text x="57.9021%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (65 samples, 0.01%)</title><rect x="57.6521%" y="565" width="0.0136%" height="15" fill="rgb(237,53,53)" fg:x="274853" fg:w="65"/><text x="57.9021%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (65 samples, 0.01%)</title><rect x="57.6521%" y="549" width="0.0136%" height="15" fill="rgb(208,171,33)" fg:x="274853" fg:w="65"/><text x="57.9021%" y="559.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (78 samples, 0.02%)</title><rect x="57.6511%" y="629" width="0.0164%" height="15" fill="rgb(222,64,27)" fg:x="274848" fg:w="78"/><text x="57.9011%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (76 samples, 0.02%)</title><rect x="57.6515%" y="613" width="0.0159%" height="15" fill="rgb(221,121,35)" fg:x="274850" fg:w="76"/><text x="57.9015%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (73 samples, 0.02%)</title><rect x="57.6695%" y="629" width="0.0153%" height="15" fill="rgb(228,137,42)" fg:x="274936" fg:w="73"/><text x="57.9195%" y="639.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (176 samples, 0.04%)</title><rect x="57.6494%" y="645" width="0.0369%" height="15" fill="rgb(227,54,21)" fg:x="274840" fg:w="176"/><text x="57.8994%" y="655.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (3,859 samples, 0.81%)</title><rect x="56.8790%" y="661" width="0.8094%" height="15" fill="rgb(240,168,33)" fg:x="271167" fg:w="3859"/><text x="57.1290%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (49 samples, 0.01%)</title><rect x="57.6884%" y="645" width="0.0103%" height="15" fill="rgb(243,159,6)" fg:x="275026" fg:w="49"/><text x="57.9384%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (49 samples, 0.01%)</title><rect x="57.6884%" y="629" width="0.0103%" height="15" fill="rgb(205,211,41)" fg:x="275026" fg:w="49"/><text x="57.9384%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (54 samples, 0.01%)</title><rect x="57.6884%" y="661" width="0.0113%" height="15" fill="rgb(253,30,1)" fg:x="275026" fg:w="54"/><text x="57.9384%" y="671.50"></text></g><g><title>parsed::parser::repeat::{{closure}} (3,940 samples, 0.83%)</title><rect x="56.8783%" y="677" width="0.8264%" height="15" fill="rgb(226,80,18)" fg:x="271164" fg:w="3940"/><text x="57.1283%" y="687.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (3,953 samples, 0.83%)</title><rect x="56.8771%" y="693" width="0.8292%" height="15" fill="rgb(253,156,46)" fg:x="271158" fg:w="3953"/><text x="57.1271%" y="703.50"></text></g><g><title>[libc-2.31.so] (48 samples, 0.01%)</title><rect x="57.7373%" y="437" width="0.0101%" height="15" fill="rgb(248,87,27)" fg:x="275259" fg:w="48"/><text x="57.9873%" y="447.50"></text></g><g><title>__libc_malloc (123 samples, 0.03%)</title><rect x="57.7287%" y="453" width="0.0258%" height="15" fill="rgb(227,122,2)" fg:x="275218" fg:w="123"/><text x="57.9787%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (132 samples, 0.03%)</title><rect x="57.7287%" y="565" width="0.0277%" height="15" fill="rgb(229,94,39)" fg:x="275218" fg:w="132"/><text x="57.9787%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (132 samples, 0.03%)</title><rect x="57.7287%" y="549" width="0.0277%" height="15" fill="rgb(225,173,31)" fg:x="275218" fg:w="132"/><text x="57.9787%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (132 samples, 0.03%)</title><rect x="57.7287%" y="533" width="0.0277%" height="15" fill="rgb(239,176,30)" fg:x="275218" fg:w="132"/><text x="57.9787%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (132 samples, 0.03%)</title><rect x="57.7287%" y="517" width="0.0277%" height="15" fill="rgb(212,104,21)" fg:x="275218" fg:w="132"/><text x="57.9787%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (132 samples, 0.03%)</title><rect x="57.7287%" y="501" width="0.0277%" height="15" fill="rgb(240,209,40)" fg:x="275218" fg:w="132"/><text x="57.9787%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (132 samples, 0.03%)</title><rect x="57.7287%" y="485" width="0.0277%" height="15" fill="rgb(234,195,5)" fg:x="275218" fg:w="132"/><text x="57.9787%" y="495.50"></text></g><g><title>alloc::alloc::alloc (132 samples, 0.03%)</title><rect x="57.7287%" y="469" width="0.0277%" height="15" fill="rgb(238,213,1)" fg:x="275218" fg:w="132"/><text x="57.9787%" y="479.50"></text></g><g><title>alloc::string::String::with_capacity (135 samples, 0.03%)</title><rect x="57.7283%" y="581" width="0.0283%" height="15" fill="rgb(235,182,54)" fg:x="275216" fg:w="135"/><text x="57.9783%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (56 samples, 0.01%)</title><rect x="57.7641%" y="549" width="0.0117%" height="15" fill="rgb(229,50,46)" fg:x="275387" fg:w="56"/><text x="58.0141%" y="559.50"></text></g><g><title>core::fmt::write (116 samples, 0.02%)</title><rect x="57.7580%" y="565" width="0.0243%" height="15" fill="rgb(219,145,13)" fg:x="275358" fg:w="116"/><text x="58.0080%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (119 samples, 0.02%)</title><rect x="57.7578%" y="581" width="0.0250%" height="15" fill="rgb(220,226,10)" fg:x="275357" fg:w="119"/><text x="58.0078%" y="591.50"></text></g><g><title>alloc::fmt::format (266 samples, 0.06%)</title><rect x="57.7276%" y="597" width="0.0558%" height="15" fill="rgb(248,47,30)" fg:x="275213" fg:w="266"/><text x="57.9776%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::matcher::MatchError&gt; (48 samples, 0.01%)</title><rect x="57.7851%" y="581" width="0.0101%" height="15" fill="rgb(231,209,44)" fg:x="275487" fg:w="48"/><text x="58.0351%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (48 samples, 0.01%)</title><rect x="57.7851%" y="565" width="0.0101%" height="15" fill="rgb(209,80,30)" fg:x="275487" fg:w="48"/><text x="58.0351%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (48 samples, 0.01%)</title><rect x="57.7851%" y="549" width="0.0101%" height="15" fill="rgb(232,9,14)" fg:x="275487" fg:w="48"/><text x="58.0351%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (48 samples, 0.01%)</title><rect x="57.7851%" y="533" width="0.0101%" height="15" fill="rgb(243,91,43)" fg:x="275487" fg:w="48"/><text x="58.0351%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.01%)</title><rect x="57.7851%" y="517" width="0.0101%" height="15" fill="rgb(231,90,52)" fg:x="275487" fg:w="48"/><text x="58.0351%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (54 samples, 0.01%)</title><rect x="57.7847%" y="597" width="0.0113%" height="15" fill="rgb(253,192,44)" fg:x="275485" fg:w="54"/><text x="58.0347%" y="607.50"></text></g><g><title>[libc-2.31.so] (68 samples, 0.01%)</title><rect x="57.8229%" y="421" width="0.0143%" height="15" fill="rgb(241,66,31)" fg:x="275667" fg:w="68"/><text x="58.0729%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (70 samples, 0.01%)</title><rect x="57.8229%" y="437" width="0.0147%" height="15" fill="rgb(235,81,37)" fg:x="275667" fg:w="70"/><text x="58.0729%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (87 samples, 0.02%)</title><rect x="57.8197%" y="517" width="0.0182%" height="15" fill="rgb(223,221,9)" fg:x="275652" fg:w="87"/><text x="58.0697%" y="527.50"></text></g><g><title>alloc::string::String::push_str (87 samples, 0.02%)</title><rect x="57.8197%" y="501" width="0.0182%" height="15" fill="rgb(242,180,7)" fg:x="275652" fg:w="87"/><text x="58.0697%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (87 samples, 0.02%)</title><rect x="57.8197%" y="485" width="0.0182%" height="15" fill="rgb(243,78,19)" fg:x="275652" fg:w="87"/><text x="58.0697%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (87 samples, 0.02%)</title><rect x="57.8197%" y="469" width="0.0182%" height="15" fill="rgb(233,23,17)" fg:x="275652" fg:w="87"/><text x="58.0697%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (87 samples, 0.02%)</title><rect x="57.8197%" y="453" width="0.0182%" height="15" fill="rgb(252,122,45)" fg:x="275652" fg:w="87"/><text x="58.0697%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (137 samples, 0.03%)</title><rect x="57.8153%" y="533" width="0.0287%" height="15" fill="rgb(247,108,20)" fg:x="275631" fg:w="137"/><text x="58.0653%" y="543.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (71 samples, 0.01%)</title><rect x="57.8526%" y="533" width="0.0149%" height="15" fill="rgb(235,84,21)" fg:x="275809" fg:w="71"/><text x="58.1026%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (65 samples, 0.01%)</title><rect x="57.8539%" y="517" width="0.0136%" height="15" fill="rgb(247,129,10)" fg:x="275815" fg:w="65"/><text x="58.1039%" y="527.50"></text></g><g><title>core::fmt::write (290 samples, 0.06%)</title><rect x="57.8122%" y="549" width="0.0608%" height="15" fill="rgb(208,173,14)" fg:x="275616" fg:w="290"/><text x="58.0622%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (293 samples, 0.06%)</title><rect x="57.8119%" y="565" width="0.0615%" height="15" fill="rgb(236,31,38)" fg:x="275615" fg:w="293"/><text x="58.0619%" y="575.50"></text></g><g><title>alloc::fmt::format (362 samples, 0.08%)</title><rect x="57.7992%" y="581" width="0.0759%" height="15" fill="rgb(232,65,17)" fg:x="275554" fg:w="362"/><text x="58.0492%" y="591.50"></text></g><g><title>[libc-2.31.so] (52 samples, 0.01%)</title><rect x="57.8766%" y="485" width="0.0109%" height="15" fill="rgb(224,45,49)" fg:x="275923" fg:w="52"/><text x="58.1266%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (107 samples, 0.02%)</title><rect x="57.8766%" y="517" width="0.0224%" height="15" fill="rgb(225,2,53)" fg:x="275923" fg:w="107"/><text x="58.1266%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (107 samples, 0.02%)</title><rect x="57.8766%" y="501" width="0.0224%" height="15" fill="rgb(248,210,53)" fg:x="275923" fg:w="107"/><text x="58.1266%" y="511.50"></text></g><g><title>cfree (49 samples, 0.01%)</title><rect x="57.8887%" y="485" width="0.0103%" height="15" fill="rgb(211,1,30)" fg:x="275981" fg:w="49"/><text x="58.1387%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (110 samples, 0.02%)</title><rect x="57.8761%" y="581" width="0.0231%" height="15" fill="rgb(224,96,15)" fg:x="275921" fg:w="110"/><text x="58.1261%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (110 samples, 0.02%)</title><rect x="57.8761%" y="565" width="0.0231%" height="15" fill="rgb(252,45,11)" fg:x="275921" fg:w="110"/><text x="58.1261%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (110 samples, 0.02%)</title><rect x="57.8761%" y="549" width="0.0231%" height="15" fill="rgb(220,125,38)" fg:x="275921" fg:w="110"/><text x="58.1261%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (110 samples, 0.02%)</title><rect x="57.8761%" y="533" width="0.0231%" height="15" fill="rgb(243,161,33)" fg:x="275921" fg:w="110"/><text x="58.1261%" y="543.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (506 samples, 0.11%)</title><rect x="57.7960%" y="597" width="0.1061%" height="15" fill="rgb(248,197,34)" fg:x="275539" fg:w="506"/><text x="58.0460%" y="607.50"></text></g><g><title>parsed::stream::ByteStream::get (60 samples, 0.01%)</title><rect x="57.9118%" y="581" width="0.0126%" height="15" fill="rgb(228,165,23)" fg:x="276091" fg:w="60"/><text x="58.1618%" y="591.50"></text></g><g><title>parsed::stream::ByteStream::next (109 samples, 0.02%)</title><rect x="57.9021%" y="597" width="0.0229%" height="15" fill="rgb(236,94,38)" fg:x="276045" fg:w="109"/><text x="58.1521%" y="607.50"></text></g><g><title>parsed::parser::single::{{closure}} (979 samples, 0.21%)</title><rect x="57.7205%" y="613" width="0.2054%" height="15" fill="rgb(220,13,23)" fg:x="275179" fg:w="979"/><text x="57.9705%" y="623.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (984 samples, 0.21%)</title><rect x="57.7203%" y="629" width="0.2064%" height="15" fill="rgb(234,26,39)" fg:x="275178" fg:w="984"/><text x="57.9703%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (59 samples, 0.01%)</title><rect x="57.9267%" y="629" width="0.0124%" height="15" fill="rgb(205,117,44)" fg:x="276162" fg:w="59"/><text x="58.1767%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (51 samples, 0.01%)</title><rect x="57.9407%" y="581" width="0.0107%" height="15" fill="rgb(250,42,2)" fg:x="276229" fg:w="51"/><text x="58.1907%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (63 samples, 0.01%)</title><rect x="57.9401%" y="597" width="0.0132%" height="15" fill="rgb(223,83,14)" fg:x="276226" fg:w="63"/><text x="58.1901%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (67 samples, 0.01%)</title><rect x="57.9395%" y="629" width="0.0141%" height="15" fill="rgb(241,147,50)" fg:x="276223" fg:w="67"/><text x="58.1895%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (67 samples, 0.01%)</title><rect x="57.9395%" y="613" width="0.0141%" height="15" fill="rgb(218,90,6)" fg:x="276223" fg:w="67"/><text x="58.1895%" y="623.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,141 samples, 0.24%)</title><rect x="57.7173%" y="645" width="0.2393%" height="15" fill="rgb(210,191,5)" fg:x="275164" fg:w="1141"/><text x="57.9673%" y="655.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,153 samples, 0.24%)</title><rect x="57.7163%" y="661" width="0.2418%" height="15" fill="rgb(225,139,19)" fg:x="275159" fg:w="1153"/><text x="57.9663%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (50 samples, 0.01%)</title><rect x="57.9693%" y="597" width="0.0105%" height="15" fill="rgb(210,1,33)" fg:x="276365" fg:w="50"/><text x="58.2193%" y="607.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (50 samples, 0.01%)</title><rect x="57.9693%" y="581" width="0.0105%" height="15" fill="rgb(213,50,3)" fg:x="276365" fg:w="50"/><text x="58.2193%" y="591.50"></text></g><g><title>parsed::stream::ByteStream::get (50 samples, 0.01%)</title><rect x="57.9693%" y="565" width="0.0105%" height="15" fill="rgb(234,227,4)" fg:x="276365" fg:w="50"/><text x="58.2193%" y="575.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (90 samples, 0.02%)</title><rect x="57.9997%" y="517" width="0.0189%" height="15" fill="rgb(246,63,5)" fg:x="276510" fg:w="90"/><text x="58.2497%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (97 samples, 0.02%)</title><rect x="57.9988%" y="533" width="0.0203%" height="15" fill="rgb(245,136,27)" fg:x="276506" fg:w="97"/><text x="58.2488%" y="543.50"></text></g><g><title>core::fmt::write (142 samples, 0.03%)</title><rect x="57.9921%" y="549" width="0.0298%" height="15" fill="rgb(247,199,27)" fg:x="276474" fg:w="142"/><text x="58.2421%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (146 samples, 0.03%)</title><rect x="57.9915%" y="565" width="0.0306%" height="15" fill="rgb(252,158,49)" fg:x="276471" fg:w="146"/><text x="58.2415%" y="575.50"></text></g><g><title>alloc::fmt::format (178 samples, 0.04%)</title><rect x="57.9850%" y="581" width="0.0373%" height="15" fill="rgb(254,73,1)" fg:x="276440" fg:w="178"/><text x="58.2350%" y="591.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (183 samples, 0.04%)</title><rect x="57.9848%" y="597" width="0.0384%" height="15" fill="rgb(248,93,19)" fg:x="276439" fg:w="183"/><text x="58.2348%" y="607.50"></text></g><g><title>parsed::parser::before::{{closure}} (271 samples, 0.06%)</title><rect x="57.9688%" y="613" width="0.0568%" height="15" fill="rgb(206,67,5)" fg:x="276363" fg:w="271"/><text x="58.2188%" y="623.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (273 samples, 0.06%)</title><rect x="57.9686%" y="629" width="0.0573%" height="15" fill="rgb(209,210,4)" fg:x="276362" fg:w="273"/><text x="58.2186%" y="639.50"></text></g><g><title>parsed::parser::single::{{closure}} (50 samples, 0.01%)</title><rect x="58.0335%" y="581" width="0.0105%" height="15" fill="rgb(214,185,36)" fg:x="276671" fg:w="50"/><text x="58.2835%" y="591.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (58 samples, 0.01%)</title><rect x="58.0328%" y="597" width="0.0122%" height="15" fill="rgb(233,191,26)" fg:x="276668" fg:w="58"/><text x="58.2828%" y="607.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (91 samples, 0.02%)</title><rect x="58.0316%" y="613" width="0.0191%" height="15" fill="rgb(248,94,17)" fg:x="276662" fg:w="91"/><text x="58.2816%" y="623.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (109 samples, 0.02%)</title><rect x="58.0293%" y="629" width="0.0229%" height="15" fill="rgb(250,64,4)" fg:x="276651" fg:w="109"/><text x="58.2793%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (437 samples, 0.09%)</title><rect x="57.9663%" y="645" width="0.0917%" height="15" fill="rgb(218,41,53)" fg:x="276351" fg:w="437"/><text x="58.2163%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (54 samples, 0.01%)</title><rect x="58.0660%" y="565" width="0.0113%" height="15" fill="rgb(251,176,28)" fg:x="276826" fg:w="54"/><text x="58.3160%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (91 samples, 0.02%)</title><rect x="58.0593%" y="581" width="0.0191%" height="15" fill="rgb(247,22,9)" fg:x="276794" fg:w="91"/><text x="58.3093%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (97 samples, 0.02%)</title><rect x="58.0584%" y="597" width="0.0203%" height="15" fill="rgb(218,201,14)" fg:x="276790" fg:w="97"/><text x="58.3084%" y="607.50"></text></g><g><title>parsed::http::as_string (99 samples, 0.02%)</title><rect x="58.0584%" y="629" width="0.0208%" height="15" fill="rgb(218,94,10)" fg:x="276790" fg:w="99"/><text x="58.3084%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (99 samples, 0.02%)</title><rect x="58.0584%" y="613" width="0.0208%" height="15" fill="rgb(222,183,52)" fg:x="276790" fg:w="99"/><text x="58.3084%" y="623.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (102 samples, 0.02%)</title><rect x="58.0580%" y="645" width="0.0214%" height="15" fill="rgb(242,140,25)" fg:x="276788" fg:w="102"/><text x="58.3080%" y="655.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (570 samples, 0.12%)</title><rect x="57.9619%" y="661" width="0.1196%" height="15" fill="rgb(235,197,38)" fg:x="276330" fg:w="570"/><text x="58.2119%" y="671.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,785 samples, 0.37%)</title><rect x="57.7138%" y="677" width="0.3744%" height="15" fill="rgb(237,136,15)" fg:x="275147" fg:w="1785"/><text x="57.9638%" y="687.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,842 samples, 0.39%)</title><rect x="57.7090%" y="693" width="0.3864%" height="15" fill="rgb(223,44,49)" fg:x="275124" fg:w="1842"/><text x="57.9590%" y="703.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (5,862 samples, 1.23%)</title><rect x="56.8739%" y="709" width="1.2296%" height="15" fill="rgb(227,71,15)" fg:x="271143" fg:w="5862"/><text x="57.1239%" y="719.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (5,896 samples, 1.24%)</title><rect x="56.8693%" y="725" width="1.2367%" height="15" fill="rgb(225,153,20)" fg:x="271121" fg:w="5896"/><text x="57.1193%" y="735.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (6,925 samples, 1.45%)</title><rect x="56.6627%" y="741" width="1.4526%" height="15" fill="rgb(210,190,26)" fg:x="270136" fg:w="6925"/><text x="56.9127%" y="751.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (6,961 samples, 1.46%)</title><rect x="56.6604%" y="757" width="1.4601%" height="15" fill="rgb(223,147,5)" fg:x="270125" fg:w="6961"/><text x="56.9104%" y="767.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (86 samples, 0.02%)</title><rect x="58.1230%" y="757" width="0.0180%" height="15" fill="rgb(207,14,23)" fg:x="277098" fg:w="86"/><text x="58.3730%" y="767.50"></text></g><g><title>parsed::http::get_content_length (85 samples, 0.02%)</title><rect x="58.1232%" y="741" width="0.0178%" height="15" fill="rgb(211,195,53)" fg:x="277099" fg:w="85"/><text x="58.3732%" y="751.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (7,399 samples, 1.55%)</title><rect x="56.5937%" y="773" width="1.5520%" height="15" fill="rgb(237,75,46)" fg:x="269807" fg:w="7399"/><text x="56.8437%" y="783.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (7,446 samples, 1.56%)</title><rect x="56.5855%" y="805" width="1.5618%" height="15" fill="rgb(254,55,14)" fg:x="269768" fg:w="7446"/><text x="56.8355%" y="815.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (7,446 samples, 1.56%)</title><rect x="56.5855%" y="789" width="1.5618%" height="15" fill="rgb(230,185,30)" fg:x="269768" fg:w="7446"/><text x="56.8355%" y="799.50"></text></g><g><title>parsed::http::parse_http_request (7,496 samples, 1.57%)</title><rect x="56.5821%" y="821" width="1.5723%" height="15" fill="rgb(220,14,11)" fg:x="269752" fg:w="7496"/><text x="56.8321%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (83 samples, 0.02%)</title><rect x="58.1683%" y="757" width="0.0174%" height="15" fill="rgb(215,169,44)" fg:x="277314" fg:w="83"/><text x="58.4183%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (83 samples, 0.02%)</title><rect x="58.1683%" y="741" width="0.0174%" height="15" fill="rgb(253,203,20)" fg:x="277314" fg:w="83"/><text x="58.4183%" y="751.50"></text></g><g><title>cfree (66 samples, 0.01%)</title><rect x="58.1719%" y="725" width="0.0138%" height="15" fill="rgb(229,225,17)" fg:x="277331" fg:w="66"/><text x="58.4219%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (86 samples, 0.02%)</title><rect x="58.1679%" y="805" width="0.0180%" height="15" fill="rgb(236,76,26)" fg:x="277312" fg:w="86"/><text x="58.4179%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (86 samples, 0.02%)</title><rect x="58.1679%" y="789" width="0.0180%" height="15" fill="rgb(234,15,30)" fg:x="277312" fg:w="86"/><text x="58.4179%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.02%)</title><rect x="58.1679%" y="773" width="0.0180%" height="15" fill="rgb(211,113,48)" fg:x="277312" fg:w="86"/><text x="58.4179%" y="783.50"></text></g><g><title>parsed::stream::ByteStream::pull (156 samples, 0.03%)</title><rect x="58.1545%" y="821" width="0.0327%" height="15" fill="rgb(221,31,36)" fg:x="277248" fg:w="156"/><text x="58.4045%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.02%)</title><rect x="58.1891%" y="805" width="0.0176%" height="15" fill="rgb(215,118,52)" fg:x="277413" fg:w="84"/><text x="58.4391%" y="815.50"></text></g><g><title>ip_protocol_deliver_rcu (87 samples, 0.02%)</title><rect x="58.2520%" y="549" width="0.0182%" height="15" fill="rgb(241,151,27)" fg:x="277713" fg:w="87"/><text x="58.5020%" y="559.50"></text></g><g><title>tcp_v4_rcv (72 samples, 0.02%)</title><rect x="58.2552%" y="533" width="0.0151%" height="15" fill="rgb(253,51,3)" fg:x="277728" fg:w="72"/><text x="58.5052%" y="543.50"></text></g><g><title>tcp_v4_do_rcv (69 samples, 0.01%)</title><rect x="58.2558%" y="517" width="0.0145%" height="15" fill="rgb(216,201,24)" fg:x="277731" fg:w="69"/><text x="58.5058%" y="527.50"></text></g><g><title>tcp_rcv_established (65 samples, 0.01%)</title><rect x="58.2566%" y="501" width="0.0136%" height="15" fill="rgb(231,107,4)" fg:x="277735" fg:w="65"/><text x="58.5066%" y="511.50"></text></g><g><title>ip_list_rcv (101 samples, 0.02%)</title><rect x="58.2493%" y="629" width="0.0212%" height="15" fill="rgb(243,97,54)" fg:x="277700" fg:w="101"/><text x="58.4993%" y="639.50"></text></g><g><title>ip_sublist_rcv (100 samples, 0.02%)</title><rect x="58.2495%" y="613" width="0.0210%" height="15" fill="rgb(221,32,51)" fg:x="277701" fg:w="100"/><text x="58.4995%" y="623.50"></text></g><g><title>ip_sublist_rcv_finish (90 samples, 0.02%)</title><rect x="58.2516%" y="597" width="0.0189%" height="15" fill="rgb(218,171,35)" fg:x="277711" fg:w="90"/><text x="58.5016%" y="607.50"></text></g><g><title>ip_local_deliver (89 samples, 0.02%)</title><rect x="58.2518%" y="581" width="0.0187%" height="15" fill="rgb(214,20,53)" fg:x="277712" fg:w="89"/><text x="58.5018%" y="591.50"></text></g><g><title>ip_local_deliver_finish (88 samples, 0.02%)</title><rect x="58.2520%" y="565" width="0.0185%" height="15" fill="rgb(239,9,52)" fg:x="277713" fg:w="88"/><text x="58.5020%" y="575.50"></text></g><g><title>__netif_receive_skb_list_core (104 samples, 0.02%)</title><rect x="58.2489%" y="645" width="0.0218%" height="15" fill="rgb(215,114,45)" fg:x="277698" fg:w="104"/><text x="58.4989%" y="655.50"></text></g><g><title>napi_complete_done (109 samples, 0.02%)</title><rect x="58.2487%" y="693" width="0.0229%" height="15" fill="rgb(208,118,9)" fg:x="277697" fg:w="109"/><text x="58.4987%" y="703.50"></text></g><g><title>gro_normal_list.part.0 (108 samples, 0.02%)</title><rect x="58.2489%" y="677" width="0.0227%" height="15" fill="rgb(235,7,39)" fg:x="277698" fg:w="108"/><text x="58.4989%" y="687.50"></text></g><g><title>netif_receive_skb_list_internal (108 samples, 0.02%)</title><rect x="58.2489%" y="661" width="0.0227%" height="15" fill="rgb(243,225,15)" fg:x="277698" fg:w="108"/><text x="58.4989%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (352 samples, 0.07%)</title><rect x="58.2067%" y="805" width="0.0738%" height="15" fill="rgb(225,216,18)" fg:x="277497" fg:w="352"/><text x="58.4567%" y="815.50"></text></g><g><title>ret_from_intr (173 samples, 0.04%)</title><rect x="58.2443%" y="789" width="0.0363%" height="15" fill="rgb(233,36,38)" fg:x="277676" fg:w="173"/><text x="58.4943%" y="799.50"></text></g><g><title>do_IRQ (173 samples, 0.04%)</title><rect x="58.2443%" y="773" width="0.0363%" height="15" fill="rgb(239,88,23)" fg:x="277676" fg:w="173"/><text x="58.4943%" y="783.50"></text></g><g><title>irq_exit (173 samples, 0.04%)</title><rect x="58.2443%" y="757" width="0.0363%" height="15" fill="rgb(219,181,35)" fg:x="277676" fg:w="173"/><text x="58.4943%" y="767.50"></text></g><g><title>__softirqentry_text_start (173 samples, 0.04%)</title><rect x="58.2443%" y="741" width="0.0363%" height="15" fill="rgb(215,18,46)" fg:x="277676" fg:w="173"/><text x="58.4943%" y="751.50"></text></g><g><title>net_rx_action (159 samples, 0.03%)</title><rect x="58.2472%" y="725" width="0.0334%" height="15" fill="rgb(241,38,11)" fg:x="277690" fg:w="159"/><text x="58.4972%" y="735.50"></text></g><g><title>virtnet_poll (159 samples, 0.03%)</title><rect x="58.2472%" y="709" width="0.0334%" height="15" fill="rgb(248,169,45)" fg:x="277690" fg:w="159"/><text x="58.4972%" y="719.50"></text></g><g><title>parsed::stream::ByteStream::put (462 samples, 0.10%)</title><rect x="58.1872%" y="821" width="0.0969%" height="15" fill="rgb(239,50,49)" fg:x="277404" fg:w="462"/><text x="58.4372%" y="831.50"></text></g><g><title>[libc-2.31.so] (62 samples, 0.01%)</title><rect x="58.3063%" y="565" width="0.0130%" height="15" fill="rgb(231,96,31)" fg:x="277972" fg:w="62"/><text x="58.5563%" y="575.50"></text></g><g><title>__netif_receive_skb_list_core (56 samples, 0.01%)</title><rect x="58.3210%" y="421" width="0.0117%" height="15" fill="rgb(224,193,37)" fg:x="278042" fg:w="56"/><text x="58.5710%" y="431.50"></text></g><g><title>ip_list_rcv (54 samples, 0.01%)</title><rect x="58.3214%" y="405" width="0.0113%" height="15" fill="rgb(227,153,50)" fg:x="278044" fg:w="54"/><text x="58.5714%" y="415.50"></text></g><g><title>ip_sublist_rcv (54 samples, 0.01%)</title><rect x="58.3214%" y="389" width="0.0113%" height="15" fill="rgb(249,228,3)" fg:x="278044" fg:w="54"/><text x="58.5714%" y="399.50"></text></g><g><title>napi_complete_done (57 samples, 0.01%)</title><rect x="58.3210%" y="469" width="0.0120%" height="15" fill="rgb(219,164,43)" fg:x="278042" fg:w="57"/><text x="58.5710%" y="479.50"></text></g><g><title>gro_normal_list.part.0 (57 samples, 0.01%)</title><rect x="58.3210%" y="453" width="0.0120%" height="15" fill="rgb(216,45,41)" fg:x="278042" fg:w="57"/><text x="58.5710%" y="463.50"></text></g><g><title>netif_receive_skb_list_internal (57 samples, 0.01%)</title><rect x="58.3210%" y="437" width="0.0120%" height="15" fill="rgb(210,226,51)" fg:x="278042" fg:w="57"/><text x="58.5710%" y="447.50"></text></g><g><title>__libc_malloc (219 samples, 0.05%)</title><rect x="58.2904%" y="581" width="0.0459%" height="15" fill="rgb(209,117,49)" fg:x="277896" fg:w="219"/><text x="58.5404%" y="591.50"></text></g><g><title>ret_from_intr (80 samples, 0.02%)</title><rect x="58.3196%" y="565" width="0.0168%" height="15" fill="rgb(206,196,24)" fg:x="278035" fg:w="80"/><text x="58.5696%" y="575.50"></text></g><g><title>do_IRQ (80 samples, 0.02%)</title><rect x="58.3196%" y="549" width="0.0168%" height="15" fill="rgb(253,218,3)" fg:x="278035" fg:w="80"/><text x="58.5696%" y="559.50"></text></g><g><title>irq_exit (80 samples, 0.02%)</title><rect x="58.3196%" y="533" width="0.0168%" height="15" fill="rgb(252,166,2)" fg:x="278035" fg:w="80"/><text x="58.5696%" y="543.50"></text></g><g><title>__softirqentry_text_start (80 samples, 0.02%)</title><rect x="58.3196%" y="517" width="0.0168%" height="15" fill="rgb(236,218,26)" fg:x="278035" fg:w="80"/><text x="58.5696%" y="527.50"></text></g><g><title>net_rx_action (75 samples, 0.02%)</title><rect x="58.3206%" y="501" width="0.0157%" height="15" fill="rgb(254,84,19)" fg:x="278040" fg:w="75"/><text x="58.5706%" y="511.50"></text></g><g><title>virtnet_poll (74 samples, 0.02%)</title><rect x="58.3208%" y="485" width="0.0155%" height="15" fill="rgb(219,137,29)" fg:x="278041" fg:w="74"/><text x="58.5708%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (239 samples, 0.05%)</title><rect x="58.2900%" y="677" width="0.0501%" height="15" fill="rgb(227,47,52)" fg:x="277894" fg:w="239"/><text x="58.5400%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (239 samples, 0.05%)</title><rect x="58.2900%" y="661" width="0.0501%" height="15" fill="rgb(229,167,24)" fg:x="277894" fg:w="239"/><text x="58.5400%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (239 samples, 0.05%)</title><rect x="58.2900%" y="645" width="0.0501%" height="15" fill="rgb(233,164,1)" fg:x="277894" fg:w="239"/><text x="58.5400%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (239 samples, 0.05%)</title><rect x="58.2900%" y="629" width="0.0501%" height="15" fill="rgb(218,88,48)" fg:x="277894" fg:w="239"/><text x="58.5400%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (239 samples, 0.05%)</title><rect x="58.2900%" y="613" width="0.0501%" height="15" fill="rgb(226,214,24)" fg:x="277894" fg:w="239"/><text x="58.5400%" y="623.50"></text></g><g><title>alloc::alloc::alloc (238 samples, 0.05%)</title><rect x="58.2902%" y="597" width="0.0499%" height="15" fill="rgb(233,29,12)" fg:x="277895" fg:w="238"/><text x="58.5402%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (240 samples, 0.05%)</title><rect x="58.2900%" y="757" width="0.0503%" height="15" fill="rgb(219,120,34)" fg:x="277894" fg:w="240"/><text x="58.5400%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (240 samples, 0.05%)</title><rect x="58.2900%" y="741" width="0.0503%" height="15" fill="rgb(226,78,44)" fg:x="277894" fg:w="240"/><text x="58.5400%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (240 samples, 0.05%)</title><rect x="58.2900%" y="725" width="0.0503%" height="15" fill="rgb(240,15,48)" fg:x="277894" fg:w="240"/><text x="58.5400%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (240 samples, 0.05%)</title><rect x="58.2900%" y="709" width="0.0503%" height="15" fill="rgb(253,176,7)" fg:x="277894" fg:w="240"/><text x="58.5400%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (240 samples, 0.05%)</title><rect x="58.2900%" y="693" width="0.0503%" height="15" fill="rgb(206,166,28)" fg:x="277894" fg:w="240"/><text x="58.5400%" y="703.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (250 samples, 0.05%)</title><rect x="58.2900%" y="805" width="0.0524%" height="15" fill="rgb(241,53,51)" fg:x="277894" fg:w="250"/><text x="58.5400%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (250 samples, 0.05%)</title><rect x="58.2900%" y="789" width="0.0524%" height="15" fill="rgb(249,112,30)" fg:x="277894" fg:w="250"/><text x="58.5400%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (250 samples, 0.05%)</title><rect x="58.2900%" y="773" width="0.0524%" height="15" fill="rgb(217,85,30)" fg:x="277894" fg:w="250"/><text x="58.5400%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (49 samples, 0.01%)</title><rect x="58.3540%" y="613" width="0.0103%" height="15" fill="rgb(233,49,7)" fg:x="278199" fg:w="49"/><text x="58.6040%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (55 samples, 0.01%)</title><rect x="58.3529%" y="661" width="0.0115%" height="15" fill="rgb(234,109,9)" fg:x="278194" fg:w="55"/><text x="58.6029%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (53 samples, 0.01%)</title><rect x="58.3533%" y="645" width="0.0111%" height="15" fill="rgb(253,95,22)" fg:x="278196" fg:w="53"/><text x="58.6033%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (51 samples, 0.01%)</title><rect x="58.3537%" y="629" width="0.0107%" height="15" fill="rgb(233,176,25)" fg:x="278198" fg:w="51"/><text x="58.6037%" y="639.50"></text></g><g><title>alloc::string::String::push_str (70 samples, 0.01%)</title><rect x="58.3527%" y="725" width="0.0147%" height="15" fill="rgb(236,33,39)" fg:x="278193" fg:w="70"/><text x="58.6027%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (70 samples, 0.01%)</title><rect x="58.3527%" y="709" width="0.0147%" height="15" fill="rgb(223,226,42)" fg:x="278193" fg:w="70"/><text x="58.6027%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (70 samples, 0.01%)</title><rect x="58.3527%" y="693" width="0.0147%" height="15" fill="rgb(216,99,33)" fg:x="278193" fg:w="70"/><text x="58.6027%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (70 samples, 0.01%)</title><rect x="58.3527%" y="677" width="0.0147%" height="15" fill="rgb(235,84,23)" fg:x="278193" fg:w="70"/><text x="58.6027%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (74 samples, 0.02%)</title><rect x="58.3525%" y="741" width="0.0155%" height="15" fill="rgb(232,2,27)" fg:x="278192" fg:w="74"/><text x="58.6025%" y="751.50"></text></g><g><title>core::fmt::Formatter::pad_integral (88 samples, 0.02%)</title><rect x="58.3926%" y="645" width="0.0185%" height="15" fill="rgb(241,23,22)" fg:x="278383" fg:w="88"/><text x="58.6426%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (96 samples, 0.02%)</title><rect x="58.3917%" y="661" width="0.0201%" height="15" fill="rgb(211,73,27)" fg:x="278379" fg:w="96"/><text x="58.6417%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (105 samples, 0.02%)</title><rect x="58.3905%" y="677" width="0.0220%" height="15" fill="rgb(235,109,49)" fg:x="278373" fg:w="105"/><text x="58.6405%" y="687.50"></text></g><g><title>core::fmt::run (136 samples, 0.03%)</title><rect x="58.3854%" y="693" width="0.0285%" height="15" fill="rgb(230,99,29)" fg:x="278349" fg:w="136"/><text x="58.6354%" y="703.50"></text></g><g><title>core::fmt::write (159 samples, 0.03%)</title><rect x="58.3831%" y="709" width="0.0334%" height="15" fill="rgb(245,199,7)" fg:x="278338" fg:w="159"/><text x="58.6331%" y="719.50"></text></g><g><title>chrono::format::format_inner::write_local_minus_utc (181 samples, 0.04%)</title><rect x="58.3808%" y="725" width="0.0380%" height="15" fill="rgb(217,179,10)" fg:x="278327" fg:w="181"/><text x="58.6308%" y="735.50"></text></g><g><title>[libc-2.31.so] (91 samples, 0.02%)</title><rect x="58.4418%" y="437" width="0.0191%" height="15" fill="rgb(254,99,47)" fg:x="278618" fg:w="91"/><text x="58.6918%" y="447.50"></text></g><g><title>ret_from_intr (54 samples, 0.01%)</title><rect x="58.4496%" y="421" width="0.0113%" height="15" fill="rgb(251,121,7)" fg:x="278655" fg:w="54"/><text x="58.6996%" y="431.50"></text></g><g><title>do_IRQ (54 samples, 0.01%)</title><rect x="58.4496%" y="405" width="0.0113%" height="15" fill="rgb(250,177,26)" fg:x="278655" fg:w="54"/><text x="58.6996%" y="415.50"></text></g><g><title>irq_exit (54 samples, 0.01%)</title><rect x="58.4496%" y="389" width="0.0113%" height="15" fill="rgb(232,88,15)" fg:x="278655" fg:w="54"/><text x="58.6996%" y="399.50"></text></g><g><title>__softirqentry_text_start (54 samples, 0.01%)</title><rect x="58.4496%" y="373" width="0.0113%" height="15" fill="rgb(251,54,54)" fg:x="278655" fg:w="54"/><text x="58.6996%" y="383.50"></text></g><g><title>net_rx_action (50 samples, 0.01%)</title><rect x="58.4504%" y="357" width="0.0105%" height="15" fill="rgb(208,177,15)" fg:x="278659" fg:w="50"/><text x="58.7004%" y="367.50"></text></g><g><title>virtnet_poll (50 samples, 0.01%)</title><rect x="58.4504%" y="341" width="0.0105%" height="15" fill="rgb(205,97,32)" fg:x="278659" fg:w="50"/><text x="58.7004%" y="351.50"></text></g><g><title>[libc-2.31.so] (122 samples, 0.03%)</title><rect x="58.4372%" y="453" width="0.0256%" height="15" fill="rgb(217,192,13)" fg:x="278596" fg:w="122"/><text x="58.6872%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (174 samples, 0.04%)</title><rect x="58.4314%" y="517" width="0.0365%" height="15" fill="rgb(215,163,41)" fg:x="278568" fg:w="174"/><text x="58.6814%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (174 samples, 0.04%)</title><rect x="58.4314%" y="501" width="0.0365%" height="15" fill="rgb(246,83,29)" fg:x="278568" fg:w="174"/><text x="58.6814%" y="511.50"></text></g><g><title>alloc::alloc::realloc (174 samples, 0.04%)</title><rect x="58.4314%" y="485" width="0.0365%" height="15" fill="rgb(219,2,45)" fg:x="278568" fg:w="174"/><text x="58.6814%" y="495.50"></text></g><g><title>realloc (170 samples, 0.04%)</title><rect x="58.4322%" y="469" width="0.0357%" height="15" fill="rgb(242,215,33)" fg:x="278572" fg:w="170"/><text x="58.6822%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (177 samples, 0.04%)</title><rect x="58.4311%" y="533" width="0.0371%" height="15" fill="rgb(217,1,6)" fg:x="278567" fg:w="177"/><text x="58.6811%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (195 samples, 0.04%)</title><rect x="58.4280%" y="581" width="0.0409%" height="15" fill="rgb(207,85,52)" fg:x="278552" fg:w="195"/><text x="58.6780%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (189 samples, 0.04%)</title><rect x="58.4293%" y="565" width="0.0396%" height="15" fill="rgb(231,171,19)" fg:x="278558" fg:w="189"/><text x="58.6793%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (189 samples, 0.04%)</title><rect x="58.4293%" y="549" width="0.0396%" height="15" fill="rgb(207,128,4)" fg:x="278558" fg:w="189"/><text x="58.6793%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (197 samples, 0.04%)</title><rect x="58.4278%" y="597" width="0.0413%" height="15" fill="rgb(219,208,4)" fg:x="278551" fg:w="197"/><text x="58.6778%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (243 samples, 0.05%)</title><rect x="58.4274%" y="677" width="0.0510%" height="15" fill="rgb(235,161,42)" fg:x="278549" fg:w="243"/><text x="58.6774%" y="687.50"></text></g><g><title>alloc::string::String::push_str (243 samples, 0.05%)</title><rect x="58.4274%" y="661" width="0.0510%" height="15" fill="rgb(247,218,18)" fg:x="278549" fg:w="243"/><text x="58.6774%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (243 samples, 0.05%)</title><rect x="58.4274%" y="645" width="0.0510%" height="15" fill="rgb(232,114,51)" fg:x="278549" fg:w="243"/><text x="58.6774%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (243 samples, 0.05%)</title><rect x="58.4274%" y="629" width="0.0510%" height="15" fill="rgb(222,95,3)" fg:x="278549" fg:w="243"/><text x="58.6774%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (243 samples, 0.05%)</title><rect x="58.4274%" y="613" width="0.0510%" height="15" fill="rgb(240,65,29)" fg:x="278549" fg:w="243"/><text x="58.6774%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (283 samples, 0.06%)</title><rect x="58.4232%" y="693" width="0.0594%" height="15" fill="rgb(249,209,20)" fg:x="278529" fg:w="283"/><text x="58.6732%" y="703.50"></text></g><g><title>realloc (141 samples, 0.03%)</title><rect x="58.5016%" y="453" width="0.0296%" height="15" fill="rgb(241,48,37)" fg:x="278903" fg:w="141"/><text x="58.7516%" y="463.50"></text></g><g><title>ret_from_intr (50 samples, 0.01%)</title><rect x="58.5207%" y="437" width="0.0105%" height="15" fill="rgb(230,140,42)" fg:x="278994" fg:w="50"/><text x="58.7707%" y="447.50"></text></g><g><title>do_IRQ (50 samples, 0.01%)</title><rect x="58.5207%" y="421" width="0.0105%" height="15" fill="rgb(230,176,45)" fg:x="278994" fg:w="50"/><text x="58.7707%" y="431.50"></text></g><g><title>irq_exit (50 samples, 0.01%)</title><rect x="58.5207%" y="405" width="0.0105%" height="15" fill="rgb(245,112,21)" fg:x="278994" fg:w="50"/><text x="58.7707%" y="415.50"></text></g><g><title>__softirqentry_text_start (50 samples, 0.01%)</title><rect x="58.5207%" y="389" width="0.0105%" height="15" fill="rgb(207,183,35)" fg:x="278994" fg:w="50"/><text x="58.7707%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (157 samples, 0.03%)</title><rect x="58.4985%" y="501" width="0.0329%" height="15" fill="rgb(227,44,33)" fg:x="278888" fg:w="157"/><text x="58.7485%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (157 samples, 0.03%)</title><rect x="58.4985%" y="485" width="0.0329%" height="15" fill="rgb(246,120,21)" fg:x="278888" fg:w="157"/><text x="58.7485%" y="495.50"></text></g><g><title>alloc::alloc::realloc (157 samples, 0.03%)</title><rect x="58.4985%" y="469" width="0.0329%" height="15" fill="rgb(235,57,52)" fg:x="278888" fg:w="157"/><text x="58.7485%" y="479.50"></text></g><g><title>__netif_receive_skb_list_core (60 samples, 0.01%)</title><rect x="58.5637%" y="325" width="0.0126%" height="15" fill="rgb(238,84,10)" fg:x="279199" fg:w="60"/><text x="58.8137%" y="335.50"></text></g><g><title>ip_list_rcv (60 samples, 0.01%)</title><rect x="58.5637%" y="309" width="0.0126%" height="15" fill="rgb(251,200,32)" fg:x="279199" fg:w="60"/><text x="58.8137%" y="319.50"></text></g><g><title>ip_sublist_rcv (60 samples, 0.01%)</title><rect x="58.5637%" y="293" width="0.0126%" height="15" fill="rgb(247,159,13)" fg:x="279199" fg:w="60"/><text x="58.8137%" y="303.50"></text></g><g><title>ip_sublist_rcv_finish (55 samples, 0.01%)</title><rect x="58.5648%" y="277" width="0.0115%" height="15" fill="rgb(238,64,4)" fg:x="279204" fg:w="55"/><text x="58.8148%" y="287.50"></text></g><g><title>ip_local_deliver (54 samples, 0.01%)</title><rect x="58.5650%" y="261" width="0.0113%" height="15" fill="rgb(221,131,51)" fg:x="279205" fg:w="54"/><text x="58.8150%" y="271.50"></text></g><g><title>ip_local_deliver_finish (54 samples, 0.01%)</title><rect x="58.5650%" y="245" width="0.0113%" height="15" fill="rgb(242,5,29)" fg:x="279205" fg:w="54"/><text x="58.8150%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (54 samples, 0.01%)</title><rect x="58.5650%" y="229" width="0.0113%" height="15" fill="rgb(214,130,32)" fg:x="279205" fg:w="54"/><text x="58.8150%" y="239.50"></text></g><g><title>napi_complete_done (62 samples, 0.01%)</title><rect x="58.5637%" y="373" width="0.0130%" height="15" fill="rgb(244,210,16)" fg:x="279199" fg:w="62"/><text x="58.8137%" y="383.50"></text></g><g><title>gro_normal_list.part.0 (62 samples, 0.01%)</title><rect x="58.5637%" y="357" width="0.0130%" height="15" fill="rgb(234,48,26)" fg:x="279199" fg:w="62"/><text x="58.8137%" y="367.50"></text></g><g><title>netif_receive_skb_list_internal (62 samples, 0.01%)</title><rect x="58.5637%" y="341" width="0.0130%" height="15" fill="rgb(231,82,38)" fg:x="279199" fg:w="62"/><text x="58.8137%" y="351.50"></text></g><g><title>virtnet_poll (89 samples, 0.02%)</title><rect x="58.5629%" y="389" width="0.0187%" height="15" fill="rgb(254,128,41)" fg:x="279195" fg:w="89"/><text x="58.8129%" y="399.50"></text></g><g><title>__softirqentry_text_start (95 samples, 0.02%)</title><rect x="58.5618%" y="421" width="0.0199%" height="15" fill="rgb(212,73,49)" fg:x="279190" fg:w="95"/><text x="58.8118%" y="431.50"></text></g><g><title>net_rx_action (91 samples, 0.02%)</title><rect x="58.5627%" y="405" width="0.0191%" height="15" fill="rgb(205,62,54)" fg:x="279194" fg:w="91"/><text x="58.8127%" y="415.50"></text></g><g><title>[libc-2.31.so] (210 samples, 0.04%)</title><rect x="58.5379%" y="485" width="0.0440%" height="15" fill="rgb(228,0,8)" fg:x="279076" fg:w="210"/><text x="58.7879%" y="495.50"></text></g><g><title>ret_from_intr (96 samples, 0.02%)</title><rect x="58.5618%" y="469" width="0.0201%" height="15" fill="rgb(251,28,17)" fg:x="279190" fg:w="96"/><text x="58.8118%" y="479.50"></text></g><g><title>do_IRQ (96 samples, 0.02%)</title><rect x="58.5618%" y="453" width="0.0201%" height="15" fill="rgb(238,105,27)" fg:x="279190" fg:w="96"/><text x="58.8118%" y="463.50"></text></g><g><title>irq_exit (96 samples, 0.02%)</title><rect x="58.5618%" y="437" width="0.0201%" height="15" fill="rgb(237,216,33)" fg:x="279190" fg:w="96"/><text x="58.8118%" y="447.50"></text></g><g><title>__libc_malloc (267 samples, 0.06%)</title><rect x="58.5314%" y="501" width="0.0560%" height="15" fill="rgb(229,228,25)" fg:x="279045" fg:w="267"/><text x="58.7814%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (470 samples, 0.10%)</title><rect x="58.4970%" y="517" width="0.0986%" height="15" fill="rgb(233,75,23)" fg:x="278881" fg:w="470"/><text x="58.7470%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (487 samples, 0.10%)</title><rect x="58.4955%" y="581" width="0.1022%" height="15" fill="rgb(231,207,16)" fg:x="278874" fg:w="487"/><text x="58.7455%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (487 samples, 0.10%)</title><rect x="58.4955%" y="565" width="0.1022%" height="15" fill="rgb(231,191,45)" fg:x="278874" fg:w="487"/><text x="58.7455%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (485 samples, 0.10%)</title><rect x="58.4960%" y="549" width="0.1017%" height="15" fill="rgb(224,133,17)" fg:x="278876" fg:w="485"/><text x="58.7460%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (484 samples, 0.10%)</title><rect x="58.4962%" y="533" width="0.1015%" height="15" fill="rgb(209,178,27)" fg:x="278877" fg:w="484"/><text x="58.7462%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (514 samples, 0.11%)</title><rect x="58.4955%" y="661" width="0.1078%" height="15" fill="rgb(218,37,11)" fg:x="278874" fg:w="514"/><text x="58.7455%" y="671.50"></text></g><g><title>alloc::string::String::push_str (514 samples, 0.11%)</title><rect x="58.4955%" y="645" width="0.1078%" height="15" fill="rgb(251,226,25)" fg:x="278874" fg:w="514"/><text x="58.7455%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (514 samples, 0.11%)</title><rect x="58.4955%" y="629" width="0.1078%" height="15" fill="rgb(209,222,27)" fg:x="278874" fg:w="514"/><text x="58.7455%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (514 samples, 0.11%)</title><rect x="58.4955%" y="613" width="0.1078%" height="15" fill="rgb(238,22,21)" fg:x="278874" fg:w="514"/><text x="58.7455%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (514 samples, 0.11%)</title><rect x="58.4955%" y="597" width="0.1078%" height="15" fill="rgb(233,161,25)" fg:x="278874" fg:w="514"/><text x="58.7455%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (518 samples, 0.11%)</title><rect x="58.4953%" y="677" width="0.1087%" height="15" fill="rgb(226,122,53)" fg:x="278873" fg:w="518"/><text x="58.7453%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (50 samples, 0.01%)</title><rect x="58.6105%" y="677" width="0.0105%" height="15" fill="rgb(220,123,17)" fg:x="279422" fg:w="50"/><text x="58.8605%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad_integral (168 samples, 0.04%)</title><rect x="58.6306%" y="645" width="0.0352%" height="15" fill="rgb(230,224,35)" fg:x="279518" fg:w="168"/><text x="58.8806%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (222 samples, 0.05%)</title><rect x="58.6229%" y="661" width="0.0466%" height="15" fill="rgb(246,83,8)" fg:x="279481" fg:w="222"/><text x="58.8729%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (239 samples, 0.05%)</title><rect x="58.6210%" y="677" width="0.0501%" height="15" fill="rgb(230,214,17)" fg:x="279472" fg:w="239"/><text x="58.8710%" y="687.50"></text></g><g><title>core::fmt::run (923 samples, 0.19%)</title><rect x="58.4853%" y="693" width="0.1936%" height="15" fill="rgb(222,97,18)" fg:x="278825" fg:w="923"/><text x="58.7353%" y="703.50"></text></g><g><title>core::fmt::write (1,271 samples, 0.27%)</title><rect x="58.4190%" y="709" width="0.2666%" height="15" fill="rgb(206,79,1)" fg:x="278509" fg:w="1271"/><text x="58.6690%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1,273 samples, 0.27%)</title><rect x="58.4188%" y="725" width="0.2670%" height="15" fill="rgb(214,121,34)" fg:x="278508" fg:w="1273"/><text x="58.6688%" y="735.50"></text></g><g><title>chrono::format::format_inner (1,541 samples, 0.32%)</title><rect x="58.3703%" y="741" width="0.3232%" height="15" fill="rgb(249,199,46)" fg:x="278277" fg:w="1541"/><text x="58.6203%" y="751.50"></text></g><g><title>chrono::format::format (1,682 samples, 0.35%)</title><rect x="58.3519%" y="757" width="0.3528%" height="15" fill="rgb(214,222,46)" fg:x="278189" fg:w="1682"/><text x="58.6019%" y="767.50"></text></g><g><title>&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (1,691 samples, 0.35%)</title><rect x="58.3512%" y="773" width="0.3547%" height="15" fill="rgb(248,168,30)" fg:x="278186" fg:w="1691"/><text x="58.6012%" y="783.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,703 samples, 0.36%)</title><rect x="58.3508%" y="789" width="0.3572%" height="15" fill="rgb(226,14,28)" fg:x="278184" fg:w="1703"/><text x="58.6008%" y="799.50"></text></g><g><title>chrono::naive::date::NaiveDate::checked_add_signed (51 samples, 0.01%)</title><rect x="58.7112%" y="693" width="0.0107%" height="15" fill="rgb(253,123,1)" fg:x="279902" fg:w="51"/><text x="58.9612%" y="703.50"></text></g><g><title>chrono::naive::time::NaiveTime::overflowing_add_signed (79 samples, 0.02%)</title><rect x="58.7219%" y="693" width="0.0166%" height="15" fill="rgb(225,24,42)" fg:x="279953" fg:w="79"/><text x="58.9719%" y="703.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (144 samples, 0.03%)</title><rect x="58.7097%" y="709" width="0.0302%" height="15" fill="rgb(216,161,37)" fg:x="279895" fg:w="144"/><text x="58.9597%" y="719.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (153 samples, 0.03%)</title><rect x="58.7093%" y="725" width="0.0321%" height="15" fill="rgb(251,164,26)" fg:x="279893" fg:w="153"/><text x="58.9593%" y="735.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::naive_local (161 samples, 0.03%)</title><rect x="58.7080%" y="773" width="0.0338%" height="15" fill="rgb(219,177,3)" fg:x="279887" fg:w="161"/><text x="58.9580%" y="783.50"></text></g><g><title>chrono::offset::fixed::&lt;impl core::ops::arith::Add&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::add (156 samples, 0.03%)</title><rect x="58.7091%" y="757" width="0.0327%" height="15" fill="rgb(222,65,0)" fg:x="279892" fg:w="156"/><text x="58.9591%" y="767.50"></text></g><g><title>chrono::offset::fixed::add_with_leapsecond (156 samples, 0.03%)</title><rect x="58.7091%" y="741" width="0.0327%" height="15" fill="rgb(223,69,54)" fg:x="279892" fg:w="156"/><text x="58.9591%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (71 samples, 0.01%)</title><rect x="58.7517%" y="549" width="0.0149%" height="15" fill="rgb(235,30,27)" fg:x="280095" fg:w="71"/><text x="59.0017%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (90 samples, 0.02%)</title><rect x="58.7508%" y="565" width="0.0189%" height="15" fill="rgb(220,183,50)" fg:x="280091" fg:w="90"/><text x="59.0008%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (94 samples, 0.02%)</title><rect x="58.7506%" y="613" width="0.0197%" height="15" fill="rgb(248,198,15)" fg:x="280090" fg:w="94"/><text x="59.0006%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (94 samples, 0.02%)</title><rect x="58.7506%" y="597" width="0.0197%" height="15" fill="rgb(222,211,4)" fg:x="280090" fg:w="94"/><text x="59.0006%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (93 samples, 0.02%)</title><rect x="58.7508%" y="581" width="0.0195%" height="15" fill="rgb(214,102,34)" fg:x="280091" fg:w="93"/><text x="59.0008%" y="591.50"></text></g><g><title>alloc::string::String::push_str (120 samples, 0.03%)</title><rect x="58.7502%" y="677" width="0.0252%" height="15" fill="rgb(245,92,5)" fg:x="280088" fg:w="120"/><text x="59.0002%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (120 samples, 0.03%)</title><rect x="58.7502%" y="661" width="0.0252%" height="15" fill="rgb(252,72,51)" fg:x="280088" fg:w="120"/><text x="59.0002%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (120 samples, 0.03%)</title><rect x="58.7502%" y="645" width="0.0252%" height="15" fill="rgb(252,208,19)" fg:x="280088" fg:w="120"/><text x="59.0002%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (120 samples, 0.03%)</title><rect x="58.7502%" y="629" width="0.0252%" height="15" fill="rgb(211,69,7)" fg:x="280088" fg:w="120"/><text x="59.0002%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (127 samples, 0.03%)</title><rect x="58.7498%" y="693" width="0.0266%" height="15" fill="rgb(211,27,16)" fg:x="280086" fg:w="127"/><text x="58.9998%" y="703.50"></text></g><g><title>core::fmt::write (158 samples, 0.03%)</title><rect x="58.7475%" y="709" width="0.0331%" height="15" fill="rgb(219,216,14)" fg:x="280075" fg:w="158"/><text x="58.9975%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (174 samples, 0.04%)</title><rect x="58.7452%" y="725" width="0.0365%" height="15" fill="rgb(219,71,8)" fg:x="280064" fg:w="174"/><text x="58.9952%" y="735.50"></text></g><g><title>&lt;chrono::offset::utc::Utc as core::fmt::Display&gt;::fmt (197 samples, 0.04%)</title><rect x="58.7424%" y="741" width="0.0413%" height="15" fill="rgb(223,170,53)" fg:x="280051" fg:w="197"/><text x="58.9924%" y="751.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (216 samples, 0.05%)</title><rect x="58.7424%" y="757" width="0.0453%" height="15" fill="rgb(246,21,26)" fg:x="280051" fg:w="216"/><text x="58.9924%" y="767.50"></text></g><g><title>chrono::format::DelayedFormat&lt;I&gt;::new_with_offset (239 samples, 0.05%)</title><rect x="58.7418%" y="773" width="0.0501%" height="15" fill="rgb(248,20,46)" fg:x="280048" fg:w="239"/><text x="58.9918%" y="783.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::format_with_items (402 samples, 0.08%)</title><rect x="58.7080%" y="789" width="0.0843%" height="15" fill="rgb(252,94,11)" fg:x="279887" fg:w="402"/><text x="58.9580%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;chrono::format::DelayedFormat&lt;core::slice::iter::Iter&lt;chrono::format::Item&gt;&gt;&gt; (54 samples, 0.01%)</title><rect x="58.7923%" y="789" width="0.0113%" height="15" fill="rgb(236,163,8)" fg:x="280289" fg:w="54"/><text x="59.0423%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(alloc::string::String,chrono::offset::fixed::FixedOffset)&gt;&gt; (54 samples, 0.01%)</title><rect x="58.7923%" y="773" width="0.0113%" height="15" fill="rgb(217,221,45)" fg:x="280289" fg:w="54"/><text x="59.0423%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,chrono::offset::fixed::FixedOffset)&gt; (54 samples, 0.01%)</title><rect x="58.7923%" y="757" width="0.0113%" height="15" fill="rgb(238,38,17)" fg:x="280289" fg:w="54"/><text x="59.0423%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (54 samples, 0.01%)</title><rect x="58.7923%" y="741" width="0.0113%" height="15" fill="rgb(242,210,23)" fg:x="280289" fg:w="54"/><text x="59.0423%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (54 samples, 0.01%)</title><rect x="58.7923%" y="725" width="0.0113%" height="15" fill="rgb(250,86,53)" fg:x="280289" fg:w="54"/><text x="59.0423%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (54 samples, 0.01%)</title><rect x="58.7923%" y="709" width="0.0113%" height="15" fill="rgb(223,168,25)" fg:x="280289" fg:w="54"/><text x="59.0423%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.01%)</title><rect x="58.7923%" y="693" width="0.0113%" height="15" fill="rgb(251,189,4)" fg:x="280289" fg:w="54"/><text x="59.0423%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (54 samples, 0.01%)</title><rect x="58.7923%" y="677" width="0.0113%" height="15" fill="rgb(245,19,28)" fg:x="280289" fg:w="54"/><text x="59.0423%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (54 samples, 0.01%)</title><rect x="58.7923%" y="661" width="0.0113%" height="15" fill="rgb(207,10,34)" fg:x="280289" fg:w="54"/><text x="59.0423%" y="671.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::to_rfc2822 (2,168 samples, 0.45%)</title><rect x="58.3504%" y="805" width="0.4548%" height="15" fill="rgb(235,153,31)" fg:x="278182" fg:w="2168"/><text x="58.6004%" y="815.50"></text></g><g><title>std::time::SystemTime::duration_since (78 samples, 0.02%)</title><rect x="58.8173%" y="789" width="0.0164%" height="15" fill="rgb(228,72,37)" fg:x="280408" fg:w="78"/><text x="59.0673%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (54 samples, 0.01%)</title><rect x="58.8223%" y="773" width="0.0113%" height="15" fill="rgb(215,15,16)" fg:x="280432" fg:w="54"/><text x="59.0723%" y="783.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (54 samples, 0.01%)</title><rect x="58.8223%" y="757" width="0.0113%" height="15" fill="rgb(250,119,29)" fg:x="280432" fg:w="54"/><text x="59.0723%" y="767.50"></text></g><g><title>[[vdso]] (99 samples, 0.02%)</title><rect x="58.8406%" y="709" width="0.0208%" height="15" fill="rgb(214,59,1)" fg:x="280519" fg:w="99"/><text x="59.0906%" y="719.50"></text></g><g><title>ret_from_intr (56 samples, 0.01%)</title><rect x="58.8496%" y="693" width="0.0117%" height="15" fill="rgb(223,109,25)" fg:x="280562" fg:w="56"/><text x="59.0996%" y="703.50"></text></g><g><title>do_IRQ (56 samples, 0.01%)</title><rect x="58.8496%" y="677" width="0.0117%" height="15" fill="rgb(230,198,22)" fg:x="280562" fg:w="56"/><text x="59.0996%" y="687.50"></text></g><g><title>irq_exit (56 samples, 0.01%)</title><rect x="58.8496%" y="661" width="0.0117%" height="15" fill="rgb(245,184,46)" fg:x="280562" fg:w="56"/><text x="59.0996%" y="671.50"></text></g><g><title>__softirqentry_text_start (56 samples, 0.01%)</title><rect x="58.8496%" y="645" width="0.0117%" height="15" fill="rgb(253,73,16)" fg:x="280562" fg:w="56"/><text x="59.0996%" y="655.50"></text></g><g><title>net_rx_action (51 samples, 0.01%)</title><rect x="58.8507%" y="629" width="0.0107%" height="15" fill="rgb(206,94,45)" fg:x="280567" fg:w="51"/><text x="59.1007%" y="639.50"></text></g><g><title>virtnet_poll (51 samples, 0.01%)</title><rect x="58.8507%" y="613" width="0.0107%" height="15" fill="rgb(236,83,27)" fg:x="280567" fg:w="51"/><text x="59.1007%" y="623.50"></text></g><g><title>__vdso_clock_gettime (134 samples, 0.03%)</title><rect x="58.8377%" y="725" width="0.0281%" height="15" fill="rgb(220,196,8)" fg:x="280505" fg:w="134"/><text x="59.0877%" y="735.50"></text></g><g><title>__clock_gettime (173 samples, 0.04%)</title><rect x="58.8351%" y="741" width="0.0363%" height="15" fill="rgb(254,185,14)" fg:x="280493" fg:w="173"/><text x="59.0851%" y="751.50"></text></g><g><title>chrono::offset::utc::Utc::now (340 samples, 0.07%)</title><rect x="58.8051%" y="805" width="0.0713%" height="15" fill="rgb(226,50,22)" fg:x="280350" fg:w="340"/><text x="59.0551%" y="815.50"></text></g><g><title>std::time::SystemTime::now (204 samples, 0.04%)</title><rect x="58.8337%" y="789" width="0.0428%" height="15" fill="rgb(253,147,0)" fg:x="280486" fg:w="204"/><text x="59.0837%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (204 samples, 0.04%)</title><rect x="58.8337%" y="773" width="0.0428%" height="15" fill="rgb(252,46,33)" fg:x="280486" fg:w="204"/><text x="59.0837%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::now (204 samples, 0.04%)</title><rect x="58.8337%" y="757" width="0.0428%" height="15" fill="rgb(242,22,54)" fg:x="280486" fg:w="204"/><text x="59.0837%" y="767.50"></text></g><g><title>[libc-2.31.so] (87 samples, 0.02%)</title><rect x="58.8779%" y="693" width="0.0182%" height="15" fill="rgb(223,178,32)" fg:x="280697" fg:w="87"/><text x="59.1279%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (131 samples, 0.03%)</title><rect x="58.8777%" y="725" width="0.0275%" height="15" fill="rgb(214,106,53)" fg:x="280696" fg:w="131"/><text x="59.1277%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (131 samples, 0.03%)</title><rect x="58.8777%" y="709" width="0.0275%" height="15" fill="rgb(232,65,50)" fg:x="280696" fg:w="131"/><text x="59.1277%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (137 samples, 0.03%)</title><rect x="58.8773%" y="789" width="0.0287%" height="15" fill="rgb(231,110,28)" fg:x="280694" fg:w="137"/><text x="59.1273%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (137 samples, 0.03%)</title><rect x="58.8773%" y="773" width="0.0287%" height="15" fill="rgb(216,71,40)" fg:x="280694" fg:w="137"/><text x="59.1273%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (137 samples, 0.03%)</title><rect x="58.8773%" y="757" width="0.0287%" height="15" fill="rgb(229,89,53)" fg:x="280694" fg:w="137"/><text x="59.1273%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (137 samples, 0.03%)</title><rect x="58.8773%" y="741" width="0.0287%" height="15" fill="rgb(210,124,14)" fg:x="280694" fg:w="137"/><text x="59.1273%" y="751.50"></text></g><g><title>[libc-2.31.so] (53 samples, 0.01%)</title><rect x="58.9062%" y="629" width="0.0111%" height="15" fill="rgb(236,213,6)" fg:x="280832" fg:w="53"/><text x="59.1562%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (91 samples, 0.02%)</title><rect x="58.9062%" y="661" width="0.0191%" height="15" fill="rgb(228,41,5)" fg:x="280832" fg:w="91"/><text x="59.1562%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (91 samples, 0.02%)</title><rect x="58.9062%" y="645" width="0.0191%" height="15" fill="rgb(221,167,25)" fg:x="280832" fg:w="91"/><text x="59.1562%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (99 samples, 0.02%)</title><rect x="58.9060%" y="773" width="0.0208%" height="15" fill="rgb(228,144,37)" fg:x="280831" fg:w="99"/><text x="59.1560%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[parsed::http::Header]&gt; (98 samples, 0.02%)</title><rect x="58.9062%" y="757" width="0.0206%" height="15" fill="rgb(227,189,38)" fg:x="280832" fg:w="98"/><text x="59.1562%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Header&gt; (98 samples, 0.02%)</title><rect x="58.9062%" y="741" width="0.0206%" height="15" fill="rgb(218,8,2)" fg:x="280832" fg:w="98"/><text x="59.1562%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (98 samples, 0.02%)</title><rect x="58.9062%" y="725" width="0.0206%" height="15" fill="rgb(209,61,28)" fg:x="280832" fg:w="98"/><text x="59.1562%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (98 samples, 0.02%)</title><rect x="58.9062%" y="709" width="0.0206%" height="15" fill="rgb(233,140,39)" fg:x="280832" fg:w="98"/><text x="59.1562%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (98 samples, 0.02%)</title><rect x="58.9062%" y="693" width="0.0206%" height="15" fill="rgb(251,66,48)" fg:x="280832" fg:w="98"/><text x="59.1562%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 0.02%)</title><rect x="58.9062%" y="677" width="0.0206%" height="15" fill="rgb(210,44,45)" fg:x="280832" fg:w="98"/><text x="59.1562%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;parsed::http::Header&gt;&gt; (130 samples, 0.03%)</title><rect x="58.9060%" y="789" width="0.0273%" height="15" fill="rgb(214,136,46)" fg:x="280831" fg:w="130"/><text x="59.1560%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Request&gt; (275 samples, 0.06%)</title><rect x="58.8765%" y="805" width="0.0577%" height="15" fill="rgb(207,130,50)" fg:x="280690" fg:w="275"/><text x="59.1265%" y="815.50"></text></g><g><title>uppercut_mio_server::protocol::process (14,269 samples, 2.99%)</title><rect x="55.9451%" y="837" width="2.9930%" height="15" fill="rgb(228,102,49)" fg:x="266715" fg:w="14269"/><text x="56.1951%" y="847.50">upp..</text></g><g><title>uppercut_mio_server::protocol::handle (3,098 samples, 0.65%)</title><rect x="58.2883%" y="821" width="0.6498%" height="15" fill="rgb(253,55,1)" fg:x="277886" fg:w="3098"/><text x="58.5383%" y="831.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (26,966 samples, 5.66%)</title><rect x="53.2833%" y="853" width="5.6563%" height="15" fill="rgb(238,222,9)" fg:x="254025" fg:w="26966"/><text x="53.5333%" y="863.50">&lt;upperc..</text></g><g><title>__libc_malloc (95 samples, 0.02%)</title><rect x="58.9545%" y="597" width="0.0199%" height="15" fill="rgb(246,99,6)" fg:x="281062" fg:w="95"/><text x="59.2045%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (111 samples, 0.02%)</title><rect x="58.9537%" y="693" width="0.0233%" height="15" fill="rgb(219,110,26)" fg:x="281058" fg:w="111"/><text x="59.2037%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (111 samples, 0.02%)</title><rect x="58.9537%" y="677" width="0.0233%" height="15" fill="rgb(239,160,33)" fg:x="281058" fg:w="111"/><text x="59.2037%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (111 samples, 0.02%)</title><rect x="58.9537%" y="661" width="0.0233%" height="15" fill="rgb(220,202,23)" fg:x="281058" fg:w="111"/><text x="59.2037%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (111 samples, 0.02%)</title><rect x="58.9537%" y="645" width="0.0233%" height="15" fill="rgb(208,80,26)" fg:x="281058" fg:w="111"/><text x="59.2037%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (111 samples, 0.02%)</title><rect x="58.9537%" y="629" width="0.0233%" height="15" fill="rgb(243,85,7)" fg:x="281058" fg:w="111"/><text x="59.2037%" y="639.50"></text></g><g><title>alloc::alloc::alloc (111 samples, 0.02%)</title><rect x="58.9537%" y="613" width="0.0233%" height="15" fill="rgb(228,77,47)" fg:x="281058" fg:w="111"/><text x="59.2037%" y="623.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (123 samples, 0.03%)</title><rect x="58.9537%" y="821" width="0.0258%" height="15" fill="rgb(212,226,8)" fg:x="281058" fg:w="123"/><text x="59.2037%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (123 samples, 0.03%)</title><rect x="58.9537%" y="805" width="0.0258%" height="15" fill="rgb(241,120,54)" fg:x="281058" fg:w="123"/><text x="59.2037%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (123 samples, 0.03%)</title><rect x="58.9537%" y="789" width="0.0258%" height="15" fill="rgb(226,80,16)" fg:x="281058" fg:w="123"/><text x="59.2037%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (123 samples, 0.03%)</title><rect x="58.9537%" y="773" width="0.0258%" height="15" fill="rgb(240,76,13)" fg:x="281058" fg:w="123"/><text x="59.2037%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (123 samples, 0.03%)</title><rect x="58.9537%" y="757" width="0.0258%" height="15" fill="rgb(252,74,8)" fg:x="281058" fg:w="123"/><text x="59.2037%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (123 samples, 0.03%)</title><rect x="58.9537%" y="741" width="0.0258%" height="15" fill="rgb(244,155,2)" fg:x="281058" fg:w="123"/><text x="59.2037%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (123 samples, 0.03%)</title><rect x="58.9537%" y="725" width="0.0258%" height="15" fill="rgb(215,81,35)" fg:x="281058" fg:w="123"/><text x="59.2037%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (123 samples, 0.03%)</title><rect x="58.9537%" y="709" width="0.0258%" height="15" fill="rgb(206,55,2)" fg:x="281058" fg:w="123"/><text x="59.2037%" y="719.50"></text></g><g><title>[libc-2.31.so] (57 samples, 0.01%)</title><rect x="59.0124%" y="661" width="0.0120%" height="15" fill="rgb(231,2,34)" fg:x="281338" fg:w="57"/><text x="59.2624%" y="671.50"></text></g><g><title>[libc-2.31.so] (87 samples, 0.02%)</title><rect x="59.0101%" y="677" width="0.0182%" height="15" fill="rgb(242,176,48)" fg:x="281327" fg:w="87"/><text x="59.2601%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (114 samples, 0.02%)</title><rect x="59.0053%" y="773" width="0.0239%" height="15" fill="rgb(249,31,36)" fg:x="281304" fg:w="114"/><text x="59.2553%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (95 samples, 0.02%)</title><rect x="59.0092%" y="757" width="0.0199%" height="15" fill="rgb(205,18,17)" fg:x="281323" fg:w="95"/><text x="59.2592%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (95 samples, 0.02%)</title><rect x="59.0092%" y="741" width="0.0199%" height="15" fill="rgb(254,130,5)" fg:x="281323" fg:w="95"/><text x="59.2592%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (95 samples, 0.02%)</title><rect x="59.0092%" y="725" width="0.0199%" height="15" fill="rgb(229,42,45)" fg:x="281323" fg:w="95"/><text x="59.2592%" y="735.50"></text></g><g><title>alloc::alloc::alloc (95 samples, 0.02%)</title><rect x="59.0092%" y="709" width="0.0199%" height="15" fill="rgb(245,95,25)" fg:x="281323" fg:w="95"/><text x="59.2592%" y="719.50"></text></g><g><title>__libc_malloc (95 samples, 0.02%)</title><rect x="59.0092%" y="693" width="0.0199%" height="15" fill="rgb(249,193,38)" fg:x="281323" fg:w="95"/><text x="59.2592%" y="703.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (270 samples, 0.06%)</title><rect x="58.9887%" y="789" width="0.0566%" height="15" fill="rgb(241,140,43)" fg:x="281225" fg:w="270"/><text x="59.2387%" y="799.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (51 samples, 0.01%)</title><rect x="59.0627%" y="757" width="0.0107%" height="15" fill="rgb(245,78,48)" fg:x="281578" fg:w="51"/><text x="59.3127%" y="767.50"></text></g><g><title>ip_protocol_deliver_rcu (84 samples, 0.02%)</title><rect x="59.1655%" y="277" width="0.0176%" height="15" fill="rgb(214,92,39)" fg:x="282068" fg:w="84"/><text x="59.4155%" y="287.50"></text></g><g><title>tcp_v4_rcv (68 samples, 0.01%)</title><rect x="59.1689%" y="261" width="0.0143%" height="15" fill="rgb(211,189,14)" fg:x="282084" fg:w="68"/><text x="59.4189%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (57 samples, 0.01%)</title><rect x="59.1712%" y="245" width="0.0120%" height="15" fill="rgb(218,7,24)" fg:x="282095" fg:w="57"/><text x="59.4212%" y="255.50"></text></g><g><title>tcp_rcv_established (56 samples, 0.01%)</title><rect x="59.1714%" y="229" width="0.0117%" height="15" fill="rgb(224,200,49)" fg:x="282096" fg:w="56"/><text x="59.4214%" y="239.50"></text></g><g><title>ip_list_rcv (93 samples, 0.02%)</title><rect x="59.1638%" y="357" width="0.0195%" height="15" fill="rgb(218,210,14)" fg:x="282060" fg:w="93"/><text x="59.4138%" y="367.50"></text></g><g><title>ip_sublist_rcv (92 samples, 0.02%)</title><rect x="59.1640%" y="341" width="0.0193%" height="15" fill="rgb(234,142,31)" fg:x="282061" fg:w="92"/><text x="59.4140%" y="351.50"></text></g><g><title>ip_sublist_rcv_finish (85 samples, 0.02%)</title><rect x="59.1655%" y="325" width="0.0178%" height="15" fill="rgb(227,165,2)" fg:x="282068" fg:w="85"/><text x="59.4155%" y="335.50"></text></g><g><title>ip_local_deliver (85 samples, 0.02%)</title><rect x="59.1655%" y="309" width="0.0178%" height="15" fill="rgb(232,44,46)" fg:x="282068" fg:w="85"/><text x="59.4155%" y="319.50"></text></g><g><title>ip_local_deliver_finish (85 samples, 0.02%)</title><rect x="59.1655%" y="293" width="0.0178%" height="15" fill="rgb(236,149,47)" fg:x="282068" fg:w="85"/><text x="59.4155%" y="303.50"></text></g><g><title>napi_complete_done (98 samples, 0.02%)</title><rect x="59.1630%" y="421" width="0.0206%" height="15" fill="rgb(227,45,31)" fg:x="282056" fg:w="98"/><text x="59.4130%" y="431.50"></text></g><g><title>gro_normal_list.part.0 (98 samples, 0.02%)</title><rect x="59.1630%" y="405" width="0.0206%" height="15" fill="rgb(240,176,51)" fg:x="282056" fg:w="98"/><text x="59.4130%" y="415.50"></text></g><g><title>netif_receive_skb_list_internal (97 samples, 0.02%)</title><rect x="59.1632%" y="389" width="0.0203%" height="15" fill="rgb(249,146,41)" fg:x="282057" fg:w="97"/><text x="59.4132%" y="399.50"></text></g><g><title>__netif_receive_skb_list_core (97 samples, 0.02%)</title><rect x="59.1632%" y="373" width="0.0203%" height="15" fill="rgb(213,208,4)" fg:x="282057" fg:w="97"/><text x="59.4132%" y="383.50"></text></g><g><title>virtnet_poll (147 samples, 0.03%)</title><rect x="59.1630%" y="437" width="0.0308%" height="15" fill="rgb(245,84,36)" fg:x="282056" fg:w="147"/><text x="59.4130%" y="447.50"></text></g><g><title>__lock_text_start (378 samples, 0.08%)</title><rect x="59.1147%" y="533" width="0.0793%" height="15" fill="rgb(254,84,18)" fg:x="281826" fg:w="378"/><text x="59.3647%" y="543.50"></text></g><g><title>ret_from_intr (165 samples, 0.03%)</title><rect x="59.1594%" y="517" width="0.0346%" height="15" fill="rgb(225,38,54)" fg:x="282039" fg:w="165"/><text x="59.4094%" y="527.50"></text></g><g><title>do_IRQ (165 samples, 0.03%)</title><rect x="59.1594%" y="501" width="0.0346%" height="15" fill="rgb(246,50,30)" fg:x="282039" fg:w="165"/><text x="59.4094%" y="511.50"></text></g><g><title>irq_exit (165 samples, 0.03%)</title><rect x="59.1594%" y="485" width="0.0346%" height="15" fill="rgb(246,148,9)" fg:x="282039" fg:w="165"/><text x="59.4094%" y="495.50"></text></g><g><title>__softirqentry_text_start (165 samples, 0.03%)</title><rect x="59.1594%" y="469" width="0.0346%" height="15" fill="rgb(223,75,4)" fg:x="282039" fg:w="165"/><text x="59.4094%" y="479.50"></text></g><g><title>net_rx_action (150 samples, 0.03%)</title><rect x="59.1626%" y="453" width="0.0315%" height="15" fill="rgb(239,148,41)" fg:x="282054" fg:w="150"/><text x="59.4126%" y="463.50"></text></g><g><title>futex_wake (426 samples, 0.09%)</title><rect x="59.1051%" y="581" width="0.0894%" height="15" fill="rgb(205,195,3)" fg:x="281780" fg:w="426"/><text x="59.3551%" y="591.50"></text></g><g><title>wake_up_q (383 samples, 0.08%)</title><rect x="59.1141%" y="565" width="0.0803%" height="15" fill="rgb(254,161,1)" fg:x="281823" fg:w="383"/><text x="59.3641%" y="575.50"></text></g><g><title>try_to_wake_up (380 samples, 0.08%)</title><rect x="59.1147%" y="549" width="0.0797%" height="15" fill="rgb(211,229,8)" fg:x="281826" fg:w="380"/><text x="59.3647%" y="559.50"></text></g><g><title>do_futex (453 samples, 0.10%)</title><rect x="59.1015%" y="597" width="0.0950%" height="15" fill="rgb(220,97,9)" fg:x="281763" fg:w="453"/><text x="59.3515%" y="607.50"></text></g><g><title>__x64_sys_futex (463 samples, 0.10%)</title><rect x="59.1007%" y="613" width="0.0971%" height="15" fill="rgb(240,218,8)" fg:x="281759" fg:w="463"/><text x="59.3507%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (507 samples, 0.11%)</title><rect x="59.0948%" y="645" width="0.1063%" height="15" fill="rgb(250,44,0)" fg:x="281731" fg:w="507"/><text x="59.3448%" y="655.50"></text></g><g><title>do_syscall_64 (500 samples, 0.10%)</title><rect x="59.0963%" y="629" width="0.1049%" height="15" fill="rgb(236,41,53)" fg:x="281738" fg:w="500"/><text x="59.3463%" y="639.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (577 samples, 0.12%)</title><rect x="59.0858%" y="709" width="0.1210%" height="15" fill="rgb(218,227,13)" fg:x="281688" fg:w="577"/><text x="59.3358%" y="719.50"></text></g><g><title>std::thread::Thread::unpark (576 samples, 0.12%)</title><rect x="59.0860%" y="693" width="0.1208%" height="15" fill="rgb(217,94,32)" fg:x="281689" fg:w="576"/><text x="59.3360%" y="703.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (576 samples, 0.12%)</title><rect x="59.0860%" y="677" width="0.1208%" height="15" fill="rgb(213,217,12)" fg:x="281689" fg:w="576"/><text x="59.3360%" y="687.50"></text></g><g><title>syscall (565 samples, 0.12%)</title><rect x="59.0883%" y="661" width="0.1185%" height="15" fill="rgb(229,13,46)" fg:x="281700" fg:w="565"/><text x="59.3383%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (630 samples, 0.13%)</title><rect x="59.0759%" y="741" width="0.1321%" height="15" fill="rgb(243,139,5)" fg:x="281641" fg:w="630"/><text x="59.3259%" y="751.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (630 samples, 0.13%)</title><rect x="59.0759%" y="725" width="0.1321%" height="15" fill="rgb(249,38,45)" fg:x="281641" fg:w="630"/><text x="59.3259%" y="735.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (645 samples, 0.14%)</title><rect x="59.0759%" y="757" width="0.1353%" height="15" fill="rgb(216,70,11)" fg:x="281641" fg:w="645"/><text x="59.3259%" y="767.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (729 samples, 0.15%)</title><rect x="59.0585%" y="773" width="0.1529%" height="15" fill="rgb(253,101,25)" fg:x="281558" fg:w="729"/><text x="59.3085%" y="783.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (836 samples, 0.18%)</title><rect x="59.0453%" y="789" width="0.1754%" height="15" fill="rgb(207,197,30)" fg:x="281495" fg:w="836"/><text x="59.2953%" y="799.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1,129 samples, 0.24%)</title><rect x="58.9849%" y="805" width="0.2368%" height="15" fill="rgb(238,87,13)" fg:x="281207" fg:w="1129"/><text x="59.2349%" y="815.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1,160 samples, 0.24%)</title><rect x="58.9801%" y="821" width="0.2433%" height="15" fill="rgb(215,155,8)" fg:x="281184" fg:w="1160"/><text x="59.2301%" y="831.50"></text></g><g><title>&lt;uppercut::core::Local as uppercut::api::AnySender&gt;::send (1,357 samples, 0.28%)</title><rect x="58.9492%" y="837" width="0.2846%" height="15" fill="rgb(239,166,38)" fg:x="281037" fg:w="1357"/><text x="59.1992%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (62 samples, 0.01%)</title><rect x="59.2469%" y="597" width="0.0130%" height="15" fill="rgb(240,194,35)" fg:x="282456" fg:w="62"/><text x="59.4969%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (84 samples, 0.02%)</title><rect x="59.2456%" y="661" width="0.0176%" height="15" fill="rgb(219,10,44)" fg:x="282450" fg:w="84"/><text x="59.4956%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (84 samples, 0.02%)</title><rect x="59.2456%" y="645" width="0.0176%" height="15" fill="rgb(251,220,35)" fg:x="282450" fg:w="84"/><text x="59.4956%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (84 samples, 0.02%)</title><rect x="59.2456%" y="629" width="0.0176%" height="15" fill="rgb(218,117,13)" fg:x="282450" fg:w="84"/><text x="59.4956%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (83 samples, 0.02%)</title><rect x="59.2458%" y="613" width="0.0174%" height="15" fill="rgb(221,213,40)" fg:x="282451" fg:w="83"/><text x="59.4958%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (101 samples, 0.02%)</title><rect x="59.2456%" y="741" width="0.0212%" height="15" fill="rgb(251,224,35)" fg:x="282450" fg:w="101"/><text x="59.4956%" y="751.50"></text></g><g><title>alloc::string::String::push_str (101 samples, 0.02%)</title><rect x="59.2456%" y="725" width="0.0212%" height="15" fill="rgb(241,33,39)" fg:x="282450" fg:w="101"/><text x="59.4956%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (101 samples, 0.02%)</title><rect x="59.2456%" y="709" width="0.0212%" height="15" fill="rgb(222,74,17)" fg:x="282450" fg:w="101"/><text x="59.4956%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (101 samples, 0.02%)</title><rect x="59.2456%" y="693" width="0.0212%" height="15" fill="rgb(225,103,0)" fg:x="282450" fg:w="101"/><text x="59.4956%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (101 samples, 0.02%)</title><rect x="59.2456%" y="677" width="0.0212%" height="15" fill="rgb(240,0,12)" fg:x="282450" fg:w="101"/><text x="59.4956%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (113 samples, 0.02%)</title><rect x="59.2437%" y="757" width="0.0237%" height="15" fill="rgb(233,213,37)" fg:x="282441" fg:w="113"/><text x="59.4937%" y="767.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (165 samples, 0.03%)</title><rect x="59.2425%" y="773" width="0.0346%" height="15" fill="rgb(225,84,52)" fg:x="282435" fg:w="165"/><text x="59.4925%" y="783.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (180 samples, 0.04%)</title><rect x="59.2404%" y="789" width="0.0378%" height="15" fill="rgb(247,160,51)" fg:x="282425" fg:w="180"/><text x="59.4904%" y="799.50"></text></g><g><title>core::fmt::write (217 samples, 0.05%)</title><rect x="59.2375%" y="805" width="0.0455%" height="15" fill="rgb(244,60,51)" fg:x="282411" fg:w="217"/><text x="59.4875%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (220 samples, 0.05%)</title><rect x="59.2372%" y="821" width="0.0461%" height="15" fill="rgb(233,114,7)" fg:x="282410" fg:w="220"/><text x="59.4872%" y="831.50"></text></g><g><title>alloc::fmt::format (242 samples, 0.05%)</title><rect x="59.2339%" y="837" width="0.0508%" height="15" fill="rgb(246,136,16)" fg:x="282394" fg:w="242"/><text x="59.4839%" y="847.50"></text></g><g><title>__fdget (54 samples, 0.01%)</title><rect x="59.3524%" y="725" width="0.0113%" height="15" fill="rgb(243,114,45)" fg:x="282959" fg:w="54"/><text x="59.6024%" y="735.50"></text></g><g><title>__fget_light (54 samples, 0.01%)</title><rect x="59.3524%" y="709" width="0.0113%" height="15" fill="rgb(247,183,43)" fg:x="282959" fg:w="54"/><text x="59.6024%" y="719.50"></text></g><g><title>__fget (54 samples, 0.01%)</title><rect x="59.3524%" y="693" width="0.0113%" height="15" fill="rgb(251,210,42)" fg:x="282959" fg:w="54"/><text x="59.6024%" y="703.50"></text></g><g><title>ret_from_intr (51 samples, 0.01%)</title><rect x="59.4055%" y="661" width="0.0107%" height="15" fill="rgb(221,88,35)" fg:x="283212" fg:w="51"/><text x="59.6555%" y="671.50"></text></g><g><title>do_IRQ (51 samples, 0.01%)</title><rect x="59.4055%" y="645" width="0.0107%" height="15" fill="rgb(242,21,20)" fg:x="283212" fg:w="51"/><text x="59.6555%" y="655.50"></text></g><g><title>irq_exit (51 samples, 0.01%)</title><rect x="59.4055%" y="629" width="0.0107%" height="15" fill="rgb(233,226,36)" fg:x="283212" fg:w="51"/><text x="59.6555%" y="639.50"></text></g><g><title>__softirqentry_text_start (51 samples, 0.01%)</title><rect x="59.4055%" y="613" width="0.0107%" height="15" fill="rgb(243,189,34)" fg:x="283212" fg:w="51"/><text x="59.6555%" y="623.50"></text></g><g><title>tcp_poll (49 samples, 0.01%)</title><rect x="59.4340%" y="645" width="0.0103%" height="15" fill="rgb(207,145,50)" fg:x="283348" fg:w="49"/><text x="59.6840%" y="655.50"></text></g><g><title>sock_poll (169 samples, 0.04%)</title><rect x="59.4162%" y="661" width="0.0354%" height="15" fill="rgb(242,1,50)" fg:x="283263" fg:w="169"/><text x="59.6662%" y="671.50"></text></g><g><title>ep_item_poll.isra.0 (317 samples, 0.07%)</title><rect x="59.3885%" y="677" width="0.0665%" height="15" fill="rgb(231,65,32)" fg:x="283131" fg:w="317"/><text x="59.6385%" y="687.50"></text></g><g><title>ep_send_events_proc (455 samples, 0.10%)</title><rect x="59.3753%" y="693" width="0.0954%" height="15" fill="rgb(208,68,49)" fg:x="283068" fg:w="455"/><text x="59.6253%" y="703.50"></text></g><g><title>ep_scan_ready_list.constprop.0 (497 samples, 0.10%)</title><rect x="59.3721%" y="709" width="0.1042%" height="15" fill="rgb(253,54,49)" fg:x="283053" fg:w="497"/><text x="59.6221%" y="719.50"></text></g><g><title>__netif_receive_skb_list_core (159 samples, 0.03%)</title><rect x="59.5361%" y="485" width="0.0334%" height="15" fill="rgb(245,186,24)" fg:x="283835" fg:w="159"/><text x="59.7861%" y="495.50"></text></g><g><title>ip_list_rcv (157 samples, 0.03%)</title><rect x="59.5366%" y="469" width="0.0329%" height="15" fill="rgb(209,2,41)" fg:x="283837" fg:w="157"/><text x="59.7866%" y="479.50"></text></g><g><title>ip_sublist_rcv (155 samples, 0.03%)</title><rect x="59.5370%" y="453" width="0.0325%" height="15" fill="rgb(242,208,54)" fg:x="283839" fg:w="155"/><text x="59.7870%" y="463.50"></text></g><g><title>ip_sublist_rcv_finish (134 samples, 0.03%)</title><rect x="59.5414%" y="437" width="0.0281%" height="15" fill="rgb(225,9,51)" fg:x="283860" fg:w="134"/><text x="59.7914%" y="447.50"></text></g><g><title>ip_local_deliver (134 samples, 0.03%)</title><rect x="59.5414%" y="421" width="0.0281%" height="15" fill="rgb(207,207,25)" fg:x="283860" fg:w="134"/><text x="59.7914%" y="431.50"></text></g><g><title>ip_local_deliver_finish (132 samples, 0.03%)</title><rect x="59.5418%" y="405" width="0.0277%" height="15" fill="rgb(253,96,18)" fg:x="283862" fg:w="132"/><text x="59.7918%" y="415.50"></text></g><g><title>ip_protocol_deliver_rcu (132 samples, 0.03%)</title><rect x="59.5418%" y="389" width="0.0277%" height="15" fill="rgb(252,215,20)" fg:x="283862" fg:w="132"/><text x="59.7918%" y="399.50"></text></g><g><title>tcp_v4_rcv (103 samples, 0.02%)</title><rect x="59.5479%" y="373" width="0.0216%" height="15" fill="rgb(245,227,26)" fg:x="283891" fg:w="103"/><text x="59.7979%" y="383.50"></text></g><g><title>tcp_v4_do_rcv (85 samples, 0.02%)</title><rect x="59.5517%" y="357" width="0.0178%" height="15" fill="rgb(241,208,0)" fg:x="283909" fg:w="85"/><text x="59.8017%" y="367.50"></text></g><g><title>tcp_rcv_established (81 samples, 0.02%)</title><rect x="59.5525%" y="341" width="0.0170%" height="15" fill="rgb(224,130,10)" fg:x="283913" fg:w="81"/><text x="59.8025%" y="351.50"></text></g><g><title>napi_complete_done (165 samples, 0.03%)</title><rect x="59.5355%" y="533" width="0.0346%" height="15" fill="rgb(237,29,0)" fg:x="283832" fg:w="165"/><text x="59.7855%" y="543.50"></text></g><g><title>gro_normal_list.part.0 (164 samples, 0.03%)</title><rect x="59.5357%" y="517" width="0.0344%" height="15" fill="rgb(219,27,41)" fg:x="283833" fg:w="164"/><text x="59.7857%" y="527.50"></text></g><g><title>netif_receive_skb_list_internal (162 samples, 0.03%)</title><rect x="59.5361%" y="501" width="0.0340%" height="15" fill="rgb(245,101,19)" fg:x="283835" fg:w="162"/><text x="59.7861%" y="511.50"></text></g><g><title>virtnet_poll (232 samples, 0.05%)</title><rect x="59.5338%" y="549" width="0.0487%" height="15" fill="rgb(243,44,37)" fg:x="283824" fg:w="232"/><text x="59.7838%" y="559.50"></text></g><g><title>net_rx_action (239 samples, 0.05%)</title><rect x="59.5330%" y="565" width="0.0501%" height="15" fill="rgb(228,213,43)" fg:x="283820" fg:w="239"/><text x="59.7830%" y="575.50"></text></g><g><title>finish_task_switch (461 samples, 0.10%)</title><rect x="59.4869%" y="645" width="0.0967%" height="15" fill="rgb(219,163,21)" fg:x="283600" fg:w="461"/><text x="59.7369%" y="655.50"></text></g><g><title>ret_from_intr (262 samples, 0.05%)</title><rect x="59.5286%" y="629" width="0.0550%" height="15" fill="rgb(234,86,24)" fg:x="283799" fg:w="262"/><text x="59.7786%" y="639.50"></text></g><g><title>do_IRQ (262 samples, 0.05%)</title><rect x="59.5286%" y="613" width="0.0550%" height="15" fill="rgb(225,10,24)" fg:x="283799" fg:w="262"/><text x="59.7786%" y="623.50"></text></g><g><title>irq_exit (262 samples, 0.05%)</title><rect x="59.5286%" y="597" width="0.0550%" height="15" fill="rgb(218,109,7)" fg:x="283799" fg:w="262"/><text x="59.7786%" y="607.50"></text></g><g><title>__softirqentry_text_start (262 samples, 0.05%)</title><rect x="59.5286%" y="581" width="0.0550%" height="15" fill="rgb(210,20,26)" fg:x="283799" fg:w="262"/><text x="59.7786%" y="591.50"></text></g><g><title>__schedule (477 samples, 0.10%)</title><rect x="59.4856%" y="661" width="0.1001%" height="15" fill="rgb(216,18,1)" fg:x="283594" fg:w="477"/><text x="59.7356%" y="671.50"></text></g><g><title>schedule_hrtimeout_range (487 samples, 0.10%)</title><rect x="59.4837%" y="709" width="0.1022%" height="15" fill="rgb(206,163,23)" fg:x="283585" fg:w="487"/><text x="59.7337%" y="719.50"></text></g><g><title>schedule_hrtimeout_range_clock (483 samples, 0.10%)</title><rect x="59.4845%" y="693" width="0.1013%" height="15" fill="rgb(229,150,31)" fg:x="283589" fg:w="483"/><text x="59.7345%" y="703.50"></text></g><g><title>schedule (481 samples, 0.10%)</title><rect x="59.4850%" y="677" width="0.1009%" height="15" fill="rgb(231,10,5)" fg:x="283591" fg:w="481"/><text x="59.7350%" y="687.50"></text></g><g><title>ep_poll (1,046 samples, 0.22%)</title><rect x="59.3669%" y="725" width="0.2194%" height="15" fill="rgb(250,40,50)" fg:x="283028" fg:w="1046"/><text x="59.6169%" y="735.50"></text></g><g><title>do_epoll_wait (1,135 samples, 0.24%)</title><rect x="59.3511%" y="741" width="0.2381%" height="15" fill="rgb(217,119,7)" fg:x="282953" fg:w="1135"/><text x="59.6011%" y="751.50"></text></g><g><title>__x64_sys_epoll_wait (1,144 samples, 0.24%)</title><rect x="59.3507%" y="757" width="0.2400%" height="15" fill="rgb(245,214,40)" fg:x="282951" fg:w="1144"/><text x="59.6007%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,243 samples, 0.26%)</title><rect x="59.3371%" y="789" width="0.2607%" height="15" fill="rgb(216,187,1)" fg:x="282886" fg:w="1243"/><text x="59.5871%" y="799.50"></text></g><g><title>do_syscall_64 (1,227 samples, 0.26%)</title><rect x="59.3404%" y="773" width="0.2574%" height="15" fill="rgb(237,146,21)" fg:x="282902" fg:w="1227"/><text x="59.5904%" y="783.50"></text></g><g><title>__netif_receive_skb_list_core (51 samples, 0.01%)</title><rect x="59.5997%" y="645" width="0.0107%" height="15" fill="rgb(210,174,47)" fg:x="284138" fg:w="51"/><text x="59.8497%" y="655.50"></text></g><g><title>ip_list_rcv (49 samples, 0.01%)</title><rect x="59.6001%" y="629" width="0.0103%" height="15" fill="rgb(218,111,39)" fg:x="284140" fg:w="49"/><text x="59.8501%" y="639.50"></text></g><g><title>ip_sublist_rcv (49 samples, 0.01%)</title><rect x="59.6001%" y="613" width="0.0103%" height="15" fill="rgb(224,95,19)" fg:x="284140" fg:w="49"/><text x="59.8501%" y="623.50"></text></g><g><title>napi_complete_done (53 samples, 0.01%)</title><rect x="59.5995%" y="693" width="0.0111%" height="15" fill="rgb(234,15,38)" fg:x="284137" fg:w="53"/><text x="59.8495%" y="703.50"></text></g><g><title>gro_normal_list.part.0 (53 samples, 0.01%)</title><rect x="59.5995%" y="677" width="0.0111%" height="15" fill="rgb(246,56,12)" fg:x="284137" fg:w="53"/><text x="59.8495%" y="687.50"></text></g><g><title>netif_receive_skb_list_internal (53 samples, 0.01%)</title><rect x="59.5995%" y="661" width="0.0111%" height="15" fill="rgb(247,16,17)" fg:x="284137" fg:w="53"/><text x="59.8495%" y="671.50"></text></g><g><title>epoll_wait (1,466 samples, 0.31%)</title><rect x="59.3081%" y="805" width="0.3075%" height="15" fill="rgb(215,151,11)" fg:x="282748" fg:w="1466"/><text x="59.5581%" y="815.50"></text></g><g><title>ret_from_intr (85 samples, 0.02%)</title><rect x="59.5978%" y="789" width="0.0178%" height="15" fill="rgb(225,16,24)" fg:x="284129" fg:w="85"/><text x="59.8478%" y="799.50"></text></g><g><title>do_IRQ (85 samples, 0.02%)</title><rect x="59.5978%" y="773" width="0.0178%" height="15" fill="rgb(217,117,5)" fg:x="284129" fg:w="85"/><text x="59.8478%" y="783.50"></text></g><g><title>irq_exit (85 samples, 0.02%)</title><rect x="59.5978%" y="757" width="0.0178%" height="15" fill="rgb(246,187,53)" fg:x="284129" fg:w="85"/><text x="59.8478%" y="767.50"></text></g><g><title>__softirqentry_text_start (85 samples, 0.02%)</title><rect x="59.5978%" y="741" width="0.0178%" height="15" fill="rgb(241,71,40)" fg:x="284129" fg:w="85"/><text x="59.8478%" y="751.50"></text></g><g><title>net_rx_action (78 samples, 0.02%)</title><rect x="59.5993%" y="725" width="0.0164%" height="15" fill="rgb(231,67,39)" fg:x="284136" fg:w="78"/><text x="59.8493%" y="735.50"></text></g><g><title>virtnet_poll (78 samples, 0.02%)</title><rect x="59.5993%" y="709" width="0.0164%" height="15" fill="rgb(222,120,24)" fg:x="284136" fg:w="78"/><text x="59.8493%" y="719.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1,497 samples, 0.31%)</title><rect x="59.3025%" y="821" width="0.3140%" height="15" fill="rgb(248,3,3)" fg:x="282721" fg:w="1497"/><text x="59.5525%" y="831.50"></text></g><g><title>mio::poll::Poll::poll (1,503 samples, 0.32%)</title><rect x="59.3018%" y="837" width="0.3153%" height="15" fill="rgb(228,218,5)" fg:x="282718" fg:w="1503"/><text x="59.5518%" y="847.50"></text></g><g><title>[libc-2.31.so] (64 samples, 0.01%)</title><rect x="59.6305%" y="725" width="0.0134%" height="15" fill="rgb(212,202,43)" fg:x="284285" fg:w="64"/><text x="59.8805%" y="735.50"></text></g><g><title>__libc_malloc (151 samples, 0.03%)</title><rect x="59.6219%" y="741" width="0.0317%" height="15" fill="rgb(235,183,2)" fg:x="284244" fg:w="151"/><text x="59.8719%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (161 samples, 0.03%)</title><rect x="59.6213%" y="821" width="0.0338%" height="15" fill="rgb(230,165,10)" fg:x="284241" fg:w="161"/><text x="59.8713%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (159 samples, 0.03%)</title><rect x="59.6217%" y="805" width="0.0334%" height="15" fill="rgb(219,54,40)" fg:x="284243" fg:w="159"/><text x="59.8717%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (159 samples, 0.03%)</title><rect x="59.6217%" y="789" width="0.0334%" height="15" fill="rgb(244,73,9)" fg:x="284243" fg:w="159"/><text x="59.8717%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (159 samples, 0.03%)</title><rect x="59.6217%" y="773" width="0.0334%" height="15" fill="rgb(212,32,45)" fg:x="284243" fg:w="159"/><text x="59.8717%" y="783.50"></text></g><g><title>alloc::alloc::alloc (159 samples, 0.03%)</title><rect x="59.6217%" y="757" width="0.0334%" height="15" fill="rgb(205,58,31)" fg:x="284243" fg:w="159"/><text x="59.8717%" y="767.50"></text></g><g><title>&lt;uppercut_mio_server::server::Listener as uppercut::api::AnyActor&gt;::receive (3,413 samples, 0.72%)</title><rect x="58.9396%" y="853" width="0.7159%" height="15" fill="rgb(250,120,43)" fg:x="280991" fg:w="3413"/><text x="59.1896%" y="863.50"></text></g><g><title>uppercut::api::Envelope::of (163 samples, 0.03%)</title><rect x="59.6213%" y="837" width="0.0342%" height="15" fill="rgb(235,13,10)" fg:x="284241" fg:w="163"/><text x="59.8713%" y="847.50"></text></g><g><title>std::panic::catch_unwind (30,390 samples, 6.37%)</title><rect x="53.2814%" y="933" width="6.3745%" height="15" fill="rgb(232,219,31)" fg:x="254016" fg:w="30390"/><text x="53.5314%" y="943.50">std::pan..</text></g><g><title>std::panicking::try (30,390 samples, 6.37%)</title><rect x="53.2814%" y="917" width="6.3745%" height="15" fill="rgb(218,157,51)" fg:x="254016" fg:w="30390"/><text x="53.5314%" y="927.50">std::pan..</text></g><g><title>std::panicking::try::do_call (30,390 samples, 6.37%)</title><rect x="53.2814%" y="901" width="6.3745%" height="15" fill="rgb(211,91,52)" fg:x="254016" fg:w="30390"/><text x="53.5314%" y="911.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (30,390 samples, 6.37%)</title><rect x="53.2814%" y="885" width="6.3745%" height="15" fill="rgb(240,173,1)" fg:x="254016" fg:w="30390"/><text x="53.5314%" y="895.50">&lt;core::p..</text></g><g><title>uppercut::core::worker_loop::{{closure}} (30,390 samples, 6.37%)</title><rect x="53.2814%" y="869" width="6.3745%" height="15" fill="rgb(248,20,47)" fg:x="254016" fg:w="30390"/><text x="53.5314%" y="879.50">uppercut..</text></g><g><title>worker-3 (70,568 samples, 14.80%)</title><rect x="44.8549%" y="1285" width="14.8021%" height="15" fill="rgb(217,221,40)" fg:x="213843" fg:w="70568"/><text x="45.1049%" y="1295.50">worker-3</text></g><g><title>clone (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1269" width="14.3215%" height="15" fill="rgb(226,149,51)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1279.50">clone</text></g><g><title>start_thread (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1253" width="14.3215%" height="15" fill="rgb(252,193,7)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1263.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1237" width="14.3215%" height="15" fill="rgb(205,123,0)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1247.50">std::sys::unix::thread..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1221" width="14.3215%" height="15" fill="rgb(233,173,25)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1231.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1205" width="14.3215%" height="15" fill="rgb(216,63,32)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1215.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1189" width="14.3215%" height="15" fill="rgb(209,56,45)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1199.50">core::ops::function::F..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1173" width="14.3215%" height="15" fill="rgb(226,111,49)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1183.50">std::thread::Builder::..</text></g><g><title>std::panic::catch_unwind (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1157" width="14.3215%" height="15" fill="rgb(244,181,21)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1167.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1141" width="14.3215%" height="15" fill="rgb(222,126,15)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1151.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1125" width="14.3215%" height="15" fill="rgb(222,95,17)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1135.50">std::panicking::try::d..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1109" width="14.3215%" height="15" fill="rgb(254,46,5)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1119.50">&lt;core::panic::unwind_s..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1093" width="14.3215%" height="15" fill="rgb(236,216,35)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1103.50">std::thread::Builder::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1077" width="14.3215%" height="15" fill="rgb(217,187,26)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1087.50">std::sys_common::backt..</text></g><g><title>uppercut::pool::Worker::new::{{closure}} (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1061" width="14.3215%" height="15" fill="rgb(207,192,25)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1071.50">uppercut::pool::Worker..</text></g><g><title>std::panic::catch_unwind (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1045" width="14.3215%" height="15" fill="rgb(253,135,27)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1055.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1029" width="14.3215%" height="15" fill="rgb(211,122,29)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (68,277 samples, 14.32%)</title><rect x="45.3354%" y="1013" width="14.3215%" height="15" fill="rgb(233,162,40)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1023.50">std::panicking::try::d..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (68,277 samples, 14.32%)</title><rect x="45.3354%" y="997" width="14.3215%" height="15" fill="rgb(222,184,47)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="1007.50">&lt;core::panic::unwind_s..</text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (68,277 samples, 14.32%)</title><rect x="45.3354%" y="981" width="14.3215%" height="15" fill="rgb(249,99,23)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="991.50">uppercut::pool::Worker..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68,277 samples, 14.32%)</title><rect x="45.3354%" y="965" width="14.3215%" height="15" fill="rgb(214,60,12)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="975.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>uppercut::core::worker_loop (68,277 samples, 14.32%)</title><rect x="45.3354%" y="949" width="14.3215%" height="15" fill="rgb(250,229,36)" fg:x="216134" fg:w="68277"/><text x="45.5854%" y="959.50">uppercut::core::worker..</text></g><g><title>__libc_malloc (64 samples, 0.01%)</title><rect x="59.6649%" y="757" width="0.0134%" height="15" fill="rgb(232,195,10)" fg:x="284449" fg:w="64"/><text x="59.9149%" y="767.50"></text></g><g><title>alloc::string::String::with_capacity (72 samples, 0.02%)</title><rect x="59.6637%" y="885" width="0.0151%" height="15" fill="rgb(205,213,31)" fg:x="284443" fg:w="72"/><text x="59.9137%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (71 samples, 0.01%)</title><rect x="59.6639%" y="869" width="0.0149%" height="15" fill="rgb(237,43,8)" fg:x="284444" fg:w="71"/><text x="59.9139%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (71 samples, 0.01%)</title><rect x="59.6639%" y="853" width="0.0149%" height="15" fill="rgb(216,208,3)" fg:x="284444" fg:w="71"/><text x="59.9139%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (71 samples, 0.01%)</title><rect x="59.6639%" y="837" width="0.0149%" height="15" fill="rgb(228,179,44)" fg:x="284444" fg:w="71"/><text x="59.9139%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (71 samples, 0.01%)</title><rect x="59.6639%" y="821" width="0.0149%" height="15" fill="rgb(230,192,27)" fg:x="284444" fg:w="71"/><text x="59.9139%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (69 samples, 0.01%)</title><rect x="59.6643%" y="805" width="0.0145%" height="15" fill="rgb(251,30,38)" fg:x="284446" fg:w="69"/><text x="59.9143%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (69 samples, 0.01%)</title><rect x="59.6643%" y="789" width="0.0145%" height="15" fill="rgb(246,55,52)" fg:x="284446" fg:w="69"/><text x="59.9143%" y="799.50"></text></g><g><title>alloc::alloc::alloc (66 samples, 0.01%)</title><rect x="59.6649%" y="773" width="0.0138%" height="15" fill="rgb(249,79,26)" fg:x="284449" fg:w="66"/><text x="59.9149%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (69 samples, 0.01%)</title><rect x="59.6807%" y="885" width="0.0145%" height="15" fill="rgb(220,202,16)" fg:x="284524" fg:w="69"/><text x="59.9307%" y="895.50"></text></g><g><title>core::fmt::write (69 samples, 0.01%)</title><rect x="59.6807%" y="869" width="0.0145%" height="15" fill="rgb(250,170,23)" fg:x="284524" fg:w="69"/><text x="59.9307%" y="879.50"></text></g><g><title>alloc::fmt::format (154 samples, 0.03%)</title><rect x="59.6630%" y="901" width="0.0323%" height="15" fill="rgb(230,7,37)" fg:x="284440" fg:w="154"/><text x="59.9130%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (78 samples, 0.02%)</title><rect x="59.7212%" y="837" width="0.0164%" height="15" fill="rgb(213,71,1)" fg:x="284717" fg:w="78"/><text x="59.9712%" y="847.50"></text></g><g><title>alloc::fmt::format (273 samples, 0.06%)</title><rect x="59.7058%" y="885" width="0.0573%" height="15" fill="rgb(227,87,39)" fg:x="284644" fg:w="273"/><text x="59.9558%" y="895.50"></text></g><g><title>core::fmt::Write::write_fmt (226 samples, 0.05%)</title><rect x="59.7157%" y="869" width="0.0474%" height="15" fill="rgb(210,41,29)" fg:x="284691" fg:w="226"/><text x="59.9657%" y="879.50"></text></g><g><title>core::fmt::write (224 samples, 0.05%)</title><rect x="59.7161%" y="853" width="0.0470%" height="15" fill="rgb(206,191,31)" fg:x="284693" fg:w="224"/><text x="59.9661%" y="863.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (329 samples, 0.07%)</title><rect x="59.7040%" y="901" width="0.0690%" height="15" fill="rgb(247,75,54)" fg:x="284635" fg:w="329"/><text x="59.9540%" y="911.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (630 samples, 0.13%)</title><rect x="59.6570%" y="933" width="0.1321%" height="15" fill="rgb(208,54,50)" fg:x="284411" fg:w="630"/><text x="59.9070%" y="943.50"></text></g><g><title>parsed::parser::single::{{closure}} (629 samples, 0.13%)</title><rect x="59.6572%" y="917" width="0.1319%" height="15" fill="rgb(214,90,37)" fg:x="284412" fg:w="629"/><text x="59.9072%" y="927.50"></text></g><g><title>parsed::stream::ByteStream::next (77 samples, 0.02%)</title><rect x="59.7730%" y="901" width="0.0162%" height="15" fill="rgb(220,132,6)" fg:x="284964" fg:w="77"/><text x="60.0230%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (92 samples, 0.02%)</title><rect x="59.7992%" y="869" width="0.0193%" height="15" fill="rgb(213,167,7)" fg:x="285089" fg:w="92"/><text x="60.0492%" y="879.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (90 samples, 0.02%)</title><rect x="59.7996%" y="853" width="0.0189%" height="15" fill="rgb(243,36,27)" fg:x="285091" fg:w="90"/><text x="60.0496%" y="863.50"></text></g><g><title>parsed::stream::ByteStream::get (88 samples, 0.02%)</title><rect x="59.8000%" y="837" width="0.0185%" height="15" fill="rgb(235,147,12)" fg:x="285093" fg:w="88"/><text x="60.0500%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (60 samples, 0.01%)</title><rect x="59.8059%" y="821" width="0.0126%" height="15" fill="rgb(212,198,44)" fg:x="285121" fg:w="60"/><text x="60.0559%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (60 samples, 0.01%)</title><rect x="59.8059%" y="805" width="0.0126%" height="15" fill="rgb(218,68,50)" fg:x="285121" fg:w="60"/><text x="60.0559%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (60 samples, 0.01%)</title><rect x="59.8059%" y="789" width="0.0126%" height="15" fill="rgb(224,79,48)" fg:x="285121" fg:w="60"/><text x="60.0559%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (60 samples, 0.01%)</title><rect x="59.8059%" y="773" width="0.0126%" height="15" fill="rgb(213,191,50)" fg:x="285121" fg:w="60"/><text x="60.0559%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (60 samples, 0.01%)</title><rect x="59.8059%" y="757" width="0.0126%" height="15" fill="rgb(254,146,10)" fg:x="285121" fg:w="60"/><text x="60.0559%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (60 samples, 0.01%)</title><rect x="59.8059%" y="741" width="0.0126%" height="15" fill="rgb(215,175,11)" fg:x="285121" fg:w="60"/><text x="60.0559%" y="751.50"></text></g><g><title>alloc::alloc::alloc (60 samples, 0.01%)</title><rect x="59.8059%" y="725" width="0.0126%" height="15" fill="rgb(207,49,7)" fg:x="285121" fg:w="60"/><text x="60.0559%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (51 samples, 0.01%)</title><rect x="59.8185%" y="869" width="0.0107%" height="15" fill="rgb(234,144,29)" fg:x="285181" fg:w="51"/><text x="60.0685%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::matcher::MatchError&gt; (48 samples, 0.01%)</title><rect x="59.8191%" y="853" width="0.0101%" height="15" fill="rgb(213,222,48)" fg:x="285184" fg:w="48"/><text x="60.0691%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (48 samples, 0.01%)</title><rect x="59.8191%" y="837" width="0.0101%" height="15" fill="rgb(222,8,6)" fg:x="285184" fg:w="48"/><text x="60.0691%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (48 samples, 0.01%)</title><rect x="59.8191%" y="821" width="0.0101%" height="15" fill="rgb(221,114,49)" fg:x="285184" fg:w="48"/><text x="60.0691%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (48 samples, 0.01%)</title><rect x="59.8191%" y="805" width="0.0101%" height="15" fill="rgb(250,140,42)" fg:x="285184" fg:w="48"/><text x="60.0691%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.01%)</title><rect x="59.8191%" y="789" width="0.0101%" height="15" fill="rgb(250,150,27)" fg:x="285184" fg:w="48"/><text x="60.0691%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (48 samples, 0.01%)</title><rect x="59.8191%" y="773" width="0.0101%" height="15" fill="rgb(252,159,3)" fg:x="285184" fg:w="48"/><text x="60.0691%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (48 samples, 0.01%)</title><rect x="59.8191%" y="757" width="0.0101%" height="15" fill="rgb(241,182,3)" fg:x="285184" fg:w="48"/><text x="60.0691%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (56 samples, 0.01%)</title><rect x="59.8478%" y="805" width="0.0117%" height="15" fill="rgb(236,3,9)" fg:x="285321" fg:w="56"/><text x="60.0978%" y="815.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (88 samples, 0.02%)</title><rect x="59.8600%" y="805" width="0.0185%" height="15" fill="rgb(223,227,51)" fg:x="285379" fg:w="88"/><text x="60.1100%" y="815.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (80 samples, 0.02%)</title><rect x="59.8617%" y="789" width="0.0168%" height="15" fill="rgb(232,133,30)" fg:x="285387" fg:w="80"/><text x="60.1117%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (167 samples, 0.04%)</title><rect x="59.8439%" y="837" width="0.0350%" height="15" fill="rgb(209,93,27)" fg:x="285302" fg:w="167"/><text x="60.0939%" y="847.50"></text></g><g><title>core::fmt::write (166 samples, 0.03%)</title><rect x="59.8441%" y="821" width="0.0348%" height="15" fill="rgb(208,108,34)" fg:x="285303" fg:w="166"/><text x="60.0941%" y="831.50"></text></g><g><title>alloc::fmt::format (234 samples, 0.05%)</title><rect x="59.8300%" y="853" width="0.0491%" height="15" fill="rgb(215,189,13)" fg:x="285236" fg:w="234"/><text x="60.0800%" y="863.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (243 samples, 0.05%)</title><rect x="59.8292%" y="869" width="0.0510%" height="15" fill="rgb(206,88,23)" fg:x="285232" fg:w="243"/><text x="60.0792%" y="879.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (410 samples, 0.09%)</title><rect x="59.7954%" y="901" width="0.0860%" height="15" fill="rgb(240,173,0)" fg:x="285071" fg:w="410"/><text x="60.0454%" y="911.50"></text></g><g><title>parsed::parser::before::{{closure}} (393 samples, 0.08%)</title><rect x="59.7990%" y="885" width="0.0824%" height="15" fill="rgb(223,106,52)" fg:x="285088" fg:w="393"/><text x="60.0490%" y="895.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (452 samples, 0.09%)</title><rect x="59.7937%" y="917" width="0.0948%" height="15" fill="rgb(206,130,16)" fg:x="285063" fg:w="452"/><text x="60.0437%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (60 samples, 0.01%)</title><rect x="59.8952%" y="757" width="0.0126%" height="15" fill="rgb(220,54,25)" fg:x="285547" fg:w="60"/><text x="60.1452%" y="767.50"></text></g><g><title>alloc::string::String::reserve (82 samples, 0.02%)</title><rect x="59.8944%" y="837" width="0.0172%" height="15" fill="rgb(210,4,38)" fg:x="285543" fg:w="82"/><text x="60.1444%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (82 samples, 0.02%)</title><rect x="59.8944%" y="821" width="0.0172%" height="15" fill="rgb(238,94,39)" fg:x="285543" fg:w="82"/><text x="60.1444%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (82 samples, 0.02%)</title><rect x="59.8944%" y="805" width="0.0172%" height="15" fill="rgb(234,124,34)" fg:x="285543" fg:w="82"/><text x="60.1444%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (80 samples, 0.02%)</title><rect x="59.8948%" y="789" width="0.0168%" height="15" fill="rgb(221,91,40)" fg:x="285545" fg:w="80"/><text x="60.1448%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (80 samples, 0.02%)</title><rect x="59.8948%" y="773" width="0.0168%" height="15" fill="rgb(246,53,28)" fg:x="285545" fg:w="80"/><text x="60.1448%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (142 samples, 0.03%)</title><rect x="59.8919%" y="853" width="0.0298%" height="15" fill="rgb(229,109,7)" fg:x="285531" fg:w="142"/><text x="60.1419%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (48 samples, 0.01%)</title><rect x="59.9116%" y="837" width="0.0101%" height="15" fill="rgb(249,117,8)" fg:x="285625" fg:w="48"/><text x="60.1616%" y="847.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1253" width="0.2649%" height="15" fill="rgb(210,181,1)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1263.50"></text></g><g><title>uppercut_mio_server::protocol::process (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1237" width="0.2649%" height="15" fill="rgb(211,66,1)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1247.50"></text></g><g><title>parsed::http::parse_http_request (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1221" width="0.2649%" height="15" fill="rgb(221,90,14)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1231.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1205" width="0.2649%" height="15" fill="rgb(219,222,44)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1215.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1189" width="0.2649%" height="15" fill="rgb(246,34,33)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1199.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1173" width="0.2649%" height="15" fill="rgb(227,135,41)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1183.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1157" width="0.2649%" height="15" fill="rgb(226,15,14)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1167.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1141" width="0.2649%" height="15" fill="rgb(236,148,47)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1151.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1125" width="0.2649%" height="15" fill="rgb(233,162,52)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1135.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1109" width="0.2649%" height="15" fill="rgb(244,35,28)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1119.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1093" width="0.2649%" height="15" fill="rgb(205,121,10)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1103.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1077" width="0.2649%" height="15" fill="rgb(250,58,18)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1087.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1061" width="0.2649%" height="15" fill="rgb(216,37,13)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1071.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1045" width="0.2649%" height="15" fill="rgb(221,215,42)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1055.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1029" width="0.2649%" height="15" fill="rgb(217,214,19)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1039.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="1013" width="0.2649%" height="15" fill="rgb(233,139,13)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1023.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="997" width="0.2649%" height="15" fill="rgb(247,168,23)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="1007.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="981" width="0.2649%" height="15" fill="rgb(207,202,1)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="991.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="965" width="0.2649%" height="15" fill="rgb(220,155,48)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,263 samples, 0.26%)</title><rect x="59.6570%" y="949" width="0.2649%" height="15" fill="rgb(250,43,26)" fg:x="284411" fg:w="1263"/><text x="59.9070%" y="959.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (633 samples, 0.13%)</title><rect x="59.7891%" y="933" width="0.1328%" height="15" fill="rgb(212,190,23)" fg:x="285041" fg:w="633"/><text x="60.0391%" y="943.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (159 samples, 0.03%)</title><rect x="59.8885%" y="917" width="0.0334%" height="15" fill="rgb(216,39,24)" fg:x="285515" fg:w="159"/><text x="60.1385%" y="927.50"></text></g><g><title>parsed::http::as_string (155 samples, 0.03%)</title><rect x="59.8894%" y="901" width="0.0325%" height="15" fill="rgb(252,113,16)" fg:x="285519" fg:w="155"/><text x="60.1394%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (155 samples, 0.03%)</title><rect x="59.8894%" y="885" width="0.0325%" height="15" fill="rgb(208,113,19)" fg:x="285519" fg:w="155"/><text x="60.1394%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (148 samples, 0.03%)</title><rect x="59.8908%" y="869" width="0.0310%" height="15" fill="rgb(234,107,25)" fg:x="285526" fg:w="148"/><text x="60.1408%" y="879.50"></text></g><g><title>alloc::fmt::format (48 samples, 0.01%)</title><rect x="59.9267%" y="565" width="0.0101%" height="15" fill="rgb(234,217,51)" fg:x="285697" fg:w="48"/><text x="60.1767%" y="575.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (151 samples, 0.03%)</title><rect x="59.9267%" y="597" width="0.0317%" height="15" fill="rgb(251,29,42)" fg:x="285697" fg:w="151"/><text x="60.1767%" y="607.50"></text></g><g><title>parsed::parser::single::{{closure}} (151 samples, 0.03%)</title><rect x="59.9267%" y="581" width="0.0317%" height="15" fill="rgb(221,62,51)" fg:x="285697" fg:w="151"/><text x="60.1767%" y="591.50"></text></g><g><title>parsed::stream::ByteStream::next (48 samples, 0.01%)</title><rect x="59.9483%" y="565" width="0.0101%" height="15" fill="rgb(240,192,43)" fg:x="285800" fg:w="48"/><text x="60.1983%" y="575.50"></text></g><g><title>start_thread (184 samples, 0.04%)</title><rect x="59.9267%" y="1253" width="0.0386%" height="15" fill="rgb(224,157,47)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1263.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (184 samples, 0.04%)</title><rect x="59.9267%" y="1237" width="0.0386%" height="15" fill="rgb(226,84,45)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (184 samples, 0.04%)</title><rect x="59.9267%" y="1221" width="0.0386%" height="15" fill="rgb(208,207,23)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (184 samples, 0.04%)</title><rect x="59.9267%" y="1205" width="0.0386%" height="15" fill="rgb(253,34,51)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (184 samples, 0.04%)</title><rect x="59.9267%" y="1189" width="0.0386%" height="15" fill="rgb(227,26,34)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1199.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (184 samples, 0.04%)</title><rect x="59.9267%" y="1173" width="0.0386%" height="15" fill="rgb(245,75,19)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (184 samples, 0.04%)</title><rect x="59.9267%" y="1157" width="0.0386%" height="15" fill="rgb(250,191,31)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1167.50"></text></g><g><title>std::panicking::try (184 samples, 0.04%)</title><rect x="59.9267%" y="1141" width="0.0386%" height="15" fill="rgb(224,11,50)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (184 samples, 0.04%)</title><rect x="59.9267%" y="1125" width="0.0386%" height="15" fill="rgb(231,171,7)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (184 samples, 0.04%)</title><rect x="59.9267%" y="1109" width="0.0386%" height="15" fill="rgb(252,214,10)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (184 samples, 0.04%)</title><rect x="59.9267%" y="1093" width="0.0386%" height="15" fill="rgb(249,45,46)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1103.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (184 samples, 0.04%)</title><rect x="59.9267%" y="1077" width="0.0386%" height="15" fill="rgb(240,173,7)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1087.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (184 samples, 0.04%)</title><rect x="59.9267%" y="1061" width="0.0386%" height="15" fill="rgb(235,214,13)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (184 samples, 0.04%)</title><rect x="59.9267%" y="1045" width="0.0386%" height="15" fill="rgb(245,156,8)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1055.50"></text></g><g><title>std::panicking::try (184 samples, 0.04%)</title><rect x="59.9267%" y="1029" width="0.0386%" height="15" fill="rgb(235,46,12)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (184 samples, 0.04%)</title><rect x="59.9267%" y="1013" width="0.0386%" height="15" fill="rgb(221,81,14)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (184 samples, 0.04%)</title><rect x="59.9267%" y="997" width="0.0386%" height="15" fill="rgb(238,207,9)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="1007.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (184 samples, 0.04%)</title><rect x="59.9267%" y="981" width="0.0386%" height="15" fill="rgb(224,129,35)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (184 samples, 0.04%)</title><rect x="59.9267%" y="965" width="0.0386%" height="15" fill="rgb(243,218,34)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="975.50"></text></g><g><title>uppercut::core::worker_loop (184 samples, 0.04%)</title><rect x="59.9267%" y="949" width="0.0386%" height="15" fill="rgb(220,166,13)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="959.50"></text></g><g><title>std::panic::catch_unwind (184 samples, 0.04%)</title><rect x="59.9267%" y="933" width="0.0386%" height="15" fill="rgb(227,167,49)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="943.50"></text></g><g><title>std::panicking::try (184 samples, 0.04%)</title><rect x="59.9267%" y="917" width="0.0386%" height="15" fill="rgb(234,142,12)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="927.50"></text></g><g><title>std::panicking::try::do_call (184 samples, 0.04%)</title><rect x="59.9267%" y="901" width="0.0386%" height="15" fill="rgb(207,100,48)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (184 samples, 0.04%)</title><rect x="59.9267%" y="885" width="0.0386%" height="15" fill="rgb(210,25,14)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="895.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (184 samples, 0.04%)</title><rect x="59.9267%" y="869" width="0.0386%" height="15" fill="rgb(246,116,27)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="879.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (184 samples, 0.04%)</title><rect x="59.9267%" y="853" width="0.0386%" height="15" fill="rgb(214,193,42)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="863.50"></text></g><g><title>uppercut_mio_server::protocol::process (184 samples, 0.04%)</title><rect x="59.9267%" y="837" width="0.0386%" height="15" fill="rgb(214,122,8)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="847.50"></text></g><g><title>parsed::http::parse_http_request (184 samples, 0.04%)</title><rect x="59.9267%" y="821" width="0.0386%" height="15" fill="rgb(244,173,18)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="831.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (184 samples, 0.04%)</title><rect x="59.9267%" y="805" width="0.0386%" height="15" fill="rgb(232,68,19)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="815.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (184 samples, 0.04%)</title><rect x="59.9267%" y="789" width="0.0386%" height="15" fill="rgb(236,224,1)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="799.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (184 samples, 0.04%)</title><rect x="59.9267%" y="773" width="0.0386%" height="15" fill="rgb(240,11,8)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="783.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (184 samples, 0.04%)</title><rect x="59.9267%" y="757" width="0.0386%" height="15" fill="rgb(244,159,20)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="767.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (184 samples, 0.04%)</title><rect x="59.9267%" y="741" width="0.0386%" height="15" fill="rgb(240,223,54)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="751.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (184 samples, 0.04%)</title><rect x="59.9267%" y="725" width="0.0386%" height="15" fill="rgb(237,146,5)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="735.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (184 samples, 0.04%)</title><rect x="59.9267%" y="709" width="0.0386%" height="15" fill="rgb(218,221,32)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="719.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (184 samples, 0.04%)</title><rect x="59.9267%" y="693" width="0.0386%" height="15" fill="rgb(244,96,26)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="703.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (184 samples, 0.04%)</title><rect x="59.9267%" y="677" width="0.0386%" height="15" fill="rgb(245,184,37)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="687.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (184 samples, 0.04%)</title><rect x="59.9267%" y="661" width="0.0386%" height="15" fill="rgb(248,91,47)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="671.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (184 samples, 0.04%)</title><rect x="59.9267%" y="645" width="0.0386%" height="15" fill="rgb(243,199,8)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="655.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (184 samples, 0.04%)</title><rect x="59.9267%" y="629" width="0.0386%" height="15" fill="rgb(249,12,15)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (184 samples, 0.04%)</title><rect x="59.9267%" y="613" width="0.0386%" height="15" fill="rgb(245,97,12)" fg:x="285697" fg:w="184"/><text x="60.1767%" y="623.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (76 samples, 0.02%)</title><rect x="59.9653%" y="613" width="0.0159%" height="15" fill="rgb(244,61,1)" fg:x="285881" fg:w="76"/><text x="60.2153%" y="623.50"></text></g><g><title>parsed::parser::single::{{closure}} (76 samples, 0.02%)</title><rect x="59.9653%" y="597" width="0.0159%" height="15" fill="rgb(222,194,10)" fg:x="285881" fg:w="76"/><text x="60.2153%" y="607.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (56 samples, 0.01%)</title><rect x="59.9695%" y="581" width="0.0117%" height="15" fill="rgb(226,178,8)" fg:x="285901" fg:w="56"/><text x="60.2195%" y="591.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (106 samples, 0.02%)</title><rect x="59.9653%" y="1253" width="0.0222%" height="15" fill="rgb(241,32,34)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (106 samples, 0.02%)</title><rect x="59.9653%" y="1237" width="0.0222%" height="15" fill="rgb(254,26,6)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (106 samples, 0.02%)</title><rect x="59.9653%" y="1221" width="0.0222%" height="15" fill="rgb(249,71,11)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (106 samples, 0.02%)</title><rect x="59.9653%" y="1205" width="0.0222%" height="15" fill="rgb(232,170,27)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1215.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (106 samples, 0.02%)</title><rect x="59.9653%" y="1189" width="0.0222%" height="15" fill="rgb(214,223,17)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (106 samples, 0.02%)</title><rect x="59.9653%" y="1173" width="0.0222%" height="15" fill="rgb(250,18,15)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1183.50"></text></g><g><title>std::panicking::try (106 samples, 0.02%)</title><rect x="59.9653%" y="1157" width="0.0222%" height="15" fill="rgb(212,153,51)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (106 samples, 0.02%)</title><rect x="59.9653%" y="1141" width="0.0222%" height="15" fill="rgb(219,194,12)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (106 samples, 0.02%)</title><rect x="59.9653%" y="1125" width="0.0222%" height="15" fill="rgb(212,58,17)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (106 samples, 0.02%)</title><rect x="59.9653%" y="1109" width="0.0222%" height="15" fill="rgb(254,5,10)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (106 samples, 0.02%)</title><rect x="59.9653%" y="1093" width="0.0222%" height="15" fill="rgb(246,91,7)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1103.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (106 samples, 0.02%)</title><rect x="59.9653%" y="1077" width="0.0222%" height="15" fill="rgb(218,108,49)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (106 samples, 0.02%)</title><rect x="59.9653%" y="1061" width="0.0222%" height="15" fill="rgb(238,123,20)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1071.50"></text></g><g><title>std::panicking::try (106 samples, 0.02%)</title><rect x="59.9653%" y="1045" width="0.0222%" height="15" fill="rgb(231,69,23)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (106 samples, 0.02%)</title><rect x="59.9653%" y="1029" width="0.0222%" height="15" fill="rgb(230,209,3)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (106 samples, 0.02%)</title><rect x="59.9653%" y="1013" width="0.0222%" height="15" fill="rgb(231,19,0)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1023.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (106 samples, 0.02%)</title><rect x="59.9653%" y="997" width="0.0222%" height="15" fill="rgb(226,192,25)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (106 samples, 0.02%)</title><rect x="59.9653%" y="981" width="0.0222%" height="15" fill="rgb(223,175,53)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="991.50"></text></g><g><title>uppercut::core::worker_loop (106 samples, 0.02%)</title><rect x="59.9653%" y="965" width="0.0222%" height="15" fill="rgb(248,35,51)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="975.50"></text></g><g><title>std::panic::catch_unwind (106 samples, 0.02%)</title><rect x="59.9653%" y="949" width="0.0222%" height="15" fill="rgb(230,37,26)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="959.50"></text></g><g><title>std::panicking::try (106 samples, 0.02%)</title><rect x="59.9653%" y="933" width="0.0222%" height="15" fill="rgb(206,120,22)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="943.50"></text></g><g><title>std::panicking::try::do_call (106 samples, 0.02%)</title><rect x="59.9653%" y="917" width="0.0222%" height="15" fill="rgb(207,165,28)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (106 samples, 0.02%)</title><rect x="59.9653%" y="901" width="0.0222%" height="15" fill="rgb(226,23,46)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="911.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (106 samples, 0.02%)</title><rect x="59.9653%" y="885" width="0.0222%" height="15" fill="rgb(208,130,44)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="895.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (106 samples, 0.02%)</title><rect x="59.9653%" y="869" width="0.0222%" height="15" fill="rgb(231,67,8)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="879.50"></text></g><g><title>uppercut_mio_server::protocol::process (106 samples, 0.02%)</title><rect x="59.9653%" y="853" width="0.0222%" height="15" fill="rgb(205,183,22)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="863.50"></text></g><g><title>parsed::http::parse_http_request (106 samples, 0.02%)</title><rect x="59.9653%" y="837" width="0.0222%" height="15" fill="rgb(224,47,9)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="847.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (106 samples, 0.02%)</title><rect x="59.9653%" y="821" width="0.0222%" height="15" fill="rgb(250,183,49)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="831.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (106 samples, 0.02%)</title><rect x="59.9653%" y="805" width="0.0222%" height="15" fill="rgb(220,151,39)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="815.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (106 samples, 0.02%)</title><rect x="59.9653%" y="789" width="0.0222%" height="15" fill="rgb(220,118,20)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="799.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (106 samples, 0.02%)</title><rect x="59.9653%" y="773" width="0.0222%" height="15" fill="rgb(231,65,51)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="783.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (106 samples, 0.02%)</title><rect x="59.9653%" y="757" width="0.0222%" height="15" fill="rgb(253,125,37)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="767.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (106 samples, 0.02%)</title><rect x="59.9653%" y="741" width="0.0222%" height="15" fill="rgb(232,102,6)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="751.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (106 samples, 0.02%)</title><rect x="59.9653%" y="725" width="0.0222%" height="15" fill="rgb(251,105,13)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="735.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (106 samples, 0.02%)</title><rect x="59.9653%" y="709" width="0.0222%" height="15" fill="rgb(222,179,29)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="719.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (106 samples, 0.02%)</title><rect x="59.9653%" y="693" width="0.0222%" height="15" fill="rgb(229,180,53)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="703.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (106 samples, 0.02%)</title><rect x="59.9653%" y="677" width="0.0222%" height="15" fill="rgb(238,104,13)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="687.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (106 samples, 0.02%)</title><rect x="59.9653%" y="661" width="0.0222%" height="15" fill="rgb(210,130,5)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="671.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (106 samples, 0.02%)</title><rect x="59.9653%" y="645" width="0.0222%" height="15" fill="rgb(233,87,49)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="655.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (106 samples, 0.02%)</title><rect x="59.9653%" y="629" width="0.0222%" height="15" fill="rgb(243,34,9)" fg:x="285881" fg:w="106"/><text x="60.2153%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (50 samples, 0.01%)</title><rect x="60.0075%" y="677" width="0.0105%" height="15" fill="rgb(235,225,10)" fg:x="286082" fg:w="50"/><text x="60.2575%" y="687.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (152 samples, 0.03%)</title><rect x="59.9875%" y="773" width="0.0319%" height="15" fill="rgb(212,0,30)" fg:x="285987" fg:w="152"/><text x="60.2375%" y="783.50"></text></g><g><title>parsed::parser::single::{{closure}} (152 samples, 0.03%)</title><rect x="59.9875%" y="757" width="0.0319%" height="15" fill="rgb(211,177,0)" fg:x="285987" fg:w="152"/><text x="60.2375%" y="767.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (152 samples, 0.03%)</title><rect x="59.9875%" y="741" width="0.0319%" height="15" fill="rgb(225,220,11)" fg:x="285987" fg:w="152"/><text x="60.2375%" y="751.50"></text></g><g><title>alloc::fmt::format (152 samples, 0.03%)</title><rect x="59.9875%" y="725" width="0.0319%" height="15" fill="rgb(215,10,13)" fg:x="285987" fg:w="152"/><text x="60.2375%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (152 samples, 0.03%)</title><rect x="59.9875%" y="709" width="0.0319%" height="15" fill="rgb(240,177,14)" fg:x="285987" fg:w="152"/><text x="60.2375%" y="719.50"></text></g><g><title>core::fmt::write (152 samples, 0.03%)</title><rect x="59.9875%" y="693" width="0.0319%" height="15" fill="rgb(243,7,39)" fg:x="285987" fg:w="152"/><text x="60.2375%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (167 samples, 0.04%)</title><rect x="59.9875%" y="1253" width="0.0350%" height="15" fill="rgb(212,99,0)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1263.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (167 samples, 0.04%)</title><rect x="59.9875%" y="1237" width="0.0350%" height="15" fill="rgb(225,162,48)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (167 samples, 0.04%)</title><rect x="59.9875%" y="1221" width="0.0350%" height="15" fill="rgb(246,16,25)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1231.50"></text></g><g><title>std::panicking::try (167 samples, 0.04%)</title><rect x="59.9875%" y="1205" width="0.0350%" height="15" fill="rgb(220,150,2)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (167 samples, 0.04%)</title><rect x="59.9875%" y="1189" width="0.0350%" height="15" fill="rgb(237,113,11)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (167 samples, 0.04%)</title><rect x="59.9875%" y="1173" width="0.0350%" height="15" fill="rgb(236,70,20)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1183.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (167 samples, 0.04%)</title><rect x="59.9875%" y="1157" width="0.0350%" height="15" fill="rgb(234,94,7)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (167 samples, 0.04%)</title><rect x="59.9875%" y="1141" width="0.0350%" height="15" fill="rgb(250,221,0)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1151.50"></text></g><g><title>uppercut::core::worker_loop (167 samples, 0.04%)</title><rect x="59.9875%" y="1125" width="0.0350%" height="15" fill="rgb(245,149,46)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (167 samples, 0.04%)</title><rect x="59.9875%" y="1109" width="0.0350%" height="15" fill="rgb(215,37,27)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1119.50"></text></g><g><title>std::panicking::try (167 samples, 0.04%)</title><rect x="59.9875%" y="1093" width="0.0350%" height="15" fill="rgb(232,65,3)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (167 samples, 0.04%)</title><rect x="59.9875%" y="1077" width="0.0350%" height="15" fill="rgb(214,2,16)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (167 samples, 0.04%)</title><rect x="59.9875%" y="1061" width="0.0350%" height="15" fill="rgb(227,131,50)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1071.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (167 samples, 0.04%)</title><rect x="59.9875%" y="1045" width="0.0350%" height="15" fill="rgb(247,131,45)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1055.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (167 samples, 0.04%)</title><rect x="59.9875%" y="1029" width="0.0350%" height="15" fill="rgb(215,97,47)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1039.50"></text></g><g><title>uppercut_mio_server::protocol::process (167 samples, 0.04%)</title><rect x="59.9875%" y="1013" width="0.0350%" height="15" fill="rgb(233,143,12)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1023.50"></text></g><g><title>parsed::http::parse_http_request (167 samples, 0.04%)</title><rect x="59.9875%" y="997" width="0.0350%" height="15" fill="rgb(222,57,17)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="1007.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (167 samples, 0.04%)</title><rect x="59.9875%" y="981" width="0.0350%" height="15" fill="rgb(214,119,38)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="991.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (167 samples, 0.04%)</title><rect x="59.9875%" y="965" width="0.0350%" height="15" fill="rgb(217,28,47)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (167 samples, 0.04%)</title><rect x="59.9875%" y="949" width="0.0350%" height="15" fill="rgb(231,14,52)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="959.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (167 samples, 0.04%)</title><rect x="59.9875%" y="933" width="0.0350%" height="15" fill="rgb(220,158,18)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="943.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (167 samples, 0.04%)</title><rect x="59.9875%" y="917" width="0.0350%" height="15" fill="rgb(222,143,46)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="927.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (167 samples, 0.04%)</title><rect x="59.9875%" y="901" width="0.0350%" height="15" fill="rgb(227,165,5)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="911.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (167 samples, 0.04%)</title><rect x="59.9875%" y="885" width="0.0350%" height="15" fill="rgb(216,222,49)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="895.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (167 samples, 0.04%)</title><rect x="59.9875%" y="869" width="0.0350%" height="15" fill="rgb(238,73,39)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="879.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (167 samples, 0.04%)</title><rect x="59.9875%" y="853" width="0.0350%" height="15" fill="rgb(252,115,9)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="863.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (167 samples, 0.04%)</title><rect x="59.9875%" y="837" width="0.0350%" height="15" fill="rgb(238,202,4)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="847.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (167 samples, 0.04%)</title><rect x="59.9875%" y="821" width="0.0350%" height="15" fill="rgb(252,153,44)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="831.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (167 samples, 0.04%)</title><rect x="59.9875%" y="805" width="0.0350%" height="15" fill="rgb(235,128,27)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="815.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (167 samples, 0.04%)</title><rect x="59.9875%" y="789" width="0.0350%" height="15" fill="rgb(221,121,47)" fg:x="285987" fg:w="167"/><text x="60.2375%" y="799.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (96 samples, 0.02%)</title><rect x="60.0624%" y="773" width="0.0201%" height="15" fill="rgb(247,211,47)" fg:x="286344" fg:w="96"/><text x="60.3124%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (92 samples, 0.02%)</title><rect x="60.0633%" y="757" width="0.0193%" height="15" fill="rgb(252,47,49)" fg:x="286348" fg:w="92"/><text x="60.3133%" y="767.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (199 samples, 0.04%)</title><rect x="60.0419%" y="837" width="0.0417%" height="15" fill="rgb(219,119,53)" fg:x="286246" fg:w="199"/><text x="60.2919%" y="847.50"></text></g><g><title>alloc::fmt::format (198 samples, 0.04%)</title><rect x="60.0421%" y="821" width="0.0415%" height="15" fill="rgb(243,165,53)" fg:x="286247" fg:w="198"/><text x="60.2921%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (161 samples, 0.03%)</title><rect x="60.0498%" y="805" width="0.0338%" height="15" fill="rgb(230,12,35)" fg:x="286284" fg:w="161"/><text x="60.2998%" y="815.50"></text></g><g><title>core::fmt::write (157 samples, 0.03%)</title><rect x="60.0507%" y="789" width="0.0329%" height="15" fill="rgb(239,57,49)" fg:x="286288" fg:w="157"/><text x="60.3007%" y="799.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (267 samples, 0.06%)</title><rect x="60.0287%" y="869" width="0.0560%" height="15" fill="rgb(231,154,7)" fg:x="286183" fg:w="267"/><text x="60.2787%" y="879.50"></text></g><g><title>parsed::parser::before::{{closure}} (261 samples, 0.05%)</title><rect x="60.0299%" y="853" width="0.0547%" height="15" fill="rgb(248,81,34)" fg:x="286189" fg:w="261"/><text x="60.2799%" y="863.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (354 samples, 0.07%)</title><rect x="60.0259%" y="885" width="0.0743%" height="15" fill="rgb(247,9,5)" fg:x="286170" fg:w="354"/><text x="60.2759%" y="895.50"></text></g><g><title>uppercut::core::worker_loop (371 samples, 0.08%)</title><rect x="60.0226%" y="1253" width="0.0778%" height="15" fill="rgb(228,172,27)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (371 samples, 0.08%)</title><rect x="60.0226%" y="1237" width="0.0778%" height="15" fill="rgb(230,57,44)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1247.50"></text></g><g><title>std::panicking::try (371 samples, 0.08%)</title><rect x="60.0226%" y="1221" width="0.0778%" height="15" fill="rgb(249,35,22)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (371 samples, 0.08%)</title><rect x="60.0226%" y="1205" width="0.0778%" height="15" fill="rgb(250,137,27)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1215.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (371 samples, 0.08%)</title><rect x="60.0226%" y="1189" width="0.0778%" height="15" fill="rgb(251,57,31)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1199.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (371 samples, 0.08%)</title><rect x="60.0226%" y="1173" width="0.0778%" height="15" fill="rgb(238,60,0)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1183.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (371 samples, 0.08%)</title><rect x="60.0226%" y="1157" width="0.0778%" height="15" fill="rgb(242,185,39)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1167.50"></text></g><g><title>uppercut_mio_server::protocol::process (371 samples, 0.08%)</title><rect x="60.0226%" y="1141" width="0.0778%" height="15" fill="rgb(240,63,43)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1151.50"></text></g><g><title>parsed::http::parse_http_request (371 samples, 0.08%)</title><rect x="60.0226%" y="1125" width="0.0778%" height="15" fill="rgb(236,155,6)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1135.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (371 samples, 0.08%)</title><rect x="60.0226%" y="1109" width="0.0778%" height="15" fill="rgb(215,11,29)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1119.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (371 samples, 0.08%)</title><rect x="60.0226%" y="1093" width="0.0778%" height="15" fill="rgb(228,180,48)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1103.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (371 samples, 0.08%)</title><rect x="60.0226%" y="1077" width="0.0778%" height="15" fill="rgb(241,102,12)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1087.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (371 samples, 0.08%)</title><rect x="60.0226%" y="1061" width="0.0778%" height="15" fill="rgb(246,213,4)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1071.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (371 samples, 0.08%)</title><rect x="60.0226%" y="1045" width="0.0778%" height="15" fill="rgb(218,134,35)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1055.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (371 samples, 0.08%)</title><rect x="60.0226%" y="1029" width="0.0778%" height="15" fill="rgb(251,117,35)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1039.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (371 samples, 0.08%)</title><rect x="60.0226%" y="1013" width="0.0778%" height="15" fill="rgb(206,156,45)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1023.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (371 samples, 0.08%)</title><rect x="60.0226%" y="997" width="0.0778%" height="15" fill="rgb(218,52,27)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="1007.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (371 samples, 0.08%)</title><rect x="60.0226%" y="981" width="0.0778%" height="15" fill="rgb(238,83,36)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="991.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (371 samples, 0.08%)</title><rect x="60.0226%" y="965" width="0.0778%" height="15" fill="rgb(218,53,43)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (371 samples, 0.08%)</title><rect x="60.0226%" y="949" width="0.0778%" height="15" fill="rgb(239,54,39)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="959.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (371 samples, 0.08%)</title><rect x="60.0226%" y="933" width="0.0778%" height="15" fill="rgb(212,198,13)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="943.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (371 samples, 0.08%)</title><rect x="60.0226%" y="917" width="0.0778%" height="15" fill="rgb(234,54,46)" fg:x="286154" fg:w="371"/><text x="60.2726%" y="927.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (355 samples, 0.07%)</title><rect x="60.0259%" y="901" width="0.0745%" height="15" fill="rgb(217,120,7)" fg:x="286170" fg:w="355"/><text x="60.2759%" y="911.50"></text></g><g><title>[unknown] (2,138 samples, 0.45%)</title><rect x="59.6570%" y="1269" width="0.4485%" height="15" fill="rgb(246,39,15)" fg:x="284411" fg:w="2138"/><text x="59.9070%" y="1279.50"></text></g><g><title>__libc_malloc (76 samples, 0.02%)</title><rect x="60.2793%" y="757" width="0.0159%" height="15" fill="rgb(242,143,31)" fg:x="287378" fg:w="76"/><text x="60.5293%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (81 samples, 0.02%)</title><rect x="60.2791%" y="853" width="0.0170%" height="15" fill="rgb(252,60,24)" fg:x="287377" fg:w="81"/><text x="60.5291%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (81 samples, 0.02%)</title><rect x="60.2791%" y="837" width="0.0170%" height="15" fill="rgb(249,220,7)" fg:x="287377" fg:w="81"/><text x="60.5291%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (81 samples, 0.02%)</title><rect x="60.2791%" y="821" width="0.0170%" height="15" fill="rgb(236,67,13)" fg:x="287377" fg:w="81"/><text x="60.5291%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (81 samples, 0.02%)</title><rect x="60.2791%" y="805" width="0.0170%" height="15" fill="rgb(210,62,39)" fg:x="287377" fg:w="81"/><text x="60.5291%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (81 samples, 0.02%)</title><rect x="60.2791%" y="789" width="0.0170%" height="15" fill="rgb(219,122,53)" fg:x="287377" fg:w="81"/><text x="60.5291%" y="799.50"></text></g><g><title>alloc::alloc::alloc (81 samples, 0.02%)</title><rect x="60.2791%" y="773" width="0.0170%" height="15" fill="rgb(218,87,25)" fg:x="287377" fg:w="81"/><text x="60.5291%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (167 samples, 0.04%)</title><rect x="60.2766%" y="933" width="0.0350%" height="15" fill="rgb(234,179,48)" fg:x="287365" fg:w="167"/><text x="60.5266%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (155 samples, 0.03%)</title><rect x="60.2791%" y="917" width="0.0325%" height="15" fill="rgb(248,90,0)" fg:x="287377" fg:w="155"/><text x="60.5291%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (155 samples, 0.03%)</title><rect x="60.2791%" y="901" width="0.0325%" height="15" fill="rgb(207,228,37)" fg:x="287377" fg:w="155"/><text x="60.5291%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (155 samples, 0.03%)</title><rect x="60.2791%" y="885" width="0.0325%" height="15" fill="rgb(235,214,15)" fg:x="287377" fg:w="155"/><text x="60.5291%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (155 samples, 0.03%)</title><rect x="60.2791%" y="869" width="0.0325%" height="15" fill="rgb(210,144,39)" fg:x="287377" fg:w="155"/><text x="60.5291%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (74 samples, 0.02%)</title><rect x="60.2961%" y="853" width="0.0155%" height="15" fill="rgb(222,67,41)" fg:x="287458" fg:w="74"/><text x="60.5461%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (74 samples, 0.02%)</title><rect x="60.2961%" y="837" width="0.0155%" height="15" fill="rgb(205,35,37)" fg:x="287458" fg:w="74"/><text x="60.5461%" y="847.50"></text></g><g><title>[libc-2.31.so] (74 samples, 0.02%)</title><rect x="60.2961%" y="821" width="0.0155%" height="15" fill="rgb(216,125,40)" fg:x="287458" fg:w="74"/><text x="60.5461%" y="831.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (390 samples, 0.08%)</title><rect x="61.3858%" y="917" width="0.0818%" height="15" fill="rgb(228,227,20)" fg:x="292653" fg:w="390"/><text x="61.6358%" y="927.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::counter (390 samples, 0.08%)</title><rect x="61.3858%" y="901" width="0.0818%" height="15" fill="rgb(242,173,45)" fg:x="292653" fg:w="390"/><text x="61.6358%" y="911.50"></text></g><g><title>&lt;crossbeam_channel::flavors::zero::ZeroToken as core::default::Default&gt;::default (578 samples, 0.12%)</title><rect x="62.7425%" y="885" width="0.1212%" height="15" fill="rgb(215,79,24)" fg:x="299121" fg:w="578"/><text x="62.9925%" y="895.50"></text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (833 samples, 0.17%)</title><rect x="62.6892%" y="901" width="0.1747%" height="15" fill="rgb(238,164,38)" fg:x="298867" fg:w="833"/><text x="62.9392%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (61 samples, 0.01%)</title><rect x="62.8788%" y="885" width="0.0128%" height="15" fill="rgb(245,196,38)" fg:x="299771" fg:w="61"/><text x="63.1288%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_or (61 samples, 0.01%)</title><rect x="62.8788%" y="869" width="0.0128%" height="15" fill="rgb(231,217,29)" fg:x="299771" fg:w="61"/><text x="63.1288%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (222 samples, 0.05%)</title><rect x="62.8654%" y="901" width="0.0466%" height="15" fill="rgb(245,6,4)" fg:x="299707" fg:w="222"/><text x="63.1154%" y="911.50"></text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (93 samples, 0.02%)</title><rect x="62.8925%" y="885" width="0.0195%" height="15" fill="rgb(214,76,49)" fg:x="299836" fg:w="93"/><text x="63.1425%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (642 samples, 0.13%)</title><rect x="64.4623%" y="885" width="0.1347%" height="15" fill="rgb(205,96,12)" fg:x="307320" fg:w="642"/><text x="64.7123%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (642 samples, 0.13%)</title><rect x="64.4623%" y="869" width="0.1347%" height="15" fill="rgb(243,131,4)" fg:x="307320" fg:w="642"/><text x="64.7123%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17,211 samples, 3.61%)</title><rect x="64.5969%" y="885" width="3.6101%" height="15" fill="rgb(214,114,4)" fg:x="307962" fg:w="17211"/><text x="64.8469%" y="895.50">core..</text></g><g><title>core::sync::atomic::atomic_load (17,211 samples, 3.61%)</title><rect x="64.5969%" y="869" width="3.6101%" height="15" fill="rgb(234,215,15)" fg:x="307962" fg:w="17211"/><text x="64.8469%" y="879.50">core..</text></g><g><title>core::sync::atomic::fence (387 samples, 0.08%)</title><rect x="68.2070%" y="885" width="0.0812%" height="15" fill="rgb(250,216,45)" fg:x="325173" fg:w="387"/><text x="68.4570%" y="895.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (38,061 samples, 7.98%)</title><rect x="60.3192%" y="933" width="7.9835%" height="15" fill="rgb(236,128,4)" fg:x="287568" fg:w="38061"/><text x="60.5692%" y="943.50">crossbeam_c..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (32,575 samples, 6.83%)</title><rect x="61.4699%" y="917" width="6.8328%" height="15" fill="rgb(234,50,33)" fg:x="293054" fg:w="32575"/><text x="61.7199%" y="927.50">crossbeam..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (25,700 samples, 5.39%)</title><rect x="62.9120%" y="901" width="5.3907%" height="15" fill="rgb(253,131,37)" fg:x="299929" fg:w="25700"/><text x="63.1620%" y="911.50">crossbe..</text></g><g><title>__libc_malloc (82 samples, 0.02%)</title><rect x="68.3377%" y="805" width="0.0172%" height="15" fill="rgb(218,55,27)" fg:x="325796" fg:w="82"/><text x="68.5877%" y="815.50"></text></g><g><title>[libc-2.31.so] (74 samples, 0.02%)</title><rect x="68.3394%" y="789" width="0.0155%" height="15" fill="rgb(241,220,28)" fg:x="325804" fg:w="74"/><text x="68.5894%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (94 samples, 0.02%)</title><rect x="68.3354%" y="885" width="0.0197%" height="15" fill="rgb(241,90,48)" fg:x="325785" fg:w="94"/><text x="68.5854%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (83 samples, 0.02%)</title><rect x="68.3377%" y="869" width="0.0174%" height="15" fill="rgb(216,43,37)" fg:x="325796" fg:w="83"/><text x="68.5877%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (83 samples, 0.02%)</title><rect x="68.3377%" y="853" width="0.0174%" height="15" fill="rgb(207,173,9)" fg:x="325796" fg:w="83"/><text x="68.5877%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (83 samples, 0.02%)</title><rect x="68.3377%" y="837" width="0.0174%" height="15" fill="rgb(240,126,30)" fg:x="325796" fg:w="83"/><text x="68.5877%" y="847.50"></text></g><g><title>alloc::alloc::alloc (83 samples, 0.02%)</title><rect x="68.3377%" y="821" width="0.0174%" height="15" fill="rgb(228,178,53)" fg:x="325796" fg:w="83"/><text x="68.5877%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (52 samples, 0.01%)</title><rect x="68.3560%" y="885" width="0.0109%" height="15" fill="rgb(217,33,4)" fg:x="325883" fg:w="52"/><text x="68.6060%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (52 samples, 0.01%)</title><rect x="68.3560%" y="869" width="0.0109%" height="15" fill="rgb(206,124,34)" fg:x="325883" fg:w="52"/><text x="68.6060%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (280 samples, 0.06%)</title><rect x="68.3102%" y="901" width="0.0587%" height="15" fill="rgb(208,122,53)" fg:x="325665" fg:w="280"/><text x="68.5602%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (58 samples, 0.01%)</title><rect x="68.3929%" y="853" width="0.0122%" height="15" fill="rgb(215,202,26)" fg:x="326059" fg:w="58"/><text x="68.6429%" y="863.50"></text></g><g><title>do_sched_yield (162 samples, 0.03%)</title><rect x="68.4493%" y="773" width="0.0340%" height="15" fill="rgb(232,198,31)" fg:x="326328" fg:w="162"/><text x="68.6993%" y="783.50"></text></g><g><title>schedule (142 samples, 0.03%)</title><rect x="68.4535%" y="757" width="0.0298%" height="15" fill="rgb(222,23,35)" fg:x="326348" fg:w="142"/><text x="68.7035%" y="767.50"></text></g><g><title>__schedule (139 samples, 0.03%)</title><rect x="68.4541%" y="741" width="0.0292%" height="15" fill="rgb(242,27,53)" fg:x="326351" fg:w="139"/><text x="68.7041%" y="751.50"></text></g><g><title>__x64_sys_sched_yield (163 samples, 0.03%)</title><rect x="68.4493%" y="789" width="0.0342%" height="15" fill="rgb(210,216,42)" fg:x="326328" fg:w="163"/><text x="68.6993%" y="799.50"></text></g><g><title>__sched_yield (373 samples, 0.08%)</title><rect x="68.4057%" y="837" width="0.0782%" height="15" fill="rgb(234,39,38)" fg:x="326120" fg:w="373"/><text x="68.6557%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (232 samples, 0.05%)</title><rect x="68.4353%" y="821" width="0.0487%" height="15" fill="rgb(235,126,54)" fg:x="326261" fg:w="232"/><text x="68.6853%" y="831.50"></text></g><g><title>do_syscall_64 (222 samples, 0.05%)</title><rect x="68.4374%" y="805" width="0.0466%" height="15" fill="rgb(235,150,33)" fg:x="326271" fg:w="222"/><text x="68.6874%" y="815.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (66 samples, 0.01%)</title><rect x="68.4864%" y="837" width="0.0138%" height="15" fill="rgb(249,49,53)" fg:x="326505" fg:w="66"/><text x="68.7364%" y="847.50"></text></g><g><title>core::hint::spin_loop (66 samples, 0.01%)</title><rect x="68.4864%" y="821" width="0.0138%" height="15" fill="rgb(238,60,50)" fg:x="326505" fg:w="66"/><text x="68.7364%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (66 samples, 0.01%)</title><rect x="68.4864%" y="805" width="0.0138%" height="15" fill="rgb(210,5,2)" fg:x="326505" fg:w="66"/><text x="68.7364%" y="815.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (517 samples, 0.11%)</title><rect x="68.3927%" y="869" width="0.1084%" height="15" fill="rgb(214,207,24)" fg:x="326058" fg:w="517"/><text x="68.6427%" y="879.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (458 samples, 0.10%)</title><rect x="68.4051%" y="853" width="0.0961%" height="15" fill="rgb(228,173,2)" fg:x="326117" fg:w="458"/><text x="68.6551%" y="863.50"></text></g><g><title>futex_wake (372 samples, 0.08%)</title><rect x="68.5267%" y="693" width="0.0780%" height="15" fill="rgb(244,26,8)" fg:x="326697" fg:w="372"/><text x="68.7767%" y="703.50"></text></g><g><title>wake_up_q (330 samples, 0.07%)</title><rect x="68.5355%" y="677" width="0.0692%" height="15" fill="rgb(249,153,35)" fg:x="326739" fg:w="330"/><text x="68.7855%" y="687.50"></text></g><g><title>try_to_wake_up (326 samples, 0.07%)</title><rect x="68.5364%" y="661" width="0.0684%" height="15" fill="rgb(221,215,40)" fg:x="326743" fg:w="326"/><text x="68.7864%" y="671.50"></text></g><g><title>__lock_text_start (324 samples, 0.07%)</title><rect x="68.5368%" y="645" width="0.0680%" height="15" fill="rgb(238,106,35)" fg:x="326745" fg:w="324"/><text x="68.7868%" y="655.50"></text></g><g><title>do_futex (385 samples, 0.08%)</title><rect x="68.5244%" y="709" width="0.0808%" height="15" fill="rgb(207,195,21)" fg:x="326686" fg:w="385"/><text x="68.7744%" y="719.50"></text></g><g><title>__x64_sys_futex (393 samples, 0.08%)</title><rect x="68.5236%" y="725" width="0.0824%" height="15" fill="rgb(205,43,29)" fg:x="326682" fg:w="393"/><text x="68.7736%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (499 samples, 0.10%)</title><rect x="68.5020%" y="853" width="0.1047%" height="15" fill="rgb(236,35,21)" fg:x="326579" fg:w="499"/><text x="68.7520%" y="863.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (499 samples, 0.10%)</title><rect x="68.5020%" y="837" width="0.1047%" height="15" fill="rgb(244,74,8)" fg:x="326579" fg:w="499"/><text x="68.7520%" y="847.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (484 samples, 0.10%)</title><rect x="68.5051%" y="821" width="0.1015%" height="15" fill="rgb(241,229,7)" fg:x="326594" fg:w="484"/><text x="68.7551%" y="831.50"></text></g><g><title>std::thread::Thread::unpark (484 samples, 0.10%)</title><rect x="68.5051%" y="805" width="0.1015%" height="15" fill="rgb(212,223,25)" fg:x="326594" fg:w="484"/><text x="68.7551%" y="815.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (484 samples, 0.10%)</title><rect x="68.5051%" y="789" width="0.1015%" height="15" fill="rgb(234,58,53)" fg:x="326594" fg:w="484"/><text x="68.7551%" y="799.50"></text></g><g><title>syscall (478 samples, 0.10%)</title><rect x="68.5064%" y="773" width="0.1003%" height="15" fill="rgb(244,36,1)" fg:x="326600" fg:w="478"/><text x="68.7564%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (417 samples, 0.09%)</title><rect x="68.5192%" y="757" width="0.0875%" height="15" fill="rgb(222,40,54)" fg:x="326661" fg:w="417"/><text x="68.7692%" y="767.50"></text></g><g><title>do_syscall_64 (415 samples, 0.09%)</title><rect x="68.5196%" y="741" width="0.0870%" height="15" fill="rgb(210,207,39)" fg:x="326663" fg:w="415"/><text x="68.7696%" y="751.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1,468 samples, 0.31%)</title><rect x="68.3027%" y="933" width="0.3079%" height="15" fill="rgb(234,52,14)" fg:x="325629" fg:w="1468"/><text x="68.5527%" y="943.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1,455 samples, 0.31%)</title><rect x="68.3054%" y="917" width="0.3052%" height="15" fill="rgb(239,108,46)" fg:x="325642" fg:w="1455"/><text x="68.5554%" y="927.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (1,152 samples, 0.24%)</title><rect x="68.3690%" y="901" width="0.2416%" height="15" fill="rgb(252,223,5)" fg:x="325945" fg:w="1152"/><text x="68.6190%" y="911.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (1,053 samples, 0.22%)</title><rect x="68.3897%" y="885" width="0.2209%" height="15" fill="rgb(227,181,11)" fg:x="326044" fg:w="1053"/><text x="68.6397%" y="895.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (518 samples, 0.11%)</title><rect x="68.5020%" y="869" width="0.1087%" height="15" fill="rgb(248,126,40)" fg:x="326579" fg:w="518"/><text x="68.7520%" y="879.50"></text></g><g><title>apparmor_socket_recvmsg (82 samples, 0.02%)</title><rect x="68.8311%" y="613" width="0.0172%" height="15" fill="rgb(243,1,18)" fg:x="328148" fg:w="82"/><text x="69.0811%" y="623.50"></text></g><g><title>kfree_skbmem (168 samples, 0.04%)</title><rect x="68.8965%" y="565" width="0.0352%" height="15" fill="rgb(214,145,23)" fg:x="328460" fg:w="168"/><text x="69.1465%" y="575.50"></text></g><g><title>kmem_cache_free (167 samples, 0.04%)</title><rect x="68.8967%" y="549" width="0.0350%" height="15" fill="rgb(241,218,11)" fg:x="328461" fg:w="167"/><text x="69.1467%" y="559.50"></text></g><g><title>__slab_free (79 samples, 0.02%)</title><rect x="68.9152%" y="533" width="0.0166%" height="15" fill="rgb(214,219,24)" fg:x="328549" fg:w="79"/><text x="69.1652%" y="543.50"></text></g><g><title>skb_release_data (178 samples, 0.04%)</title><rect x="68.9330%" y="549" width="0.0373%" height="15" fill="rgb(235,32,7)" fg:x="328634" fg:w="178"/><text x="69.1830%" y="559.50"></text></g><g><title>skb_free_head (124 samples, 0.03%)</title><rect x="68.9443%" y="533" width="0.0260%" height="15" fill="rgb(227,121,28)" fg:x="328688" fg:w="124"/><text x="69.1943%" y="543.50"></text></g><g><title>kfree (120 samples, 0.03%)</title><rect x="68.9452%" y="517" width="0.0252%" height="15" fill="rgb(216,129,49)" fg:x="328692" fg:w="120"/><text x="69.1952%" y="527.50"></text></g><g><title>__slab_free (91 samples, 0.02%)</title><rect x="68.9513%" y="501" width="0.0191%" height="15" fill="rgb(207,194,50)" fg:x="328721" fg:w="91"/><text x="69.2013%" y="511.50"></text></g><g><title>skb_release_all (277 samples, 0.06%)</title><rect x="68.9322%" y="565" width="0.0581%" height="15" fill="rgb(207,4,18)" fg:x="328630" fg:w="277"/><text x="69.1822%" y="575.50"></text></g><g><title>sock_rfree (91 samples, 0.02%)</title><rect x="68.9712%" y="549" width="0.0191%" height="15" fill="rgb(213,50,30)" fg:x="328816" fg:w="91"/><text x="69.2212%" y="559.50"></text></g><g><title>__kfree_skb (455 samples, 0.10%)</title><rect x="68.8961%" y="581" width="0.0954%" height="15" fill="rgb(208,77,22)" fg:x="328458" fg:w="455"/><text x="69.1461%" y="591.50"></text></g><g><title>_raw_spin_lock_bh (90 samples, 0.02%)</title><rect x="68.9930%" y="581" width="0.0189%" height="15" fill="rgb(244,204,34)" fg:x="328920" fg:w="90"/><text x="69.2430%" y="591.50"></text></g><g><title>__check_object_size (136 samples, 0.03%)</title><rect x="69.0280%" y="533" width="0.0285%" height="15" fill="rgb(230,20,17)" fg:x="329087" fg:w="136"/><text x="69.2780%" y="543.50"></text></g><g><title>copy_user_generic_unrolled (97 samples, 0.02%)</title><rect x="69.0614%" y="517" width="0.0203%" height="15" fill="rgb(237,83,15)" fg:x="329246" fg:w="97"/><text x="69.3114%" y="527.50"></text></g><g><title>_copy_to_iter (127 samples, 0.03%)</title><rect x="69.0572%" y="533" width="0.0266%" height="15" fill="rgb(221,109,25)" fg:x="329226" fg:w="127"/><text x="69.3072%" y="543.50"></text></g><g><title>skb_copy_datagram_iter (310 samples, 0.07%)</title><rect x="69.0228%" y="581" width="0.0650%" height="15" fill="rgb(205,194,52)" fg:x="329062" fg:w="310"/><text x="69.2728%" y="591.50"></text></g><g><title>__skb_datagram_iter (302 samples, 0.06%)</title><rect x="69.0245%" y="565" width="0.0633%" height="15" fill="rgb(244,173,54)" fg:x="329070" fg:w="302"/><text x="69.2745%" y="575.50"></text></g><g><title>simple_copy_to_iter (285 samples, 0.06%)</title><rect x="69.0280%" y="549" width="0.0598%" height="15" fill="rgb(227,181,18)" fg:x="329087" fg:w="285"/><text x="69.2780%" y="559.50"></text></g><g><title>tcp_cleanup_rbuf (67 samples, 0.01%)</title><rect x="69.0880%" y="581" width="0.0141%" height="15" fill="rgb(238,36,30)" fg:x="329373" fg:w="67"/><text x="69.3380%" y="591.50"></text></g><g><title>kvm_clock_get_cycles (92 samples, 0.02%)</title><rect x="69.1197%" y="533" width="0.0193%" height="15" fill="rgb(254,85,0)" fg:x="329524" fg:w="92"/><text x="69.3697%" y="543.50"></text></g><g><title>pvclock_clocksource_read (82 samples, 0.02%)</title><rect x="69.1218%" y="517" width="0.0172%" height="15" fill="rgb(247,63,33)" fg:x="329534" fg:w="82"/><text x="69.3718%" y="527.50"></text></g><g><title>ktime_get (106 samples, 0.02%)</title><rect x="69.1174%" y="549" width="0.0222%" height="15" fill="rgb(220,7,54)" fg:x="329513" fg:w="106"/><text x="69.3674%" y="559.50"></text></g><g><title>tcp_rcv_space_adjust (204 samples, 0.04%)</title><rect x="69.1031%" y="581" width="0.0428%" height="15" fill="rgb(238,227,21)" fg:x="329445" fg:w="204"/><text x="69.3531%" y="591.50"></text></g><g><title>tcp_mstamp_refresh (144 samples, 0.03%)</title><rect x="69.1157%" y="565" width="0.0302%" height="15" fill="rgb(237,29,31)" fg:x="329505" fg:w="144"/><text x="69.3657%" y="575.50"></text></g><g><title>tcp_recv_timestamp (58 samples, 0.01%)</title><rect x="69.1459%" y="581" width="0.0122%" height="15" fill="rgb(211,21,50)" fg:x="329649" fg:w="58"/><text x="69.3959%" y="591.50"></text></g><g><title>inet_recvmsg (1,507 samples, 0.32%)</title><rect x="68.8483%" y="613" width="0.3161%" height="15" fill="rgb(239,119,2)" fg:x="328230" fg:w="1507"/><text x="69.0983%" y="623.50"></text></g><g><title>tcp_recvmsg (1,486 samples, 0.31%)</title><rect x="68.8527%" y="597" width="0.3117%" height="15" fill="rgb(250,2,39)" fg:x="328251" fg:w="1486"/><text x="69.1027%" y="607.50"></text></g><g><title>sock_recvmsg (1,642 samples, 0.34%)</title><rect x="68.8290%" y="629" width="0.3444%" height="15" fill="rgb(244,46,53)" fg:x="328138" fg:w="1642"/><text x="69.0790%" y="639.50"></text></g><g><title>__fdget (151 samples, 0.03%)</title><rect x="69.1734%" y="613" width="0.0317%" height="15" fill="rgb(209,21,19)" fg:x="329780" fg:w="151"/><text x="69.4234%" y="623.50"></text></g><g><title>__fget_light (150 samples, 0.03%)</title><rect x="69.1736%" y="597" width="0.0315%" height="15" fill="rgb(236,145,4)" fg:x="329781" fg:w="150"/><text x="69.4236%" y="607.50"></text></g><g><title>__fget (149 samples, 0.03%)</title><rect x="69.1738%" y="581" width="0.0313%" height="15" fill="rgb(220,133,36)" fg:x="329782" fg:w="149"/><text x="69.4238%" y="591.50"></text></g><g><title>__sys_recvfrom (1,866 samples, 0.39%)</title><rect x="68.8181%" y="645" width="0.3914%" height="15" fill="rgb(244,18,3)" fg:x="328086" fg:w="1866"/><text x="69.0681%" y="655.50"></text></g><g><title>sockfd_lookup_light (172 samples, 0.04%)</title><rect x="69.1734%" y="629" width="0.0361%" height="15" fill="rgb(232,171,48)" fg:x="329780" fg:w="172"/><text x="69.4234%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2,685 samples, 0.56%)</title><rect x="68.6526%" y="837" width="0.5632%" height="15" fill="rgb(223,223,53)" fg:x="327297" fg:w="2685"/><text x="68.9026%" y="847.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2,680 samples, 0.56%)</title><rect x="68.6536%" y="821" width="0.5621%" height="15" fill="rgb(246,92,13)" fg:x="327302" fg:w="2680"/><text x="68.9036%" y="831.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (2,680 samples, 0.56%)</title><rect x="68.6536%" y="805" width="0.5621%" height="15" fill="rgb(229,171,10)" fg:x="327302" fg:w="2680"/><text x="68.9036%" y="815.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (2,680 samples, 0.56%)</title><rect x="68.6536%" y="789" width="0.5621%" height="15" fill="rgb(213,131,26)" fg:x="327302" fg:w="2680"/><text x="68.9036%" y="799.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2,680 samples, 0.56%)</title><rect x="68.6536%" y="773" width="0.5621%" height="15" fill="rgb(242,87,54)" fg:x="327302" fg:w="2680"/><text x="68.9036%" y="783.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2,675 samples, 0.56%)</title><rect x="68.6547%" y="757" width="0.5611%" height="15" fill="rgb(237,21,35)" fg:x="327307" fg:w="2675"/><text x="68.9047%" y="767.50"></text></g><g><title>std::sys::unix::net::Socket::read (2,675 samples, 0.56%)</title><rect x="68.6547%" y="741" width="0.5611%" height="15" fill="rgb(253,13,47)" fg:x="327307" fg:w="2675"/><text x="68.9047%" y="751.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2,675 samples, 0.56%)</title><rect x="68.6547%" y="725" width="0.5611%" height="15" fill="rgb(215,122,49)" fg:x="327307" fg:w="2675"/><text x="68.9047%" y="735.50"></text></g><g><title>__libc_recv (2,665 samples, 0.56%)</title><rect x="68.6568%" y="709" width="0.5590%" height="15" fill="rgb(209,179,30)" fg:x="327317" fg:w="2665"/><text x="68.9068%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,136 samples, 0.45%)</title><rect x="68.7677%" y="693" width="0.4480%" height="15" fill="rgb(235,100,24)" fg:x="327846" fg:w="2136"/><text x="69.0177%" y="703.50"></text></g><g><title>do_syscall_64 (2,099 samples, 0.44%)</title><rect x="68.7755%" y="677" width="0.4403%" height="15" fill="rgb(209,67,24)" fg:x="327883" fg:w="2099"/><text x="69.0255%" y="687.50"></text></g><g><title>__x64_sys_recvfrom (1,896 samples, 0.40%)</title><rect x="68.8181%" y="661" width="0.3977%" height="15" fill="rgb(206,74,32)" fg:x="328086" fg:w="1896"/><text x="69.0681%" y="671.50"></text></g><g><title>[libc-2.31.so] (136 samples, 0.03%)</title><rect x="69.2321%" y="757" width="0.0285%" height="15" fill="rgb(212,45,25)" fg:x="330060" fg:w="136"/><text x="69.4821%" y="767.50"></text></g><g><title>alloc::alloc::box_free (261 samples, 0.05%)</title><rect x="69.2317%" y="805" width="0.0547%" height="15" fill="rgb(239,26,3)" fg:x="330058" fg:w="261"/><text x="69.4817%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (261 samples, 0.05%)</title><rect x="69.2317%" y="789" width="0.0547%" height="15" fill="rgb(218,36,15)" fg:x="330058" fg:w="261"/><text x="69.4817%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (259 samples, 0.05%)</title><rect x="69.2321%" y="773" width="0.0543%" height="15" fill="rgb(206,108,24)" fg:x="330060" fg:w="259"/><text x="69.4821%" y="783.50"></text></g><g><title>cfree (108 samples, 0.02%)</title><rect x="69.2638%" y="757" width="0.0227%" height="15" fill="rgb(234,204,42)" fg:x="330211" fg:w="108"/><text x="69.5138%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt; (288 samples, 0.06%)</title><rect x="69.2300%" y="821" width="0.0604%" height="15" fill="rgb(229,2,11)" fg:x="330050" fg:w="288"/><text x="69.4800%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;uppercut::api::Envelope&gt; (302 samples, 0.06%)</title><rect x="69.2273%" y="837" width="0.0633%" height="15" fill="rgb(221,20,48)" fg:x="330037" fg:w="302"/><text x="69.4773%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (176 samples, 0.04%)</title><rect x="69.3045%" y="821" width="0.0369%" height="15" fill="rgb(244,164,10)" fg:x="330405" fg:w="176"/><text x="69.5545%" y="831.50"></text></g><g><title>parsed::stream::ByteStream::put (282 samples, 0.06%)</title><rect x="69.2930%" y="837" width="0.0592%" height="15" fill="rgb(243,229,2)" fg:x="330350" fg:w="282"/><text x="69.5430%" y="847.50"></text></g><g><title>parsed::stream::ByteStream::cap (51 samples, 0.01%)</title><rect x="69.3414%" y="821" width="0.0107%" height="15" fill="rgb(232,131,37)" fg:x="330581" fg:w="51"/><text x="69.5914%" y="831.50"></text></g><g><title>_raw_spin_lock_bh (56 samples, 0.01%)</title><rect x="69.5912%" y="597" width="0.0117%" height="15" fill="rgb(217,156,11)" fg:x="331772" fg:w="56"/><text x="69.8412%" y="607.50"></text></g><g><title>copy_user_enhanced_fast_string (105 samples, 0.02%)</title><rect x="69.6835%" y="565" width="0.0220%" height="15" fill="rgb(239,99,48)" fg:x="332212" fg:w="105"/><text x="69.9335%" y="575.50"></text></g><g><title>_copy_from_iter_full (137 samples, 0.03%)</title><rect x="69.6814%" y="581" width="0.0287%" height="15" fill="rgb(231,209,9)" fg:x="332202" fg:w="137"/><text x="69.9314%" y="591.50"></text></g><g><title>sk_page_frag_refill (96 samples, 0.02%)</title><rect x="69.7123%" y="581" width="0.0201%" height="15" fill="rgb(254,97,27)" fg:x="332349" fg:w="96"/><text x="69.9623%" y="591.50"></text></g><g><title>skb_page_frag_refill (91 samples, 0.02%)</title><rect x="69.7133%" y="565" width="0.0191%" height="15" fill="rgb(223,151,38)" fg:x="332354" fg:w="91"/><text x="69.9633%" y="575.50"></text></g><g><title>__kmalloc_node_track_caller (172 samples, 0.04%)</title><rect x="69.7515%" y="533" width="0.0361%" height="15" fill="rgb(219,206,35)" fg:x="332536" fg:w="172"/><text x="70.0015%" y="543.50"></text></g><g><title>memset_erms (89 samples, 0.02%)</title><rect x="69.7972%" y="533" width="0.0187%" height="15" fill="rgb(216,130,31)" fg:x="332754" fg:w="89"/><text x="70.0472%" y="543.50"></text></g><g><title>__kmalloc_reserve.isra.0 (326 samples, 0.07%)</title><rect x="69.7496%" y="549" width="0.0684%" height="15" fill="rgb(251,97,34)" fg:x="332527" fg:w="326"/><text x="69.9996%" y="559.50"></text></g><g><title>__slab_alloc (48 samples, 0.01%)</title><rect x="69.8410%" y="533" width="0.0101%" height="15" fill="rgb(246,159,47)" fg:x="332963" fg:w="48"/><text x="70.0910%" y="543.50"></text></g><g><title>kmem_cache_alloc_node (151 samples, 0.03%)</title><rect x="69.8197%" y="549" width="0.0317%" height="15" fill="rgb(232,87,10)" fg:x="332861" fg:w="151"/><text x="70.0697%" y="559.50"></text></g><g><title>ksize (96 samples, 0.02%)</title><rect x="69.8513%" y="549" width="0.0201%" height="15" fill="rgb(249,1,37)" fg:x="333012" fg:w="96"/><text x="70.1013%" y="559.50"></text></g><g><title>__ksize (96 samples, 0.02%)</title><rect x="69.8513%" y="533" width="0.0201%" height="15" fill="rgb(239,135,14)" fg:x="333012" fg:w="96"/><text x="70.1013%" y="543.50"></text></g><g><title>__alloc_skb (678 samples, 0.14%)</title><rect x="69.7353%" y="565" width="0.1422%" height="15" fill="rgb(253,116,46)" fg:x="332459" fg:w="678"/><text x="69.9853%" y="575.50"></text></g><g><title>sk_stream_alloc_skb (711 samples, 0.15%)</title><rect x="69.7324%" y="581" width="0.1491%" height="15" fill="rgb(222,217,37)" fg:x="332445" fg:w="711"/><text x="69.9824%" y="591.50"></text></g><g><title>skb_entail (86 samples, 0.02%)</title><rect x="69.8815%" y="581" width="0.0180%" height="15" fill="rgb(252,96,8)" fg:x="333156" fg:w="86"/><text x="70.1315%" y="591.50"></text></g><g><title>__ip_local_out (57 samples, 0.01%)</title><rect x="70.0149%" y="469" width="0.0120%" height="15" fill="rgb(254,103,41)" fg:x="333792" fg:w="57"/><text x="70.2649%" y="479.50"></text></g><g><title>ip_send_check (52 samples, 0.01%)</title><rect x="70.0160%" y="453" width="0.0109%" height="15" fill="rgb(218,213,19)" fg:x="333797" fg:w="52"/><text x="70.2660%" y="463.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (61 samples, 0.01%)</title><rect x="70.0374%" y="437" width="0.0128%" height="15" fill="rgb(253,95,21)" fg:x="333899" fg:w="61"/><text x="70.2874%" y="447.50"></text></g><g><title>dequeue_func (73 samples, 0.02%)</title><rect x="70.1569%" y="325" width="0.0153%" height="15" fill="rgb(229,26,28)" fg:x="334469" fg:w="73"/><text x="70.4069%" y="335.50"></text></g><g><title>codel_dequeue.constprop.0 (140 samples, 0.03%)</title><rect x="70.1521%" y="341" width="0.0294%" height="15" fill="rgb(230,129,16)" fg:x="334446" fg:w="140"/><text x="70.4021%" y="351.50"></text></g><g><title>fq_codel_dequeue (351 samples, 0.07%)</title><rect x="70.1085%" y="357" width="0.0736%" height="15" fill="rgb(236,126,17)" fg:x="334238" fg:w="351"/><text x="70.3585%" y="367.50"></text></g><g><title>_raw_spin_lock (48 samples, 0.01%)</title><rect x="70.1848%" y="341" width="0.0101%" height="15" fill="rgb(209,33,33)" fg:x="334602" fg:w="48"/><text x="70.4348%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath (48 samples, 0.01%)</title><rect x="70.1848%" y="325" width="0.0101%" height="15" fill="rgb(227,85,29)" fg:x="334602" fg:w="48"/><text x="70.4348%" y="335.50"></text></g><g><title>virtqueue_get_buf (57 samples, 0.01%)</title><rect x="70.2136%" y="293" width="0.0120%" height="15" fill="rgb(241,53,46)" fg:x="334739" fg:w="57"/><text x="70.4636%" y="303.50"></text></g><g><title>virtqueue_get_buf_ctx (57 samples, 0.01%)</title><rect x="70.2136%" y="277" width="0.0120%" height="15" fill="rgb(228,167,53)" fg:x="334739" fg:w="57"/><text x="70.4636%" y="287.50"></text></g><g><title>free_old_xmit_skbs (99 samples, 0.02%)</title><rect x="70.2050%" y="309" width="0.0208%" height="15" fill="rgb(238,195,45)" fg:x="334698" fg:w="99"/><text x="70.4550%" y="319.50"></text></g><g><title>virtqueue_add_outbuf (70 samples, 0.01%)</title><rect x="70.2390%" y="309" width="0.0147%" height="15" fill="rgb(252,124,45)" fg:x="334860" fg:w="70"/><text x="70.4890%" y="319.50"></text></g><g><title>iowrite16 (311 samples, 0.07%)</title><rect x="70.2648%" y="293" width="0.0652%" height="15" fill="rgb(251,38,35)" fg:x="334983" fg:w="311"/><text x="70.5148%" y="303.50"></text></g><g><title>virtqueue_notify (318 samples, 0.07%)</title><rect x="70.2643%" y="309" width="0.0667%" height="15" fill="rgb(227,33,2)" fg:x="334981" fg:w="318"/><text x="70.5143%" y="319.50"></text></g><g><title>start_xmit (645 samples, 0.14%)</title><rect x="70.1964%" y="325" width="0.1353%" height="15" fill="rgb(223,157,46)" fg:x="334657" fg:w="645"/><text x="70.4464%" y="335.50"></text></g><g><title>dev_hard_start_xmit (661 samples, 0.14%)</title><rect x="70.1949%" y="341" width="0.1386%" height="15" fill="rgb(222,78,41)" fg:x="334650" fg:w="661"/><text x="70.4449%" y="351.50"></text></g><g><title>validate_xmit_skb (97 samples, 0.02%)</title><rect x="70.3352%" y="325" width="0.0203%" height="15" fill="rgb(248,176,11)" fg:x="335319" fg:w="97"/><text x="70.5852%" y="335.50"></text></g><g><title>__qdisc_run (1,230 samples, 0.26%)</title><rect x="70.0978%" y="373" width="0.2580%" height="15" fill="rgb(241,221,18)" fg:x="334187" fg:w="1230"/><text x="70.3478%" y="383.50"></text></g><g><title>sch_direct_xmit (828 samples, 0.17%)</title><rect x="70.1821%" y="357" width="0.1737%" height="15" fill="rgb(218,85,22)" fg:x="334589" fg:w="828"/><text x="70.4321%" y="367.50"></text></g><g><title>validate_xmit_skb_list (101 samples, 0.02%)</title><rect x="70.3346%" y="341" width="0.0212%" height="15" fill="rgb(222,223,7)" fg:x="335316" fg:w="101"/><text x="70.5846%" y="351.50"></text></g><g><title>_raw_spin_lock (161 samples, 0.03%)</title><rect x="70.3558%" y="373" width="0.0338%" height="15" fill="rgb(254,59,39)" fg:x="335417" fg:w="161"/><text x="70.6058%" y="383.50"></text></g><g><title>native_queued_spin_lock_slowpath (93 samples, 0.02%)</title><rect x="70.3701%" y="357" width="0.0195%" height="15" fill="rgb(247,100,27)" fg:x="335485" fg:w="93"/><text x="70.6201%" y="367.50"></text></g><g><title>fq_codel_enqueue (120 samples, 0.03%)</title><rect x="70.3931%" y="373" width="0.0252%" height="15" fill="rgb(237,207,10)" fg:x="335595" fg:w="120"/><text x="70.6431%" y="383.50"></text></g><g><title>_raw_spin_lock (63 samples, 0.01%)</title><rect x="70.4279%" y="357" width="0.0132%" height="15" fill="rgb(220,121,28)" fg:x="335761" fg:w="63"/><text x="70.6779%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath (63 samples, 0.01%)</title><rect x="70.4279%" y="341" width="0.0132%" height="15" fill="rgb(213,223,20)" fg:x="335761" fg:w="63"/><text x="70.6779%" y="351.50"></text></g><g><title>skb_release_all (56 samples, 0.01%)</title><rect x="70.4737%" y="261" width="0.0117%" height="15" fill="rgb(205,121,27)" fg:x="335979" fg:w="56"/><text x="70.7237%" y="271.50"></text></g><g><title>__dev_kfree_skb_any (60 samples, 0.01%)</title><rect x="70.4730%" y="293" width="0.0126%" height="15" fill="rgb(253,24,53)" fg:x="335976" fg:w="60"/><text x="70.7230%" y="303.50"></text></g><g><title>consume_skb (60 samples, 0.01%)</title><rect x="70.4730%" y="277" width="0.0126%" height="15" fill="rgb(224,224,47)" fg:x="335976" fg:w="60"/><text x="70.7230%" y="287.50"></text></g><g><title>napi_consume_skb (61 samples, 0.01%)</title><rect x="70.4730%" y="309" width="0.0128%" height="15" fill="rgb(250,125,36)" fg:x="335976" fg:w="61"/><text x="70.7230%" y="319.50"></text></g><g><title>virtqueue_get_buf (134 samples, 0.03%)</title><rect x="70.4858%" y="309" width="0.0281%" height="15" fill="rgb(240,144,38)" fg:x="336037" fg:w="134"/><text x="70.7358%" y="319.50"></text></g><g><title>virtqueue_get_buf_ctx (134 samples, 0.03%)</title><rect x="70.4858%" y="293" width="0.0281%" height="15" fill="rgb(250,15,50)" fg:x="336037" fg:w="134"/><text x="70.7358%" y="303.50"></text></g><g><title>free_old_xmit_skbs (236 samples, 0.05%)</title><rect x="70.4649%" y="325" width="0.0495%" height="15" fill="rgb(210,24,26)" fg:x="335937" fg:w="236"/><text x="70.7149%" y="335.50"></text></g><g><title>virtqueue_add_outbuf (127 samples, 0.03%)</title><rect x="70.5230%" y="325" width="0.0266%" height="15" fill="rgb(234,53,53)" fg:x="336214" fg:w="127"/><text x="70.7730%" y="335.50"></text></g><g><title>kmalloc_array (53 samples, 0.01%)</title><rect x="70.5385%" y="309" width="0.0111%" height="15" fill="rgb(208,108,28)" fg:x="336288" fg:w="53"/><text x="70.7885%" y="319.50"></text></g><g><title>virtqueue_kick_prepare (49 samples, 0.01%)</title><rect x="70.5561%" y="325" width="0.0103%" height="15" fill="rgb(227,143,7)" fg:x="336372" fg:w="49"/><text x="70.8061%" y="335.50"></text></g><g><title>iowrite16 (2,239 samples, 0.47%)</title><rect x="70.5689%" y="309" width="0.4696%" height="15" fill="rgb(238,189,38)" fg:x="336433" fg:w="2239"/><text x="70.8189%" y="319.50"></text></g><g><title>virtqueue_notify (2,267 samples, 0.48%)</title><rect x="70.5664%" y="325" width="0.4755%" height="15" fill="rgb(222,69,15)" fg:x="336421" fg:w="2267"/><text x="70.8164%" y="335.50"></text></g><g><title>start_xmit (2,857 samples, 0.60%)</title><rect x="70.4491%" y="341" width="0.5993%" height="15" fill="rgb(213,169,7)" fg:x="335862" fg:w="2857"/><text x="70.6991%" y="351.50"></text></g><g><title>dev_hard_start_xmit (2,906 samples, 0.61%)</title><rect x="70.4412%" y="357" width="0.6096%" height="15" fill="rgb(251,219,4)" fg:x="335824" fg:w="2906"/><text x="70.6912%" y="367.50"></text></g><g><title>validate_xmit_skb (100 samples, 0.02%)</title><rect x="71.0557%" y="341" width="0.0210%" height="15" fill="rgb(241,55,40)" fg:x="338754" fg:w="100"/><text x="71.3057%" y="351.50"></text></g><g><title>sch_direct_xmit (3,135 samples, 0.66%)</title><rect x="70.4221%" y="373" width="0.6576%" height="15" fill="rgb(243,57,30)" fg:x="335733" fg:w="3135"/><text x="70.6721%" y="383.50"></text></g><g><title>validate_xmit_skb_list (130 samples, 0.03%)</title><rect x="71.0524%" y="357" width="0.0273%" height="15" fill="rgb(234,50,30)" fg:x="338738" fg:w="130"/><text x="71.3024%" y="367.50"></text></g><g><title>__dev_queue_xmit (4,803 samples, 1.01%)</title><rect x="70.0726%" y="389" width="1.0075%" height="15" fill="rgb(239,23,42)" fg:x="334067" fg:w="4803"/><text x="70.3226%" y="399.50"></text></g><g><title>_raw_spin_lock (83 samples, 0.02%)</title><rect x="71.0826%" y="389" width="0.0174%" height="15" fill="rgb(217,38,19)" fg:x="338882" fg:w="83"/><text x="71.3326%" y="399.50"></text></g><g><title>ip_finish_output2 (4,995 samples, 1.05%)</title><rect x="70.0539%" y="421" width="1.0477%" height="15" fill="rgb(215,179,16)" fg:x="333978" fg:w="4995"/><text x="70.3039%" y="431.50"></text></g><g><title>dev_queue_xmit (4,908 samples, 1.03%)</title><rect x="70.0722%" y="405" width="1.0295%" height="15" fill="rgb(254,21,37)" fg:x="334065" fg:w="4908"/><text x="70.3222%" y="415.50"></text></g><g><title>__ip_finish_output (5,016 samples, 1.05%)</title><rect x="70.0502%" y="437" width="1.0521%" height="15" fill="rgb(219,207,48)" fg:x="333960" fg:w="5016"/><text x="70.3002%" y="447.50"></text></g><g><title>ip_output (5,134 samples, 1.08%)</title><rect x="70.0273%" y="469" width="1.0769%" height="15" fill="rgb(227,225,41)" fg:x="333851" fg:w="5134"/><text x="70.2773%" y="479.50"></text></g><g><title>ip_finish_output (5,097 samples, 1.07%)</title><rect x="70.0351%" y="453" width="1.0691%" height="15" fill="rgb(223,130,1)" fg:x="333888" fg:w="5097"/><text x="70.2851%" y="463.50"></text></g><g><title>ip_local_out (5,208 samples, 1.09%)</title><rect x="70.0126%" y="485" width="1.0924%" height="15" fill="rgb(249,54,42)" fg:x="333781" fg:w="5208"/><text x="70.2626%" y="495.50"></text></g><g><title>ipv4_dst_check (49 samples, 0.01%)</title><rect x="71.1097%" y="485" width="0.0103%" height="15" fill="rgb(248,69,25)" fg:x="339011" fg:w="49"/><text x="71.3597%" y="495.50"></text></g><g><title>__ip_queue_xmit (5,387 samples, 1.13%)</title><rect x="69.9902%" y="501" width="1.1300%" height="15" fill="rgb(234,21,32)" fg:x="333674" fg:w="5387"/><text x="70.2402%" y="511.50"></text></g><g><title>ip_queue_xmit (5,415 samples, 1.14%)</title><rect x="69.9896%" y="517" width="1.1358%" height="15" fill="rgb(252,136,6)" fg:x="333671" fg:w="5415"/><text x="70.2396%" y="527.50"></text></g><g><title>skb_clone (68 samples, 0.01%)</title><rect x="71.1254%" y="517" width="0.0143%" height="15" fill="rgb(245,87,12)" fg:x="339086" fg:w="68"/><text x="71.3754%" y="527.50"></text></g><g><title>__tcp_transmit_skb (5,788 samples, 1.21%)</title><rect x="69.9390%" y="533" width="1.2141%" height="15" fill="rgb(208,12,15)" fg:x="333430" fg:w="5788"/><text x="70.1890%" y="543.50"></text></g><g><title>kvm_clock_get_cycles (81 samples, 0.02%)</title><rect x="71.1766%" y="517" width="0.0170%" height="15" fill="rgb(250,98,2)" fg:x="339330" fg:w="81"/><text x="71.4266%" y="527.50"></text></g><g><title>pvclock_clocksource_read (72 samples, 0.02%)</title><rect x="71.1785%" y="501" width="0.0151%" height="15" fill="rgb(205,213,15)" fg:x="339339" fg:w="72"/><text x="71.4285%" y="511.50"></text></g><g><title>ktime_get (109 samples, 0.02%)</title><rect x="71.1732%" y="533" width="0.0229%" height="15" fill="rgb(248,192,44)" fg:x="339314" fg:w="109"/><text x="71.4232%" y="543.50"></text></g><g><title>tcp_event_new_data_sent (202 samples, 0.04%)</title><rect x="71.2099%" y="533" width="0.0424%" height="15" fill="rgb(221,89,17)" fg:x="339489" fg:w="202"/><text x="71.4599%" y="543.50"></text></g><g><title>tcp_rearm_rto (118 samples, 0.02%)</title><rect x="71.2275%" y="517" width="0.0248%" height="15" fill="rgb(209,55,3)" fg:x="339573" fg:w="118"/><text x="71.4775%" y="527.50"></text></g><g><title>sk_reset_timer (89 samples, 0.02%)</title><rect x="71.2336%" y="501" width="0.0187%" height="15" fill="rgb(247,23,45)" fg:x="339602" fg:w="89"/><text x="71.4836%" y="511.50"></text></g><g><title>mod_timer (79 samples, 0.02%)</title><rect x="71.2357%" y="485" width="0.0166%" height="15" fill="rgb(235,152,23)" fg:x="339612" fg:w="79"/><text x="71.4857%" y="495.50"></text></g><g><title>tcp_schedule_loss_probe (60 samples, 0.01%)</title><rect x="71.2619%" y="533" width="0.0126%" height="15" fill="rgb(244,63,13)" fg:x="339737" fg:w="60"/><text x="71.5119%" y="543.50"></text></g><g><title>__tcp_push_pending_frames (6,613 samples, 1.39%)</title><rect x="69.9004%" y="565" width="1.3871%" height="15" fill="rgb(227,30,37)" fg:x="333246" fg:w="6613"/><text x="70.1504%" y="575.50"></text></g><g><title>tcp_write_xmit (6,549 samples, 1.37%)</title><rect x="69.9138%" y="549" width="1.3737%" height="15" fill="rgb(224,49,42)" fg:x="333310" fg:w="6549"/><text x="70.1638%" y="559.50"></text></g><g><title>tcp_push (6,622 samples, 1.39%)</title><rect x="69.9002%" y="581" width="1.3890%" height="15" fill="rgb(218,129,5)" fg:x="333245" fg:w="6622"/><text x="70.1502%" y="591.50"></text></g><g><title>tcp_send_mss (124 samples, 0.03%)</title><rect x="71.2923%" y="581" width="0.0260%" height="15" fill="rgb(240,199,54)" fg:x="339882" fg:w="124"/><text x="71.5423%" y="591.50"></text></g><g><title>tcp_current_mss (85 samples, 0.02%)</title><rect x="71.3005%" y="565" width="0.0178%" height="15" fill="rgb(234,31,13)" fg:x="339921" fg:w="85"/><text x="71.5505%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (8,068 samples, 1.69%)</title><rect x="69.6265%" y="597" width="1.6923%" height="15" fill="rgb(219,73,54)" fg:x="331940" fg:w="8068"/><text x="69.8765%" y="607.50"></text></g><g><title>tcp_stream_memory_free (48 samples, 0.01%)</title><rect x="71.3188%" y="597" width="0.0101%" height="15" fill="rgb(251,162,10)" fg:x="340008" fg:w="48"/><text x="71.5688%" y="607.50"></text></g><g><title>tcp_sendmsg (8,296 samples, 1.74%)</title><rect x="69.5891%" y="613" width="1.7401%" height="15" fill="rgb(240,138,47)" fg:x="331762" fg:w="8296"/><text x="69.8391%" y="623.50"></text></g><g><title>inet_sendmsg (8,338 samples, 1.75%)</title><rect x="69.5814%" y="629" width="1.7489%" height="15" fill="rgb(216,138,26)" fg:x="331725" fg:w="8338"/><text x="69.8314%" y="639.50"></text></g><g><title>security_socket_sendmsg (53 samples, 0.01%)</title><rect x="71.3303%" y="629" width="0.0111%" height="15" fill="rgb(243,17,35)" fg:x="340063" fg:w="53"/><text x="71.5803%" y="639.50"></text></g><g><title>sock_sendmsg (8,457 samples, 1.77%)</title><rect x="69.5694%" y="645" width="1.7739%" height="15" fill="rgb(241,60,18)" fg:x="331668" fg:w="8457"/><text x="69.8194%" y="655.50">s..</text></g><g><title>__fdget (69 samples, 0.01%)</title><rect x="71.3444%" y="629" width="0.0145%" height="15" fill="rgb(234,2,44)" fg:x="340130" fg:w="69"/><text x="71.5944%" y="639.50"></text></g><g><title>__fget_light (68 samples, 0.01%)</title><rect x="71.3446%" y="613" width="0.0143%" height="15" fill="rgb(225,225,33)" fg:x="340131" fg:w="68"/><text x="71.5946%" y="623.50"></text></g><g><title>__fget (66 samples, 0.01%)</title><rect x="71.3450%" y="597" width="0.0138%" height="15" fill="rgb(234,50,31)" fg:x="340133" fg:w="66"/><text x="71.5950%" y="607.50"></text></g><g><title>__sys_sendto (8,636 samples, 1.81%)</title><rect x="69.5503%" y="661" width="1.8115%" height="15" fill="rgb(249,6,25)" fg:x="331577" fg:w="8636"/><text x="69.8003%" y="671.50">_..</text></g><g><title>sockfd_lookup_light (88 samples, 0.02%)</title><rect x="71.3433%" y="645" width="0.0185%" height="15" fill="rgb(241,5,17)" fg:x="340125" fg:w="88"/><text x="71.5933%" y="655.50"></text></g><g><title>__x64_sys_sendto (8,663 samples, 1.82%)</title><rect x="69.5503%" y="677" width="1.8171%" height="15" fill="rgb(207,116,10)" fg:x="331577" fg:w="8663"/><text x="69.8003%" y="687.50">_..</text></g><g><title>__libc_send (9,548 samples, 2.00%)</title><rect x="69.3649%" y="725" width="2.0028%" height="15" fill="rgb(222,128,18)" fg:x="330693" fg:w="9548"/><text x="69.6149%" y="735.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (8,937 samples, 1.87%)</title><rect x="69.4931%" y="709" width="1.8746%" height="15" fill="rgb(229,109,25)" fg:x="331304" fg:w="8937"/><text x="69.7431%" y="719.50">e..</text></g><g><title>do_syscall_64 (8,903 samples, 1.87%)</title><rect x="69.5002%" y="693" width="1.8675%" height="15" fill="rgb(222,102,25)" fg:x="331338" fg:w="8903"/><text x="69.7502%" y="703.50">d..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (9,588 samples, 2.01%)</title><rect x="69.3567%" y="821" width="2.0111%" height="15" fill="rgb(239,211,5)" fg:x="330654" fg:w="9588"/><text x="69.6067%" y="831.50">&lt;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (9,578 samples, 2.01%)</title><rect x="69.3588%" y="805" width="2.0090%" height="15" fill="rgb(223,136,26)" fg:x="330664" fg:w="9578"/><text x="69.6088%" y="815.50">m..</text></g><g><title>mio::sys::unix::IoSourceState::do_io (9,578 samples, 2.01%)</title><rect x="69.3588%" y="789" width="2.0090%" height="15" fill="rgb(227,30,15)" fg:x="330664" fg:w="9578"/><text x="69.6088%" y="799.50">m..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (9,578 samples, 2.01%)</title><rect x="69.3588%" y="773" width="2.0090%" height="15" fill="rgb(247,76,4)" fg:x="330664" fg:w="9578"/><text x="69.6088%" y="783.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (9,576 samples, 2.01%)</title><rect x="69.3592%" y="757" width="2.0086%" height="15" fill="rgb(245,38,48)" fg:x="330666" fg:w="9576"/><text x="69.6092%" y="767.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (9,561 samples, 2.01%)</title><rect x="69.3624%" y="741" width="2.0055%" height="15" fill="rgb(210,220,14)" fg:x="330681" fg:w="9561"/><text x="69.6124%" y="751.50">s..</text></g><g><title>std::io::Write::write_all (9,619 samples, 2.02%)</title><rect x="69.3521%" y="837" width="2.0176%" height="15" fill="rgb(224,60,51)" fg:x="330632" fg:w="9619"/><text x="69.6021%" y="847.50">s..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (326 samples, 0.07%)</title><rect x="71.3872%" y="645" width="0.0684%" height="15" fill="rgb(212,133,49)" fg:x="340334" fg:w="326"/><text x="71.6372%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (326 samples, 0.07%)</title><rect x="71.3872%" y="629" width="0.0684%" height="15" fill="rgb(231,39,22)" fg:x="340334" fg:w="326"/><text x="71.6372%" y="639.50"></text></g><g><title>alloc::alloc::realloc (326 samples, 0.07%)</title><rect x="71.3872%" y="613" width="0.0684%" height="15" fill="rgb(236,173,22)" fg:x="340334" fg:w="326"/><text x="71.6372%" y="623.50"></text></g><g><title>realloc (309 samples, 0.06%)</title><rect x="71.3907%" y="597" width="0.0648%" height="15" fill="rgb(210,70,0)" fg:x="340351" fg:w="309"/><text x="71.6407%" y="607.50"></text></g><g><title>[libc-2.31.so] (228 samples, 0.05%)</title><rect x="71.4077%" y="581" width="0.0478%" height="15" fill="rgb(215,170,11)" fg:x="340432" fg:w="228"/><text x="71.6577%" y="591.50"></text></g><g><title>[libc-2.31.so] (200 samples, 0.04%)</title><rect x="71.4136%" y="565" width="0.0420%" height="15" fill="rgb(220,154,28)" fg:x="340460" fg:w="200"/><text x="71.6636%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (334 samples, 0.07%)</title><rect x="71.3857%" y="661" width="0.0701%" height="15" fill="rgb(240,160,41)" fg:x="340327" fg:w="334"/><text x="71.6357%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (361 samples, 0.08%)</title><rect x="71.3815%" y="725" width="0.0757%" height="15" fill="rgb(243,215,41)" fg:x="340307" fg:w="361"/><text x="71.6315%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (361 samples, 0.08%)</title><rect x="71.3815%" y="709" width="0.0757%" height="15" fill="rgb(214,208,31)" fg:x="340307" fg:w="361"/><text x="71.6315%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (356 samples, 0.07%)</title><rect x="71.3825%" y="693" width="0.0747%" height="15" fill="rgb(247,57,22)" fg:x="340312" fg:w="356"/><text x="71.6325%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (353 samples, 0.07%)</title><rect x="71.3832%" y="677" width="0.0740%" height="15" fill="rgb(228,73,52)" fg:x="340315" fg:w="353"/><text x="71.6332%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (394 samples, 0.08%)</title><rect x="71.3792%" y="805" width="0.0826%" height="15" fill="rgb(252,60,9)" fg:x="340296" fg:w="394"/><text x="71.6292%" y="815.50"></text></g><g><title>alloc::string::String::push_str (388 samples, 0.08%)</title><rect x="71.3804%" y="789" width="0.0814%" height="15" fill="rgb(233,9,51)" fg:x="340302" fg:w="388"/><text x="71.6304%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (388 samples, 0.08%)</title><rect x="71.3804%" y="773" width="0.0814%" height="15" fill="rgb(223,67,14)" fg:x="340302" fg:w="388"/><text x="71.6304%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (388 samples, 0.08%)</title><rect x="71.3804%" y="757" width="0.0814%" height="15" fill="rgb(222,86,2)" fg:x="340302" fg:w="388"/><text x="71.6304%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (388 samples, 0.08%)</title><rect x="71.3804%" y="741" width="0.0814%" height="15" fill="rgb(243,58,54)" fg:x="340302" fg:w="388"/><text x="71.6304%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (159 samples, 0.03%)</title><rect x="71.4832%" y="581" width="0.0334%" height="15" fill="rgb(210,200,39)" fg:x="340792" fg:w="159"/><text x="71.7332%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (159 samples, 0.03%)</title><rect x="71.4832%" y="565" width="0.0334%" height="15" fill="rgb(238,135,9)" fg:x="340792" fg:w="159"/><text x="71.7332%" y="575.50"></text></g><g><title>alloc::alloc::realloc (159 samples, 0.03%)</title><rect x="71.4832%" y="549" width="0.0334%" height="15" fill="rgb(232,179,7)" fg:x="340792" fg:w="159"/><text x="71.7332%" y="559.50"></text></g><g><title>realloc (148 samples, 0.03%)</title><rect x="71.4855%" y="533" width="0.0310%" height="15" fill="rgb(245,65,41)" fg:x="340803" fg:w="148"/><text x="71.7355%" y="543.50"></text></g><g><title>[libc-2.31.so] (63 samples, 0.01%)</title><rect x="71.5034%" y="517" width="0.0132%" height="15" fill="rgb(227,43,8)" fg:x="340888" fg:w="63"/><text x="71.7534%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (190 samples, 0.04%)</title><rect x="71.4803%" y="597" width="0.0399%" height="15" fill="rgb(235,91,14)" fg:x="340778" fg:w="190"/><text x="71.7303%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (214 samples, 0.04%)</title><rect x="71.4761%" y="661" width="0.0449%" height="15" fill="rgb(235,219,31)" fg:x="340758" fg:w="214"/><text x="71.7261%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (211 samples, 0.04%)</title><rect x="71.4767%" y="645" width="0.0443%" height="15" fill="rgb(227,121,25)" fg:x="340761" fg:w="211"/><text x="71.7267%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 samples, 0.04%)</title><rect x="71.4774%" y="629" width="0.0436%" height="15" fill="rgb(254,129,24)" fg:x="340764" fg:w="208"/><text x="71.7274%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (204 samples, 0.04%)</title><rect x="71.4782%" y="613" width="0.0428%" height="15" fill="rgb(226,144,49)" fg:x="340768" fg:w="204"/><text x="71.7282%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (272 samples, 0.06%)</title><rect x="71.4700%" y="757" width="0.0571%" height="15" fill="rgb(214,187,32)" fg:x="340729" fg:w="272"/><text x="71.7200%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (249 samples, 0.05%)</title><rect x="71.4748%" y="741" width="0.0522%" height="15" fill="rgb(243,129,46)" fg:x="340752" fg:w="249"/><text x="71.7248%" y="751.50"></text></g><g><title>alloc::string::String::push_str (249 samples, 0.05%)</title><rect x="71.4748%" y="725" width="0.0522%" height="15" fill="rgb(221,185,35)" fg:x="340752" fg:w="249"/><text x="71.7248%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (249 samples, 0.05%)</title><rect x="71.4748%" y="709" width="0.0522%" height="15" fill="rgb(205,0,32)" fg:x="340752" fg:w="249"/><text x="71.7248%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (249 samples, 0.05%)</title><rect x="71.4748%" y="693" width="0.0522%" height="15" fill="rgb(229,179,12)" fg:x="340752" fg:w="249"/><text x="71.7248%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (249 samples, 0.05%)</title><rect x="71.4748%" y="677" width="0.0522%" height="15" fill="rgb(252,107,19)" fg:x="340752" fg:w="249"/><text x="71.7248%" y="687.50"></text></g><g><title>alloc::fmt::format (378 samples, 0.08%)</title><rect x="71.4625%" y="805" width="0.0793%" height="15" fill="rgb(220,95,27)" fg:x="340693" fg:w="378"/><text x="71.7125%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (359 samples, 0.08%)</title><rect x="71.4664%" y="789" width="0.0753%" height="15" fill="rgb(240,113,40)" fg:x="340712" fg:w="359"/><text x="71.7164%" y="799.50"></text></g><g><title>core::fmt::write (356 samples, 0.07%)</title><rect x="71.4671%" y="773" width="0.0747%" height="15" fill="rgb(208,4,43)" fg:x="340715" fg:w="356"/><text x="71.7171%" y="783.50"></text></g><g><title>alloc::str::join_generic_copy (110 samples, 0.02%)</title><rect x="71.5420%" y="773" width="0.0231%" height="15" fill="rgb(247,189,30)" fg:x="341072" fg:w="110"/><text x="71.7920%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (112 samples, 0.02%)</title><rect x="71.5417%" y="805" width="0.0235%" height="15" fill="rgb(231,157,17)" fg:x="341071" fg:w="112"/><text x="71.7917%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (112 samples, 0.02%)</title><rect x="71.5417%" y="789" width="0.0235%" height="15" fill="rgb(224,139,6)" fg:x="341071" fg:w="112"/><text x="71.7917%" y="799.50"></text></g><g><title>[libc-2.31.so] (167 samples, 0.04%)</title><rect x="71.6909%" y="341" width="0.0350%" height="15" fill="rgb(223,83,16)" fg:x="341782" fg:w="167"/><text x="71.9409%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (452 samples, 0.09%)</title><rect x="71.6315%" y="421" width="0.0948%" height="15" fill="rgb(232,211,20)" fg:x="341499" fg:w="452"/><text x="71.8815%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (452 samples, 0.09%)</title><rect x="71.6315%" y="405" width="0.0948%" height="15" fill="rgb(225,203,35)" fg:x="341499" fg:w="452"/><text x="71.8815%" y="415.50"></text></g><g><title>alloc::alloc::realloc (451 samples, 0.09%)</title><rect x="71.6317%" y="389" width="0.0946%" height="15" fill="rgb(215,211,44)" fg:x="341500" fg:w="451"/><text x="71.8817%" y="399.50"></text></g><g><title>realloc (423 samples, 0.09%)</title><rect x="71.6376%" y="373" width="0.0887%" height="15" fill="rgb(248,213,26)" fg:x="341528" fg:w="423"/><text x="71.8876%" y="383.50"></text></g><g><title>[libc-2.31.so] (230 samples, 0.05%)</title><rect x="71.6781%" y="357" width="0.0482%" height="15" fill="rgb(214,23,52)" fg:x="341721" fg:w="230"/><text x="71.9281%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (570 samples, 0.12%)</title><rect x="71.6215%" y="437" width="0.1196%" height="15" fill="rgb(225,173,50)" fg:x="341451" fg:w="570"/><text x="71.8715%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (662 samples, 0.14%)</title><rect x="71.6099%" y="501" width="0.1389%" height="15" fill="rgb(206,150,22)" fg:x="341396" fg:w="662"/><text x="71.8599%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (655 samples, 0.14%)</title><rect x="71.6114%" y="485" width="0.1374%" height="15" fill="rgb(239,64,23)" fg:x="341403" fg:w="655"/><text x="71.8614%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (644 samples, 0.14%)</title><rect x="71.6137%" y="469" width="0.1351%" height="15" fill="rgb(242,50,38)" fg:x="341414" fg:w="644"/><text x="71.8637%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (634 samples, 0.13%)</title><rect x="71.6158%" y="453" width="0.1330%" height="15" fill="rgb(217,91,15)" fg:x="341424" fg:w="634"/><text x="71.8658%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (62 samples, 0.01%)</title><rect x="71.7488%" y="501" width="0.0130%" height="15" fill="rgb(230,172,6)" fg:x="342058" fg:w="62"/><text x="71.9988%" y="511.50"></text></g><g><title>[libc-2.31.so] (58 samples, 0.01%)</title><rect x="71.7496%" y="485" width="0.0122%" height="15" fill="rgb(221,98,26)" fg:x="342062" fg:w="58"/><text x="71.9996%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (775 samples, 0.16%)</title><rect x="71.6001%" y="597" width="0.1626%" height="15" fill="rgb(227,210,45)" fg:x="341349" fg:w="775"/><text x="71.8501%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (739 samples, 0.16%)</title><rect x="71.6076%" y="581" width="0.1550%" height="15" fill="rgb(206,8,30)" fg:x="341385" fg:w="739"/><text x="71.8576%" y="591.50"></text></g><g><title>alloc::string::String::push_str (739 samples, 0.16%)</title><rect x="71.6076%" y="565" width="0.1550%" height="15" fill="rgb(241,219,17)" fg:x="341385" fg:w="739"/><text x="71.8576%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (739 samples, 0.16%)</title><rect x="71.6076%" y="549" width="0.1550%" height="15" fill="rgb(247,121,29)" fg:x="341385" fg:w="739"/><text x="71.8576%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (739 samples, 0.16%)</title><rect x="71.6076%" y="533" width="0.1550%" height="15" fill="rgb(219,169,49)" fg:x="341385" fg:w="739"/><text x="71.8576%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (739 samples, 0.16%)</title><rect x="71.6076%" y="517" width="0.1550%" height="15" fill="rgb(253,49,49)" fg:x="341385" fg:w="739"/><text x="71.8576%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (903 samples, 0.19%)</title><rect x="71.5881%" y="629" width="0.1894%" height="15" fill="rgb(217,178,3)" fg:x="341292" fg:w="903"/><text x="71.8381%" y="639.50"></text></g><g><title>core::fmt::write (889 samples, 0.19%)</title><rect x="71.5910%" y="613" width="0.1865%" height="15" fill="rgb(234,73,37)" fg:x="341306" fg:w="889"/><text x="71.8410%" y="623.50"></text></g><g><title>alloc::fmt::format (959 samples, 0.20%)</title><rect x="71.5768%" y="645" width="0.2012%" height="15" fill="rgb(250,98,22)" fg:x="341238" fg:w="959"/><text x="71.8268%" y="655.50"></text></g><g><title>[libc-2.31.so] (173 samples, 0.04%)</title><rect x="71.7823%" y="533" width="0.0363%" height="15" fill="rgb(220,108,37)" fg:x="342218" fg:w="173"/><text x="72.0323%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (247 samples, 0.05%)</title><rect x="71.7817%" y="565" width="0.0518%" height="15" fill="rgb(225,168,10)" fg:x="342215" fg:w="247"/><text x="72.0317%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (247 samples, 0.05%)</title><rect x="71.7817%" y="549" width="0.0518%" height="15" fill="rgb(247,215,21)" fg:x="342215" fg:w="247"/><text x="72.0317%" y="559.50"></text></g><g><title>cfree (59 samples, 0.01%)</title><rect x="71.8211%" y="533" width="0.0124%" height="15" fill="rgb(253,189,31)" fg:x="342403" fg:w="59"/><text x="72.0711%" y="543.50"></text></g><g><title>&lt;parsed::http::Response as core::convert::Into&lt;alloc::string::String&gt;&gt;::into::{{closure}} (1,238 samples, 0.26%)</title><rect x="71.5749%" y="661" width="0.2597%" height="15" fill="rgb(241,54,22)" fg:x="341229" fg:w="1238"/><text x="71.8249%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Header&gt; (255 samples, 0.05%)</title><rect x="71.7811%" y="645" width="0.0535%" height="15" fill="rgb(211,87,4)" fg:x="342212" fg:w="255"/><text x="72.0311%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (255 samples, 0.05%)</title><rect x="71.7811%" y="629" width="0.0535%" height="15" fill="rgb(245,112,24)" fg:x="342212" fg:w="255"/><text x="72.0311%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (255 samples, 0.05%)</title><rect x="71.7811%" y="613" width="0.0535%" height="15" fill="rgb(235,190,41)" fg:x="342212" fg:w="255"/><text x="72.0311%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (255 samples, 0.05%)</title><rect x="71.7811%" y="597" width="0.0535%" height="15" fill="rgb(214,89,8)" fg:x="342212" fg:w="255"/><text x="72.0311%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (255 samples, 0.05%)</title><rect x="71.7811%" y="581" width="0.0535%" height="15" fill="rgb(249,155,35)" fg:x="342212" fg:w="255"/><text x="72.0311%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,246 samples, 0.26%)</title><rect x="71.5745%" y="677" width="0.2614%" height="15" fill="rgb(249,88,26)" fg:x="341227" fg:w="1246"/><text x="71.8245%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,307 samples, 0.27%)</title><rect x="71.5692%" y="741" width="0.2742%" height="15" fill="rgb(232,56,8)" fg:x="341202" fg:w="1307"/><text x="71.8192%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,307 samples, 0.27%)</title><rect x="71.5692%" y="725" width="0.2742%" height="15" fill="rgb(240,95,3)" fg:x="341202" fg:w="1307"/><text x="71.8192%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,305 samples, 0.27%)</title><rect x="71.5696%" y="709" width="0.2737%" height="15" fill="rgb(222,44,28)" fg:x="341204" fg:w="1305"/><text x="71.8196%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,298 samples, 0.27%)</title><rect x="71.5711%" y="693" width="0.2723%" height="15" fill="rgb(234,16,30)" fg:x="341211" fg:w="1298"/><text x="71.8211%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,355 samples, 0.28%)</title><rect x="71.5661%" y="805" width="0.2842%" height="15" fill="rgb(223,26,17)" fg:x="341187" fg:w="1355"/><text x="71.8161%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,355 samples, 0.28%)</title><rect x="71.5661%" y="789" width="0.2842%" height="15" fill="rgb(239,187,47)" fg:x="341187" fg:w="1355"/><text x="71.8161%" y="799.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1,354 samples, 0.28%)</title><rect x="71.5663%" y="773" width="0.2840%" height="15" fill="rgb(247,102,50)" fg:x="341188" fg:w="1354"/><text x="71.8163%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,341 samples, 0.28%)</title><rect x="71.5690%" y="757" width="0.2813%" height="15" fill="rgb(231,216,22)" fg:x="341201" fg:w="1341"/><text x="71.8190%" y="767.50"></text></g><g><title>[libc-2.31.so] (98 samples, 0.02%)</title><rect x="71.8513%" y="709" width="0.0206%" height="15" fill="rgb(216,201,26)" fg:x="342547" fg:w="98"/><text x="72.1013%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (168 samples, 0.04%)</title><rect x="71.8507%" y="741" width="0.0352%" height="15" fill="rgb(214,186,23)" fg:x="342544" fg:w="168"/><text x="72.1007%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (168 samples, 0.04%)</title><rect x="71.8507%" y="725" width="0.0352%" height="15" fill="rgb(235,184,4)" fg:x="342544" fg:w="168"/><text x="72.1007%" y="735.50"></text></g><g><title>cfree (51 samples, 0.01%)</title><rect x="71.8753%" y="709" width="0.0107%" height="15" fill="rgb(244,46,17)" fg:x="342661" fg:w="51"/><text x="72.1253%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (171 samples, 0.04%)</title><rect x="71.8503%" y="805" width="0.0359%" height="15" fill="rgb(248,74,46)" fg:x="342542" fg:w="171"/><text x="72.1003%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (171 samples, 0.04%)</title><rect x="71.8503%" y="789" width="0.0359%" height="15" fill="rgb(243,79,5)" fg:x="342542" fg:w="171"/><text x="72.1003%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (171 samples, 0.04%)</title><rect x="71.8503%" y="773" width="0.0359%" height="15" fill="rgb(213,148,1)" fg:x="342542" fg:w="171"/><text x="72.1003%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (171 samples, 0.04%)</title><rect x="71.8503%" y="757" width="0.0359%" height="15" fill="rgb(221,30,0)" fg:x="342542" fg:w="171"/><text x="72.1003%" y="767.50"></text></g><g><title>[libc-2.31.so] (94 samples, 0.02%)</title><rect x="71.8868%" y="661" width="0.0197%" height="15" fill="rgb(207,85,29)" fg:x="342716" fg:w="94"/><text x="72.1368%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (120 samples, 0.03%)</title><rect x="71.8868%" y="693" width="0.0252%" height="15" fill="rgb(239,31,46)" fg:x="342716" fg:w="120"/><text x="72.1368%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (120 samples, 0.03%)</title><rect x="71.8868%" y="677" width="0.0252%" height="15" fill="rgb(219,6,1)" fg:x="342716" fg:w="120"/><text x="72.1368%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 samples, 0.03%)</title><rect x="71.8862%" y="789" width="0.0260%" height="15" fill="rgb(229,90,29)" fg:x="342713" fg:w="124"/><text x="72.1362%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (124 samples, 0.03%)</title><rect x="71.8862%" y="773" width="0.0260%" height="15" fill="rgb(242,201,42)" fg:x="342713" fg:w="124"/><text x="72.1362%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (123 samples, 0.03%)</title><rect x="71.8864%" y="757" width="0.0258%" height="15" fill="rgb(243,80,54)" fg:x="342714" fg:w="123"/><text x="72.1364%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (123 samples, 0.03%)</title><rect x="71.8864%" y="741" width="0.0258%" height="15" fill="rgb(223,166,15)" fg:x="342714" fg:w="123"/><text x="72.1364%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (123 samples, 0.03%)</title><rect x="71.8864%" y="725" width="0.0258%" height="15" fill="rgb(238,78,27)" fg:x="342714" fg:w="123"/><text x="72.1364%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (123 samples, 0.03%)</title><rect x="71.8864%" y="709" width="0.0258%" height="15" fill="rgb(235,28,43)" fg:x="342714" fg:w="123"/><text x="72.1364%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (155 samples, 0.03%)</title><rect x="71.8862%" y="805" width="0.0325%" height="15" fill="rgb(240,210,28)" fg:x="342713" fg:w="155"/><text x="72.1362%" y="815.50"></text></g><g><title>alloc::string::String::reserve (51 samples, 0.01%)</title><rect x="71.9220%" y="741" width="0.0107%" height="15" fill="rgb(253,6,46)" fg:x="342884" fg:w="51"/><text x="72.1720%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (51 samples, 0.01%)</title><rect x="71.9220%" y="725" width="0.0107%" height="15" fill="rgb(250,159,47)" fg:x="342884" fg:w="51"/><text x="72.1720%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (51 samples, 0.01%)</title><rect x="71.9220%" y="709" width="0.0107%" height="15" fill="rgb(216,139,2)" fg:x="342884" fg:w="51"/><text x="72.1720%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (119 samples, 0.02%)</title><rect x="71.9204%" y="757" width="0.0250%" height="15" fill="rgb(221,124,44)" fg:x="342876" fg:w="119"/><text x="72.1704%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (60 samples, 0.01%)</title><rect x="71.9327%" y="741" width="0.0126%" height="15" fill="rgb(205,37,22)" fg:x="342935" fg:w="60"/><text x="72.1827%" y="751.50"></text></g><g><title>&lt;parsed::http::Response as core::convert::Into&lt;alloc::string::String&gt;&gt;::into (2,718 samples, 0.57%)</title><rect x="71.3754%" y="821" width="0.5701%" height="15" fill="rgb(250,55,8)" fg:x="340278" fg:w="2718"/><text x="71.6254%" y="831.50"></text></g><g><title>parsed::http::as_string (128 samples, 0.03%)</title><rect x="71.9187%" y="805" width="0.0268%" height="15" fill="rgb(215,83,48)" fg:x="342868" fg:w="128"/><text x="72.1687%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (127 samples, 0.03%)</title><rect x="71.9189%" y="789" width="0.0266%" height="15" fill="rgb(253,2,32)" fg:x="342869" fg:w="127"/><text x="72.1689%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (125 samples, 0.03%)</title><rect x="71.9193%" y="773" width="0.0262%" height="15" fill="rgb(236,67,28)" fg:x="342871" fg:w="125"/><text x="72.1693%" y="783.50"></text></g><g><title>[libc-2.31.so] (76 samples, 0.02%)</title><rect x="71.9608%" y="709" width="0.0159%" height="15" fill="rgb(252,55,15)" fg:x="343069" fg:w="76"/><text x="72.2108%" y="719.50"></text></g><g><title>[libc-2.31.so] (149 samples, 0.03%)</title><rect x="71.9457%" y="725" width="0.0313%" height="15" fill="rgb(243,173,17)" fg:x="342997" fg:w="149"/><text x="72.1957%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (167 samples, 0.04%)</title><rect x="71.9455%" y="821" width="0.0350%" height="15" fill="rgb(215,212,13)" fg:x="342996" fg:w="167"/><text x="72.1955%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (167 samples, 0.04%)</title><rect x="71.9455%" y="805" width="0.0350%" height="15" fill="rgb(253,176,6)" fg:x="342996" fg:w="167"/><text x="72.1955%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (167 samples, 0.04%)</title><rect x="71.9455%" y="789" width="0.0350%" height="15" fill="rgb(236,105,26)" fg:x="342996" fg:w="167"/><text x="72.1955%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (167 samples, 0.04%)</title><rect x="71.9455%" y="773" width="0.0350%" height="15" fill="rgb(239,226,32)" fg:x="342996" fg:w="167"/><text x="72.1955%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (166 samples, 0.03%)</title><rect x="71.9457%" y="757" width="0.0348%" height="15" fill="rgb(236,104,51)" fg:x="342997" fg:w="166"/><text x="72.1957%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (166 samples, 0.03%)</title><rect x="71.9457%" y="741" width="0.0348%" height="15" fill="rgb(220,172,33)" fg:x="342997" fg:w="166"/><text x="72.1957%" y="751.50"></text></g><g><title>core::fmt::Formatter::pad_integral (49 samples, 0.01%)</title><rect x="72.0359%" y="629" width="0.0103%" height="15" fill="rgb(224,182,25)" fg:x="343427" fg:w="49"/><text x="72.2859%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (125 samples, 0.03%)</title><rect x="72.0213%" y="661" width="0.0262%" height="15" fill="rgb(236,184,24)" fg:x="343357" fg:w="125"/><text x="72.2713%" y="671.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (108 samples, 0.02%)</title><rect x="72.0248%" y="645" width="0.0227%" height="15" fill="rgb(241,221,14)" fg:x="343374" fg:w="108"/><text x="72.2748%" y="655.50"></text></g><g><title>alloc::fmt::format (220 samples, 0.05%)</title><rect x="72.0026%" y="709" width="0.0461%" height="15" fill="rgb(227,146,5)" fg:x="343268" fg:w="220"/><text x="72.2526%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (192 samples, 0.04%)</title><rect x="72.0085%" y="693" width="0.0403%" height="15" fill="rgb(214,15,23)" fg:x="343296" fg:w="192"/><text x="72.2585%" y="703.50"></text></g><g><title>core::fmt::write (189 samples, 0.04%)</title><rect x="72.0091%" y="677" width="0.0396%" height="15" fill="rgb(233,157,31)" fg:x="343299" fg:w="189"/><text x="72.2591%" y="687.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (225 samples, 0.05%)</title><rect x="72.0017%" y="725" width="0.0472%" height="15" fill="rgb(211,27,52)" fg:x="343264" fg:w="225"/><text x="72.2517%" y="735.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (291 samples, 0.06%)</title><rect x="71.9931%" y="757" width="0.0610%" height="15" fill="rgb(212,223,15)" fg:x="343223" fg:w="291"/><text x="72.2431%" y="767.50"></text></g><g><title>parsed::parser::bytes::{{closure}} (284 samples, 0.06%)</title><rect x="71.9946%" y="741" width="0.0596%" height="15" fill="rgb(254,211,0)" fg:x="343230" fg:w="284"/><text x="72.2446%" y="751.50"></text></g><g><title>alloc::string::String::with_capacity (50 samples, 0.01%)</title><rect x="72.0823%" y="645" width="0.0105%" height="15" fill="rgb(205,43,38)" fg:x="343648" fg:w="50"/><text x="72.3323%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (48 samples, 0.01%)</title><rect x="72.0827%" y="629" width="0.0101%" height="15" fill="rgb(242,206,46)" fg:x="343650" fg:w="48"/><text x="72.3327%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (48 samples, 0.01%)</title><rect x="72.0827%" y="613" width="0.0101%" height="15" fill="rgb(220,221,12)" fg:x="343650" fg:w="48"/><text x="72.3327%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (48 samples, 0.01%)</title><rect x="72.0827%" y="597" width="0.0101%" height="15" fill="rgb(217,156,35)" fg:x="343650" fg:w="48"/><text x="72.3327%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (48 samples, 0.01%)</title><rect x="72.0827%" y="581" width="0.0101%" height="15" fill="rgb(207,181,49)" fg:x="343650" fg:w="48"/><text x="72.3327%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (51 samples, 0.01%)</title><rect x="72.1037%" y="613" width="0.0107%" height="15" fill="rgb(235,103,47)" fg:x="343750" fg:w="51"/><text x="72.3537%" y="623.50"></text></g><g><title>alloc::fmt::format (180 samples, 0.04%)</title><rect x="72.0808%" y="661" width="0.0378%" height="15" fill="rgb(222,63,28)" fg:x="343641" fg:w="180"/><text x="72.3308%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (117 samples, 0.02%)</title><rect x="72.0940%" y="645" width="0.0245%" height="15" fill="rgb(244,137,21)" fg:x="343704" fg:w="117"/><text x="72.3440%" y="655.50"></text></g><g><title>core::fmt::write (112 samples, 0.02%)</title><rect x="72.0951%" y="629" width="0.0235%" height="15" fill="rgb(228,35,27)" fg:x="343709" fg:w="112"/><text x="72.3451%" y="639.50"></text></g><g><title>alloc::string::String::with_capacity (49 samples, 0.01%)</title><rect x="72.1370%" y="629" width="0.0103%" height="15" fill="rgb(226,191,41)" fg:x="343909" fg:w="49"/><text x="72.3870%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (49 samples, 0.01%)</title><rect x="72.1370%" y="613" width="0.0103%" height="15" fill="rgb(210,154,3)" fg:x="343909" fg:w="49"/><text x="72.3870%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (49 samples, 0.01%)</title><rect x="72.1370%" y="597" width="0.0103%" height="15" fill="rgb(216,60,49)" fg:x="343909" fg:w="49"/><text x="72.3870%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (49 samples, 0.01%)</title><rect x="72.1370%" y="581" width="0.0103%" height="15" fill="rgb(226,17,20)" fg:x="343909" fg:w="49"/><text x="72.3870%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (49 samples, 0.01%)</title><rect x="72.1370%" y="565" width="0.0103%" height="15" fill="rgb(206,115,35)" fg:x="343909" fg:w="49"/><text x="72.3870%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.01%)</title><rect x="72.1370%" y="549" width="0.0103%" height="15" fill="rgb(227,88,1)" fg:x="343909" fg:w="49"/><text x="72.3870%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.01%)</title><rect x="72.1370%" y="533" width="0.0103%" height="15" fill="rgb(230,222,24)" fg:x="343909" fg:w="49"/><text x="72.3870%" y="543.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.01%)</title><rect x="72.1370%" y="517" width="0.0103%" height="15" fill="rgb(214,124,32)" fg:x="343909" fg:w="49"/><text x="72.3870%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (128 samples, 0.03%)</title><rect x="72.1626%" y="597" width="0.0268%" height="15" fill="rgb(240,41,36)" fg:x="344031" fg:w="128"/><text x="72.4126%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (80 samples, 0.02%)</title><rect x="72.1727%" y="581" width="0.0168%" height="15" fill="rgb(221,17,52)" fg:x="344079" fg:w="80"/><text x="72.4227%" y="591.50"></text></g><g><title>alloc::string::String::push_str (80 samples, 0.02%)</title><rect x="72.1727%" y="565" width="0.0168%" height="15" fill="rgb(252,70,16)" fg:x="344079" fg:w="80"/><text x="72.4227%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (80 samples, 0.02%)</title><rect x="72.1727%" y="549" width="0.0168%" height="15" fill="rgb(250,177,4)" fg:x="344079" fg:w="80"/><text x="72.4227%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (80 samples, 0.02%)</title><rect x="72.1727%" y="533" width="0.0168%" height="15" fill="rgb(240,188,47)" fg:x="344079" fg:w="80"/><text x="72.4227%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (80 samples, 0.02%)</title><rect x="72.1727%" y="517" width="0.0168%" height="15" fill="rgb(215,92,12)" fg:x="344079" fg:w="80"/><text x="72.4227%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (64 samples, 0.01%)</title><rect x="72.1761%" y="501" width="0.0134%" height="15" fill="rgb(242,110,29)" fg:x="344095" fg:w="64"/><text x="72.4261%" y="511.50"></text></g><g><title>[libc-2.31.so] (62 samples, 0.01%)</title><rect x="72.1765%" y="485" width="0.0130%" height="15" fill="rgb(208,211,26)" fg:x="344097" fg:w="62"/><text x="72.4265%" y="495.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (64 samples, 0.01%)</title><rect x="72.1991%" y="597" width="0.0134%" height="15" fill="rgb(244,147,6)" fg:x="344205" fg:w="64"/><text x="72.4491%" y="607.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (61 samples, 0.01%)</title><rect x="72.1998%" y="581" width="0.0128%" height="15" fill="rgb(211,130,42)" fg:x="344208" fg:w="61"/><text x="72.4498%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (294 samples, 0.06%)</title><rect x="72.1521%" y="629" width="0.0617%" height="15" fill="rgb(220,63,1)" fg:x="343981" fg:w="294"/><text x="72.4021%" y="639.50"></text></g><g><title>core::fmt::write (288 samples, 0.06%)</title><rect x="72.1534%" y="613" width="0.0604%" height="15" fill="rgb(241,212,30)" fg:x="343987" fg:w="288"/><text x="72.4034%" y="623.50"></text></g><g><title>alloc::fmt::format (376 samples, 0.08%)</title><rect x="72.1352%" y="645" width="0.0789%" height="15" fill="rgb(233,153,17)" fg:x="343900" fg:w="376"/><text x="72.3852%" y="655.50"></text></g><g><title>[libc-2.31.so] (52 samples, 0.01%)</title><rect x="72.2151%" y="549" width="0.0109%" height="15" fill="rgb(236,3,10)" fg:x="344281" fg:w="52"/><text x="72.4651%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (93 samples, 0.02%)</title><rect x="72.2146%" y="581" width="0.0195%" height="15" fill="rgb(232,41,21)" fg:x="344279" fg:w="93"/><text x="72.4646%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (93 samples, 0.02%)</title><rect x="72.2146%" y="565" width="0.0195%" height="15" fill="rgb(206,63,51)" fg:x="344279" fg:w="93"/><text x="72.4646%" y="575.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (500 samples, 0.10%)</title><rect x="72.1295%" y="661" width="0.1049%" height="15" fill="rgb(250,214,3)" fg:x="343873" fg:w="500"/><text x="72.3795%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (97 samples, 0.02%)</title><rect x="72.2140%" y="645" width="0.0203%" height="15" fill="rgb(254,89,27)" fg:x="344276" fg:w="97"/><text x="72.4640%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (97 samples, 0.02%)</title><rect x="72.2140%" y="629" width="0.0203%" height="15" fill="rgb(249,41,14)" fg:x="344276" fg:w="97"/><text x="72.4640%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (97 samples, 0.02%)</title><rect x="72.2140%" y="613" width="0.0203%" height="15" fill="rgb(221,196,51)" fg:x="344276" fg:w="97"/><text x="72.4640%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.02%)</title><rect x="72.2140%" y="597" width="0.0203%" height="15" fill="rgb(214,116,26)" fg:x="344276" fg:w="97"/><text x="72.4640%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (63 samples, 0.01%)</title><rect x="72.2367%" y="645" width="0.0132%" height="15" fill="rgb(236,67,7)" fg:x="344384" fg:w="63"/><text x="72.4867%" y="655.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (912 samples, 0.19%)</title><rect x="72.0701%" y="693" width="0.1913%" height="15" fill="rgb(253,179,32)" fg:x="343590" fg:w="912"/><text x="72.3201%" y="703.50"></text></g><g><title>parsed::parser::single::{{closure}} (904 samples, 0.19%)</title><rect x="72.0718%" y="677" width="0.1896%" height="15" fill="rgb(218,33,15)" fg:x="343598" fg:w="904"/><text x="72.3218%" y="687.50"></text></g><g><title>parsed::stream::ByteStream::next (129 samples, 0.03%)</title><rect x="72.2344%" y="661" width="0.0271%" height="15" fill="rgb(217,202,41)" fg:x="344373" fg:w="129"/><text x="72.4844%" y="671.50"></text></g><g><title>parsed::stream::ByteStream::get (55 samples, 0.01%)</title><rect x="72.2499%" y="645" width="0.0115%" height="15" fill="rgb(234,133,5)" fg:x="344447" fg:w="55"/><text x="72.4999%" y="655.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,041 samples, 0.22%)</title><rect x="72.0649%" y="725" width="0.2184%" height="15" fill="rgb(240,47,40)" fg:x="343565" fg:w="1041"/><text x="72.3149%" y="735.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,038 samples, 0.22%)</title><rect x="72.0655%" y="709" width="0.2177%" height="15" fill="rgb(234,166,26)" fg:x="343568" fg:w="1038"/><text x="72.3155%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (56 samples, 0.01%)</title><rect x="72.2715%" y="693" width="0.0117%" height="15" fill="rgb(244,125,51)" fg:x="344550" fg:w="56"/><text x="72.5215%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (56 samples, 0.01%)</title><rect x="72.2715%" y="677" width="0.0117%" height="15" fill="rgb(229,171,11)" fg:x="344550" fg:w="56"/><text x="72.5215%" y="687.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (54 samples, 0.01%)</title><rect x="72.2719%" y="661" width="0.0113%" height="15" fill="rgb(224,38,45)" fg:x="344552" fg:w="54"/><text x="72.5219%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (48 samples, 0.01%)</title><rect x="72.2732%" y="645" width="0.0101%" height="15" fill="rgb(237,27,7)" fg:x="344558" fg:w="48"/><text x="72.5232%" y="655.50"></text></g><g><title>__libc_malloc (321 samples, 0.07%)</title><rect x="72.3227%" y="405" width="0.0673%" height="15" fill="rgb(216,52,7)" fg:x="344794" fg:w="321"/><text x="72.5727%" y="415.50"></text></g><g><title>[libc-2.31.so] (217 samples, 0.05%)</title><rect x="72.3445%" y="389" width="0.0455%" height="15" fill="rgb(243,11,11)" fg:x="344898" fg:w="217"/><text x="72.5945%" y="399.50"></text></g><g><title>alloc::string::String::with_capacity (326 samples, 0.07%)</title><rect x="72.3225%" y="533" width="0.0684%" height="15" fill="rgb(253,167,20)" fg:x="344793" fg:w="326"/><text x="72.5725%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (325 samples, 0.07%)</title><rect x="72.3227%" y="517" width="0.0682%" height="15" fill="rgb(215,207,5)" fg:x="344794" fg:w="325"/><text x="72.5727%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (325 samples, 0.07%)</title><rect x="72.3227%" y="501" width="0.0682%" height="15" fill="rgb(252,127,31)" fg:x="344794" fg:w="325"/><text x="72.5727%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (325 samples, 0.07%)</title><rect x="72.3227%" y="485" width="0.0682%" height="15" fill="rgb(209,106,27)" fg:x="344794" fg:w="325"/><text x="72.5727%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (325 samples, 0.07%)</title><rect x="72.3227%" y="469" width="0.0682%" height="15" fill="rgb(214,220,18)" fg:x="344794" fg:w="325"/><text x="72.5727%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (325 samples, 0.07%)</title><rect x="72.3227%" y="453" width="0.0682%" height="15" fill="rgb(237,89,12)" fg:x="344794" fg:w="325"/><text x="72.5727%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (325 samples, 0.07%)</title><rect x="72.3227%" y="437" width="0.0682%" height="15" fill="rgb(209,167,36)" fg:x="344794" fg:w="325"/><text x="72.5727%" y="447.50"></text></g><g><title>alloc::alloc::alloc (325 samples, 0.07%)</title><rect x="72.3227%" y="421" width="0.0682%" height="15" fill="rgb(243,45,22)" fg:x="344794" fg:w="325"/><text x="72.5727%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (97 samples, 0.02%)</title><rect x="72.3917%" y="533" width="0.0203%" height="15" fill="rgb(239,2,46)" fg:x="345123" fg:w="97"/><text x="72.6417%" y="543.50"></text></g><g><title>core::fmt::write (94 samples, 0.02%)</title><rect x="72.3923%" y="517" width="0.0197%" height="15" fill="rgb(241,101,0)" fg:x="345126" fg:w="94"/><text x="72.6423%" y="527.50"></text></g><g><title>alloc::fmt::format (435 samples, 0.09%)</title><rect x="72.3212%" y="549" width="0.0912%" height="15" fill="rgb(244,34,31)" fg:x="344787" fg:w="435"/><text x="72.5712%" y="559.50"></text></g><g><title>alloc::string::String::with_capacity (50 samples, 0.01%)</title><rect x="72.4307%" y="517" width="0.0105%" height="15" fill="rgb(248,23,22)" fg:x="345309" fg:w="50"/><text x="72.6807%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (48 samples, 0.01%)</title><rect x="72.4311%" y="501" width="0.0101%" height="15" fill="rgb(218,27,48)" fg:x="345311" fg:w="48"/><text x="72.6811%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (48 samples, 0.01%)</title><rect x="72.4311%" y="485" width="0.0101%" height="15" fill="rgb(232,78,1)" fg:x="345311" fg:w="48"/><text x="72.6811%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (48 samples, 0.01%)</title><rect x="72.4311%" y="469" width="0.0101%" height="15" fill="rgb(233,169,12)" fg:x="345311" fg:w="48"/><text x="72.6811%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (48 samples, 0.01%)</title><rect x="72.4311%" y="453" width="0.0101%" height="15" fill="rgb(225,222,54)" fg:x="345311" fg:w="48"/><text x="72.6811%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48 samples, 0.01%)</title><rect x="72.4311%" y="437" width="0.0101%" height="15" fill="rgb(245,126,29)" fg:x="345311" fg:w="48"/><text x="72.6811%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.01%)</title><rect x="72.4311%" y="421" width="0.0101%" height="15" fill="rgb(241,63,48)" fg:x="345311" fg:w="48"/><text x="72.6811%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (69 samples, 0.01%)</title><rect x="72.4691%" y="389" width="0.0145%" height="15" fill="rgb(235,126,38)" fg:x="345492" fg:w="69"/><text x="72.7191%" y="399.50"></text></g><g><title>[libc-2.31.so] (65 samples, 0.01%)</title><rect x="72.4699%" y="373" width="0.0136%" height="15" fill="rgb(232,96,49)" fg:x="345496" fg:w="65"/><text x="72.7199%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (155 samples, 0.03%)</title><rect x="72.4513%" y="485" width="0.0325%" height="15" fill="rgb(211,146,40)" fg:x="345407" fg:w="155"/><text x="72.7013%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (97 samples, 0.02%)</title><rect x="72.4634%" y="469" width="0.0203%" height="15" fill="rgb(247,93,44)" fg:x="345465" fg:w="97"/><text x="72.7134%" y="479.50"></text></g><g><title>alloc::string::String::push_str (97 samples, 0.02%)</title><rect x="72.4634%" y="453" width="0.0203%" height="15" fill="rgb(251,41,49)" fg:x="345465" fg:w="97"/><text x="72.7134%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (97 samples, 0.02%)</title><rect x="72.4634%" y="437" width="0.0203%" height="15" fill="rgb(218,155,12)" fg:x="345465" fg:w="97"/><text x="72.7134%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (97 samples, 0.02%)</title><rect x="72.4634%" y="421" width="0.0203%" height="15" fill="rgb(221,161,30)" fg:x="345465" fg:w="97"/><text x="72.7134%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (97 samples, 0.02%)</title><rect x="72.4634%" y="405" width="0.0203%" height="15" fill="rgb(221,179,11)" fg:x="345465" fg:w="97"/><text x="72.7134%" y="415.50"></text></g><g><title>alloc::fmt::format (368 samples, 0.08%)</title><rect x="72.4290%" y="533" width="0.0772%" height="15" fill="rgb(224,170,48)" fg:x="345301" fg:w="368"/><text x="72.6790%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (303 samples, 0.06%)</title><rect x="72.4427%" y="517" width="0.0636%" height="15" fill="rgb(223,117,5)" fg:x="345366" fg:w="303"/><text x="72.6927%" y="527.50"></text></g><g><title>core::fmt::write (296 samples, 0.06%)</title><rect x="72.4441%" y="501" width="0.0621%" height="15" fill="rgb(209,52,20)" fg:x="345373" fg:w="296"/><text x="72.6941%" y="511.50"></text></g><g><title>[libc-2.31.so] (84 samples, 0.02%)</title><rect x="72.5085%" y="437" width="0.0176%" height="15" fill="rgb(209,19,41)" fg:x="345680" fg:w="84"/><text x="72.7585%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (123 samples, 0.03%)</title><rect x="72.5073%" y="469" width="0.0258%" height="15" fill="rgb(210,177,12)" fg:x="345674" fg:w="123"/><text x="72.7573%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (123 samples, 0.03%)</title><rect x="72.5073%" y="453" width="0.0258%" height="15" fill="rgb(211,159,37)" fg:x="345674" fg:w="123"/><text x="72.7573%" y="463.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (534 samples, 0.11%)</title><rect x="72.4213%" y="549" width="0.1120%" height="15" fill="rgb(209,20,2)" fg:x="345264" fg:w="534"/><text x="72.6713%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (126 samples, 0.03%)</title><rect x="72.5068%" y="533" width="0.0264%" height="15" fill="rgb(244,3,46)" fg:x="345672" fg:w="126"/><text x="72.7568%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (126 samples, 0.03%)</title><rect x="72.5068%" y="517" width="0.0264%" height="15" fill="rgb(220,94,38)" fg:x="345672" fg:w="126"/><text x="72.7568%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (126 samples, 0.03%)</title><rect x="72.5068%" y="501" width="0.0264%" height="15" fill="rgb(253,14,31)" fg:x="345672" fg:w="126"/><text x="72.7568%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (126 samples, 0.03%)</title><rect x="72.5068%" y="485" width="0.0264%" height="15" fill="rgb(234,176,13)" fg:x="345672" fg:w="126"/><text x="72.7568%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (56 samples, 0.01%)</title><rect x="72.5354%" y="533" width="0.0117%" height="15" fill="rgb(218,62,25)" fg:x="345808" fg:w="56"/><text x="72.7854%" y="543.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,206 samples, 0.25%)</title><rect x="72.3099%" y="581" width="0.2530%" height="15" fill="rgb(216,124,40)" fg:x="344733" fg:w="1206"/><text x="72.5599%" y="591.50"></text></g><g><title>parsed::parser::single::{{closure}} (1,202 samples, 0.25%)</title><rect x="72.3107%" y="565" width="0.2521%" height="15" fill="rgb(228,170,12)" fg:x="344737" fg:w="1202"/><text x="72.5607%" y="575.50"></text></g><g><title>parsed::stream::ByteStream::next (141 samples, 0.03%)</title><rect x="72.5333%" y="549" width="0.0296%" height="15" fill="rgb(231,226,5)" fg:x="345798" fg:w="141"/><text x="72.7833%" y="559.50"></text></g><g><title>parsed::stream::ByteStream::get (75 samples, 0.02%)</title><rect x="72.5471%" y="533" width="0.0157%" height="15" fill="rgb(237,122,22)" fg:x="345864" fg:w="75"/><text x="72.7971%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (53 samples, 0.01%)</title><rect x="72.5628%" y="581" width="0.0111%" height="15" fill="rgb(209,185,25)" fg:x="345939" fg:w="53"/><text x="72.8128%" y="591.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,340 samples, 0.28%)</title><rect x="72.3067%" y="613" width="0.2811%" height="15" fill="rgb(228,200,32)" fg:x="344718" fg:w="1340"/><text x="72.5567%" y="623.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,337 samples, 0.28%)</title><rect x="72.3074%" y="597" width="0.2804%" height="15" fill="rgb(217,140,10)" fg:x="344721" fg:w="1337"/><text x="72.5574%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (64 samples, 0.01%)</title><rect x="72.5744%" y="581" width="0.0134%" height="15" fill="rgb(253,17,24)" fg:x="345994" fg:w="64"/><text x="72.8244%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (64 samples, 0.01%)</title><rect x="72.5744%" y="565" width="0.0134%" height="15" fill="rgb(212,61,6)" fg:x="345994" fg:w="64"/><text x="72.8244%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (63 samples, 0.01%)</title><rect x="72.5746%" y="549" width="0.0132%" height="15" fill="rgb(205,14,25)" fg:x="345995" fg:w="63"/><text x="72.8246%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (52 samples, 0.01%)</title><rect x="72.5769%" y="533" width="0.0109%" height="15" fill="rgb(232,69,41)" fg:x="346006" fg:w="52"/><text x="72.8269%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (72 samples, 0.02%)</title><rect x="72.5922%" y="549" width="0.0151%" height="15" fill="rgb(241,106,47)" fg:x="346079" fg:w="72"/><text x="72.8422%" y="559.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (72 samples, 0.02%)</title><rect x="72.5922%" y="533" width="0.0151%" height="15" fill="rgb(210,213,53)" fg:x="346079" fg:w="72"/><text x="72.8422%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::get (72 samples, 0.02%)</title><rect x="72.5922%" y="517" width="0.0151%" height="15" fill="rgb(253,175,27)" fg:x="346079" fg:w="72"/><text x="72.8422%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (101 samples, 0.02%)</title><rect x="72.6316%" y="485" width="0.0212%" height="15" fill="rgb(211,171,24)" fg:x="346267" fg:w="101"/><text x="72.8816%" y="495.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (87 samples, 0.02%)</title><rect x="72.6346%" y="469" width="0.0182%" height="15" fill="rgb(229,80,7)" fg:x="346281" fg:w="87"/><text x="72.8846%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (160 samples, 0.03%)</title><rect x="72.6205%" y="517" width="0.0336%" height="15" fill="rgb(212,46,39)" fg:x="346214" fg:w="160"/><text x="72.8705%" y="527.50"></text></g><g><title>core::fmt::write (157 samples, 0.03%)</title><rect x="72.6212%" y="501" width="0.0329%" height="15" fill="rgb(240,80,45)" fg:x="346217" fg:w="157"/><text x="72.8712%" y="511.50"></text></g><g><title>alloc::fmt::format (190 samples, 0.04%)</title><rect x="72.6144%" y="533" width="0.0399%" height="15" fill="rgb(253,177,40)" fg:x="346185" fg:w="190"/><text x="72.8644%" y="543.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (197 samples, 0.04%)</title><rect x="72.6138%" y="549" width="0.0413%" height="15" fill="rgb(249,200,15)" fg:x="346182" fg:w="197"/><text x="72.8638%" y="559.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (327 samples, 0.07%)</title><rect x="72.5910%" y="581" width="0.0686%" height="15" fill="rgb(217,78,26)" fg:x="346073" fg:w="327"/><text x="72.8410%" y="591.50"></text></g><g><title>parsed::parser::before::{{closure}} (323 samples, 0.07%)</title><rect x="72.5918%" y="565" width="0.0678%" height="15" fill="rgb(254,151,32)" fg:x="346077" fg:w="323"/><text x="72.8418%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (52 samples, 0.01%)</title><rect x="72.6734%" y="501" width="0.0109%" height="15" fill="rgb(226,165,27)" fg:x="346466" fg:w="52"/><text x="72.9234%" y="511.50"></text></g><g><title>core::fmt::write (50 samples, 0.01%)</title><rect x="72.6738%" y="485" width="0.0105%" height="15" fill="rgb(250,206,4)" fg:x="346468" fg:w="50"/><text x="72.9238%" y="495.50"></text></g><g><title>alloc::fmt::format (86 samples, 0.02%)</title><rect x="72.6665%" y="517" width="0.0180%" height="15" fill="rgb(231,229,27)" fg:x="346433" fg:w="86"/><text x="72.9165%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 samples, 0.01%)</title><rect x="72.7042%" y="453" width="0.0138%" height="15" fill="rgb(239,217,8)" fg:x="346613" fg:w="66"/><text x="72.9542%" y="463.50"></text></g><g><title>alloc::fmt::format (181 samples, 0.04%)</title><rect x="72.6923%" y="501" width="0.0380%" height="15" fill="rgb(225,204,27)" fg:x="346556" fg:w="181"/><text x="72.9423%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (146 samples, 0.03%)</title><rect x="72.6996%" y="485" width="0.0306%" height="15" fill="rgb(230,56,32)" fg:x="346591" fg:w="146"/><text x="72.9496%" y="495.50"></text></g><g><title>core::fmt::write (146 samples, 0.03%)</title><rect x="72.6996%" y="469" width="0.0306%" height="15" fill="rgb(222,56,27)" fg:x="346591" fg:w="146"/><text x="72.9496%" y="479.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (243 samples, 0.05%)</title><rect x="72.6902%" y="517" width="0.0510%" height="15" fill="rgb(253,108,27)" fg:x="346546" fg:w="243"/><text x="72.9402%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (51 samples, 0.01%)</title><rect x="72.7304%" y="501" width="0.0107%" height="15" fill="rgb(212,87,36)" fg:x="346738" fg:w="51"/><text x="72.9804%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (51 samples, 0.01%)</title><rect x="72.7304%" y="485" width="0.0107%" height="15" fill="rgb(247,82,36)" fg:x="346738" fg:w="51"/><text x="72.9804%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (51 samples, 0.01%)</title><rect x="72.7304%" y="469" width="0.0107%" height="15" fill="rgb(222,143,9)" fg:x="346738" fg:w="51"/><text x="72.9804%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.01%)</title><rect x="72.7304%" y="453" width="0.0107%" height="15" fill="rgb(238,162,48)" fg:x="346738" fg:w="51"/><text x="72.9804%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (50 samples, 0.01%)</title><rect x="72.7306%" y="437" width="0.0105%" height="15" fill="rgb(221,59,43)" fg:x="346739" fg:w="50"/><text x="72.9806%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (50 samples, 0.01%)</title><rect x="72.7306%" y="421" width="0.0105%" height="15" fill="rgb(205,166,41)" fg:x="346739" fg:w="50"/><text x="72.9806%" y="431.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (444 samples, 0.09%)</title><rect x="72.6606%" y="549" width="0.0931%" height="15" fill="rgb(241,186,40)" fg:x="346405" fg:w="444"/><text x="72.9106%" y="559.50"></text></g><g><title>parsed::parser::single::{{closure}} (439 samples, 0.09%)</title><rect x="72.6616%" y="533" width="0.0921%" height="15" fill="rgb(216,119,35)" fg:x="346410" fg:w="439"/><text x="72.9116%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::next (60 samples, 0.01%)</title><rect x="72.7411%" y="517" width="0.0126%" height="15" fill="rgb(208,68,38)" fg:x="346789" fg:w="60"/><text x="72.9911%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (63 samples, 0.01%)</title><rect x="72.7705%" y="469" width="0.0132%" height="15" fill="rgb(217,113,1)" fg:x="346929" fg:w="63"/><text x="73.0205%" y="479.50"></text></g><g><title>core::fmt::write (57 samples, 0.01%)</title><rect x="72.7718%" y="453" width="0.0120%" height="15" fill="rgb(242,153,3)" fg:x="346935" fg:w="57"/><text x="73.0218%" y="463.50"></text></g><g><title>alloc::fmt::format (103 samples, 0.02%)</title><rect x="72.7623%" y="485" width="0.0216%" height="15" fill="rgb(229,76,35)" fg:x="346890" fg:w="103"/><text x="73.0123%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (71 samples, 0.01%)</title><rect x="72.8066%" y="421" width="0.0149%" height="15" fill="rgb(229,125,34)" fg:x="347101" fg:w="71"/><text x="73.0566%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (159 samples, 0.03%)</title><rect x="72.8005%" y="453" width="0.0334%" height="15" fill="rgb(238,179,36)" fg:x="347072" fg:w="159"/><text x="73.0505%" y="463.50"></text></g><g><title>core::fmt::write (155 samples, 0.03%)</title><rect x="72.8013%" y="437" width="0.0325%" height="15" fill="rgb(244,183,19)" fg:x="347076" fg:w="155"/><text x="73.0513%" y="447.50"></text></g><g><title>alloc::fmt::format (195 samples, 0.04%)</title><rect x="72.7932%" y="469" width="0.0409%" height="15" fill="rgb(216,85,49)" fg:x="347037" fg:w="195"/><text x="73.0432%" y="479.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (247 samples, 0.05%)</title><rect x="72.7911%" y="485" width="0.0518%" height="15" fill="rgb(208,161,47)" fg:x="347027" fg:w="247"/><text x="73.0411%" y="495.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (496 samples, 0.10%)</title><rect x="72.7544%" y="517" width="0.1040%" height="15" fill="rgb(233,210,18)" fg:x="346852" fg:w="496"/><text x="73.0044%" y="527.50"></text></g><g><title>parsed::parser::single::{{closure}} (488 samples, 0.10%)</title><rect x="72.7560%" y="501" width="0.1024%" height="15" fill="rgb(205,104,42)" fg:x="346860" fg:w="488"/><text x="73.0060%" y="511.50"></text></g><g><title>parsed::stream::ByteStream::next (74 samples, 0.02%)</title><rect x="72.8429%" y="485" width="0.0155%" height="15" fill="rgb(248,90,43)" fg:x="347274" fg:w="74"/><text x="73.0929%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (53 samples, 0.01%)</title><rect x="72.8609%" y="453" width="0.0111%" height="15" fill="rgb(206,198,11)" fg:x="347360" fg:w="53"/><text x="73.1109%" y="463.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (51 samples, 0.01%)</title><rect x="72.8613%" y="437" width="0.0107%" height="15" fill="rgb(239,165,27)" fg:x="347362" fg:w="51"/><text x="73.1113%" y="447.50"></text></g><g><title>parsed::stream::ByteStream::get (51 samples, 0.01%)</title><rect x="72.8613%" y="421" width="0.0107%" height="15" fill="rgb(246,44,32)" fg:x="347362" fg:w="51"/><text x="73.1113%" y="431.50"></text></g><g><title>alloc::string::String::with_capacity (53 samples, 0.01%)</title><rect x="72.8842%" y="421" width="0.0111%" height="15" fill="rgb(252,65,42)" fg:x="347471" fg:w="53"/><text x="73.1342%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (51 samples, 0.01%)</title><rect x="72.8846%" y="405" width="0.0107%" height="15" fill="rgb(246,197,18)" fg:x="347473" fg:w="51"/><text x="73.1346%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (51 samples, 0.01%)</title><rect x="72.8846%" y="389" width="0.0107%" height="15" fill="rgb(216,192,4)" fg:x="347473" fg:w="51"/><text x="73.1346%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (51 samples, 0.01%)</title><rect x="72.8846%" y="373" width="0.0107%" height="15" fill="rgb(208,117,10)" fg:x="347473" fg:w="51"/><text x="73.1346%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (51 samples, 0.01%)</title><rect x="72.8846%" y="357" width="0.0107%" height="15" fill="rgb(240,61,47)" fg:x="347473" fg:w="51"/><text x="73.1346%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (50 samples, 0.01%)</title><rect x="72.8848%" y="341" width="0.0105%" height="15" fill="rgb(228,178,21)" fg:x="347474" fg:w="50"/><text x="73.1348%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (50 samples, 0.01%)</title><rect x="72.8848%" y="325" width="0.0105%" height="15" fill="rgb(219,96,54)" fg:x="347474" fg:w="50"/><text x="73.1348%" y="335.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.01%)</title><rect x="72.8848%" y="309" width="0.0105%" height="15" fill="rgb(250,177,24)" fg:x="347474" fg:w="50"/><text x="73.1348%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 samples, 0.01%)</title><rect x="72.9047%" y="389" width="0.0147%" height="15" fill="rgb(242,154,46)" fg:x="347569" fg:w="70"/><text x="73.1547%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (67 samples, 0.01%)</title><rect x="72.9324%" y="357" width="0.0141%" height="15" fill="rgb(226,176,29)" fg:x="347701" fg:w="67"/><text x="73.1824%" y="367.50"></text></g><g><title>core::fmt::Formatter::pad_integral (78 samples, 0.02%)</title><rect x="72.9465%" y="357" width="0.0164%" height="15" fill="rgb(226,29,2)" fg:x="347768" fg:w="78"/><text x="73.1965%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (210 samples, 0.04%)</title><rect x="72.9213%" y="389" width="0.0440%" height="15" fill="rgb(237,104,14)" fg:x="347648" fg:w="210"/><text x="73.1713%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (180 samples, 0.04%)</title><rect x="72.9276%" y="373" width="0.0378%" height="15" fill="rgb(245,207,31)" fg:x="347678" fg:w="180"/><text x="73.1776%" y="383.50"></text></g><g><title>alloc::fmt::format (402 samples, 0.08%)</title><rect x="72.8831%" y="437" width="0.0843%" height="15" fill="rgb(229,211,45)" fg:x="347466" fg:w="402"/><text x="73.1331%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (332 samples, 0.07%)</title><rect x="72.8978%" y="421" width="0.0696%" height="15" fill="rgb(229,113,15)" fg:x="347536" fg:w="332"/><text x="73.1478%" y="431.50"></text></g><g><title>core::fmt::write (326 samples, 0.07%)</title><rect x="72.8991%" y="405" width="0.0684%" height="15" fill="rgb(237,147,15)" fg:x="347542" fg:w="326"/><text x="73.1491%" y="415.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (422 samples, 0.09%)</title><rect x="72.8806%" y="453" width="0.0885%" height="15" fill="rgb(244,120,12)" fg:x="347454" fg:w="422"/><text x="73.1306%" y="463.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (534 samples, 0.11%)</title><rect x="72.8590%" y="485" width="0.1120%" height="15" fill="rgb(205,120,12)" fg:x="347351" fg:w="534"/><text x="73.1090%" y="495.50"></text></g><g><title>parsed::parser::before::{{closure}} (527 samples, 0.11%)</title><rect x="72.8605%" y="469" width="0.1105%" height="15" fill="rgb(231,26,45)" fg:x="347358" fg:w="527"/><text x="73.1105%" y="479.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (540 samples, 0.11%)</title><rect x="72.8586%" y="501" width="0.1133%" height="15" fill="rgb(246,98,1)" fg:x="347349" fg:w="540"/><text x="73.1086%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (51 samples, 0.01%)</title><rect x="72.9721%" y="469" width="0.0107%" height="15" fill="rgb(207,68,45)" fg:x="347890" fg:w="51"/><text x="73.2221%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (50 samples, 0.01%)</title><rect x="72.9723%" y="453" width="0.0105%" height="15" fill="rgb(231,27,38)" fg:x="347891" fg:w="50"/><text x="73.2223%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (55 samples, 0.01%)</title><rect x="72.9719%" y="485" width="0.0115%" height="15" fill="rgb(214,223,3)" fg:x="347889" fg:w="55"/><text x="73.2219%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (82 samples, 0.02%)</title><rect x="72.9853%" y="437" width="0.0172%" height="15" fill="rgb(228,195,46)" fg:x="347953" fg:w="82"/><text x="73.2353%" y="447.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,975 samples, 0.41%)</title><rect x="72.5889%" y="597" width="0.4143%" height="15" fill="rgb(231,100,42)" fg:x="346063" fg:w="1975"/><text x="72.8389%" y="607.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,636 samples, 0.34%)</title><rect x="72.6600%" y="581" width="0.3432%" height="15" fill="rgb(236,53,4)" fg:x="346402" fg:w="1636"/><text x="72.9100%" y="591.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,636 samples, 0.34%)</title><rect x="72.6600%" y="565" width="0.3432%" height="15" fill="rgb(230,152,12)" fg:x="346402" fg:w="1636"/><text x="72.9100%" y="575.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,188 samples, 0.25%)</title><rect x="72.7539%" y="549" width="0.2492%" height="15" fill="rgb(226,101,19)" fg:x="346850" fg:w="1188"/><text x="73.0039%" y="559.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,188 samples, 0.25%)</title><rect x="72.7539%" y="533" width="0.2492%" height="15" fill="rgb(250,149,32)" fg:x="346850" fg:w="1188"/><text x="73.0039%" y="543.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (690 samples, 0.14%)</title><rect x="72.8584%" y="517" width="0.1447%" height="15" fill="rgb(232,178,12)" fg:x="347348" fg:w="690"/><text x="73.1084%" y="527.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (149 samples, 0.03%)</title><rect x="72.9719%" y="501" width="0.0313%" height="15" fill="rgb(246,151,17)" fg:x="347889" fg:w="149"/><text x="73.2219%" y="511.50"></text></g><g><title>parsed::http::as_string (94 samples, 0.02%)</title><rect x="72.9834%" y="485" width="0.0197%" height="15" fill="rgb(252,17,51)" fg:x="347944" fg:w="94"/><text x="73.2334%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (94 samples, 0.02%)</title><rect x="72.9834%" y="469" width="0.0197%" height="15" fill="rgb(250,207,23)" fg:x="347944" fg:w="94"/><text x="73.2334%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (90 samples, 0.02%)</title><rect x="72.9842%" y="453" width="0.0189%" height="15" fill="rgb(205,27,5)" fg:x="347948" fg:w="90"/><text x="73.2342%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (56 samples, 0.01%)</title><rect x="73.0184%" y="405" width="0.0117%" height="15" fill="rgb(224,32,19)" fg:x="348111" fg:w="56"/><text x="73.2684%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (75 samples, 0.02%)</title><rect x="73.0149%" y="501" width="0.0157%" height="15" fill="rgb(247,214,40)" fg:x="348094" fg:w="75"/><text x="73.2649%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (72 samples, 0.02%)</title><rect x="73.0155%" y="485" width="0.0151%" height="15" fill="rgb(239,199,17)" fg:x="348097" fg:w="72"/><text x="73.2655%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (58 samples, 0.01%)</title><rect x="73.0184%" y="469" width="0.0122%" height="15" fill="rgb(251,159,9)" fg:x="348111" fg:w="58"/><text x="73.2684%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (58 samples, 0.01%)</title><rect x="73.0184%" y="453" width="0.0122%" height="15" fill="rgb(225,78,32)" fg:x="348111" fg:w="58"/><text x="73.2684%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (58 samples, 0.01%)</title><rect x="73.0184%" y="437" width="0.0122%" height="15" fill="rgb(206,97,47)" fg:x="348111" fg:w="58"/><text x="73.2684%" y="447.50"></text></g><g><title>alloc::string::String::push (58 samples, 0.01%)</title><rect x="73.0184%" y="421" width="0.0122%" height="15" fill="rgb(227,107,4)" fg:x="348111" fg:w="58"/><text x="73.2684%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (141 samples, 0.03%)</title><rect x="73.0073%" y="533" width="0.0296%" height="15" fill="rgb(241,146,50)" fg:x="348058" fg:w="141"/><text x="73.2573%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (107 samples, 0.02%)</title><rect x="73.0144%" y="517" width="0.0224%" height="15" fill="rgb(232,92,30)" fg:x="348092" fg:w="107"/><text x="73.2644%" y="527.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (3,483 samples, 0.73%)</title><rect x="72.3067%" y="629" width="0.7306%" height="15" fill="rgb(222,0,40)" fg:x="344718" fg:w="3483"/><text x="72.5567%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (2,140 samples, 0.45%)</title><rect x="72.5884%" y="613" width="0.4489%" height="15" fill="rgb(219,54,33)" fg:x="346061" fg:w="2140"/><text x="72.8384%" y="623.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (163 samples, 0.03%)</title><rect x="73.0031%" y="597" width="0.0342%" height="15" fill="rgb(226,209,28)" fg:x="348038" fg:w="163"/><text x="73.2531%" y="607.50"></text></g><g><title>parsed::http::as_string (150 samples, 0.03%)</title><rect x="73.0058%" y="581" width="0.0315%" height="15" fill="rgb(254,205,35)" fg:x="348051" fg:w="150"/><text x="73.2558%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (150 samples, 0.03%)</title><rect x="73.0058%" y="565" width="0.0315%" height="15" fill="rgb(230,159,3)" fg:x="348051" fg:w="150"/><text x="73.2558%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (148 samples, 0.03%)</title><rect x="73.0063%" y="549" width="0.0310%" height="15" fill="rgb(232,190,24)" fg:x="348053" fg:w="148"/><text x="73.2563%" y="559.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (3,508 samples, 0.74%)</title><rect x="72.3067%" y="645" width="0.7358%" height="15" fill="rgb(217,227,44)" fg:x="344718" fg:w="3508"/><text x="72.5567%" y="655.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (57 samples, 0.01%)</title><rect x="73.0442%" y="629" width="0.0120%" height="15" fill="rgb(236,211,1)" fg:x="348234" fg:w="57"/><text x="73.2942%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (57 samples, 0.01%)</title><rect x="73.0442%" y="613" width="0.0120%" height="15" fill="rgb(250,127,46)" fg:x="348234" fg:w="57"/><text x="73.2942%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (57 samples, 0.01%)</title><rect x="73.0579%" y="517" width="0.0120%" height="15" fill="rgb(229,213,6)" fg:x="348299" fg:w="57"/><text x="73.3079%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (57 samples, 0.01%)</title><rect x="73.0579%" y="501" width="0.0120%" height="15" fill="rgb(237,15,36)" fg:x="348299" fg:w="57"/><text x="73.3079%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.01%)</title><rect x="73.0577%" y="613" width="0.0126%" height="15" fill="rgb(213,131,41)" fg:x="348298" fg:w="60"/><text x="73.3077%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (60 samples, 0.01%)</title><rect x="73.0577%" y="597" width="0.0126%" height="15" fill="rgb(225,82,44)" fg:x="348298" fg:w="60"/><text x="73.3077%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (59 samples, 0.01%)</title><rect x="73.0579%" y="581" width="0.0124%" height="15" fill="rgb(249,42,11)" fg:x="348299" fg:w="59"/><text x="73.3079%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (59 samples, 0.01%)</title><rect x="73.0579%" y="565" width="0.0124%" height="15" fill="rgb(253,11,29)" fg:x="348299" fg:w="59"/><text x="73.3079%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (59 samples, 0.01%)</title><rect x="73.0579%" y="549" width="0.0124%" height="15" fill="rgb(206,8,54)" fg:x="348299" fg:w="59"/><text x="73.3079%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.01%)</title><rect x="73.0579%" y="533" width="0.0124%" height="15" fill="rgb(222,186,2)" fg:x="348299" fg:w="59"/><text x="73.3079%" y="543.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (3,691 samples, 0.77%)</title><rect x="72.3027%" y="661" width="0.7742%" height="15" fill="rgb(221,206,53)" fg:x="344699" fg:w="3691"/><text x="72.5527%" y="671.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (163 samples, 0.03%)</title><rect x="73.0428%" y="645" width="0.0342%" height="15" fill="rgb(230,150,21)" fg:x="348227" fg:w="163"/><text x="73.2928%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (93 samples, 0.02%)</title><rect x="73.0574%" y="629" width="0.0195%" height="15" fill="rgb(253,202,10)" fg:x="348297" fg:w="93"/><text x="73.3074%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (50 samples, 0.01%)</title><rect x="73.0770%" y="661" width="0.0105%" height="15" fill="rgb(238,109,40)" fg:x="348390" fg:w="50"/><text x="73.3270%" y="671.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (3,787 samples, 0.79%)</title><rect x="72.2977%" y="693" width="0.7943%" height="15" fill="rgb(247,120,22)" fg:x="344675" fg:w="3787"/><text x="72.5477%" y="703.50"></text></g><g><title>parsed::parser::repeat::{{closure}} (3,778 samples, 0.79%)</title><rect x="72.2996%" y="677" width="0.7925%" height="15" fill="rgb(207,43,30)" fg:x="344684" fg:w="3778"/><text x="72.5496%" y="687.50"></text></g><g><title>__libc_malloc (96 samples, 0.02%)</title><rect x="73.1221%" y="453" width="0.0201%" height="15" fill="rgb(213,211,24)" fg:x="348605" fg:w="96"/><text x="73.3721%" y="463.50"></text></g><g><title>alloc::string::String::with_capacity (104 samples, 0.02%)</title><rect x="73.1218%" y="581" width="0.0218%" height="15" fill="rgb(239,73,39)" fg:x="348604" fg:w="104"/><text x="73.3718%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (103 samples, 0.02%)</title><rect x="73.1221%" y="565" width="0.0216%" height="15" fill="rgb(245,182,19)" fg:x="348605" fg:w="103"/><text x="73.3721%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (103 samples, 0.02%)</title><rect x="73.1221%" y="549" width="0.0216%" height="15" fill="rgb(247,143,26)" fg:x="348605" fg:w="103"/><text x="73.3721%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (103 samples, 0.02%)</title><rect x="73.1221%" y="533" width="0.0216%" height="15" fill="rgb(228,191,23)" fg:x="348605" fg:w="103"/><text x="73.3721%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (103 samples, 0.02%)</title><rect x="73.1221%" y="517" width="0.0216%" height="15" fill="rgb(253,165,31)" fg:x="348605" fg:w="103"/><text x="73.3721%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (103 samples, 0.02%)</title><rect x="73.1221%" y="501" width="0.0216%" height="15" fill="rgb(234,138,20)" fg:x="348605" fg:w="103"/><text x="73.3721%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (103 samples, 0.02%)</title><rect x="73.1221%" y="485" width="0.0216%" height="15" fill="rgb(218,191,29)" fg:x="348605" fg:w="103"/><text x="73.3721%" y="495.50"></text></g><g><title>alloc::alloc::alloc (103 samples, 0.02%)</title><rect x="73.1221%" y="469" width="0.0216%" height="15" fill="rgb(221,157,19)" fg:x="348605" fg:w="103"/><text x="73.3721%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (53 samples, 0.01%)</title><rect x="73.1556%" y="549" width="0.0111%" height="15" fill="rgb(237,26,42)" fg:x="348765" fg:w="53"/><text x="73.4056%" y="559.50"></text></g><g><title>alloc::fmt::format (240 samples, 0.05%)</title><rect x="73.1210%" y="597" width="0.0503%" height="15" fill="rgb(220,163,24)" fg:x="348600" fg:w="240"/><text x="73.3710%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (120 samples, 0.03%)</title><rect x="73.1462%" y="581" width="0.0252%" height="15" fill="rgb(242,115,20)" fg:x="348720" fg:w="120"/><text x="73.3962%" y="591.50"></text></g><g><title>core::fmt::write (118 samples, 0.02%)</title><rect x="73.1466%" y="565" width="0.0248%" height="15" fill="rgb(210,206,9)" fg:x="348722" fg:w="118"/><text x="73.3966%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (62 samples, 0.01%)</title><rect x="73.1728%" y="597" width="0.0130%" height="15" fill="rgb(208,71,17)" fg:x="348847" fg:w="62"/><text x="73.4228%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::matcher::MatchError&gt; (57 samples, 0.01%)</title><rect x="73.1739%" y="581" width="0.0120%" height="15" fill="rgb(233,7,5)" fg:x="348852" fg:w="57"/><text x="73.4239%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (57 samples, 0.01%)</title><rect x="73.1739%" y="565" width="0.0120%" height="15" fill="rgb(207,92,33)" fg:x="348852" fg:w="57"/><text x="73.4239%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (57 samples, 0.01%)</title><rect x="73.1739%" y="549" width="0.0120%" height="15" fill="rgb(218,87,9)" fg:x="348852" fg:w="57"/><text x="73.4239%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (57 samples, 0.01%)</title><rect x="73.1739%" y="533" width="0.0120%" height="15" fill="rgb(219,47,37)" fg:x="348852" fg:w="57"/><text x="73.4239%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.01%)</title><rect x="73.1739%" y="517" width="0.0120%" height="15" fill="rgb(221,152,34)" fg:x="348852" fg:w="57"/><text x="73.4239%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (56 samples, 0.01%)</title><rect x="73.1741%" y="501" width="0.0117%" height="15" fill="rgb(235,176,21)" fg:x="348853" fg:w="56"/><text x="73.4241%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (56 samples, 0.01%)</title><rect x="73.1741%" y="485" width="0.0117%" height="15" fill="rgb(232,212,21)" fg:x="348853" fg:w="56"/><text x="73.4241%" y="495.50"></text></g><g><title>alloc::string::String::with_capacity (49 samples, 0.01%)</title><rect x="73.1921%" y="565" width="0.0103%" height="15" fill="rgb(245,82,39)" fg:x="348939" fg:w="49"/><text x="73.4421%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (48 samples, 0.01%)</title><rect x="73.1923%" y="549" width="0.0101%" height="15" fill="rgb(241,52,51)" fg:x="348940" fg:w="48"/><text x="73.4423%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (48 samples, 0.01%)</title><rect x="73.1923%" y="533" width="0.0101%" height="15" fill="rgb(219,91,24)" fg:x="348940" fg:w="48"/><text x="73.4423%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (48 samples, 0.01%)</title><rect x="73.1923%" y="517" width="0.0101%" height="15" fill="rgb(241,142,12)" fg:x="348940" fg:w="48"/><text x="73.4423%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (48 samples, 0.01%)</title><rect x="73.1923%" y="501" width="0.0101%" height="15" fill="rgb(230,27,9)" fg:x="348940" fg:w="48"/><text x="73.4423%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (78 samples, 0.02%)</title><rect x="73.2301%" y="437" width="0.0164%" height="15" fill="rgb(249,181,32)" fg:x="349120" fg:w="78"/><text x="73.4801%" y="447.50"></text></g><g><title>[libc-2.31.so] (72 samples, 0.02%)</title><rect x="73.2313%" y="421" width="0.0151%" height="15" fill="rgb(230,107,3)" fg:x="349126" fg:w="72"/><text x="73.4813%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (147 samples, 0.03%)</title><rect x="73.2158%" y="533" width="0.0308%" height="15" fill="rgb(246,204,14)" fg:x="349052" fg:w="147"/><text x="73.4658%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (97 samples, 0.02%)</title><rect x="73.2263%" y="517" width="0.0203%" height="15" fill="rgb(213,192,47)" fg:x="349102" fg:w="97"/><text x="73.4763%" y="527.50"></text></g><g><title>alloc::string::String::push_str (97 samples, 0.02%)</title><rect x="73.2263%" y="501" width="0.0203%" height="15" fill="rgb(240,44,36)" fg:x="349102" fg:w="97"/><text x="73.4763%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (97 samples, 0.02%)</title><rect x="73.2263%" y="485" width="0.0203%" height="15" fill="rgb(244,209,38)" fg:x="349102" fg:w="97"/><text x="73.4763%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (97 samples, 0.02%)</title><rect x="73.2263%" y="469" width="0.0203%" height="15" fill="rgb(219,34,37)" fg:x="349102" fg:w="97"/><text x="73.4763%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (97 samples, 0.02%)</title><rect x="73.2263%" y="453" width="0.0203%" height="15" fill="rgb(210,28,6)" fg:x="349102" fg:w="97"/><text x="73.4763%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (67 samples, 0.01%)</title><rect x="73.2573%" y="533" width="0.0141%" height="15" fill="rgb(244,110,52)" fg:x="349250" fg:w="67"/><text x="73.5073%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (63 samples, 0.01%)</title><rect x="73.2582%" y="517" width="0.0132%" height="15" fill="rgb(254,124,47)" fg:x="349254" fg:w="63"/><text x="73.5082%" y="527.50"></text></g><g><title>alloc::fmt::format (392 samples, 0.08%)</title><rect x="73.1904%" y="581" width="0.0822%" height="15" fill="rgb(254,110,13)" fg:x="348931" fg:w="392"/><text x="73.4404%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (322 samples, 0.07%)</title><rect x="73.2051%" y="565" width="0.0675%" height="15" fill="rgb(252,57,21)" fg:x="349001" fg:w="322"/><text x="73.4551%" y="575.50"></text></g><g><title>core::fmt::write (317 samples, 0.07%)</title><rect x="73.2062%" y="549" width="0.0665%" height="15" fill="rgb(242,60,45)" fg:x="349006" fg:w="317"/><text x="73.4562%" y="559.50"></text></g><g><title>[libc-2.31.so] (67 samples, 0.01%)</title><rect x="73.2743%" y="485" width="0.0141%" height="15" fill="rgb(234,49,30)" fg:x="349331" fg:w="67"/><text x="73.5243%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (107 samples, 0.02%)</title><rect x="73.2739%" y="517" width="0.0224%" height="15" fill="rgb(218,98,6)" fg:x="349329" fg:w="107"/><text x="73.5239%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (107 samples, 0.02%)</title><rect x="73.2739%" y="501" width="0.0224%" height="15" fill="rgb(220,174,29)" fg:x="349329" fg:w="107"/><text x="73.5239%" y="511.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (529 samples, 0.11%)</title><rect x="73.1858%" y="597" width="0.1110%" height="15" fill="rgb(236,163,23)" fg:x="348909" fg:w="529"/><text x="73.4358%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (111 samples, 0.02%)</title><rect x="73.2735%" y="581" width="0.0233%" height="15" fill="rgb(242,114,45)" fg:x="349327" fg:w="111"/><text x="73.5235%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (111 samples, 0.02%)</title><rect x="73.2735%" y="565" width="0.0233%" height="15" fill="rgb(232,10,53)" fg:x="349327" fg:w="111"/><text x="73.5235%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (111 samples, 0.02%)</title><rect x="73.2735%" y="549" width="0.0233%" height="15" fill="rgb(245,108,29)" fg:x="349327" fg:w="111"/><text x="73.5235%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.02%)</title><rect x="73.2735%" y="533" width="0.0233%" height="15" fill="rgb(240,89,53)" fg:x="349327" fg:w="111"/><text x="73.5235%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (53 samples, 0.01%)</title><rect x="73.2997%" y="581" width="0.0111%" height="15" fill="rgb(226,60,45)" fg:x="349452" fg:w="53"/><text x="73.5497%" y="591.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,044 samples, 0.22%)</title><rect x="73.1072%" y="629" width="0.2190%" height="15" fill="rgb(230,41,44)" fg:x="348534" fg:w="1044"/><text x="73.3572%" y="639.50"></text></g><g><title>parsed::parser::single::{{closure}} (1,034 samples, 0.22%)</title><rect x="73.1093%" y="613" width="0.2169%" height="15" fill="rgb(230,26,20)" fg:x="348544" fg:w="1034"/><text x="73.3593%" y="623.50"></text></g><g><title>parsed::stream::ByteStream::next (140 samples, 0.03%)</title><rect x="73.2968%" y="597" width="0.0294%" height="15" fill="rgb(237,170,32)" fg:x="349438" fg:w="140"/><text x="73.5468%" y="607.50"></text></g><g><title>parsed::stream::ByteStream::get (73 samples, 0.02%)</title><rect x="73.3108%" y="581" width="0.0153%" height="15" fill="rgb(212,35,42)" fg:x="349505" fg:w="73"/><text x="73.5608%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (59 samples, 0.01%)</title><rect x="73.3268%" y="629" width="0.0124%" height="15" fill="rgb(227,31,34)" fg:x="349581" fg:w="59"/><text x="73.5768%" y="639.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,214 samples, 0.25%)</title><rect x="73.1007%" y="661" width="0.2546%" height="15" fill="rgb(216,19,18)" fg:x="348503" fg:w="1214"/><text x="73.3507%" y="671.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,203 samples, 0.25%)</title><rect x="73.1030%" y="645" width="0.2523%" height="15" fill="rgb(211,133,42)" fg:x="348514" fg:w="1203"/><text x="73.3530%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (75 samples, 0.02%)</title><rect x="73.3396%" y="629" width="0.0157%" height="15" fill="rgb(244,66,13)" fg:x="349642" fg:w="75"/><text x="73.5896%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (75 samples, 0.02%)</title><rect x="73.3396%" y="613" width="0.0157%" height="15" fill="rgb(218,185,50)" fg:x="349642" fg:w="75"/><text x="73.5896%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (71 samples, 0.01%)</title><rect x="73.3404%" y="597" width="0.0149%" height="15" fill="rgb(219,149,13)" fg:x="349646" fg:w="71"/><text x="73.5904%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (57 samples, 0.01%)</title><rect x="73.3433%" y="581" width="0.0120%" height="15" fill="rgb(221,125,0)" fg:x="349660" fg:w="57"/><text x="73.5933%" y="591.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (100 samples, 0.02%)</title><rect x="73.4056%" y="533" width="0.0210%" height="15" fill="rgb(247,126,27)" fg:x="349957" fg:w="100"/><text x="73.6556%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (86 samples, 0.02%)</title><rect x="73.4086%" y="517" width="0.0180%" height="15" fill="rgb(250,138,30)" fg:x="349971" fg:w="86"/><text x="73.6586%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (173 samples, 0.04%)</title><rect x="73.3912%" y="565" width="0.0363%" height="15" fill="rgb(230,151,9)" fg:x="349888" fg:w="173"/><text x="73.6412%" y="575.50"></text></g><g><title>core::fmt::write (171 samples, 0.04%)</title><rect x="73.3916%" y="549" width="0.0359%" height="15" fill="rgb(233,80,38)" fg:x="349890" fg:w="171"/><text x="73.6416%" y="559.50"></text></g><g><title>alloc::fmt::format (206 samples, 0.04%)</title><rect x="73.3845%" y="581" width="0.0432%" height="15" fill="rgb(232,68,43)" fg:x="349856" fg:w="206"/><text x="73.6345%" y="591.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (216 samples, 0.05%)</title><rect x="73.3830%" y="597" width="0.0453%" height="15" fill="rgb(254,5,50)" fg:x="349849" fg:w="216"/><text x="73.6330%" y="607.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (311 samples, 0.07%)</title><rect x="73.3673%" y="629" width="0.0652%" height="15" fill="rgb(225,45,5)" fg:x="349774" fg:w="311"/><text x="73.6173%" y="639.50"></text></g><g><title>parsed::parser::before::{{closure}} (299 samples, 0.06%)</title><rect x="73.3698%" y="613" width="0.0627%" height="15" fill="rgb(239,22,3)" fg:x="349786" fg:w="299"/><text x="73.6198%" y="623.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (57 samples, 0.01%)</title><rect x="73.4407%" y="597" width="0.0120%" height="15" fill="rgb(243,129,0)" fg:x="350124" fg:w="57"/><text x="73.6907%" y="607.50"></text></g><g><title>parsed::parser::single::{{closure}} (54 samples, 0.01%)</title><rect x="73.4413%" y="581" width="0.0113%" height="15" fill="rgb(223,164,0)" fg:x="350127" fg:w="54"/><text x="73.6913%" y="591.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (104 samples, 0.02%)</title><rect x="73.4344%" y="629" width="0.0218%" height="15" fill="rgb(221,46,29)" fg:x="350094" fg:w="104"/><text x="73.6844%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (88 samples, 0.02%)</title><rect x="73.4377%" y="613" width="0.0185%" height="15" fill="rgb(205,97,47)" fg:x="350110" fg:w="88"/><text x="73.6877%" y="623.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (458 samples, 0.10%)</title><rect x="73.3635%" y="645" width="0.0961%" height="15" fill="rgb(249,14,8)" fg:x="349756" fg:w="458"/><text x="73.6135%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (86 samples, 0.02%)</title><rect x="73.4608%" y="581" width="0.0180%" height="15" fill="rgb(216,77,3)" fg:x="350220" fg:w="86"/><text x="73.7108%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (58 samples, 0.01%)</title><rect x="73.4667%" y="565" width="0.0122%" height="15" fill="rgb(206,168,54)" fg:x="350248" fg:w="58"/><text x="73.7167%" y="575.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (581 samples, 0.12%)</title><rect x="73.3580%" y="661" width="0.1219%" height="15" fill="rgb(236,3,41)" fg:x="349730" fg:w="581"/><text x="73.6080%" y="671.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (97 samples, 0.02%)</title><rect x="73.4596%" y="645" width="0.0203%" height="15" fill="rgb(231,132,24)" fg:x="350214" fg:w="97"/><text x="73.7096%" y="655.50"></text></g><g><title>parsed::http::as_string (96 samples, 0.02%)</title><rect x="73.4598%" y="629" width="0.0201%" height="15" fill="rgb(227,221,40)" fg:x="350215" fg:w="96"/><text x="73.7098%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (96 samples, 0.02%)</title><rect x="73.4598%" y="613" width="0.0201%" height="15" fill="rgb(233,151,11)" fg:x="350215" fg:w="96"/><text x="73.7098%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (95 samples, 0.02%)</title><rect x="73.4600%" y="597" width="0.0199%" height="15" fill="rgb(247,81,35)" fg:x="350216" fg:w="95"/><text x="73.7100%" y="607.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,839 samples, 0.39%)</title><rect x="73.0963%" y="677" width="0.3857%" height="15" fill="rgb(243,128,48)" fg:x="348482" fg:w="1839"/><text x="73.3463%" y="687.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,875 samples, 0.39%)</title><rect x="73.0929%" y="693" width="0.3933%" height="15" fill="rgb(253,16,10)" fg:x="348466" fg:w="1875"/><text x="73.3429%" y="703.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (5,726 samples, 1.20%)</title><rect x="72.2937%" y="709" width="1.2011%" height="15" fill="rgb(228,67,27)" fg:x="344656" fg:w="5726"/><text x="72.5437%" y="719.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (5,757 samples, 1.21%)</title><rect x="72.2874%" y="725" width="1.2076%" height="15" fill="rgb(231,105,25)" fg:x="344626" fg:w="5757"/><text x="72.5374%" y="735.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (6,865 samples, 1.44%)</title><rect x="72.0582%" y="741" width="1.4400%" height="15" fill="rgb(213,166,47)" fg:x="343533" fg:w="6865"/><text x="72.3082%" y="751.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (6,908 samples, 1.45%)</title><rect x="72.0557%" y="757" width="1.4490%" height="15" fill="rgb(209,27,10)" fg:x="343521" fg:w="6908"/><text x="72.3057%" y="767.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (7,340 samples, 1.54%)</title><rect x="71.9831%" y="805" width="1.5396%" height="15" fill="rgb(241,44,30)" fg:x="343175" fg:w="7340"/><text x="72.2331%" y="815.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (7,340 samples, 1.54%)</title><rect x="71.9831%" y="789" width="1.5396%" height="15" fill="rgb(223,216,15)" fg:x="343175" fg:w="7340"/><text x="72.2331%" y="799.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (7,319 samples, 1.54%)</title><rect x="71.9875%" y="773" width="1.5352%" height="15" fill="rgb(227,14,7)" fg:x="343196" fg:w="7319"/><text x="72.2375%" y="783.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (74 samples, 0.02%)</title><rect x="73.5072%" y="757" width="0.0155%" height="15" fill="rgb(237,14,5)" fg:x="350441" fg:w="74"/><text x="73.7572%" y="767.50"></text></g><g><title>parsed::http::get_content_length (73 samples, 0.02%)</title><rect x="73.5074%" y="741" width="0.0153%" height="15" fill="rgb(232,14,36)" fg:x="350442" fg:w="73"/><text x="73.7574%" y="751.50"></text></g><g><title>parsed::http::parse_http_request (7,391 samples, 1.55%)</title><rect x="71.9806%" y="821" width="1.5503%" height="15" fill="rgb(234,0,38)" fg:x="343163" fg:w="7391"/><text x="72.2306%" y="831.50"></text></g><g><title>parsed::stream::ByteStream::pull (160 samples, 0.03%)</title><rect x="73.5309%" y="821" width="0.0336%" height="15" fill="rgb(207,170,14)" fg:x="350554" fg:w="160"/><text x="73.7809%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (102 samples, 0.02%)</title><rect x="73.5430%" y="805" width="0.0214%" height="15" fill="rgb(252,45,13)" fg:x="350612" fg:w="102"/><text x="73.7930%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (102 samples, 0.02%)</title><rect x="73.5430%" y="789" width="0.0214%" height="15" fill="rgb(213,142,7)" fg:x="350612" fg:w="102"/><text x="73.7930%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (102 samples, 0.02%)</title><rect x="73.5430%" y="773" width="0.0214%" height="15" fill="rgb(216,157,23)" fg:x="350612" fg:w="102"/><text x="73.7930%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (101 samples, 0.02%)</title><rect x="73.5432%" y="757" width="0.0212%" height="15" fill="rgb(212,145,33)" fg:x="350613" fg:w="101"/><text x="73.7932%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (101 samples, 0.02%)</title><rect x="73.5432%" y="741" width="0.0212%" height="15" fill="rgb(233,26,13)" fg:x="350613" fg:w="101"/><text x="73.7932%" y="751.50"></text></g><g><title>cfree (88 samples, 0.02%)</title><rect x="73.5460%" y="725" width="0.0185%" height="15" fill="rgb(219,196,19)" fg:x="350626" fg:w="88"/><text x="73.7960%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.02%)</title><rect x="73.5682%" y="805" width="0.0203%" height="15" fill="rgb(246,56,21)" fg:x="350732" fg:w="97"/><text x="73.8182%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (340 samples, 0.07%)</title><rect x="73.5886%" y="805" width="0.0713%" height="15" fill="rgb(222,28,53)" fg:x="350829" fg:w="340"/><text x="73.8386%" y="815.50"></text></g><g><title>parsed::stream::ByteStream::put (460 samples, 0.10%)</title><rect x="73.5644%" y="821" width="0.0965%" height="15" fill="rgb(224,5,27)" fg:x="350714" fg:w="460"/><text x="73.8144%" y="831.50"></text></g><g><title>__libc_malloc (218 samples, 0.05%)</title><rect x="73.6689%" y="581" width="0.0457%" height="15" fill="rgb(220,153,33)" fg:x="351212" fg:w="218"/><text x="73.9189%" y="591.50"></text></g><g><title>[libc-2.31.so] (80 samples, 0.02%)</title><rect x="73.6978%" y="565" width="0.0168%" height="15" fill="rgb(226,58,19)" fg:x="351350" fg:w="80"/><text x="73.9478%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (244 samples, 0.05%)</title><rect x="73.6680%" y="757" width="0.0512%" height="15" fill="rgb(239,112,23)" fg:x="351208" fg:w="244"/><text x="73.9180%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (244 samples, 0.05%)</title><rect x="73.6680%" y="741" width="0.0512%" height="15" fill="rgb(251,213,20)" fg:x="351208" fg:w="244"/><text x="73.9180%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (244 samples, 0.05%)</title><rect x="73.6680%" y="725" width="0.0512%" height="15" fill="rgb(215,181,21)" fg:x="351208" fg:w="244"/><text x="73.9180%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (244 samples, 0.05%)</title><rect x="73.6680%" y="709" width="0.0512%" height="15" fill="rgb(240,8,35)" fg:x="351208" fg:w="244"/><text x="73.9180%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (244 samples, 0.05%)</title><rect x="73.6680%" y="693" width="0.0512%" height="15" fill="rgb(232,203,3)" fg:x="351208" fg:w="244"/><text x="73.9180%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (244 samples, 0.05%)</title><rect x="73.6680%" y="677" width="0.0512%" height="15" fill="rgb(214,202,43)" fg:x="351208" fg:w="244"/><text x="73.9180%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (244 samples, 0.05%)</title><rect x="73.6680%" y="661" width="0.0512%" height="15" fill="rgb(254,35,11)" fg:x="351208" fg:w="244"/><text x="73.9180%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (244 samples, 0.05%)</title><rect x="73.6680%" y="645" width="0.0512%" height="15" fill="rgb(239,173,13)" fg:x="351208" fg:w="244"/><text x="73.9180%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (244 samples, 0.05%)</title><rect x="73.6680%" y="629" width="0.0512%" height="15" fill="rgb(220,141,0)" fg:x="351208" fg:w="244"/><text x="73.9180%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (244 samples, 0.05%)</title><rect x="73.6680%" y="613" width="0.0512%" height="15" fill="rgb(210,98,12)" fg:x="351208" fg:w="244"/><text x="73.9180%" y="623.50"></text></g><g><title>alloc::alloc::alloc (243 samples, 0.05%)</title><rect x="73.6683%" y="597" width="0.0510%" height="15" fill="rgb(254,153,22)" fg:x="351209" fg:w="243"/><text x="73.9183%" y="607.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (253 samples, 0.05%)</title><rect x="73.6680%" y="805" width="0.0531%" height="15" fill="rgb(247,223,17)" fg:x="351208" fg:w="253"/><text x="73.9180%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (253 samples, 0.05%)</title><rect x="73.6680%" y="789" width="0.0531%" height="15" fill="rgb(246,56,7)" fg:x="351208" fg:w="253"/><text x="73.9180%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (253 samples, 0.05%)</title><rect x="73.6680%" y="773" width="0.0531%" height="15" fill="rgb(240,226,12)" fg:x="351208" fg:w="253"/><text x="73.9180%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (48 samples, 0.01%)</title><rect x="73.7406%" y="661" width="0.0101%" height="15" fill="rgb(205,87,46)" fg:x="351554" fg:w="48"/><text x="73.9906%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (48 samples, 0.01%)</title><rect x="73.7406%" y="645" width="0.0101%" height="15" fill="rgb(245,214,51)" fg:x="351554" fg:w="48"/><text x="73.9906%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (70 samples, 0.01%)</title><rect x="73.7387%" y="741" width="0.0147%" height="15" fill="rgb(223,172,33)" fg:x="351545" fg:w="70"/><text x="73.9887%" y="751.50"></text></g><g><title>alloc::string::String::push_str (62 samples, 0.01%)</title><rect x="73.7404%" y="725" width="0.0130%" height="15" fill="rgb(227,203,34)" fg:x="351553" fg:w="62"/><text x="73.9904%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (62 samples, 0.01%)</title><rect x="73.7404%" y="709" width="0.0130%" height="15" fill="rgb(248,143,44)" fg:x="351553" fg:w="62"/><text x="73.9904%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (62 samples, 0.01%)</title><rect x="73.7404%" y="693" width="0.0130%" height="15" fill="rgb(226,162,5)" fg:x="351553" fg:w="62"/><text x="73.9904%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (62 samples, 0.01%)</title><rect x="73.7404%" y="677" width="0.0130%" height="15" fill="rgb(211,143,1)" fg:x="351553" fg:w="62"/><text x="73.9904%" y="687.50"></text></g><g><title>core::fmt::run (140 samples, 0.03%)</title><rect x="73.7822%" y="693" width="0.0294%" height="15" fill="rgb(224,96,15)" fg:x="351752" fg:w="140"/><text x="74.0322%" y="703.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (108 samples, 0.02%)</title><rect x="73.7889%" y="677" width="0.0227%" height="15" fill="rgb(222,4,38)" fg:x="351784" fg:w="108"/><text x="74.0389%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (99 samples, 0.02%)</title><rect x="73.7908%" y="661" width="0.0208%" height="15" fill="rgb(253,228,15)" fg:x="351793" fg:w="99"/><text x="74.0408%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad_integral (87 samples, 0.02%)</title><rect x="73.7933%" y="645" width="0.0182%" height="15" fill="rgb(242,194,12)" fg:x="351805" fg:w="87"/><text x="74.0433%" y="655.50"></text></g><g><title>chrono::format::format_inner::write_local_minus_utc (193 samples, 0.04%)</title><rect x="73.7719%" y="725" width="0.0405%" height="15" fill="rgb(214,177,31)" fg:x="351703" fg:w="193"/><text x="74.0219%" y="735.50"></text></g><g><title>core::fmt::write (170 samples, 0.04%)</title><rect x="73.7767%" y="709" width="0.0357%" height="15" fill="rgb(226,58,51)" fg:x="351726" fg:w="170"/><text x="74.0267%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (110 samples, 0.02%)</title><rect x="73.8310%" y="517" width="0.0231%" height="15" fill="rgb(250,119,16)" fg:x="351985" fg:w="110"/><text x="74.0810%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (110 samples, 0.02%)</title><rect x="73.8310%" y="501" width="0.0231%" height="15" fill="rgb(223,128,53)" fg:x="351985" fg:w="110"/><text x="74.0810%" y="511.50"></text></g><g><title>alloc::alloc::realloc (110 samples, 0.02%)</title><rect x="73.8310%" y="485" width="0.0231%" height="15" fill="rgb(251,199,15)" fg:x="351985" fg:w="110"/><text x="74.0810%" y="495.50"></text></g><g><title>realloc (101 samples, 0.02%)</title><rect x="73.8329%" y="469" width="0.0212%" height="15" fill="rgb(235,168,42)" fg:x="351994" fg:w="101"/><text x="74.0829%" y="479.50"></text></g><g><title>[libc-2.31.so] (67 samples, 0.01%)</title><rect x="73.8400%" y="453" width="0.0141%" height="15" fill="rgb(250,210,17)" fg:x="352028" fg:w="67"/><text x="74.0900%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (114 samples, 0.02%)</title><rect x="73.8306%" y="533" width="0.0239%" height="15" fill="rgb(226,36,41)" fg:x="351983" fg:w="114"/><text x="74.0806%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (132 samples, 0.03%)</title><rect x="73.8275%" y="597" width="0.0277%" height="15" fill="rgb(225,87,10)" fg:x="351968" fg:w="132"/><text x="74.0775%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (127 samples, 0.03%)</title><rect x="73.8285%" y="581" width="0.0266%" height="15" fill="rgb(228,83,9)" fg:x="351973" fg:w="127"/><text x="74.0785%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (124 samples, 0.03%)</title><rect x="73.8291%" y="565" width="0.0260%" height="15" fill="rgb(225,16,36)" fg:x="351976" fg:w="124"/><text x="74.0791%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (124 samples, 0.03%)</title><rect x="73.8291%" y="549" width="0.0260%" height="15" fill="rgb(242,198,13)" fg:x="351976" fg:w="124"/><text x="74.0791%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (204 samples, 0.04%)</title><rect x="73.8193%" y="693" width="0.0428%" height="15" fill="rgb(239,25,51)" fg:x="351929" fg:w="204"/><text x="74.0693%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (168 samples, 0.04%)</title><rect x="73.8268%" y="677" width="0.0352%" height="15" fill="rgb(239,28,37)" fg:x="351965" fg:w="168"/><text x="74.0768%" y="687.50"></text></g><g><title>alloc::string::String::push_str (168 samples, 0.04%)</title><rect x="73.8268%" y="661" width="0.0352%" height="15" fill="rgb(234,70,17)" fg:x="351965" fg:w="168"/><text x="74.0768%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (168 samples, 0.04%)</title><rect x="73.8268%" y="645" width="0.0352%" height="15" fill="rgb(231,215,53)" fg:x="351965" fg:w="168"/><text x="74.0768%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (168 samples, 0.04%)</title><rect x="73.8268%" y="629" width="0.0352%" height="15" fill="rgb(218,140,42)" fg:x="351965" fg:w="168"/><text x="74.0768%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (168 samples, 0.04%)</title><rect x="73.8268%" y="613" width="0.0352%" height="15" fill="rgb(233,227,45)" fg:x="351965" fg:w="168"/><text x="74.0768%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (123 samples, 0.03%)</title><rect x="73.8872%" y="501" width="0.0258%" height="15" fill="rgb(225,189,21)" fg:x="352253" fg:w="123"/><text x="74.1372%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (123 samples, 0.03%)</title><rect x="73.8872%" y="485" width="0.0258%" height="15" fill="rgb(237,176,54)" fg:x="352253" fg:w="123"/><text x="74.1372%" y="495.50"></text></g><g><title>alloc::alloc::realloc (123 samples, 0.03%)</title><rect x="73.8872%" y="469" width="0.0258%" height="15" fill="rgb(215,131,46)" fg:x="352253" fg:w="123"/><text x="74.1372%" y="479.50"></text></g><g><title>realloc (109 samples, 0.02%)</title><rect x="73.8902%" y="453" width="0.0229%" height="15" fill="rgb(218,95,20)" fg:x="352267" fg:w="109"/><text x="74.1402%" y="463.50"></text></g><g><title>[libc-2.31.so] (99 samples, 0.02%)</title><rect x="73.9240%" y="485" width="0.0208%" height="15" fill="rgb(208,198,12)" fg:x="352428" fg:w="99"/><text x="74.1740%" y="495.50"></text></g><g><title>__libc_malloc (152 samples, 0.03%)</title><rect x="73.9130%" y="501" width="0.0319%" height="15" fill="rgb(239,107,50)" fg:x="352376" fg:w="152"/><text x="74.1630%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (296 samples, 0.06%)</title><rect x="73.8849%" y="517" width="0.0621%" height="15" fill="rgb(240,217,37)" fg:x="352242" fg:w="296"/><text x="74.1349%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (327 samples, 0.07%)</title><rect x="73.8810%" y="581" width="0.0686%" height="15" fill="rgb(242,197,49)" fg:x="352223" fg:w="327"/><text x="74.1310%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (325 samples, 0.07%)</title><rect x="73.8814%" y="565" width="0.0682%" height="15" fill="rgb(219,171,17)" fg:x="352225" fg:w="325"/><text x="74.1314%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (323 samples, 0.07%)</title><rect x="73.8818%" y="549" width="0.0678%" height="15" fill="rgb(209,81,40)" fg:x="352227" fg:w="323"/><text x="74.1318%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (321 samples, 0.07%)</title><rect x="73.8822%" y="533" width="0.0673%" height="15" fill="rgb(237,156,30)" fg:x="352229" fg:w="321"/><text x="74.1322%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (356 samples, 0.07%)</title><rect x="73.8795%" y="677" width="0.0747%" height="15" fill="rgb(212,127,16)" fg:x="352216" fg:w="356"/><text x="74.1295%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (353 samples, 0.07%)</title><rect x="73.8801%" y="661" width="0.0740%" height="15" fill="rgb(226,66,32)" fg:x="352219" fg:w="353"/><text x="74.1301%" y="671.50"></text></g><g><title>alloc::string::String::push_str (353 samples, 0.07%)</title><rect x="73.8801%" y="645" width="0.0740%" height="15" fill="rgb(245,22,46)" fg:x="352219" fg:w="353"/><text x="74.1301%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (353 samples, 0.07%)</title><rect x="73.8801%" y="629" width="0.0740%" height="15" fill="rgb(210,112,21)" fg:x="352219" fg:w="353"/><text x="74.1301%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (353 samples, 0.07%)</title><rect x="73.8801%" y="613" width="0.0740%" height="15" fill="rgb(207,118,39)" fg:x="352219" fg:w="353"/><text x="74.1301%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (353 samples, 0.07%)</title><rect x="73.8801%" y="597" width="0.0740%" height="15" fill="rgb(205,206,35)" fg:x="352219" fg:w="353"/><text x="74.1301%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (68 samples, 0.01%)</title><rect x="73.9609%" y="677" width="0.0143%" height="15" fill="rgb(222,120,2)" fg:x="352604" fg:w="68"/><text x="74.2109%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (62 samples, 0.01%)</title><rect x="73.9621%" y="661" width="0.0130%" height="15" fill="rgb(205,38,18)" fg:x="352610" fg:w="62"/><text x="74.2121%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad_integral (131 samples, 0.03%)</title><rect x="73.9865%" y="645" width="0.0275%" height="15" fill="rgb(226,61,2)" fg:x="352726" fg:w="131"/><text x="74.2365%" y="655.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (198 samples, 0.04%)</title><rect x="73.9751%" y="677" width="0.0415%" height="15" fill="rgb(242,161,23)" fg:x="352672" fg:w="198"/><text x="74.2251%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (186 samples, 0.04%)</title><rect x="73.9776%" y="661" width="0.0390%" height="15" fill="rgb(213,13,52)" fg:x="352684" fg:w="186"/><text x="74.2276%" y="671.50"></text></g><g><title>core::fmt::run (727 samples, 0.15%)</title><rect x="73.8646%" y="693" width="0.1525%" height="15" fill="rgb(246,209,47)" fg:x="352145" fg:w="727"/><text x="74.1146%" y="703.50"></text></g><g><title>chrono::format::format_inner (1,258 samples, 0.26%)</title><rect x="73.7557%" y="741" width="0.2639%" height="15" fill="rgb(214,41,3)" fg:x="351626" fg:w="1258"/><text x="74.0057%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (988 samples, 0.21%)</title><rect x="73.8124%" y="725" width="0.2072%" height="15" fill="rgb(236,119,38)" fg:x="351896" fg:w="988"/><text x="74.0624%" y="735.50"></text></g><g><title>core::fmt::write (985 samples, 0.21%)</title><rect x="73.8130%" y="709" width="0.2066%" height="15" fill="rgb(218,50,11)" fg:x="351899" fg:w="985"/><text x="74.0630%" y="719.50"></text></g><g><title>chrono::format::format (1,392 samples, 0.29%)</title><rect x="73.7381%" y="757" width="0.2920%" height="15" fill="rgb(228,38,11)" fg:x="351542" fg:w="1392"/><text x="73.9881%" y="767.50"></text></g><g><title>&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (1,408 samples, 0.30%)</title><rect x="73.7350%" y="773" width="0.2953%" height="15" fill="rgb(212,13,9)" fg:x="351527" fg:w="1408"/><text x="73.9850%" y="783.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,419 samples, 0.30%)</title><rect x="73.7350%" y="789" width="0.2976%" height="15" fill="rgb(208,211,9)" fg:x="351527" fg:w="1419"/><text x="73.9850%" y="799.50"></text></g><g><title>chrono::naive::date::NaiveDate::checked_add_signed (59 samples, 0.01%)</title><rect x="74.0387%" y="693" width="0.0124%" height="15" fill="rgb(239,39,32)" fg:x="352975" fg:w="59"/><text x="74.2887%" y="703.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (147 samples, 0.03%)</title><rect x="74.0343%" y="709" width="0.0308%" height="15" fill="rgb(254,179,26)" fg:x="352954" fg:w="147"/><text x="74.2843%" y="719.50"></text></g><g><title>chrono::naive::time::NaiveTime::overflowing_add_signed (67 samples, 0.01%)</title><rect x="74.0511%" y="693" width="0.0141%" height="15" fill="rgb(249,165,28)" fg:x="353034" fg:w="67"/><text x="74.3011%" y="703.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::naive_local (155 samples, 0.03%)</title><rect x="74.0328%" y="773" width="0.0325%" height="15" fill="rgb(225,59,50)" fg:x="352947" fg:w="155"/><text x="74.2828%" y="783.50"></text></g><g><title>chrono::offset::fixed::&lt;impl core::ops::arith::Add&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::add (151 samples, 0.03%)</title><rect x="74.0337%" y="757" width="0.0317%" height="15" fill="rgb(209,122,5)" fg:x="352951" fg:w="151"/><text x="74.2837%" y="767.50"></text></g><g><title>chrono::offset::fixed::add_with_leapsecond (151 samples, 0.03%)</title><rect x="74.0337%" y="741" width="0.0317%" height="15" fill="rgb(214,65,34)" fg:x="352951" fg:w="151"/><text x="74.2837%" y="751.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (150 samples, 0.03%)</title><rect x="74.0339%" y="725" width="0.0315%" height="15" fill="rgb(249,183,32)" fg:x="352952" fg:w="150"/><text x="74.2839%" y="735.50"></text></g><g><title>__libc_malloc (54 samples, 0.01%)</title><rect x="74.0853%" y="533" width="0.0113%" height="15" fill="rgb(218,122,24)" fg:x="353197" fg:w="54"/><text x="74.3353%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (74 samples, 0.02%)</title><rect x="74.0836%" y="549" width="0.0155%" height="15" fill="rgb(224,109,18)" fg:x="353189" fg:w="74"/><text x="74.3336%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (97 samples, 0.02%)</title><rect x="74.0804%" y="613" width="0.0203%" height="15" fill="rgb(210,68,50)" fg:x="353174" fg:w="97"/><text x="74.3304%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (97 samples, 0.02%)</title><rect x="74.0804%" y="597" width="0.0203%" height="15" fill="rgb(212,184,34)" fg:x="353174" fg:w="97"/><text x="74.3304%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (96 samples, 0.02%)</title><rect x="74.0806%" y="581" width="0.0201%" height="15" fill="rgb(238,105,48)" fg:x="353175" fg:w="96"/><text x="74.3306%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (93 samples, 0.02%)</title><rect x="74.0813%" y="565" width="0.0195%" height="15" fill="rgb(222,134,54)" fg:x="353178" fg:w="93"/><text x="74.3313%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (120 samples, 0.03%)</title><rect x="74.0796%" y="693" width="0.0252%" height="15" fill="rgb(246,24,43)" fg:x="353170" fg:w="120"/><text x="74.3296%" y="703.50"></text></g><g><title>alloc::string::String::push_str (116 samples, 0.02%)</title><rect x="74.0804%" y="677" width="0.0243%" height="15" fill="rgb(227,169,22)" fg:x="353174" fg:w="116"/><text x="74.3304%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (116 samples, 0.02%)</title><rect x="74.0804%" y="661" width="0.0243%" height="15" fill="rgb(253,152,4)" fg:x="353174" fg:w="116"/><text x="74.3304%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (116 samples, 0.02%)</title><rect x="74.0804%" y="645" width="0.0243%" height="15" fill="rgb(219,158,36)" fg:x="353174" fg:w="116"/><text x="74.3304%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (116 samples, 0.02%)</title><rect x="74.0804%" y="629" width="0.0243%" height="15" fill="rgb(251,128,40)" fg:x="353174" fg:w="116"/><text x="74.3304%" y="639.50"></text></g><g><title>&lt;chrono::offset::utc::Utc as core::fmt::Display&gt;::fmt (175 samples, 0.04%)</title><rect x="74.0697%" y="741" width="0.0367%" height="15" fill="rgb(254,101,39)" fg:x="353123" fg:w="175"/><text x="74.3197%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (164 samples, 0.03%)</title><rect x="74.0720%" y="725" width="0.0344%" height="15" fill="rgb(221,168,40)" fg:x="353134" fg:w="164"/><text x="74.3220%" y="735.50"></text></g><g><title>core::fmt::write (149 samples, 0.03%)</title><rect x="74.0752%" y="709" width="0.0313%" height="15" fill="rgb(221,14,27)" fg:x="353149" fg:w="149"/><text x="74.3252%" y="719.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::format_with_items (359 samples, 0.08%)</title><rect x="74.0326%" y="789" width="0.0753%" height="15" fill="rgb(207,36,43)" fg:x="352946" fg:w="359"/><text x="74.2826%" y="799.50"></text></g><g><title>chrono::format::DelayedFormat&lt;I&gt;::new_with_offset (203 samples, 0.04%)</title><rect x="74.0653%" y="773" width="0.0426%" height="15" fill="rgb(240,172,53)" fg:x="353102" fg:w="203"/><text x="74.3153%" y="783.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (183 samples, 0.04%)</title><rect x="74.0695%" y="757" width="0.0384%" height="15" fill="rgb(241,138,43)" fg:x="353122" fg:w="183"/><text x="74.3195%" y="767.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::to_rfc2822 (1,813 samples, 0.38%)</title><rect x="73.7331%" y="805" width="0.3803%" height="15" fill="rgb(227,78,19)" fg:x="351518" fg:w="1813"/><text x="73.9831%" y="815.50"></text></g><g><title>chrono::offset::utc::Utc::now (253 samples, 0.05%)</title><rect x="74.1134%" y="805" width="0.0531%" height="15" fill="rgb(215,127,44)" fg:x="353331" fg:w="253"/><text x="74.3634%" y="815.50"></text></g><g><title>std::time::SystemTime::now (155 samples, 0.03%)</title><rect x="74.1339%" y="789" width="0.0325%" height="15" fill="rgb(227,13,10)" fg:x="353429" fg:w="155"/><text x="74.3839%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (155 samples, 0.03%)</title><rect x="74.1339%" y="773" width="0.0325%" height="15" fill="rgb(249,177,6)" fg:x="353429" fg:w="155"/><text x="74.3839%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::now (155 samples, 0.03%)</title><rect x="74.1339%" y="757" width="0.0325%" height="15" fill="rgb(215,154,26)" fg:x="353429" fg:w="155"/><text x="74.3839%" y="767.50"></text></g><g><title>__clock_gettime (128 samples, 0.03%)</title><rect x="74.1396%" y="741" width="0.0268%" height="15" fill="rgb(250,168,20)" fg:x="353456" fg:w="128"/><text x="74.3896%" y="751.50"></text></g><g><title>__vdso_clock_gettime (101 samples, 0.02%)</title><rect x="74.1452%" y="725" width="0.0212%" height="15" fill="rgb(222,53,38)" fg:x="353483" fg:w="101"/><text x="74.3952%" y="735.50"></text></g><g><title>[[vdso]] (87 samples, 0.02%)</title><rect x="74.1482%" y="709" width="0.0182%" height="15" fill="rgb(245,154,5)" fg:x="353497" fg:w="87"/><text x="74.3982%" y="719.50"></text></g><g><title>[libc-2.31.so] (53 samples, 0.01%)</title><rect x="74.1673%" y="693" width="0.0111%" height="15" fill="rgb(214,89,50)" fg:x="353588" fg:w="53"/><text x="74.4173%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (98 samples, 0.02%)</title><rect x="74.1673%" y="725" width="0.0206%" height="15" fill="rgb(232,73,14)" fg:x="353588" fg:w="98"/><text x="74.4173%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (98 samples, 0.02%)</title><rect x="74.1673%" y="709" width="0.0206%" height="15" fill="rgb(230,101,20)" fg:x="353588" fg:w="98"/><text x="74.4173%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (100 samples, 0.02%)</title><rect x="74.1671%" y="789" width="0.0210%" height="15" fill="rgb(208,56,28)" fg:x="353587" fg:w="100"/><text x="74.4171%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (100 samples, 0.02%)</title><rect x="74.1671%" y="773" width="0.0210%" height="15" fill="rgb(247,205,22)" fg:x="353587" fg:w="100"/><text x="74.4171%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (100 samples, 0.02%)</title><rect x="74.1671%" y="757" width="0.0210%" height="15" fill="rgb(252,109,51)" fg:x="353587" fg:w="100"/><text x="74.4171%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (100 samples, 0.02%)</title><rect x="74.1671%" y="741" width="0.0210%" height="15" fill="rgb(220,40,24)" fg:x="353587" fg:w="100"/><text x="74.4171%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (73 samples, 0.02%)</title><rect x="74.1885%" y="661" width="0.0153%" height="15" fill="rgb(251,108,7)" fg:x="353689" fg:w="73"/><text x="74.4385%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (73 samples, 0.02%)</title><rect x="74.1885%" y="645" width="0.0153%" height="15" fill="rgb(238,102,51)" fg:x="353689" fg:w="73"/><text x="74.4385%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.02%)</title><rect x="74.1880%" y="773" width="0.0174%" height="15" fill="rgb(219,149,34)" fg:x="353687" fg:w="83"/><text x="74.4380%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[parsed::http::Header]&gt; (81 samples, 0.02%)</title><rect x="74.1885%" y="757" width="0.0170%" height="15" fill="rgb(239,70,0)" fg:x="353689" fg:w="81"/><text x="74.4385%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Header&gt; (81 samples, 0.02%)</title><rect x="74.1885%" y="741" width="0.0170%" height="15" fill="rgb(246,214,23)" fg:x="353689" fg:w="81"/><text x="74.4385%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (81 samples, 0.02%)</title><rect x="74.1885%" y="725" width="0.0170%" height="15" fill="rgb(239,221,51)" fg:x="353689" fg:w="81"/><text x="74.4385%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (81 samples, 0.02%)</title><rect x="74.1885%" y="709" width="0.0170%" height="15" fill="rgb(254,62,14)" fg:x="353689" fg:w="81"/><text x="74.4385%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (81 samples, 0.02%)</title><rect x="74.1885%" y="693" width="0.0170%" height="15" fill="rgb(253,57,33)" fg:x="353689" fg:w="81"/><text x="74.4385%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.02%)</title><rect x="74.1885%" y="677" width="0.0170%" height="15" fill="rgb(229,34,6)" fg:x="353689" fg:w="81"/><text x="74.4385%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;parsed::http::Header&gt;&gt; (121 samples, 0.03%)</title><rect x="74.1880%" y="789" width="0.0254%" height="15" fill="rgb(235,191,23)" fg:x="353687" fg:w="121"/><text x="74.4380%" y="799.50"></text></g><g><title>uppercut_mio_server::protocol::process (13,558 samples, 2.84%)</title><rect x="71.3697%" y="837" width="2.8439%" height="15" fill="rgb(217,207,27)" fg:x="340251" fg:w="13558"/><text x="71.6197%" y="847.50">up..</text></g><g><title>uppercut_mio_server::protocol::handle (2,635 samples, 0.55%)</title><rect x="73.6609%" y="821" width="0.5527%" height="15" fill="rgb(232,41,44)" fg:x="351174" fg:w="2635"/><text x="73.9109%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Request&gt; (225 samples, 0.05%)</title><rect x="74.1664%" y="805" width="0.0472%" height="15" fill="rgb(221,188,19)" fg:x="353584" fg:w="225"/><text x="74.4164%" y="815.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (26,712 samples, 5.60%)</title><rect x="68.6117%" y="853" width="5.6030%" height="15" fill="rgb(245,180,45)" fg:x="327102" fg:w="26712"/><text x="68.8617%" y="863.50">&lt;upperc..</text></g><g><title>__libc_malloc (59 samples, 0.01%)</title><rect x="74.2279%" y="597" width="0.0124%" height="15" fill="rgb(250,220,42)" fg:x="353877" fg:w="59"/><text x="74.4779%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (64 samples, 0.01%)</title><rect x="74.2277%" y="693" width="0.0134%" height="15" fill="rgb(234,16,34)" fg:x="353876" fg:w="64"/><text x="74.4777%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (64 samples, 0.01%)</title><rect x="74.2277%" y="677" width="0.0134%" height="15" fill="rgb(233,217,23)" fg:x="353876" fg:w="64"/><text x="74.4777%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (64 samples, 0.01%)</title><rect x="74.2277%" y="661" width="0.0134%" height="15" fill="rgb(209,22,46)" fg:x="353876" fg:w="64"/><text x="74.4777%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (64 samples, 0.01%)</title><rect x="74.2277%" y="645" width="0.0134%" height="15" fill="rgb(213,101,18)" fg:x="353876" fg:w="64"/><text x="74.4777%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (64 samples, 0.01%)</title><rect x="74.2277%" y="629" width="0.0134%" height="15" fill="rgb(215,179,52)" fg:x="353876" fg:w="64"/><text x="74.4777%" y="639.50"></text></g><g><title>alloc::alloc::alloc (64 samples, 0.01%)</title><rect x="74.2277%" y="613" width="0.0134%" height="15" fill="rgb(223,50,25)" fg:x="353876" fg:w="64"/><text x="74.4777%" y="623.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (69 samples, 0.01%)</title><rect x="74.2277%" y="821" width="0.0145%" height="15" fill="rgb(224,51,44)" fg:x="353876" fg:w="69"/><text x="74.4777%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (69 samples, 0.01%)</title><rect x="74.2277%" y="805" width="0.0145%" height="15" fill="rgb(224,13,54)" fg:x="353876" fg:w="69"/><text x="74.4777%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (69 samples, 0.01%)</title><rect x="74.2277%" y="789" width="0.0145%" height="15" fill="rgb(219,58,47)" fg:x="353876" fg:w="69"/><text x="74.4777%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (69 samples, 0.01%)</title><rect x="74.2277%" y="773" width="0.0145%" height="15" fill="rgb(246,124,34)" fg:x="353876" fg:w="69"/><text x="74.4777%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (69 samples, 0.01%)</title><rect x="74.2277%" y="757" width="0.0145%" height="15" fill="rgb(245,109,25)" fg:x="353876" fg:w="69"/><text x="74.4777%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69 samples, 0.01%)</title><rect x="74.2277%" y="741" width="0.0145%" height="15" fill="rgb(235,48,23)" fg:x="353876" fg:w="69"/><text x="74.4777%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (69 samples, 0.01%)</title><rect x="74.2277%" y="725" width="0.0145%" height="15" fill="rgb(229,203,36)" fg:x="353876" fg:w="69"/><text x="74.4777%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69 samples, 0.01%)</title><rect x="74.2277%" y="709" width="0.0145%" height="15" fill="rgb(234,180,9)" fg:x="353876" fg:w="69"/><text x="74.4777%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (67 samples, 0.01%)</title><rect x="74.2627%" y="773" width="0.0141%" height="15" fill="rgb(228,98,45)" fg:x="354043" fg:w="67"/><text x="74.5127%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (54 samples, 0.01%)</title><rect x="74.2654%" y="757" width="0.0113%" height="15" fill="rgb(240,24,36)" fg:x="354056" fg:w="54"/><text x="74.5154%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (54 samples, 0.01%)</title><rect x="74.2654%" y="741" width="0.0113%" height="15" fill="rgb(227,154,19)" fg:x="354056" fg:w="54"/><text x="74.5154%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (54 samples, 0.01%)</title><rect x="74.2654%" y="725" width="0.0113%" height="15" fill="rgb(231,2,48)" fg:x="354056" fg:w="54"/><text x="74.5154%" y="735.50"></text></g><g><title>alloc::alloc::alloc (54 samples, 0.01%)</title><rect x="74.2654%" y="709" width="0.0113%" height="15" fill="rgb(219,216,0)" fg:x="354056" fg:w="54"/><text x="74.5154%" y="719.50"></text></g><g><title>__libc_malloc (54 samples, 0.01%)</title><rect x="74.2654%" y="693" width="0.0113%" height="15" fill="rgb(251,88,0)" fg:x="354056" fg:w="54"/><text x="74.5154%" y="703.50"></text></g><g><title>[libc-2.31.so] (49 samples, 0.01%)</title><rect x="74.2665%" y="677" width="0.0103%" height="15" fill="rgb(242,45,45)" fg:x="354061" fg:w="49"/><text x="74.5165%" y="687.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (164 samples, 0.03%)</title><rect x="74.2493%" y="789" width="0.0344%" height="15" fill="rgb(218,149,45)" fg:x="353979" fg:w="164"/><text x="74.4993%" y="799.50"></text></g><g><title>__sched_yield (60 samples, 0.01%)</title><rect x="74.3038%" y="725" width="0.0126%" height="15" fill="rgb(247,194,10)" fg:x="354239" fg:w="60"/><text x="74.5538%" y="735.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (81 samples, 0.02%)</title><rect x="74.3015%" y="757" width="0.0170%" height="15" fill="rgb(234,33,37)" fg:x="354228" fg:w="81"/><text x="74.5515%" y="767.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (70 samples, 0.01%)</title><rect x="74.3038%" y="741" width="0.0147%" height="15" fill="rgb(218,61,13)" fg:x="354239" fg:w="70"/><text x="74.5538%" y="751.50"></text></g><g><title>futex_wake (138 samples, 0.03%)</title><rect x="74.3288%" y="581" width="0.0289%" height="15" fill="rgb(210,80,52)" fg:x="354358" fg:w="138"/><text x="74.5788%" y="591.50"></text></g><g><title>wake_up_q (117 samples, 0.02%)</title><rect x="74.3332%" y="565" width="0.0245%" height="15" fill="rgb(218,203,27)" fg:x="354379" fg:w="117"/><text x="74.5832%" y="575.50"></text></g><g><title>try_to_wake_up (116 samples, 0.02%)</title><rect x="74.3334%" y="549" width="0.0243%" height="15" fill="rgb(209,126,33)" fg:x="354380" fg:w="116"/><text x="74.5834%" y="559.50"></text></g><g><title>__lock_text_start (116 samples, 0.02%)</title><rect x="74.3334%" y="533" width="0.0243%" height="15" fill="rgb(234,173,41)" fg:x="354380" fg:w="116"/><text x="74.5834%" y="543.50"></text></g><g><title>do_futex (153 samples, 0.03%)</title><rect x="74.3277%" y="597" width="0.0321%" height="15" fill="rgb(228,166,9)" fg:x="354353" fg:w="153"/><text x="74.5777%" y="607.50"></text></g><g><title>__x64_sys_futex (157 samples, 0.03%)</title><rect x="74.3275%" y="613" width="0.0329%" height="15" fill="rgb(208,124,43)" fg:x="354352" fg:w="157"/><text x="74.5775%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (198 samples, 0.04%)</title><rect x="74.3191%" y="741" width="0.0415%" height="15" fill="rgb(212,154,38)" fg:x="354312" fg:w="198"/><text x="74.5691%" y="751.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (198 samples, 0.04%)</title><rect x="74.3191%" y="725" width="0.0415%" height="15" fill="rgb(246,179,35)" fg:x="354312" fg:w="198"/><text x="74.5691%" y="735.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (189 samples, 0.04%)</title><rect x="74.3210%" y="709" width="0.0396%" height="15" fill="rgb(251,3,50)" fg:x="354321" fg:w="189"/><text x="74.5710%" y="719.50"></text></g><g><title>std::thread::Thread::unpark (189 samples, 0.04%)</title><rect x="74.3210%" y="693" width="0.0396%" height="15" fill="rgb(219,96,8)" fg:x="354321" fg:w="189"/><text x="74.5710%" y="703.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (189 samples, 0.04%)</title><rect x="74.3210%" y="677" width="0.0396%" height="15" fill="rgb(251,216,33)" fg:x="354321" fg:w="189"/><text x="74.5710%" y="687.50"></text></g><g><title>syscall (186 samples, 0.04%)</title><rect x="74.3216%" y="661" width="0.0390%" height="15" fill="rgb(243,145,29)" fg:x="354324" fg:w="186"/><text x="74.5716%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (166 samples, 0.03%)</title><rect x="74.3258%" y="645" width="0.0348%" height="15" fill="rgb(210,75,20)" fg:x="354344" fg:w="166"/><text x="74.5758%" y="655.50"></text></g><g><title>do_syscall_64 (166 samples, 0.03%)</title><rect x="74.3258%" y="629" width="0.0348%" height="15" fill="rgb(235,56,8)" fg:x="354344" fg:w="166"/><text x="74.5758%" y="639.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (570 samples, 0.12%)</title><rect x="74.2422%" y="821" width="0.1196%" height="15" fill="rgb(226,175,49)" fg:x="353945" fg:w="570"/><text x="74.4922%" y="831.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (551 samples, 0.12%)</title><rect x="74.2461%" y="805" width="0.1156%" height="15" fill="rgb(242,204,23)" fg:x="353964" fg:w="551"/><text x="74.4961%" y="815.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (372 samples, 0.08%)</title><rect x="74.2837%" y="789" width="0.0780%" height="15" fill="rgb(225,104,24)" fg:x="354143" fg:w="372"/><text x="74.5337%" y="799.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (292 samples, 0.06%)</title><rect x="74.3005%" y="773" width="0.0612%" height="15" fill="rgb(253,34,1)" fg:x="354223" fg:w="292"/><text x="74.5505%" y="783.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (203 samples, 0.04%)</title><rect x="74.3191%" y="757" width="0.0426%" height="15" fill="rgb(233,199,23)" fg:x="354312" fg:w="203"/><text x="74.5691%" y="767.50"></text></g><g><title>&lt;uppercut::core::Local as uppercut::api::AnySender&gt;::send (688 samples, 0.14%)</title><rect x="74.2231%" y="837" width="0.1443%" height="15" fill="rgb(247,7,51)" fg:x="353854" fg:w="688"/><text x="74.4731%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (51 samples, 0.01%)</title><rect x="74.3753%" y="757" width="0.0107%" height="15" fill="rgb(214,146,12)" fg:x="354580" fg:w="51"/><text x="74.6253%" y="767.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (80 samples, 0.02%)</title><rect x="74.3735%" y="789" width="0.0168%" height="15" fill="rgb(234,181,43)" fg:x="354571" fg:w="80"/><text x="74.6235%" y="799.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (77 samples, 0.02%)</title><rect x="74.3741%" y="773" width="0.0162%" height="15" fill="rgb(239,148,6)" fg:x="354574" fg:w="77"/><text x="74.6241%" y="783.50"></text></g><g><title>alloc::fmt::format (115 samples, 0.02%)</title><rect x="74.3674%" y="837" width="0.0241%" height="15" fill="rgb(206,151,17)" fg:x="354542" fg:w="115"/><text x="74.6174%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (101 samples, 0.02%)</title><rect x="74.3703%" y="821" width="0.0212%" height="15" fill="rgb(213,215,10)" fg:x="354556" fg:w="101"/><text x="74.6203%" y="831.50"></text></g><g><title>core::fmt::write (99 samples, 0.02%)</title><rect x="74.3707%" y="805" width="0.0208%" height="15" fill="rgb(215,220,44)" fg:x="354558" fg:w="99"/><text x="74.6207%" y="815.50"></text></g><g><title>tcp_poll (97 samples, 0.02%)</title><rect x="74.5532%" y="645" width="0.0203%" height="15" fill="rgb(245,205,37)" fg:x="355428" fg:w="97"/><text x="74.8032%" y="655.50"></text></g><g><title>sock_poll (266 samples, 0.06%)</title><rect x="74.5283%" y="661" width="0.0558%" height="15" fill="rgb(245,130,43)" fg:x="355309" fg:w="266"/><text x="74.7783%" y="671.50"></text></g><g><title>tcp_stream_memory_free (50 samples, 0.01%)</title><rect x="74.5736%" y="645" width="0.0105%" height="15" fill="rgb(231,227,38)" fg:x="355525" fg:w="50"/><text x="74.8236%" y="655.50"></text></g><g><title>ep_item_poll.isra.0 (348 samples, 0.07%)</title><rect x="74.5117%" y="677" width="0.0730%" height="15" fill="rgb(233,185,4)" fg:x="355230" fg:w="348"/><text x="74.7617%" y="687.50"></text></g><g><title>ep_send_events_proc (447 samples, 0.09%)</title><rect x="74.4945%" y="693" width="0.0938%" height="15" fill="rgb(224,154,43)" fg:x="355148" fg:w="447"/><text x="74.7445%" y="703.50"></text></g><g><title>ep_scan_ready_list.constprop.0 (522 samples, 0.11%)</title><rect x="74.4848%" y="709" width="0.1095%" height="15" fill="rgb(235,156,15)" fg:x="355102" fg:w="522"/><text x="74.7348%" y="719.50"></text></g><g><title>ep_poll (869 samples, 0.18%)</title><rect x="74.4752%" y="725" width="0.1823%" height="15" fill="rgb(211,55,43)" fg:x="355056" fg:w="869"/><text x="74.7252%" y="735.50"></text></g><g><title>schedule_hrtimeout_range (288 samples, 0.06%)</title><rect x="74.5971%" y="709" width="0.0604%" height="15" fill="rgb(247,149,40)" fg:x="355637" fg:w="288"/><text x="74.8471%" y="719.50"></text></g><g><title>schedule_hrtimeout_range_clock (288 samples, 0.06%)</title><rect x="74.5971%" y="693" width="0.0604%" height="15" fill="rgb(232,171,16)" fg:x="355637" fg:w="288"/><text x="74.8471%" y="703.50"></text></g><g><title>schedule (286 samples, 0.06%)</title><rect x="74.5975%" y="677" width="0.0600%" height="15" fill="rgb(215,117,49)" fg:x="355639" fg:w="286"/><text x="74.8475%" y="687.50"></text></g><g><title>__schedule (285 samples, 0.06%)</title><rect x="74.5977%" y="661" width="0.0598%" height="15" fill="rgb(246,194,11)" fg:x="355640" fg:w="285"/><text x="74.8477%" y="671.50"></text></g><g><title>finish_task_switch (276 samples, 0.06%)</title><rect x="74.5996%" y="645" width="0.0579%" height="15" fill="rgb(242,101,44)" fg:x="355649" fg:w="276"/><text x="74.8496%" y="655.50"></text></g><g><title>do_epoll_wait (927 samples, 0.19%)</title><rect x="74.4639%" y="741" width="0.1944%" height="15" fill="rgb(226,174,6)" fg:x="355002" fg:w="927"/><text x="74.7139%" y="751.50"></text></g><g><title>__x64_sys_epoll_wait (933 samples, 0.20%)</title><rect x="74.4628%" y="757" width="0.1957%" height="15" fill="rgb(213,150,20)" fg:x="354997" fg:w="933"/><text x="74.7128%" y="767.50"></text></g><g><title>mio::poll::Poll::poll (1,241 samples, 0.26%)</title><rect x="74.3993%" y="837" width="0.2603%" height="15" fill="rgb(222,124,42)" fg:x="354694" fg:w="1241"/><text x="74.6493%" y="847.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1,233 samples, 0.26%)</title><rect x="74.4009%" y="821" width="0.2586%" height="15" fill="rgb(250,19,47)" fg:x="354702" fg:w="1233"/><text x="74.6509%" y="831.50"></text></g><g><title>epoll_wait (1,204 samples, 0.25%)</title><rect x="74.4070%" y="805" width="0.2525%" height="15" fill="rgb(241,217,19)" fg:x="354731" fg:w="1204"/><text x="74.6570%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,015 samples, 0.21%)</title><rect x="74.4467%" y="789" width="0.2129%" height="15" fill="rgb(207,210,34)" fg:x="354920" fg:w="1015"/><text x="74.6967%" y="799.50"></text></g><g><title>do_syscall_64 (995 samples, 0.21%)</title><rect x="74.4509%" y="773" width="0.2087%" height="15" fill="rgb(244,45,4)" fg:x="354940" fg:w="995"/><text x="74.7009%" y="783.50"></text></g><g><title>__libc_malloc (52 samples, 0.01%)</title><rect x="74.6602%" y="741" width="0.0109%" height="15" fill="rgb(252,134,50)" fg:x="355938" fg:w="52"/><text x="74.9102%" y="751.50"></text></g><g><title>std::panic::catch_unwind (28,896 samples, 6.06%)</title><rect x="68.6106%" y="933" width="6.0611%" height="15" fill="rgb(238,74,2)" fg:x="327097" fg:w="28896"/><text x="68.8606%" y="943.50">std::pan..</text></g><g><title>std::panicking::try (28,896 samples, 6.06%)</title><rect x="68.6106%" y="917" width="6.0611%" height="15" fill="rgb(226,58,46)" fg:x="327097" fg:w="28896"/><text x="68.8606%" y="927.50">std::pan..</text></g><g><title>std::panicking::try::do_call (28,896 samples, 6.06%)</title><rect x="68.6106%" y="901" width="6.0611%" height="15" fill="rgb(232,83,35)" fg:x="327097" fg:w="28896"/><text x="68.8606%" y="911.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (28,896 samples, 6.06%)</title><rect x="68.6106%" y="885" width="6.0611%" height="15" fill="rgb(212,148,47)" fg:x="327097" fg:w="28896"/><text x="68.8606%" y="895.50">&lt;core::p..</text></g><g><title>uppercut::core::worker_loop::{{closure}} (28,896 samples, 6.06%)</title><rect x="68.6106%" y="869" width="6.0611%" height="15" fill="rgb(235,29,1)" fg:x="327097" fg:w="28896"/><text x="68.8606%" y="879.50">uppercut..</text></g><g><title>&lt;uppercut_mio_server::server::Listener as uppercut::api::AnyActor&gt;::receive (2,179 samples, 0.46%)</title><rect x="74.2147%" y="853" width="0.4571%" height="15" fill="rgb(247,55,37)" fg:x="353814" fg:w="2179"/><text x="74.4647%" y="863.50"></text></g><g><title>uppercut::api::Envelope::of (58 samples, 0.01%)</title><rect x="74.6596%" y="837" width="0.0122%" height="15" fill="rgb(222,48,3)" fg:x="355935" fg:w="58"/><text x="74.9096%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (55 samples, 0.01%)</title><rect x="74.6602%" y="821" width="0.0115%" height="15" fill="rgb(234,21,33)" fg:x="355938" fg:w="55"/><text x="74.9102%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (55 samples, 0.01%)</title><rect x="74.6602%" y="805" width="0.0115%" height="15" fill="rgb(247,178,53)" fg:x="355938" fg:w="55"/><text x="74.9102%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (55 samples, 0.01%)</title><rect x="74.6602%" y="789" width="0.0115%" height="15" fill="rgb(225,75,7)" fg:x="355938" fg:w="55"/><text x="74.9102%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (55 samples, 0.01%)</title><rect x="74.6602%" y="773" width="0.0115%" height="15" fill="rgb(219,199,7)" fg:x="355938" fg:w="55"/><text x="74.9102%" y="783.50"></text></g><g><title>alloc::alloc::alloc (55 samples, 0.01%)</title><rect x="74.6602%" y="757" width="0.0115%" height="15" fill="rgb(209,93,42)" fg:x="355938" fg:w="55"/><text x="74.9102%" y="767.50"></text></g><g><title>worker-4 (71,585 samples, 15.02%)</title><rect x="59.6570%" y="1285" width="15.0154%" height="15" fill="rgb(240,175,17)" fg:x="284411" fg:w="71585"/><text x="59.9070%" y="1295.50">worker-4</text></g><g><title>clone (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1269" width="14.5669%" height="15" fill="rgb(232,106,7)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1279.50">clone</text></g><g><title>start_thread (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1253" width="14.5669%" height="15" fill="rgb(242,106,43)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1263.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1237" width="14.5669%" height="15" fill="rgb(242,61,37)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1247.50">std::sys::unix::thread..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1221" width="14.5669%" height="15" fill="rgb(205,72,10)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1231.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1205" width="14.5669%" height="15" fill="rgb(214,184,36)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1215.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1189" width="14.5669%" height="15" fill="rgb(206,107,18)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1199.50">core::ops::function::F..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1173" width="14.5669%" height="15" fill="rgb(210,75,5)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1183.50">std::thread::Builder::..</text></g><g><title>std::panic::catch_unwind (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1157" width="14.5669%" height="15" fill="rgb(205,3,19)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1167.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1141" width="14.5669%" height="15" fill="rgb(207,181,42)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1151.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1125" width="14.5669%" height="15" fill="rgb(229,179,43)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1135.50">std::panicking::try::d..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1109" width="14.5669%" height="15" fill="rgb(246,95,30)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1119.50">&lt;core::panic::unwind_s..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1093" width="14.5669%" height="15" fill="rgb(234,144,45)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1103.50">std::thread::Builder::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1077" width="14.5669%" height="15" fill="rgb(250,54,25)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1087.50">std::sys_common::backt..</text></g><g><title>uppercut::pool::Worker::new::{{closure}} (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1061" width="14.5669%" height="15" fill="rgb(215,195,40)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1071.50">uppercut::pool::Worker..</text></g><g><title>std::panic::catch_unwind (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1045" width="14.5669%" height="15" fill="rgb(233,188,42)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1055.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1029" width="14.5669%" height="15" fill="rgb(247,227,35)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (69,447 samples, 14.57%)</title><rect x="60.1054%" y="1013" width="14.5669%" height="15" fill="rgb(249,124,27)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1023.50">std::panicking::try::d..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (69,447 samples, 14.57%)</title><rect x="60.1054%" y="997" width="14.5669%" height="15" fill="rgb(219,207,25)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="1007.50">&lt;core::panic::unwind_s..</text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (69,447 samples, 14.57%)</title><rect x="60.1054%" y="981" width="14.5669%" height="15" fill="rgb(241,216,47)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="991.50">uppercut::pool::Worker..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69,447 samples, 14.57%)</title><rect x="60.1054%" y="965" width="14.5669%" height="15" fill="rgb(233,82,50)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="975.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>uppercut::core::worker_loop (69,447 samples, 14.57%)</title><rect x="60.1054%" y="949" width="14.5669%" height="15" fill="rgb(232,63,2)" fg:x="286549" fg:w="69447"/><text x="60.3554%" y="959.50">uppercut::core::worker..</text></g><g><title>__libc_malloc (66 samples, 0.01%)</title><rect x="74.6774%" y="757" width="0.0138%" height="15" fill="rgb(236,184,28)" fg:x="356020" fg:w="66"/><text x="74.9274%" y="767.50"></text></g><g><title>alloc::string::String::with_capacity (74 samples, 0.02%)</title><rect x="74.6768%" y="885" width="0.0155%" height="15" fill="rgb(254,63,27)" fg:x="356017" fg:w="74"/><text x="74.9268%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (71 samples, 0.01%)</title><rect x="74.6774%" y="869" width="0.0149%" height="15" fill="rgb(253,106,28)" fg:x="356020" fg:w="71"/><text x="74.9274%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (71 samples, 0.01%)</title><rect x="74.6774%" y="853" width="0.0149%" height="15" fill="rgb(225,141,39)" fg:x="356020" fg:w="71"/><text x="74.9274%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (71 samples, 0.01%)</title><rect x="74.6774%" y="837" width="0.0149%" height="15" fill="rgb(222,157,20)" fg:x="356020" fg:w="71"/><text x="74.9274%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (71 samples, 0.01%)</title><rect x="74.6774%" y="821" width="0.0149%" height="15" fill="rgb(210,190,9)" fg:x="356020" fg:w="71"/><text x="74.9274%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (71 samples, 0.01%)</title><rect x="74.6774%" y="805" width="0.0149%" height="15" fill="rgb(242,167,7)" fg:x="356020" fg:w="71"/><text x="74.9274%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (71 samples, 0.01%)</title><rect x="74.6774%" y="789" width="0.0149%" height="15" fill="rgb(227,82,41)" fg:x="356020" fg:w="71"/><text x="74.9274%" y="799.50"></text></g><g><title>alloc::alloc::alloc (71 samples, 0.01%)</title><rect x="74.6774%" y="773" width="0.0149%" height="15" fill="rgb(222,131,13)" fg:x="356020" fg:w="71"/><text x="74.9274%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (72 samples, 0.02%)</title><rect x="74.6929%" y="885" width="0.0151%" height="15" fill="rgb(221,98,26)" fg:x="356094" fg:w="72"/><text x="74.9429%" y="895.50"></text></g><g><title>core::fmt::write (72 samples, 0.02%)</title><rect x="74.6929%" y="869" width="0.0151%" height="15" fill="rgb(251,63,52)" fg:x="356094" fg:w="72"/><text x="74.9429%" y="879.50"></text></g><g><title>alloc::fmt::format (153 samples, 0.03%)</title><rect x="74.6761%" y="901" width="0.0321%" height="15" fill="rgb(246,25,43)" fg:x="356014" fg:w="153"/><text x="74.9261%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 samples, 0.02%)</title><rect x="74.7332%" y="837" width="0.0187%" height="15" fill="rgb(247,167,15)" fg:x="356286" fg:w="89"/><text x="74.9832%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (60 samples, 0.01%)</title><rect x="74.7393%" y="821" width="0.0126%" height="15" fill="rgb(240,104,42)" fg:x="356315" fg:w="60"/><text x="74.9893%" y="831.50"></text></g><g><title>alloc::string::String::push_str (60 samples, 0.01%)</title><rect x="74.7393%" y="805" width="0.0126%" height="15" fill="rgb(224,54,6)" fg:x="356315" fg:w="60"/><text x="74.9893%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (60 samples, 0.01%)</title><rect x="74.7393%" y="789" width="0.0126%" height="15" fill="rgb(244,108,35)" fg:x="356315" fg:w="60"/><text x="74.9893%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (60 samples, 0.01%)</title><rect x="74.7393%" y="773" width="0.0126%" height="15" fill="rgb(216,154,2)" fg:x="356315" fg:w="60"/><text x="74.9893%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (60 samples, 0.01%)</title><rect x="74.7393%" y="757" width="0.0126%" height="15" fill="rgb(222,8,47)" fg:x="356315" fg:w="60"/><text x="74.9893%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (48 samples, 0.01%)</title><rect x="74.7418%" y="741" width="0.0101%" height="15" fill="rgb(252,93,1)" fg:x="356327" fg:w="48"/><text x="74.9918%" y="751.50"></text></g><g><title>alloc::fmt::format (273 samples, 0.06%)</title><rect x="74.7206%" y="885" width="0.0573%" height="15" fill="rgb(223,226,51)" fg:x="356226" fg:w="273"/><text x="74.9706%" y="895.50"></text></g><g><title>core::fmt::Write::write_fmt (234 samples, 0.05%)</title><rect x="74.7288%" y="869" width="0.0491%" height="15" fill="rgb(206,147,9)" fg:x="356265" fg:w="234"/><text x="74.9788%" y="879.50"></text></g><g><title>core::fmt::write (233 samples, 0.05%)</title><rect x="74.7290%" y="853" width="0.0489%" height="15" fill="rgb(248,180,41)" fg:x="356266" fg:w="233"/><text x="74.9790%" y="863.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (333 samples, 0.07%)</title><rect x="74.7172%" y="901" width="0.0698%" height="15" fill="rgb(209,47,50)" fg:x="356210" fg:w="333"/><text x="74.9672%" y="911.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (619 samples, 0.13%)</title><rect x="74.6724%" y="933" width="0.1298%" height="15" fill="rgb(243,65,31)" fg:x="355996" fg:w="619"/><text x="74.9224%" y="943.50"></text></g><g><title>parsed::parser::single::{{closure}} (618 samples, 0.13%)</title><rect x="74.6726%" y="917" width="0.1296%" height="15" fill="rgb(228,128,1)" fg:x="355997" fg:w="618"/><text x="74.9226%" y="927.50"></text></g><g><title>parsed::stream::ByteStream::next (72 samples, 0.02%)</title><rect x="74.7871%" y="901" width="0.0151%" height="15" fill="rgb(231,192,16)" fg:x="356543" fg:w="72"/><text x="75.0371%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (58 samples, 0.01%)</title><rect x="74.8179%" y="821" width="0.0122%" height="15" fill="rgb(224,26,40)" fg:x="356690" fg:w="58"/><text x="75.0679%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (58 samples, 0.01%)</title><rect x="74.8179%" y="805" width="0.0122%" height="15" fill="rgb(214,192,17)" fg:x="356690" fg:w="58"/><text x="75.0679%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (57 samples, 0.01%)</title><rect x="74.8181%" y="789" width="0.0120%" height="15" fill="rgb(225,147,18)" fg:x="356691" fg:w="57"/><text x="75.0681%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (57 samples, 0.01%)</title><rect x="74.8181%" y="773" width="0.0120%" height="15" fill="rgb(205,35,11)" fg:x="356691" fg:w="57"/><text x="75.0681%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 0.01%)</title><rect x="74.8184%" y="757" width="0.0117%" height="15" fill="rgb(242,40,42)" fg:x="356692" fg:w="56"/><text x="75.0684%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 0.01%)</title><rect x="74.8184%" y="741" width="0.0117%" height="15" fill="rgb(250,170,13)" fg:x="356692" fg:w="56"/><text x="75.0684%" y="751.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.01%)</title><rect x="74.8184%" y="725" width="0.0117%" height="15" fill="rgb(240,161,28)" fg:x="356692" fg:w="56"/><text x="75.0684%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (83 samples, 0.02%)</title><rect x="74.8129%" y="869" width="0.0174%" height="15" fill="rgb(245,179,12)" fg:x="356666" fg:w="83"/><text x="75.0629%" y="879.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (79 samples, 0.02%)</title><rect x="74.8137%" y="853" width="0.0166%" height="15" fill="rgb(250,92,32)" fg:x="356670" fg:w="79"/><text x="75.0637%" y="863.50"></text></g><g><title>parsed::stream::ByteStream::get (77 samples, 0.02%)</title><rect x="74.8142%" y="837" width="0.0162%" height="15" fill="rgb(233,10,40)" fg:x="356672" fg:w="77"/><text x="75.0642%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (55 samples, 0.01%)</title><rect x="74.8303%" y="869" width="0.0115%" height="15" fill="rgb(217,98,1)" fg:x="356749" fg:w="55"/><text x="75.0803%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::matcher::MatchError&gt; (49 samples, 0.01%)</title><rect x="74.8316%" y="853" width="0.0103%" height="15" fill="rgb(238,202,7)" fg:x="356755" fg:w="49"/><text x="75.0816%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (49 samples, 0.01%)</title><rect x="74.8316%" y="837" width="0.0103%" height="15" fill="rgb(222,91,3)" fg:x="356755" fg:w="49"/><text x="75.0816%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (49 samples, 0.01%)</title><rect x="74.8316%" y="821" width="0.0103%" height="15" fill="rgb(211,170,49)" fg:x="356755" fg:w="49"/><text x="75.0816%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (49 samples, 0.01%)</title><rect x="74.8316%" y="805" width="0.0103%" height="15" fill="rgb(253,139,18)" fg:x="356755" fg:w="49"/><text x="75.0816%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.01%)</title><rect x="74.8316%" y="789" width="0.0103%" height="15" fill="rgb(222,4,43)" fg:x="356755" fg:w="49"/><text x="75.0816%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (49 samples, 0.01%)</title><rect x="74.8316%" y="773" width="0.0103%" height="15" fill="rgb(207,205,12)" fg:x="356755" fg:w="49"/><text x="75.0816%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (49 samples, 0.01%)</title><rect x="74.8316%" y="757" width="0.0103%" height="15" fill="rgb(216,159,46)" fg:x="356755" fg:w="49"/><text x="75.0816%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (50 samples, 0.01%)</title><rect x="74.8609%" y="805" width="0.0105%" height="15" fill="rgb(236,115,1)" fg:x="356895" fg:w="50"/><text x="75.1109%" y="815.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (71 samples, 0.01%)</title><rect x="74.8718%" y="805" width="0.0149%" height="15" fill="rgb(251,35,33)" fg:x="356947" fg:w="71"/><text x="75.1218%" y="815.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (64 samples, 0.01%)</title><rect x="74.8733%" y="789" width="0.0134%" height="15" fill="rgb(248,62,51)" fg:x="356954" fg:w="64"/><text x="75.1233%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (141 samples, 0.03%)</title><rect x="74.8580%" y="837" width="0.0296%" height="15" fill="rgb(254,180,19)" fg:x="356881" fg:w="141"/><text x="75.1080%" y="847.50"></text></g><g><title>core::fmt::write (140 samples, 0.03%)</title><rect x="74.8582%" y="821" width="0.0294%" height="15" fill="rgb(217,100,32)" fg:x="356882" fg:w="140"/><text x="75.1082%" y="831.50"></text></g><g><title>alloc::fmt::format (214 samples, 0.04%)</title><rect x="74.8429%" y="853" width="0.0449%" height="15" fill="rgb(224,71,22)" fg:x="356809" fg:w="214"/><text x="75.0929%" y="863.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (224 samples, 0.05%)</title><rect x="74.8418%" y="869" width="0.0470%" height="15" fill="rgb(251,185,33)" fg:x="356804" fg:w="224"/><text x="75.0918%" y="879.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (389 samples, 0.08%)</title><rect x="74.8091%" y="901" width="0.0816%" height="15" fill="rgb(209,75,48)" fg:x="356648" fg:w="389"/><text x="75.0591%" y="911.50"></text></g><g><title>parsed::parser::before::{{closure}} (373 samples, 0.08%)</title><rect x="74.8125%" y="885" width="0.0782%" height="15" fill="rgb(253,190,16)" fg:x="356664" fg:w="373"/><text x="75.0625%" y="895.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (420 samples, 0.09%)</title><rect x="74.8074%" y="917" width="0.0881%" height="15" fill="rgb(226,140,1)" fg:x="356640" fg:w="420"/><text x="75.0574%" y="927.50"></text></g><g><title>alloc::string::String::reserve (70 samples, 0.01%)</title><rect x="74.9006%" y="837" width="0.0147%" height="15" fill="rgb(206,75,30)" fg:x="357084" fg:w="70"/><text x="75.1506%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (70 samples, 0.01%)</title><rect x="74.9006%" y="821" width="0.0147%" height="15" fill="rgb(231,208,37)" fg:x="357084" fg:w="70"/><text x="75.1506%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (70 samples, 0.01%)</title><rect x="74.9006%" y="805" width="0.0147%" height="15" fill="rgb(238,136,40)" fg:x="357084" fg:w="70"/><text x="75.1506%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (66 samples, 0.01%)</title><rect x="74.9014%" y="789" width="0.0138%" height="15" fill="rgb(247,137,17)" fg:x="357088" fg:w="66"/><text x="75.1514%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (65 samples, 0.01%)</title><rect x="74.9016%" y="773" width="0.0136%" height="15" fill="rgb(240,60,40)" fg:x="357089" fg:w="65"/><text x="75.1516%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (125 samples, 0.03%)</title><rect x="74.8983%" y="853" width="0.0262%" height="15" fill="rgb(236,68,50)" fg:x="357073" fg:w="125"/><text x="75.1483%" y="863.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1253" width="0.2528%" height="15" fill="rgb(230,42,12)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1263.50"></text></g><g><title>uppercut_mio_server::protocol::process (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1237" width="0.2528%" height="15" fill="rgb(219,16,16)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1247.50"></text></g><g><title>parsed::http::parse_http_request (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1221" width="0.2528%" height="15" fill="rgb(220,38,35)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1231.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1205" width="0.2528%" height="15" fill="rgb(228,33,1)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1215.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1189" width="0.2528%" height="15" fill="rgb(241,46,31)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1199.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1173" width="0.2528%" height="15" fill="rgb(232,58,20)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1183.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1157" width="0.2528%" height="15" fill="rgb(206,228,53)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1167.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1141" width="0.2528%" height="15" fill="rgb(206,88,33)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1151.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1125" width="0.2528%" height="15" fill="rgb(238,69,7)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1135.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1109" width="0.2528%" height="15" fill="rgb(250,21,46)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1119.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1093" width="0.2528%" height="15" fill="rgb(215,212,21)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1103.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1077" width="0.2528%" height="15" fill="rgb(211,35,12)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1087.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1061" width="0.2528%" height="15" fill="rgb(231,184,16)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1071.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1045" width="0.2528%" height="15" fill="rgb(242,140,15)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1055.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1029" width="0.2528%" height="15" fill="rgb(220,37,14)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1039.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="1013" width="0.2528%" height="15" fill="rgb(223,146,22)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1023.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="997" width="0.2528%" height="15" fill="rgb(216,132,15)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="1007.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="981" width="0.2528%" height="15" fill="rgb(248,83,5)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="991.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="965" width="0.2528%" height="15" fill="rgb(231,206,48)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,205 samples, 0.25%)</title><rect x="74.6724%" y="949" width="0.2528%" height="15" fill="rgb(253,185,37)" fg:x="355996" fg:w="1205"/><text x="74.9224%" y="959.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (586 samples, 0.12%)</title><rect x="74.8022%" y="933" width="0.1229%" height="15" fill="rgb(208,21,44)" fg:x="356615" fg:w="586"/><text x="75.0522%" y="943.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (141 samples, 0.03%)</title><rect x="74.8955%" y="917" width="0.0296%" height="15" fill="rgb(236,125,4)" fg:x="357060" fg:w="141"/><text x="75.1455%" y="927.50"></text></g><g><title>parsed::http::as_string (138 samples, 0.03%)</title><rect x="74.8962%" y="901" width="0.0289%" height="15" fill="rgb(226,134,25)" fg:x="357063" fg:w="138"/><text x="75.1462%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (138 samples, 0.03%)</title><rect x="74.8962%" y="885" width="0.0289%" height="15" fill="rgb(250,201,12)" fg:x="357063" fg:w="138"/><text x="75.1462%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (134 samples, 0.03%)</title><rect x="74.8970%" y="869" width="0.0281%" height="15" fill="rgb(225,92,18)" fg:x="357067" fg:w="134"/><text x="75.1470%" y="879.50"></text></g><g><title>alloc::fmt::format (52 samples, 0.01%)</title><rect x="74.9318%" y="565" width="0.0109%" height="15" fill="rgb(227,35,22)" fg:x="357233" fg:w="52"/><text x="75.1818%" y="575.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (163 samples, 0.03%)</title><rect x="74.9318%" y="597" width="0.0342%" height="15" fill="rgb(214,180,52)" fg:x="357233" fg:w="163"/><text x="75.1818%" y="607.50"></text></g><g><title>parsed::parser::single::{{closure}} (163 samples, 0.03%)</title><rect x="74.9318%" y="581" width="0.0342%" height="15" fill="rgb(233,55,38)" fg:x="357233" fg:w="163"/><text x="75.1818%" y="591.50"></text></g><g><title>parsed::stream::ByteStream::next (66 samples, 0.01%)</title><rect x="74.9522%" y="565" width="0.0138%" height="15" fill="rgb(249,171,43)" fg:x="357330" fg:w="66"/><text x="75.2022%" y="575.50"></text></g><g><title>start_thread (200 samples, 0.04%)</title><rect x="74.9318%" y="1253" width="0.0420%" height="15" fill="rgb(239,87,2)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1263.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (200 samples, 0.04%)</title><rect x="74.9318%" y="1237" width="0.0420%" height="15" fill="rgb(248,141,5)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (200 samples, 0.04%)</title><rect x="74.9318%" y="1221" width="0.0420%" height="15" fill="rgb(238,33,42)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (200 samples, 0.04%)</title><rect x="74.9318%" y="1205" width="0.0420%" height="15" fill="rgb(231,57,19)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (200 samples, 0.04%)</title><rect x="74.9318%" y="1189" width="0.0420%" height="15" fill="rgb(214,78,53)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1199.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (200 samples, 0.04%)</title><rect x="74.9318%" y="1173" width="0.0420%" height="15" fill="rgb(206,132,29)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (200 samples, 0.04%)</title><rect x="74.9318%" y="1157" width="0.0420%" height="15" fill="rgb(248,174,31)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1167.50"></text></g><g><title>std::panicking::try (200 samples, 0.04%)</title><rect x="74.9318%" y="1141" width="0.0420%" height="15" fill="rgb(221,87,13)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (200 samples, 0.04%)</title><rect x="74.9318%" y="1125" width="0.0420%" height="15" fill="rgb(223,197,17)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (200 samples, 0.04%)</title><rect x="74.9318%" y="1109" width="0.0420%" height="15" fill="rgb(220,144,50)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (200 samples, 0.04%)</title><rect x="74.9318%" y="1093" width="0.0420%" height="15" fill="rgb(244,201,11)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1103.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (200 samples, 0.04%)</title><rect x="74.9318%" y="1077" width="0.0420%" height="15" fill="rgb(249,81,34)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1087.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (200 samples, 0.04%)</title><rect x="74.9318%" y="1061" width="0.0420%" height="15" fill="rgb(205,161,12)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (200 samples, 0.04%)</title><rect x="74.9318%" y="1045" width="0.0420%" height="15" fill="rgb(252,139,50)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1055.50"></text></g><g><title>std::panicking::try (200 samples, 0.04%)</title><rect x="74.9318%" y="1029" width="0.0420%" height="15" fill="rgb(205,169,14)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (200 samples, 0.04%)</title><rect x="74.9318%" y="1013" width="0.0420%" height="15" fill="rgb(248,198,33)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (200 samples, 0.04%)</title><rect x="74.9318%" y="997" width="0.0420%" height="15" fill="rgb(236,23,21)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="1007.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (200 samples, 0.04%)</title><rect x="74.9318%" y="981" width="0.0420%" height="15" fill="rgb(231,13,38)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (200 samples, 0.04%)</title><rect x="74.9318%" y="965" width="0.0420%" height="15" fill="rgb(239,139,21)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="975.50"></text></g><g><title>uppercut::core::worker_loop (200 samples, 0.04%)</title><rect x="74.9318%" y="949" width="0.0420%" height="15" fill="rgb(222,164,45)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="959.50"></text></g><g><title>std::panic::catch_unwind (200 samples, 0.04%)</title><rect x="74.9318%" y="933" width="0.0420%" height="15" fill="rgb(230,52,27)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="943.50"></text></g><g><title>std::panicking::try (200 samples, 0.04%)</title><rect x="74.9318%" y="917" width="0.0420%" height="15" fill="rgb(227,143,42)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="927.50"></text></g><g><title>std::panicking::try::do_call (200 samples, 0.04%)</title><rect x="74.9318%" y="901" width="0.0420%" height="15" fill="rgb(249,127,1)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (200 samples, 0.04%)</title><rect x="74.9318%" y="885" width="0.0420%" height="15" fill="rgb(243,107,26)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="895.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (200 samples, 0.04%)</title><rect x="74.9318%" y="869" width="0.0420%" height="15" fill="rgb(225,7,45)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="879.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (200 samples, 0.04%)</title><rect x="74.9318%" y="853" width="0.0420%" height="15" fill="rgb(241,88,38)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="863.50"></text></g><g><title>uppercut_mio_server::protocol::process (200 samples, 0.04%)</title><rect x="74.9318%" y="837" width="0.0420%" height="15" fill="rgb(226,121,9)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="847.50"></text></g><g><title>parsed::http::parse_http_request (200 samples, 0.04%)</title><rect x="74.9318%" y="821" width="0.0420%" height="15" fill="rgb(253,60,29)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="831.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (200 samples, 0.04%)</title><rect x="74.9318%" y="805" width="0.0420%" height="15" fill="rgb(244,181,39)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="815.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (200 samples, 0.04%)</title><rect x="74.9318%" y="789" width="0.0420%" height="15" fill="rgb(252,203,31)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="799.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (200 samples, 0.04%)</title><rect x="74.9318%" y="773" width="0.0420%" height="15" fill="rgb(224,120,8)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="783.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (200 samples, 0.04%)</title><rect x="74.9318%" y="757" width="0.0420%" height="15" fill="rgb(205,171,54)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="767.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (200 samples, 0.04%)</title><rect x="74.9318%" y="741" width="0.0420%" height="15" fill="rgb(235,89,11)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="751.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (200 samples, 0.04%)</title><rect x="74.9318%" y="725" width="0.0420%" height="15" fill="rgb(212,180,28)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="735.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (200 samples, 0.04%)</title><rect x="74.9318%" y="709" width="0.0420%" height="15" fill="rgb(247,84,49)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="719.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (200 samples, 0.04%)</title><rect x="74.9318%" y="693" width="0.0420%" height="15" fill="rgb(236,187,52)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="703.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (200 samples, 0.04%)</title><rect x="74.9318%" y="677" width="0.0420%" height="15" fill="rgb(227,24,15)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="687.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (200 samples, 0.04%)</title><rect x="74.9318%" y="661" width="0.0420%" height="15" fill="rgb(227,211,13)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="671.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (200 samples, 0.04%)</title><rect x="74.9318%" y="645" width="0.0420%" height="15" fill="rgb(245,52,14)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="655.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (200 samples, 0.04%)</title><rect x="74.9318%" y="629" width="0.0420%" height="15" fill="rgb(225,185,13)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (200 samples, 0.04%)</title><rect x="74.9318%" y="613" width="0.0420%" height="15" fill="rgb(217,160,29)" fg:x="357233" fg:w="200"/><text x="75.1818%" y="623.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (84 samples, 0.02%)</title><rect x="74.9738%" y="613" width="0.0176%" height="15" fill="rgb(216,115,53)" fg:x="357433" fg:w="84"/><text x="75.2238%" y="623.50"></text></g><g><title>parsed::parser::single::{{closure}} (84 samples, 0.02%)</title><rect x="74.9738%" y="597" width="0.0176%" height="15" fill="rgb(236,99,5)" fg:x="357433" fg:w="84"/><text x="75.2238%" y="607.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (57 samples, 0.01%)</title><rect x="74.9794%" y="581" width="0.0120%" height="15" fill="rgb(222,60,38)" fg:x="357460" fg:w="57"/><text x="75.2294%" y="591.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (117 samples, 0.02%)</title><rect x="74.9738%" y="1253" width="0.0245%" height="15" fill="rgb(212,82,22)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (117 samples, 0.02%)</title><rect x="74.9738%" y="1237" width="0.0245%" height="15" fill="rgb(214,48,28)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (117 samples, 0.02%)</title><rect x="74.9738%" y="1221" width="0.0245%" height="15" fill="rgb(245,196,50)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (117 samples, 0.02%)</title><rect x="74.9738%" y="1205" width="0.0245%" height="15" fill="rgb(225,159,46)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1215.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (117 samples, 0.02%)</title><rect x="74.9738%" y="1189" width="0.0245%" height="15" fill="rgb(207,195,48)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (117 samples, 0.02%)</title><rect x="74.9738%" y="1173" width="0.0245%" height="15" fill="rgb(240,73,3)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1183.50"></text></g><g><title>std::panicking::try (117 samples, 0.02%)</title><rect x="74.9738%" y="1157" width="0.0245%" height="15" fill="rgb(245,57,23)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (117 samples, 0.02%)</title><rect x="74.9738%" y="1141" width="0.0245%" height="15" fill="rgb(240,75,18)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (117 samples, 0.02%)</title><rect x="74.9738%" y="1125" width="0.0245%" height="15" fill="rgb(238,168,12)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (117 samples, 0.02%)</title><rect x="74.9738%" y="1109" width="0.0245%" height="15" fill="rgb(226,20,40)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (117 samples, 0.02%)</title><rect x="74.9738%" y="1093" width="0.0245%" height="15" fill="rgb(224,130,35)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1103.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (117 samples, 0.02%)</title><rect x="74.9738%" y="1077" width="0.0245%" height="15" fill="rgb(225,63,41)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (117 samples, 0.02%)</title><rect x="74.9738%" y="1061" width="0.0245%" height="15" fill="rgb(219,3,3)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1071.50"></text></g><g><title>std::panicking::try (117 samples, 0.02%)</title><rect x="74.9738%" y="1045" width="0.0245%" height="15" fill="rgb(218,157,4)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (117 samples, 0.02%)</title><rect x="74.9738%" y="1029" width="0.0245%" height="15" fill="rgb(232,76,36)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (117 samples, 0.02%)</title><rect x="74.9738%" y="1013" width="0.0245%" height="15" fill="rgb(247,36,0)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1023.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (117 samples, 0.02%)</title><rect x="74.9738%" y="997" width="0.0245%" height="15" fill="rgb(205,2,34)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (117 samples, 0.02%)</title><rect x="74.9738%" y="981" width="0.0245%" height="15" fill="rgb(239,136,13)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="991.50"></text></g><g><title>uppercut::core::worker_loop (117 samples, 0.02%)</title><rect x="74.9738%" y="965" width="0.0245%" height="15" fill="rgb(253,122,12)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="975.50"></text></g><g><title>std::panic::catch_unwind (117 samples, 0.02%)</title><rect x="74.9738%" y="949" width="0.0245%" height="15" fill="rgb(222,174,7)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="959.50"></text></g><g><title>std::panicking::try (117 samples, 0.02%)</title><rect x="74.9738%" y="933" width="0.0245%" height="15" fill="rgb(208,191,42)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="943.50"></text></g><g><title>std::panicking::try::do_call (117 samples, 0.02%)</title><rect x="74.9738%" y="917" width="0.0245%" height="15" fill="rgb(237,212,15)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (117 samples, 0.02%)</title><rect x="74.9738%" y="901" width="0.0245%" height="15" fill="rgb(215,65,20)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="911.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (117 samples, 0.02%)</title><rect x="74.9738%" y="885" width="0.0245%" height="15" fill="rgb(232,103,11)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="895.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (117 samples, 0.02%)</title><rect x="74.9738%" y="869" width="0.0245%" height="15" fill="rgb(235,148,18)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="879.50"></text></g><g><title>uppercut_mio_server::protocol::process (117 samples, 0.02%)</title><rect x="74.9738%" y="853" width="0.0245%" height="15" fill="rgb(240,173,7)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="863.50"></text></g><g><title>parsed::http::parse_http_request (117 samples, 0.02%)</title><rect x="74.9738%" y="837" width="0.0245%" height="15" fill="rgb(228,182,25)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="847.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (117 samples, 0.02%)</title><rect x="74.9738%" y="821" width="0.0245%" height="15" fill="rgb(247,3,52)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="831.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (117 samples, 0.02%)</title><rect x="74.9738%" y="805" width="0.0245%" height="15" fill="rgb(226,155,8)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="815.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (117 samples, 0.02%)</title><rect x="74.9738%" y="789" width="0.0245%" height="15" fill="rgb(243,195,38)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="799.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (117 samples, 0.02%)</title><rect x="74.9738%" y="773" width="0.0245%" height="15" fill="rgb(254,181,33)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="783.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (117 samples, 0.02%)</title><rect x="74.9738%" y="757" width="0.0245%" height="15" fill="rgb(232,98,23)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="767.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (117 samples, 0.02%)</title><rect x="74.9738%" y="741" width="0.0245%" height="15" fill="rgb(205,23,10)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="751.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (117 samples, 0.02%)</title><rect x="74.9738%" y="725" width="0.0245%" height="15" fill="rgb(212,124,38)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="735.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (117 samples, 0.02%)</title><rect x="74.9738%" y="709" width="0.0245%" height="15" fill="rgb(228,207,2)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="719.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (117 samples, 0.02%)</title><rect x="74.9738%" y="693" width="0.0245%" height="15" fill="rgb(215,120,22)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="703.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (117 samples, 0.02%)</title><rect x="74.9738%" y="677" width="0.0245%" height="15" fill="rgb(251,172,33)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="687.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (117 samples, 0.02%)</title><rect x="74.9738%" y="661" width="0.0245%" height="15" fill="rgb(250,83,2)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="671.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (117 samples, 0.02%)</title><rect x="74.9738%" y="645" width="0.0245%" height="15" fill="rgb(210,132,53)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="655.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (117 samples, 0.02%)</title><rect x="74.9738%" y="629" width="0.0245%" height="15" fill="rgb(221,208,36)" fg:x="357433" fg:w="117"/><text x="75.2238%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (61 samples, 0.01%)</title><rect x="75.0010%" y="677" width="0.0128%" height="15" fill="rgb(205,192,46)" fg:x="357563" fg:w="61"/><text x="75.2510%" y="687.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (162 samples, 0.03%)</title><rect x="74.9983%" y="773" width="0.0340%" height="15" fill="rgb(223,163,14)" fg:x="357550" fg:w="162"/><text x="75.2483%" y="783.50"></text></g><g><title>parsed::parser::single::{{closure}} (162 samples, 0.03%)</title><rect x="74.9983%" y="757" width="0.0340%" height="15" fill="rgb(218,41,28)" fg:x="357550" fg:w="162"/><text x="75.2483%" y="767.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (162 samples, 0.03%)</title><rect x="74.9983%" y="741" width="0.0340%" height="15" fill="rgb(235,104,10)" fg:x="357550" fg:w="162"/><text x="75.2483%" y="751.50"></text></g><g><title>alloc::fmt::format (162 samples, 0.03%)</title><rect x="74.9983%" y="725" width="0.0340%" height="15" fill="rgb(246,17,4)" fg:x="357550" fg:w="162"/><text x="75.2483%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (162 samples, 0.03%)</title><rect x="74.9983%" y="709" width="0.0340%" height="15" fill="rgb(240,7,16)" fg:x="357550" fg:w="162"/><text x="75.2483%" y="719.50"></text></g><g><title>core::fmt::write (162 samples, 0.03%)</title><rect x="74.9983%" y="693" width="0.0340%" height="15" fill="rgb(213,160,23)" fg:x="357550" fg:w="162"/><text x="75.2483%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (179 samples, 0.04%)</title><rect x="74.9983%" y="1253" width="0.0375%" height="15" fill="rgb(251,179,49)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1263.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}} (179 samples, 0.04%)</title><rect x="74.9983%" y="1237" width="0.0375%" height="15" fill="rgb(247,198,10)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (179 samples, 0.04%)</title><rect x="74.9983%" y="1221" width="0.0375%" height="15" fill="rgb(220,65,29)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1231.50"></text></g><g><title>std::panicking::try (179 samples, 0.04%)</title><rect x="74.9983%" y="1205" width="0.0375%" height="15" fill="rgb(237,171,28)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (179 samples, 0.04%)</title><rect x="74.9983%" y="1189" width="0.0375%" height="15" fill="rgb(228,44,26)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (179 samples, 0.04%)</title><rect x="74.9983%" y="1173" width="0.0375%" height="15" fill="rgb(216,210,27)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1183.50"></text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (179 samples, 0.04%)</title><rect x="74.9983%" y="1157" width="0.0375%" height="15" fill="rgb(252,10,17)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (179 samples, 0.04%)</title><rect x="74.9983%" y="1141" width="0.0375%" height="15" fill="rgb(214,172,30)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1151.50"></text></g><g><title>uppercut::core::worker_loop (179 samples, 0.04%)</title><rect x="74.9983%" y="1125" width="0.0375%" height="15" fill="rgb(253,130,48)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (179 samples, 0.04%)</title><rect x="74.9983%" y="1109" width="0.0375%" height="15" fill="rgb(226,99,43)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1119.50"></text></g><g><title>std::panicking::try (179 samples, 0.04%)</title><rect x="74.9983%" y="1093" width="0.0375%" height="15" fill="rgb(239,111,26)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (179 samples, 0.04%)</title><rect x="74.9983%" y="1077" width="0.0375%" height="15" fill="rgb(240,27,53)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (179 samples, 0.04%)</title><rect x="74.9983%" y="1061" width="0.0375%" height="15" fill="rgb(254,163,12)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1071.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (179 samples, 0.04%)</title><rect x="74.9983%" y="1045" width="0.0375%" height="15" fill="rgb(225,51,48)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1055.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (179 samples, 0.04%)</title><rect x="74.9983%" y="1029" width="0.0375%" height="15" fill="rgb(205,19,32)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1039.50"></text></g><g><title>uppercut_mio_server::protocol::process (179 samples, 0.04%)</title><rect x="74.9983%" y="1013" width="0.0375%" height="15" fill="rgb(218,119,26)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1023.50"></text></g><g><title>parsed::http::parse_http_request (179 samples, 0.04%)</title><rect x="74.9983%" y="997" width="0.0375%" height="15" fill="rgb(231,173,33)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="1007.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (179 samples, 0.04%)</title><rect x="74.9983%" y="981" width="0.0375%" height="15" fill="rgb(241,100,29)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="991.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (179 samples, 0.04%)</title><rect x="74.9983%" y="965" width="0.0375%" height="15" fill="rgb(250,194,34)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (179 samples, 0.04%)</title><rect x="74.9983%" y="949" width="0.0375%" height="15" fill="rgb(215,23,50)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="959.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (179 samples, 0.04%)</title><rect x="74.9983%" y="933" width="0.0375%" height="15" fill="rgb(206,49,37)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="943.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (179 samples, 0.04%)</title><rect x="74.9983%" y="917" width="0.0375%" height="15" fill="rgb(247,39,21)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="927.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (179 samples, 0.04%)</title><rect x="74.9983%" y="901" width="0.0375%" height="15" fill="rgb(209,220,15)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="911.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (179 samples, 0.04%)</title><rect x="74.9983%" y="885" width="0.0375%" height="15" fill="rgb(206,41,33)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="895.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (179 samples, 0.04%)</title><rect x="74.9983%" y="869" width="0.0375%" height="15" fill="rgb(221,225,45)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="879.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (179 samples, 0.04%)</title><rect x="74.9983%" y="853" width="0.0375%" height="15" fill="rgb(216,27,18)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="863.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (179 samples, 0.04%)</title><rect x="74.9983%" y="837" width="0.0375%" height="15" fill="rgb(250,193,34)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="847.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (179 samples, 0.04%)</title><rect x="74.9983%" y="821" width="0.0375%" height="15" fill="rgb(227,215,20)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="831.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (179 samples, 0.04%)</title><rect x="74.9983%" y="805" width="0.0375%" height="15" fill="rgb(242,211,27)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="815.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (179 samples, 0.04%)</title><rect x="74.9983%" y="789" width="0.0375%" height="15" fill="rgb(229,190,30)" fg:x="357550" fg:w="179"/><text x="75.2483%" y="799.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (96 samples, 0.02%)</title><rect x="75.0740%" y="773" width="0.0201%" height="15" fill="rgb(253,31,29)" fg:x="357911" fg:w="96"/><text x="75.3240%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (83 samples, 0.02%)</title><rect x="75.0768%" y="757" width="0.0174%" height="15" fill="rgb(229,177,52)" fg:x="357924" fg:w="83"/><text x="75.3268%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (162 samples, 0.03%)</title><rect x="75.0612%" y="805" width="0.0340%" height="15" fill="rgb(226,88,8)" fg:x="357850" fg:w="162"/><text x="75.3112%" y="815.50"></text></g><g><title>core::fmt::write (160 samples, 0.03%)</title><rect x="75.0617%" y="789" width="0.0336%" height="15" fill="rgb(214,55,27)" fg:x="357852" fg:w="160"/><text x="75.3117%" y="799.50"></text></g><g><title>alloc::fmt::format (198 samples, 0.04%)</title><rect x="75.0539%" y="821" width="0.0415%" height="15" fill="rgb(233,202,5)" fg:x="357815" fg:w="198"/><text x="75.3039%" y="831.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (204 samples, 0.04%)</title><rect x="75.0531%" y="837" width="0.0428%" height="15" fill="rgb(251,49,30)" fg:x="357811" fg:w="204"/><text x="75.3031%" y="847.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (263 samples, 0.06%)</title><rect x="75.0422%" y="869" width="0.0552%" height="15" fill="rgb(235,18,52)" fg:x="357759" fg:w="263"/><text x="75.2922%" y="879.50"></text></g><g><title>parsed::parser::before::{{closure}} (260 samples, 0.05%)</title><rect x="75.0428%" y="853" width="0.0545%" height="15" fill="rgb(250,111,51)" fg:x="357762" fg:w="260"/><text x="75.2928%" y="863.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (352 samples, 0.07%)</title><rect x="75.0390%" y="885" width="0.0738%" height="15" fill="rgb(218,13,25)" fg:x="357744" fg:w="352"/><text x="75.2890%" y="895.50"></text></g><g><title>uppercut::core::worker_loop (368 samples, 0.08%)</title><rect x="75.0359%" y="1253" width="0.0772%" height="15" fill="rgb(248,96,7)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (368 samples, 0.08%)</title><rect x="75.0359%" y="1237" width="0.0772%" height="15" fill="rgb(217,31,15)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1247.50"></text></g><g><title>std::panicking::try (368 samples, 0.08%)</title><rect x="75.0359%" y="1221" width="0.0772%" height="15" fill="rgb(228,59,49)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (368 samples, 0.08%)</title><rect x="75.0359%" y="1205" width="0.0772%" height="15" fill="rgb(210,152,38)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1215.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (368 samples, 0.08%)</title><rect x="75.0359%" y="1189" width="0.0772%" height="15" fill="rgb(206,71,11)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1199.50"></text></g><g><title>uppercut::core::worker_loop::{{closure}} (368 samples, 0.08%)</title><rect x="75.0359%" y="1173" width="0.0772%" height="15" fill="rgb(244,199,5)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1183.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (368 samples, 0.08%)</title><rect x="75.0359%" y="1157" width="0.0772%" height="15" fill="rgb(253,49,1)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1167.50"></text></g><g><title>uppercut_mio_server::protocol::process (368 samples, 0.08%)</title><rect x="75.0359%" y="1141" width="0.0772%" height="15" fill="rgb(225,206,40)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1151.50"></text></g><g><title>parsed::http::parse_http_request (368 samples, 0.08%)</title><rect x="75.0359%" y="1125" width="0.0772%" height="15" fill="rgb(243,116,47)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1135.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (368 samples, 0.08%)</title><rect x="75.0359%" y="1109" width="0.0772%" height="15" fill="rgb(219,225,16)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1119.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (368 samples, 0.08%)</title><rect x="75.0359%" y="1093" width="0.0772%" height="15" fill="rgb(233,29,47)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1103.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (368 samples, 0.08%)</title><rect x="75.0359%" y="1077" width="0.0772%" height="15" fill="rgb(250,179,18)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1087.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (368 samples, 0.08%)</title><rect x="75.0359%" y="1061" width="0.0772%" height="15" fill="rgb(215,176,6)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1071.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (368 samples, 0.08%)</title><rect x="75.0359%" y="1045" width="0.0772%" height="15" fill="rgb(214,117,39)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1055.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (368 samples, 0.08%)</title><rect x="75.0359%" y="1029" width="0.0772%" height="15" fill="rgb(247,183,36)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1039.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (368 samples, 0.08%)</title><rect x="75.0359%" y="1013" width="0.0772%" height="15" fill="rgb(237,200,3)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1023.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (368 samples, 0.08%)</title><rect x="75.0359%" y="997" width="0.0772%" height="15" fill="rgb(212,220,24)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="1007.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (368 samples, 0.08%)</title><rect x="75.0359%" y="981" width="0.0772%" height="15" fill="rgb(245,216,20)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="991.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (368 samples, 0.08%)</title><rect x="75.0359%" y="965" width="0.0772%" height="15" fill="rgb(219,124,7)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="975.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (368 samples, 0.08%)</title><rect x="75.0359%" y="949" width="0.0772%" height="15" fill="rgb(227,167,8)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="959.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (368 samples, 0.08%)</title><rect x="75.0359%" y="933" width="0.0772%" height="15" fill="rgb(241,37,2)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="943.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (368 samples, 0.08%)</title><rect x="75.0359%" y="917" width="0.0772%" height="15" fill="rgb(238,134,33)" fg:x="357729" fg:w="368"/><text x="75.2859%" y="927.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (353 samples, 0.07%)</title><rect x="75.0390%" y="901" width="0.0740%" height="15" fill="rgb(248,48,27)" fg:x="357744" fg:w="353"/><text x="75.2890%" y="911.50"></text></g><g><title>[unknown] (2,136 samples, 0.45%)</title><rect x="74.6724%" y="1269" width="0.4480%" height="15" fill="rgb(212,14,16)" fg:x="355996" fg:w="2136"/><text x="74.9224%" y="1279.50"></text></g><g><title>__libc_malloc (88 samples, 0.02%)</title><rect x="75.2964%" y="757" width="0.0185%" height="15" fill="rgb(217,205,37)" fg:x="358971" fg:w="88"/><text x="75.5464%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (98 samples, 0.02%)</title><rect x="75.2960%" y="853" width="0.0206%" height="15" fill="rgb(233,185,47)" fg:x="358969" fg:w="98"/><text x="75.5460%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (98 samples, 0.02%)</title><rect x="75.2960%" y="837" width="0.0206%" height="15" fill="rgb(244,88,8)" fg:x="358969" fg:w="98"/><text x="75.5460%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (98 samples, 0.02%)</title><rect x="75.2960%" y="821" width="0.0206%" height="15" fill="rgb(213,0,20)" fg:x="358969" fg:w="98"/><text x="75.5460%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (98 samples, 0.02%)</title><rect x="75.2960%" y="805" width="0.0206%" height="15" fill="rgb(238,159,36)" fg:x="358969" fg:w="98"/><text x="75.5460%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (98 samples, 0.02%)</title><rect x="75.2960%" y="789" width="0.0206%" height="15" fill="rgb(253,173,17)" fg:x="358969" fg:w="98"/><text x="75.5460%" y="799.50"></text></g><g><title>alloc::alloc::alloc (96 samples, 0.02%)</title><rect x="75.2964%" y="773" width="0.0201%" height="15" fill="rgb(221,23,28)" fg:x="358971" fg:w="96"/><text x="75.5464%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (202 samples, 0.04%)</title><rect x="75.2937%" y="933" width="0.0424%" height="15" fill="rgb(218,113,15)" fg:x="358958" fg:w="202"/><text x="75.5437%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (191 samples, 0.04%)</title><rect x="75.2960%" y="917" width="0.0401%" height="15" fill="rgb(233,58,3)" fg:x="358969" fg:w="191"/><text x="75.5460%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (191 samples, 0.04%)</title><rect x="75.2960%" y="901" width="0.0401%" height="15" fill="rgb(250,46,35)" fg:x="358969" fg:w="191"/><text x="75.5460%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (191 samples, 0.04%)</title><rect x="75.2960%" y="885" width="0.0401%" height="15" fill="rgb(210,169,11)" fg:x="358969" fg:w="191"/><text x="75.5460%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (191 samples, 0.04%)</title><rect x="75.2960%" y="869" width="0.0401%" height="15" fill="rgb(246,88,19)" fg:x="358969" fg:w="191"/><text x="75.5460%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (93 samples, 0.02%)</title><rect x="75.3165%" y="853" width="0.0195%" height="15" fill="rgb(206,81,49)" fg:x="359067" fg:w="93"/><text x="75.5665%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (93 samples, 0.02%)</title><rect x="75.3165%" y="837" width="0.0195%" height="15" fill="rgb(232,144,18)" fg:x="359067" fg:w="93"/><text x="75.5665%" y="847.50"></text></g><g><title>[libc-2.31.so] (93 samples, 0.02%)</title><rect x="75.3165%" y="821" width="0.0195%" height="15" fill="rgb(235,2,27)" fg:x="359067" fg:w="93"/><text x="75.5665%" y="831.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (462 samples, 0.10%)</title><rect x="76.5732%" y="917" width="0.0969%" height="15" fill="rgb(239,157,39)" fg:x="365058" fg:w="462"/><text x="76.8232%" y="927.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::counter (462 samples, 0.10%)</title><rect x="76.5732%" y="901" width="0.0969%" height="15" fill="rgb(220,11,17)" fg:x="365058" fg:w="462"/><text x="76.8232%" y="911.50"></text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (832 samples, 0.17%)</title><rect x="77.9725%" y="901" width="0.1745%" height="15" fill="rgb(243,94,50)" fg:x="371729" fg:w="832"/><text x="78.2225%" y="911.50"></text></g><g><title>&lt;crossbeam_channel::flavors::zero::ZeroToken as core::default::Default&gt;::default (549 samples, 0.12%)</title><rect x="78.0318%" y="885" width="0.1152%" height="15" fill="rgb(218,22,0)" fg:x="372012" fg:w="549"/><text x="78.2818%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (76 samples, 0.02%)</title><rect x="78.1598%" y="885" width="0.0159%" height="15" fill="rgb(249,70,21)" fg:x="372622" fg:w="76"/><text x="78.4098%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_or (76 samples, 0.02%)</title><rect x="78.1598%" y="869" width="0.0159%" height="15" fill="rgb(245,111,46)" fg:x="372622" fg:w="76"/><text x="78.4098%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (252 samples, 0.05%)</title><rect x="78.1484%" y="901" width="0.0529%" height="15" fill="rgb(244,183,12)" fg:x="372568" fg:w="252"/><text x="78.3984%" y="911.50"></text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (108 samples, 0.02%)</title><rect x="78.1786%" y="885" width="0.0227%" height="15" fill="rgb(207,117,0)" fg:x="372712" fg:w="108"/><text x="78.4286%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (706 samples, 0.15%)</title><rect x="79.8072%" y="885" width="0.1481%" height="15" fill="rgb(206,20,43)" fg:x="380476" fg:w="706"/><text x="80.0572%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (706 samples, 0.15%)</title><rect x="79.8072%" y="869" width="0.1481%" height="15" fill="rgb(221,104,11)" fg:x="380476" fg:w="706"/><text x="80.0572%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18,392 samples, 3.86%)</title><rect x="79.9553%" y="885" width="3.8578%" height="15" fill="rgb(254,36,50)" fg:x="381182" fg:w="18392"/><text x="80.2053%" y="895.50">core..</text></g><g><title>core::sync::atomic::atomic_load (18,392 samples, 3.86%)</title><rect x="79.9553%" y="869" width="3.8578%" height="15" fill="rgb(252,17,15)" fg:x="381182" fg:w="18392"/><text x="80.2053%" y="879.50">core..</text></g><g><title>core::sync::atomic::fence (455 samples, 0.10%)</title><rect x="83.8131%" y="885" width="0.0954%" height="15" fill="rgb(219,129,43)" fg:x="399574" fg:w="455"/><text x="84.0631%" y="895.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (40,902 samples, 8.58%)</title><rect x="75.3430%" y="933" width="8.5794%" height="15" fill="rgb(205,34,45)" fg:x="359193" fg:w="40902"/><text x="75.5930%" y="943.50">crossbeam_ch..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (34,567 samples, 7.25%)</title><rect x="76.6718%" y="917" width="7.2506%" height="15" fill="rgb(251,201,32)" fg:x="365528" fg:w="34567"/><text x="76.9218%" y="927.50">crossbeam_..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (27,275 samples, 5.72%)</title><rect x="78.2013%" y="901" width="5.7211%" height="15" fill="rgb(205,56,0)" fg:x="372820" fg:w="27275"/><text x="78.4513%" y="911.50">crossbe..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (49 samples, 0.01%)</title><rect x="83.9121%" y="885" width="0.0103%" height="15" fill="rgb(211,193,27)" fg:x="400046" fg:w="49"/><text x="84.1621%" y="895.50"></text></g><g><title>__libc_malloc (111 samples, 0.02%)</title><rect x="83.9612%" y="805" width="0.0233%" height="15" fill="rgb(231,100,42)" fg:x="400280" fg:w="111"/><text x="84.2112%" y="815.50"></text></g><g><title>[libc-2.31.so] (102 samples, 0.02%)</title><rect x="83.9631%" y="789" width="0.0214%" height="15" fill="rgb(245,85,27)" fg:x="400289" fg:w="102"/><text x="84.2131%" y="799.50"></text></g><g><title>[libc-2.31.so] (63 samples, 0.01%)</title><rect x="83.9713%" y="773" width="0.0132%" height="15" fill="rgb(241,76,24)" fg:x="400328" fg:w="63"/><text x="84.2213%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (127 samples, 0.03%)</title><rect x="83.9581%" y="885" width="0.0266%" height="15" fill="rgb(249,157,15)" fg:x="400265" fg:w="127"/><text x="84.2081%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (113 samples, 0.02%)</title><rect x="83.9610%" y="869" width="0.0237%" height="15" fill="rgb(222,218,25)" fg:x="400279" fg:w="113"/><text x="84.2110%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (113 samples, 0.02%)</title><rect x="83.9610%" y="853" width="0.0237%" height="15" fill="rgb(252,156,52)" fg:x="400279" fg:w="113"/><text x="84.2110%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (113 samples, 0.02%)</title><rect x="83.9610%" y="837" width="0.0237%" height="15" fill="rgb(211,185,7)" fg:x="400279" fg:w="113"/><text x="84.2110%" y="847.50"></text></g><g><title>alloc::alloc::alloc (113 samples, 0.02%)</title><rect x="83.9610%" y="821" width="0.0237%" height="15" fill="rgb(234,108,24)" fg:x="400279" fg:w="113"/><text x="84.2110%" y="831.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (306 samples, 0.06%)</title><rect x="83.9327%" y="901" width="0.0642%" height="15" fill="rgb(227,218,2)" fg:x="400144" fg:w="306"/><text x="84.1827%" y="911.50"></text></g><g><title>__sched_yield (391 samples, 0.08%)</title><rect x="84.0294%" y="837" width="0.0820%" height="15" fill="rgb(224,0,36)" fg:x="400605" fg:w="391"/><text x="84.2794%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (241 samples, 0.05%)</title><rect x="84.0608%" y="821" width="0.0506%" height="15" fill="rgb(233,201,10)" fg:x="400755" fg:w="241"/><text x="84.3108%" y="831.50"></text></g><g><title>do_syscall_64 (233 samples, 0.05%)</title><rect x="84.0625%" y="805" width="0.0489%" height="15" fill="rgb(252,209,14)" fg:x="400763" fg:w="233"/><text x="84.3125%" y="815.50"></text></g><g><title>__x64_sys_sched_yield (170 samples, 0.04%)</title><rect x="84.0757%" y="789" width="0.0357%" height="15" fill="rgb(205,93,49)" fg:x="400826" fg:w="170"/><text x="84.3257%" y="799.50"></text></g><g><title>do_sched_yield (170 samples, 0.04%)</title><rect x="84.0757%" y="773" width="0.0357%" height="15" fill="rgb(234,116,45)" fg:x="400826" fg:w="170"/><text x="84.3257%" y="783.50"></text></g><g><title>schedule (149 samples, 0.03%)</title><rect x="84.0801%" y="757" width="0.0313%" height="15" fill="rgb(248,89,35)" fg:x="400847" fg:w="149"/><text x="84.3301%" y="767.50"></text></g><g><title>__schedule (147 samples, 0.03%)</title><rect x="84.0806%" y="741" width="0.0308%" height="15" fill="rgb(233,167,45)" fg:x="400849" fg:w="147"/><text x="84.3306%" y="751.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (51 samples, 0.01%)</title><rect x="84.1143%" y="837" width="0.0107%" height="15" fill="rgb(248,228,14)" fg:x="401010" fg:w="51"/><text x="84.3643%" y="847.50"></text></g><g><title>core::hint::spin_loop (51 samples, 0.01%)</title><rect x="84.1143%" y="821" width="0.0107%" height="15" fill="rgb(246,91,14)" fg:x="401010" fg:w="51"/><text x="84.3643%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (51 samples, 0.01%)</title><rect x="84.1143%" y="805" width="0.0107%" height="15" fill="rgb(227,142,5)" fg:x="401010" fg:w="51"/><text x="84.3643%" y="815.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (493 samples, 0.10%)</title><rect x="84.0218%" y="869" width="0.1034%" height="15" fill="rgb(221,63,33)" fg:x="400569" fg:w="493"/><text x="84.2718%" y="879.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (461 samples, 0.10%)</title><rect x="84.0285%" y="853" width="0.0967%" height="15" fill="rgb(233,49,0)" fg:x="400601" fg:w="461"/><text x="84.2785%" y="863.50"></text></g><g><title>__lock_text_start (243 samples, 0.05%)</title><rect x="84.1550%" y="645" width="0.0510%" height="15" fill="rgb(251,115,38)" fg:x="401204" fg:w="243"/><text x="84.4050%" y="655.50"></text></g><g><title>futex_wake (271 samples, 0.06%)</title><rect x="84.1494%" y="693" width="0.0568%" height="15" fill="rgb(231,214,32)" fg:x="401177" fg:w="271"/><text x="84.3994%" y="703.50"></text></g><g><title>wake_up_q (247 samples, 0.05%)</title><rect x="84.1544%" y="677" width="0.0518%" height="15" fill="rgb(248,73,46)" fg:x="401201" fg:w="247"/><text x="84.4044%" y="687.50"></text></g><g><title>try_to_wake_up (245 samples, 0.05%)</title><rect x="84.1548%" y="661" width="0.0514%" height="15" fill="rgb(237,156,4)" fg:x="401203" fg:w="245"/><text x="84.4048%" y="671.50"></text></g><g><title>do_futex (288 samples, 0.06%)</title><rect x="84.1477%" y="709" width="0.0604%" height="15" fill="rgb(227,132,2)" fg:x="401169" fg:w="288"/><text x="84.3977%" y="719.50"></text></g><g><title>__x64_sys_futex (291 samples, 0.06%)</title><rect x="84.1473%" y="725" width="0.0610%" height="15" fill="rgb(248,161,9)" fg:x="401167" fg:w="291"/><text x="84.3973%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (390 samples, 0.08%)</title><rect x="84.1271%" y="853" width="0.0818%" height="15" fill="rgb(238,77,38)" fg:x="401071" fg:w="390"/><text x="84.3771%" y="863.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (390 samples, 0.08%)</title><rect x="84.1271%" y="837" width="0.0818%" height="15" fill="rgb(222,166,40)" fg:x="401071" fg:w="390"/><text x="84.3771%" y="847.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (350 samples, 0.07%)</title><rect x="84.1355%" y="821" width="0.0734%" height="15" fill="rgb(214,168,45)" fg:x="401111" fg:w="350"/><text x="84.3855%" y="831.50"></text></g><g><title>std::thread::Thread::unpark (350 samples, 0.07%)</title><rect x="84.1355%" y="805" width="0.0734%" height="15" fill="rgb(226,64,37)" fg:x="401111" fg:w="350"/><text x="84.3855%" y="815.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (350 samples, 0.07%)</title><rect x="84.1355%" y="789" width="0.0734%" height="15" fill="rgb(232,210,43)" fg:x="401111" fg:w="350"/><text x="84.3855%" y="799.50"></text></g><g><title>syscall (345 samples, 0.07%)</title><rect x="84.1366%" y="773" width="0.0724%" height="15" fill="rgb(214,76,33)" fg:x="401116" fg:w="345"/><text x="84.3866%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (312 samples, 0.07%)</title><rect x="84.1435%" y="757" width="0.0654%" height="15" fill="rgb(210,78,5)" fg:x="401149" fg:w="312"/><text x="84.3935%" y="767.50"></text></g><g><title>do_syscall_64 (309 samples, 0.06%)</title><rect x="84.1441%" y="741" width="0.0648%" height="15" fill="rgb(211,107,37)" fg:x="401152" fg:w="309"/><text x="84.3941%" y="751.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1,374 samples, 0.29%)</title><rect x="83.9224%" y="933" width="0.2882%" height="15" fill="rgb(249,67,16)" fg:x="400095" fg:w="1374"/><text x="84.1724%" y="943.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1,352 samples, 0.28%)</title><rect x="83.9270%" y="917" width="0.2836%" height="15" fill="rgb(222,114,31)" fg:x="400117" fg:w="1352"/><text x="84.1770%" y="927.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (1,019 samples, 0.21%)</title><rect x="83.9969%" y="901" width="0.2137%" height="15" fill="rgb(242,118,19)" fg:x="400450" fg:w="1019"/><text x="84.2469%" y="911.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (926 samples, 0.19%)</title><rect x="84.0164%" y="885" width="0.1942%" height="15" fill="rgb(223,115,1)" fg:x="400543" fg:w="926"/><text x="84.2664%" y="895.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (398 samples, 0.08%)</title><rect x="84.1271%" y="869" width="0.0835%" height="15" fill="rgb(241,182,54)" fg:x="401071" fg:w="398"/><text x="84.3771%" y="879.50"></text></g><g><title>apparmor_socket_recvmsg (83 samples, 0.02%)</title><rect x="84.4298%" y="613" width="0.0174%" height="15" fill="rgb(244,166,36)" fg:x="402514" fg:w="83"/><text x="84.6798%" y="623.50"></text></g><g><title>kfree_skbmem (146 samples, 0.03%)</title><rect x="84.4864%" y="565" width="0.0306%" height="15" fill="rgb(241,52,43)" fg:x="402784" fg:w="146"/><text x="84.7364%" y="575.50"></text></g><g><title>kmem_cache_free (146 samples, 0.03%)</title><rect x="84.4864%" y="549" width="0.0306%" height="15" fill="rgb(236,82,9)" fg:x="402784" fg:w="146"/><text x="84.7364%" y="559.50"></text></g><g><title>__slab_free (69 samples, 0.01%)</title><rect x="84.5026%" y="533" width="0.0145%" height="15" fill="rgb(241,119,0)" fg:x="402861" fg:w="69"/><text x="84.7526%" y="543.50"></text></g><g><title>skb_release_data (141 samples, 0.03%)</title><rect x="84.5194%" y="549" width="0.0296%" height="15" fill="rgb(221,19,22)" fg:x="402941" fg:w="141"/><text x="84.7694%" y="559.50"></text></g><g><title>skb_free_head (103 samples, 0.02%)</title><rect x="84.5273%" y="533" width="0.0216%" height="15" fill="rgb(254,144,35)" fg:x="402979" fg:w="103"/><text x="84.7773%" y="543.50"></text></g><g><title>kfree (101 samples, 0.02%)</title><rect x="84.5278%" y="517" width="0.0212%" height="15" fill="rgb(246,132,30)" fg:x="402981" fg:w="101"/><text x="84.7778%" y="527.50"></text></g><g><title>__slab_free (79 samples, 0.02%)</title><rect x="84.5324%" y="501" width="0.0166%" height="15" fill="rgb(234,69,28)" fg:x="403003" fg:w="79"/><text x="84.7824%" y="511.50"></text></g><g><title>skb_release_all (222 samples, 0.05%)</title><rect x="84.5171%" y="565" width="0.0466%" height="15" fill="rgb(219,106,47)" fg:x="402930" fg:w="222"/><text x="84.7671%" y="575.50"></text></g><g><title>sock_rfree (65 samples, 0.01%)</title><rect x="84.5500%" y="549" width="0.0136%" height="15" fill="rgb(218,79,24)" fg:x="403087" fg:w="65"/><text x="84.8000%" y="559.50"></text></g><g><title>__kfree_skb (380 samples, 0.08%)</title><rect x="84.4862%" y="581" width="0.0797%" height="15" fill="rgb(225,26,21)" fg:x="402783" fg:w="380"/><text x="84.7362%" y="591.50"></text></g><g><title>_raw_spin_lock_bh (96 samples, 0.02%)</title><rect x="84.5668%" y="581" width="0.0201%" height="15" fill="rgb(217,68,49)" fg:x="403167" fg:w="96"/><text x="84.8168%" y="591.50"></text></g><g><title>__check_object_size (129 samples, 0.03%)</title><rect x="84.6035%" y="533" width="0.0271%" height="15" fill="rgb(220,204,28)" fg:x="403342" fg:w="129"/><text x="84.8535%" y="543.50"></text></g><g><title>copy_user_generic_unrolled (72 samples, 0.02%)</title><rect x="84.6372%" y="517" width="0.0151%" height="15" fill="rgb(237,208,43)" fg:x="403503" fg:w="72"/><text x="84.8872%" y="527.50"></text></g><g><title>_copy_to_iter (105 samples, 0.02%)</title><rect x="84.6320%" y="533" width="0.0220%" height="15" fill="rgb(213,97,42)" fg:x="403478" fg:w="105"/><text x="84.8820%" y="543.50"></text></g><g><title>__skb_datagram_iter (294 samples, 0.06%)</title><rect x="84.5980%" y="565" width="0.0617%" height="15" fill="rgb(238,96,52)" fg:x="403316" fg:w="294"/><text x="84.8480%" y="575.50"></text></g><g><title>simple_copy_to_iter (273 samples, 0.06%)</title><rect x="84.6024%" y="549" width="0.0573%" height="15" fill="rgb(228,14,13)" fg:x="403337" fg:w="273"/><text x="84.8524%" y="559.50"></text></g><g><title>skb_copy_datagram_iter (299 samples, 0.06%)</title><rect x="84.5972%" y="581" width="0.0627%" height="15" fill="rgb(219,123,13)" fg:x="403312" fg:w="299"/><text x="84.8472%" y="591.50"></text></g><g><title>tcp_cleanup_rbuf (57 samples, 0.01%)</title><rect x="84.6601%" y="581" width="0.0120%" height="15" fill="rgb(216,144,17)" fg:x="403612" fg:w="57"/><text x="84.9101%" y="591.50"></text></g><g><title>kvm_clock_get_cycles (67 samples, 0.01%)</title><rect x="84.6823%" y="533" width="0.0141%" height="15" fill="rgb(230,228,29)" fg:x="403718" fg:w="67"/><text x="84.9323%" y="543.50"></text></g><g><title>pvclock_clocksource_read (62 samples, 0.01%)</title><rect x="84.6834%" y="517" width="0.0130%" height="15" fill="rgb(233,18,5)" fg:x="403723" fg:w="62"/><text x="84.9334%" y="527.50"></text></g><g><title>ktime_get (74 samples, 0.02%)</title><rect x="84.6813%" y="549" width="0.0155%" height="15" fill="rgb(233,197,12)" fg:x="403713" fg:w="74"/><text x="84.9313%" y="559.50"></text></g><g><title>tcp_rcv_space_adjust (136 samples, 0.03%)</title><rect x="84.6740%" y="581" width="0.0285%" height="15" fill="rgb(234,140,29)" fg:x="403678" fg:w="136"/><text x="84.9240%" y="591.50"></text></g><g><title>tcp_mstamp_refresh (105 samples, 0.02%)</title><rect x="84.6805%" y="565" width="0.0220%" height="15" fill="rgb(233,113,19)" fg:x="403709" fg:w="105"/><text x="84.9305%" y="575.50"></text></g><g><title>tcp_recv_timestamp (50 samples, 0.01%)</title><rect x="84.7025%" y="581" width="0.0105%" height="15" fill="rgb(246,209,13)" fg:x="403814" fg:w="50"/><text x="84.9525%" y="591.50"></text></g><g><title>inet_recvmsg (1,290 samples, 0.27%)</title><rect x="84.4472%" y="613" width="0.2706%" height="15" fill="rgb(242,79,54)" fg:x="402597" fg:w="1290"/><text x="84.6972%" y="623.50"></text></g><g><title>tcp_recvmsg (1,244 samples, 0.26%)</title><rect x="84.4569%" y="597" width="0.2609%" height="15" fill="rgb(219,73,16)" fg:x="402643" fg:w="1244"/><text x="84.7069%" y="607.50"></text></g><g><title>sock_recvmsg (1,420 samples, 0.30%)</title><rect x="84.4285%" y="629" width="0.2979%" height="15" fill="rgb(224,52,10)" fg:x="402508" fg:w="1420"/><text x="84.6785%" y="639.50"></text></g><g><title>__fdget (146 samples, 0.03%)</title><rect x="84.7277%" y="613" width="0.0306%" height="15" fill="rgb(237,179,5)" fg:x="403934" fg:w="146"/><text x="84.9777%" y="623.50"></text></g><g><title>__fget_light (144 samples, 0.03%)</title><rect x="84.7281%" y="597" width="0.0302%" height="15" fill="rgb(231,20,6)" fg:x="403936" fg:w="144"/><text x="84.9781%" y="607.50"></text></g><g><title>__fget (143 samples, 0.03%)</title><rect x="84.7283%" y="581" width="0.0300%" height="15" fill="rgb(253,171,45)" fg:x="403937" fg:w="143"/><text x="84.9783%" y="591.50"></text></g><g><title>__sys_recvfrom (1,647 samples, 0.35%)</title><rect x="84.4162%" y="645" width="0.3455%" height="15" fill="rgb(230,75,49)" fg:x="402449" fg:w="1647"/><text x="84.6662%" y="655.50"></text></g><g><title>sockfd_lookup_light (168 samples, 0.04%)</title><rect x="84.7264%" y="629" width="0.0352%" height="15" fill="rgb(216,83,46)" fg:x="403928" fg:w="168"/><text x="84.9764%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2,464 samples, 0.52%)</title><rect x="84.2534%" y="837" width="0.5168%" height="15" fill="rgb(236,56,9)" fg:x="401673" fg:w="2464"/><text x="84.5034%" y="847.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2,461 samples, 0.52%)</title><rect x="84.2540%" y="821" width="0.5162%" height="15" fill="rgb(215,28,34)" fg:x="401676" fg:w="2461"/><text x="84.5040%" y="831.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (2,461 samples, 0.52%)</title><rect x="84.2540%" y="805" width="0.5162%" height="15" fill="rgb(230,222,20)" fg:x="401676" fg:w="2461"/><text x="84.5040%" y="815.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (2,461 samples, 0.52%)</title><rect x="84.2540%" y="789" width="0.5162%" height="15" fill="rgb(235,209,51)" fg:x="401676" fg:w="2461"/><text x="84.5040%" y="799.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2,461 samples, 0.52%)</title><rect x="84.2540%" y="773" width="0.5162%" height="15" fill="rgb(235,167,1)" fg:x="401676" fg:w="2461"/><text x="84.5040%" y="783.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2,460 samples, 0.52%)</title><rect x="84.2542%" y="757" width="0.5160%" height="15" fill="rgb(248,220,0)" fg:x="401677" fg:w="2460"/><text x="84.5042%" y="767.50"></text></g><g><title>std::sys::unix::net::Socket::read (2,460 samples, 0.52%)</title><rect x="84.2542%" y="741" width="0.5160%" height="15" fill="rgb(239,0,18)" fg:x="401677" fg:w="2460"/><text x="84.5042%" y="751.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2,460 samples, 0.52%)</title><rect x="84.2542%" y="725" width="0.5160%" height="15" fill="rgb(229,179,11)" fg:x="401677" fg:w="2460"/><text x="84.5042%" y="735.50"></text></g><g><title>__libc_recv (2,451 samples, 0.51%)</title><rect x="84.2561%" y="709" width="0.5141%" height="15" fill="rgb(226,116,53)" fg:x="401686" fg:w="2451"/><text x="84.5061%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,935 samples, 0.41%)</title><rect x="84.3644%" y="693" width="0.4059%" height="15" fill="rgb(218,1,49)" fg:x="402202" fg:w="1935"/><text x="84.6144%" y="703.50"></text></g><g><title>do_syscall_64 (1,905 samples, 0.40%)</title><rect x="84.3706%" y="677" width="0.3996%" height="15" fill="rgb(208,184,47)" fg:x="402232" fg:w="1905"/><text x="84.6206%" y="687.50"></text></g><g><title>__x64_sys_recvfrom (1,688 samples, 0.35%)</title><rect x="84.4162%" y="661" width="0.3541%" height="15" fill="rgb(238,174,3)" fg:x="402449" fg:w="1688"/><text x="84.6662%" y="671.50"></text></g><g><title>[libc-2.31.so] (100 samples, 0.02%)</title><rect x="84.7851%" y="757" width="0.0210%" height="15" fill="rgb(247,188,6)" fg:x="404208" fg:w="100"/><text x="85.0351%" y="767.50"></text></g><g><title>alloc::alloc::box_free (222 samples, 0.05%)</title><rect x="84.7845%" y="805" width="0.0466%" height="15" fill="rgb(211,165,46)" fg:x="404205" fg:w="222"/><text x="85.0345%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (221 samples, 0.05%)</title><rect x="84.7847%" y="789" width="0.0464%" height="15" fill="rgb(222,190,10)" fg:x="404206" fg:w="221"/><text x="85.0347%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (220 samples, 0.05%)</title><rect x="84.7849%" y="773" width="0.0461%" height="15" fill="rgb(206,185,3)" fg:x="404207" fg:w="220"/><text x="85.0349%" y="783.50"></text></g><g><title>cfree (109 samples, 0.02%)</title><rect x="84.8082%" y="757" width="0.0229%" height="15" fill="rgb(244,125,37)" fg:x="404318" fg:w="109"/><text x="85.0582%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt; (238 samples, 0.05%)</title><rect x="84.7834%" y="821" width="0.0499%" height="15" fill="rgb(211,43,7)" fg:x="404200" fg:w="238"/><text x="85.0334%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;uppercut::api::Envelope&gt; (257 samples, 0.05%)</title><rect x="84.7797%" y="837" width="0.0539%" height="15" fill="rgb(250,41,42)" fg:x="404182" fg:w="257"/><text x="85.0297%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (184 samples, 0.04%)</title><rect x="84.8495%" y="821" width="0.0386%" height="15" fill="rgb(254,54,42)" fg:x="404515" fg:w="184"/><text x="85.0995%" y="831.50"></text></g><g><title>parsed::stream::ByteStream::put (274 samples, 0.06%)</title><rect x="84.8378%" y="837" width="0.0575%" height="15" fill="rgb(213,71,43)" fg:x="404459" fg:w="274"/><text x="85.0878%" y="847.50"></text></g><g><title>copy_user_enhanced_fast_string (115 samples, 0.02%)</title><rect x="85.2090%" y="565" width="0.0241%" height="15" fill="rgb(249,3,44)" fg:x="406229" fg:w="115"/><text x="85.4590%" y="575.50"></text></g><g><title>_copy_from_iter_full (136 samples, 0.03%)</title><rect x="85.2082%" y="581" width="0.0285%" height="15" fill="rgb(229,80,41)" fg:x="406225" fg:w="136"/><text x="85.4582%" y="591.50"></text></g><g><title>sk_page_frag_refill (75 samples, 0.02%)</title><rect x="85.2405%" y="581" width="0.0157%" height="15" fill="rgb(231,25,28)" fg:x="406379" fg:w="75"/><text x="85.4905%" y="591.50"></text></g><g><title>skb_page_frag_refill (72 samples, 0.02%)</title><rect x="85.2411%" y="565" width="0.0151%" height="15" fill="rgb(208,79,48)" fg:x="406382" fg:w="72"/><text x="85.4911%" y="575.50"></text></g><g><title>__kmalloc_node_track_caller (164 samples, 0.03%)</title><rect x="85.2716%" y="533" width="0.0344%" height="15" fill="rgb(207,196,38)" fg:x="406527" fg:w="164"/><text x="85.5216%" y="543.50"></text></g><g><title>memset_erms (62 samples, 0.01%)</title><rect x="85.3152%" y="533" width="0.0130%" height="15" fill="rgb(228,105,49)" fg:x="406735" fg:w="62"/><text x="85.5652%" y="543.50"></text></g><g><title>__kmalloc_reserve.isra.0 (273 samples, 0.06%)</title><rect x="85.2711%" y="549" width="0.0573%" height="15" fill="rgb(237,99,15)" fg:x="406525" fg:w="273"/><text x="85.5211%" y="559.50"></text></g><g><title>kmem_cache_alloc_node (121 samples, 0.03%)</title><rect x="85.3311%" y="549" width="0.0254%" height="15" fill="rgb(224,207,46)" fg:x="406811" fg:w="121"/><text x="85.5811%" y="559.50"></text></g><g><title>ksize (70 samples, 0.01%)</title><rect x="85.3565%" y="549" width="0.0147%" height="15" fill="rgb(249,117,50)" fg:x="406932" fg:w="70"/><text x="85.6065%" y="559.50"></text></g><g><title>__ksize (70 samples, 0.01%)</title><rect x="85.3565%" y="533" width="0.0147%" height="15" fill="rgb(248,17,13)" fg:x="406932" fg:w="70"/><text x="85.6065%" y="543.50"></text></g><g><title>__alloc_skb (563 samples, 0.12%)</title><rect x="85.2583%" y="565" width="0.1181%" height="15" fill="rgb(228,187,36)" fg:x="406464" fg:w="563"/><text x="85.5083%" y="575.50"></text></g><g><title>sk_stream_alloc_skb (599 samples, 0.13%)</title><rect x="85.2562%" y="581" width="0.1256%" height="15" fill="rgb(234,132,20)" fg:x="406454" fg:w="599"/><text x="85.5062%" y="591.50"></text></g><g><title>skb_entail (70 samples, 0.01%)</title><rect x="85.3819%" y="581" width="0.0147%" height="15" fill="rgb(209,170,46)" fg:x="407053" fg:w="70"/><text x="85.6319%" y="591.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (54 samples, 0.01%)</title><rect x="85.5260%" y="437" width="0.0113%" height="15" fill="rgb(237,23,19)" fg:x="407740" fg:w="54"/><text x="85.7760%" y="447.50"></text></g><g><title>dequeue_func (69 samples, 0.01%)</title><rect x="85.6353%" y="325" width="0.0145%" height="15" fill="rgb(227,21,26)" fg:x="408261" fg:w="69"/><text x="85.8853%" y="335.50"></text></g><g><title>codel_dequeue.constprop.0 (132 samples, 0.03%)</title><rect x="85.6317%" y="341" width="0.0277%" height="15" fill="rgb(222,220,48)" fg:x="408244" fg:w="132"/><text x="85.8817%" y="351.50"></text></g><g><title>fq_codel_dequeue (319 samples, 0.07%)</title><rect x="85.5935%" y="357" width="0.0669%" height="15" fill="rgb(214,9,16)" fg:x="408062" fg:w="319"/><text x="85.8435%" y="367.50"></text></g><g><title>free_old_xmit_skbs (100 samples, 0.02%)</title><rect x="85.6816%" y="309" width="0.0210%" height="15" fill="rgb(209,73,30)" fg:x="408482" fg:w="100"/><text x="85.9316%" y="319.50"></text></g><g><title>virtqueue_get_buf (58 samples, 0.01%)</title><rect x="85.6904%" y="293" width="0.0122%" height="15" fill="rgb(207,20,33)" fg:x="408524" fg:w="58"/><text x="85.9404%" y="303.50"></text></g><g><title>virtqueue_get_buf_ctx (58 samples, 0.01%)</title><rect x="85.6904%" y="277" width="0.0122%" height="15" fill="rgb(219,153,12)" fg:x="408524" fg:w="58"/><text x="85.9404%" y="287.50"></text></g><g><title>virtqueue_add_outbuf (80 samples, 0.02%)</title><rect x="85.7129%" y="309" width="0.0168%" height="15" fill="rgb(235,97,25)" fg:x="408631" fg:w="80"/><text x="85.9629%" y="319.50"></text></g><g><title>iowrite16 (337 samples, 0.07%)</title><rect x="85.7397%" y="293" width="0.0707%" height="15" fill="rgb(244,30,34)" fg:x="408759" fg:w="337"/><text x="85.9897%" y="303.50"></text></g><g><title>virtqueue_notify (341 samples, 0.07%)</title><rect x="85.7393%" y="309" width="0.0715%" height="15" fill="rgb(214,106,45)" fg:x="408757" fg:w="341"/><text x="85.9893%" y="319.50"></text></g><g><title>start_xmit (665 samples, 0.14%)</title><rect x="85.6747%" y="325" width="0.1395%" height="15" fill="rgb(226,41,9)" fg:x="408449" fg:w="665"/><text x="85.9247%" y="335.50"></text></g><g><title>dev_hard_start_xmit (681 samples, 0.14%)</title><rect x="85.6724%" y="341" width="0.1428%" height="15" fill="rgb(253,139,29)" fg:x="408438" fg:w="681"/><text x="85.9224%" y="351.50"></text></g><g><title>__qdisc_run (1,188 samples, 0.25%)</title><rect x="85.5830%" y="373" width="0.2492%" height="15" fill="rgb(213,205,39)" fg:x="408012" fg:w="1188"/><text x="85.8330%" y="383.50"></text></g><g><title>sch_direct_xmit (819 samples, 0.17%)</title><rect x="85.6604%" y="357" width="0.1718%" height="15" fill="rgb(209,27,10)" fg:x="408381" fg:w="819"/><text x="85.9104%" y="367.50"></text></g><g><title>validate_xmit_skb_list (78 samples, 0.02%)</title><rect x="85.8159%" y="341" width="0.0164%" height="15" fill="rgb(249,142,16)" fg:x="409122" fg:w="78"/><text x="86.0659%" y="351.50"></text></g><g><title>validate_xmit_skb (73 samples, 0.02%)</title><rect x="85.8169%" y="325" width="0.0153%" height="15" fill="rgb(242,65,12)" fg:x="409127" fg:w="73"/><text x="86.0669%" y="335.50"></text></g><g><title>_raw_spin_lock (162 samples, 0.03%)</title><rect x="85.8322%" y="373" width="0.0340%" height="15" fill="rgb(232,48,10)" fg:x="409200" fg:w="162"/><text x="86.0822%" y="383.50"></text></g><g><title>native_queued_spin_lock_slowpath (98 samples, 0.02%)</title><rect x="85.8457%" y="357" width="0.0206%" height="15" fill="rgb(253,67,19)" fg:x="409264" fg:w="98"/><text x="86.0957%" y="367.50"></text></g><g><title>fq_codel_enqueue (104 samples, 0.02%)</title><rect x="85.8706%" y="373" width="0.0218%" height="15" fill="rgb(227,93,29)" fg:x="409383" fg:w="104"/><text x="86.1206%" y="383.50"></text></g><g><title>skb_release_all (49 samples, 0.01%)</title><rect x="85.9333%" y="261" width="0.0103%" height="15" fill="rgb(226,189,53)" fg:x="409682" fg:w="49"/><text x="86.1833%" y="271.50"></text></g><g><title>napi_consume_skb (54 samples, 0.01%)</title><rect x="85.9325%" y="309" width="0.0113%" height="15" fill="rgb(223,224,1)" fg:x="409678" fg:w="54"/><text x="86.1825%" y="319.50"></text></g><g><title>__dev_kfree_skb_any (54 samples, 0.01%)</title><rect x="85.9325%" y="293" width="0.0113%" height="15" fill="rgb(221,84,32)" fg:x="409678" fg:w="54"/><text x="86.1825%" y="303.50"></text></g><g><title>consume_skb (54 samples, 0.01%)</title><rect x="85.9325%" y="277" width="0.0113%" height="15" fill="rgb(214,189,28)" fg:x="409678" fg:w="54"/><text x="86.1825%" y="287.50"></text></g><g><title>virtqueue_get_buf (116 samples, 0.02%)</title><rect x="85.9438%" y="309" width="0.0243%" height="15" fill="rgb(234,7,52)" fg:x="409732" fg:w="116"/><text x="86.1938%" y="319.50"></text></g><g><title>virtqueue_get_buf_ctx (116 samples, 0.02%)</title><rect x="85.9438%" y="293" width="0.0243%" height="15" fill="rgb(249,73,31)" fg:x="409732" fg:w="116"/><text x="86.1938%" y="303.50"></text></g><g><title>free_old_xmit_skbs (207 samples, 0.04%)</title><rect x="85.9254%" y="325" width="0.0434%" height="15" fill="rgb(253,153,41)" fg:x="409644" fg:w="207"/><text x="86.1754%" y="335.50"></text></g><g><title>virtqueue_add_outbuf (141 samples, 0.03%)</title><rect x="85.9736%" y="325" width="0.0296%" height="15" fill="rgb(249,52,34)" fg:x="409874" fg:w="141"/><text x="86.2236%" y="335.50"></text></g><g><title>kmalloc_array (66 samples, 0.01%)</title><rect x="85.9893%" y="309" width="0.0138%" height="15" fill="rgb(236,177,47)" fg:x="409949" fg:w="66"/><text x="86.2393%" y="319.50"></text></g><g><title>iowrite16 (1,831 samples, 0.38%)</title><rect x="86.0187%" y="309" width="0.3841%" height="15" fill="rgb(252,185,45)" fg:x="410089" fg:w="1831"/><text x="86.2687%" y="319.50"></text></g><g><title>virtqueue_notify (1,860 samples, 0.39%)</title><rect x="86.0166%" y="325" width="0.3901%" height="15" fill="rgb(251,15,30)" fg:x="410079" fg:w="1860"/><text x="86.2666%" y="335.50"></text></g><g><title>start_xmit (2,379 samples, 0.50%)</title><rect x="85.9121%" y="341" width="0.4990%" height="15" fill="rgb(233,31,4)" fg:x="409581" fg:w="2379"/><text x="86.1621%" y="351.50"></text></g><g><title>dev_hard_start_xmit (2,411 samples, 0.51%)</title><rect x="85.9088%" y="357" width="0.5057%" height="15" fill="rgb(254,44,24)" fg:x="409565" fg:w="2411"/><text x="86.1588%" y="367.50"></text></g><g><title>validate_xmit_skb (77 samples, 0.02%)</title><rect x="86.4212%" y="341" width="0.0162%" height="15" fill="rgb(218,54,1)" fg:x="412008" fg:w="77"/><text x="86.6712%" y="351.50"></text></g><g><title>sch_direct_xmit (2,594 samples, 0.54%)</title><rect x="85.8945%" y="373" width="0.5441%" height="15" fill="rgb(243,209,39)" fg:x="409497" fg:w="2594"/><text x="86.1445%" y="383.50"></text></g><g><title>validate_xmit_skb_list (95 samples, 0.02%)</title><rect x="86.4187%" y="357" width="0.0199%" height="15" fill="rgb(206,75,33)" fg:x="411996" fg:w="95"/><text x="86.6687%" y="367.50"></text></g><g><title>__dev_queue_xmit (4,208 samples, 0.88%)</title><rect x="85.5564%" y="389" width="0.8827%" height="15" fill="rgb(223,108,18)" fg:x="407885" fg:w="4208"/><text x="85.8064%" y="399.50"></text></g><g><title>_raw_spin_lock (79 samples, 0.02%)</title><rect x="86.4409%" y="389" width="0.0166%" height="15" fill="rgb(244,89,31)" fg:x="412102" fg:w="79"/><text x="86.6909%" y="399.50"></text></g><g><title>ip_finish_output2 (4,380 samples, 0.92%)</title><rect x="85.5428%" y="421" width="0.9187%" height="15" fill="rgb(222,167,27)" fg:x="407820" fg:w="4380"/><text x="85.7928%" y="431.50"></text></g><g><title>dev_queue_xmit (4,316 samples, 0.91%)</title><rect x="85.5562%" y="405" width="0.9053%" height="15" fill="rgb(247,41,16)" fg:x="407884" fg:w="4316"/><text x="85.8062%" y="415.50"></text></g><g><title>__ip_finish_output (4,412 samples, 0.93%)</title><rect x="85.5373%" y="437" width="0.9254%" height="15" fill="rgb(233,168,40)" fg:x="407794" fg:w="4412"/><text x="85.7873%" y="447.50"></text></g><g><title>ip_output (4,531 samples, 0.95%)</title><rect x="85.5149%" y="469" width="0.9504%" height="15" fill="rgb(205,211,8)" fg:x="407687" fg:w="4531"/><text x="85.7649%" y="479.50"></text></g><g><title>ip_finish_output (4,490 samples, 0.94%)</title><rect x="85.5235%" y="453" width="0.9418%" height="15" fill="rgb(238,105,11)" fg:x="407728" fg:w="4490"/><text x="85.7735%" y="463.50"></text></g><g><title>ip_local_out (4,601 samples, 0.97%)</title><rect x="85.5014%" y="485" width="0.9651%" height="15" fill="rgb(223,142,52)" fg:x="407623" fg:w="4601"/><text x="85.7514%" y="495.50"></text></g><g><title>__ip_queue_xmit (4,766 samples, 1.00%)</title><rect x="85.4796%" y="501" width="0.9997%" height="15" fill="rgb(238,51,33)" fg:x="407519" fg:w="4766"/><text x="85.7296%" y="511.50"></text></g><g><title>ip_queue_xmit (4,786 samples, 1.00%)</title><rect x="85.4792%" y="517" width="1.0039%" height="15" fill="rgb(231,188,43)" fg:x="407517" fg:w="4786"/><text x="85.7292%" y="527.50"></text></g><g><title>skb_clone (75 samples, 0.02%)</title><rect x="86.4831%" y="517" width="0.0157%" height="15" fill="rgb(216,92,17)" fg:x="412303" fg:w="75"/><text x="86.7331%" y="527.50"></text></g><g><title>__skb_clone (54 samples, 0.01%)</title><rect x="86.4875%" y="501" width="0.0113%" height="15" fill="rgb(228,2,40)" fg:x="412324" fg:w="54"/><text x="86.7375%" y="511.50"></text></g><g><title>__tcp_transmit_skb (5,109 samples, 1.07%)</title><rect x="85.4394%" y="533" width="1.0716%" height="15" fill="rgb(226,73,15)" fg:x="407327" fg:w="5109"/><text x="85.6894%" y="543.50"></text></g><g><title>kvm_clock_get_cycles (68 samples, 0.01%)</title><rect x="86.5334%" y="517" width="0.0143%" height="15" fill="rgb(227,66,46)" fg:x="412543" fg:w="68"/><text x="86.7834%" y="527.50"></text></g><g><title>pvclock_clocksource_read (61 samples, 0.01%)</title><rect x="86.5349%" y="501" width="0.0128%" height="15" fill="rgb(209,71,6)" fg:x="412550" fg:w="61"/><text x="86.7849%" y="511.50"></text></g><g><title>ktime_get (96 samples, 0.02%)</title><rect x="86.5297%" y="533" width="0.0201%" height="15" fill="rgb(246,100,25)" fg:x="412525" fg:w="96"/><text x="86.7797%" y="543.50"></text></g><g><title>tcp_event_new_data_sent (180 samples, 0.04%)</title><rect x="86.5630%" y="533" width="0.0378%" height="15" fill="rgb(248,185,27)" fg:x="412684" fg:w="180"/><text x="86.8130%" y="543.50"></text></g><g><title>tcp_rearm_rto (106 samples, 0.02%)</title><rect x="86.5785%" y="517" width="0.0222%" height="15" fill="rgb(225,118,47)" fg:x="412758" fg:w="106"/><text x="86.8285%" y="527.50"></text></g><g><title>sk_reset_timer (82 samples, 0.02%)</title><rect x="86.5836%" y="501" width="0.0172%" height="15" fill="rgb(220,185,44)" fg:x="412782" fg:w="82"/><text x="86.8336%" y="511.50"></text></g><g><title>mod_timer (73 samples, 0.02%)</title><rect x="86.5855%" y="485" width="0.0153%" height="15" fill="rgb(227,95,24)" fg:x="412791" fg:w="73"/><text x="86.8355%" y="495.50"></text></g><g><title>tcp_schedule_loss_probe (51 samples, 0.01%)</title><rect x="86.6106%" y="533" width="0.0107%" height="15" fill="rgb(252,84,24)" fg:x="412911" fg:w="51"/><text x="86.8606%" y="543.50"></text></g><g><title>__tcp_push_pending_frames (5,881 samples, 1.23%)</title><rect x="85.4012%" y="565" width="1.2336%" height="15" fill="rgb(240,34,44)" fg:x="407145" fg:w="5881"/><text x="85.6512%" y="575.50"></text></g><g><title>tcp_write_xmit (5,818 samples, 1.22%)</title><rect x="85.4144%" y="549" width="1.2204%" height="15" fill="rgb(209,72,54)" fg:x="407208" fg:w="5818"/><text x="85.6644%" y="559.50"></text></g><g><title>tcp_v4_send_check (53 samples, 0.01%)</title><rect x="86.6236%" y="533" width="0.0111%" height="15" fill="rgb(226,19,45)" fg:x="412973" fg:w="53"/><text x="86.8736%" y="543.50"></text></g><g><title>tcp_push (5,895 samples, 1.24%)</title><rect x="85.4006%" y="581" width="1.2365%" height="15" fill="rgb(246,7,45)" fg:x="407142" fg:w="5895"/><text x="85.6506%" y="591.50"></text></g><g><title>tcp_current_mss (88 samples, 0.02%)</title><rect x="86.6471%" y="565" width="0.0185%" height="15" fill="rgb(225,45,2)" fg:x="413085" fg:w="88"/><text x="86.8971%" y="575.50"></text></g><g><title>tcp_send_mss (134 samples, 0.03%)</title><rect x="86.6392%" y="581" width="0.0281%" height="15" fill="rgb(221,80,29)" fg:x="413047" fg:w="134"/><text x="86.8892%" y="591.50"></text></g><g><title>tcp_sendmsg_locked (7,212 samples, 1.51%)</title><rect x="85.1549%" y="597" width="1.5128%" height="15" fill="rgb(228,11,19)" fg:x="405971" fg:w="7212"/><text x="85.4049%" y="607.50"></text></g><g><title>tcp_sendmsg (7,405 samples, 1.55%)</title><rect x="85.1216%" y="613" width="1.5532%" height="15" fill="rgb(243,17,21)" fg:x="405812" fg:w="7405"/><text x="85.3716%" y="623.50"></text></g><g><title>inet_sendmsg (7,456 samples, 1.56%)</title><rect x="85.1130%" y="629" width="1.5639%" height="15" fill="rgb(243,88,8)" fg:x="405771" fg:w="7456"/><text x="85.3630%" y="639.50"></text></g><g><title>security_socket_sendmsg (58 samples, 0.01%)</title><rect x="86.6769%" y="629" width="0.0122%" height="15" fill="rgb(214,17,9)" fg:x="413227" fg:w="58"/><text x="86.9269%" y="639.50"></text></g><g><title>apparmor_socket_sendmsg (51 samples, 0.01%)</title><rect x="86.6784%" y="613" width="0.0107%" height="15" fill="rgb(232,169,15)" fg:x="413234" fg:w="51"/><text x="86.9284%" y="623.50"></text></g><g><title>aa_sk_perm (48 samples, 0.01%)</title><rect x="86.6790%" y="597" width="0.0101%" height="15" fill="rgb(232,86,53)" fg:x="413237" fg:w="48"/><text x="86.9290%" y="607.50"></text></g><g><title>sock_sendmsg (7,587 samples, 1.59%)</title><rect x="85.0996%" y="645" width="1.5914%" height="15" fill="rgb(222,100,4)" fg:x="405707" fg:w="7587"/><text x="85.3496%" y="655.50"></text></g><g><title>__fdget (57 samples, 0.01%)</title><rect x="86.6914%" y="629" width="0.0120%" height="15" fill="rgb(253,151,38)" fg:x="413296" fg:w="57"/><text x="86.9414%" y="639.50"></text></g><g><title>__fget_light (57 samples, 0.01%)</title><rect x="86.6914%" y="613" width="0.0120%" height="15" fill="rgb(238,215,29)" fg:x="413296" fg:w="57"/><text x="86.9414%" y="623.50"></text></g><g><title>__fget (57 samples, 0.01%)</title><rect x="86.6914%" y="597" width="0.0120%" height="15" fill="rgb(205,128,53)" fg:x="413296" fg:w="57"/><text x="86.9414%" y="607.50"></text></g><g><title>__sys_sendto (7,744 samples, 1.62%)</title><rect x="85.0830%" y="661" width="1.6244%" height="15" fill="rgb(248,183,14)" fg:x="405628" fg:w="7744"/><text x="85.3330%" y="671.50"></text></g><g><title>sockfd_lookup_light (78 samples, 0.02%)</title><rect x="86.6910%" y="645" width="0.0164%" height="15" fill="rgb(244,172,35)" fg:x="413294" fg:w="78"/><text x="86.9410%" y="655.50"></text></g><g><title>__libc_send (8,609 samples, 1.81%)</title><rect x="84.9059%" y="725" width="1.8058%" height="15" fill="rgb(234,93,19)" fg:x="404784" fg:w="8609"/><text x="85.1559%" y="735.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (8,033 samples, 1.68%)</title><rect x="85.0268%" y="709" width="1.6850%" height="15" fill="rgb(227,109,7)" fg:x="405360" fg:w="8033"/><text x="85.2768%" y="719.50"></text></g><g><title>do_syscall_64 (7,994 samples, 1.68%)</title><rect x="85.0349%" y="693" width="1.6768%" height="15" fill="rgb(233,136,54)" fg:x="405399" fg:w="7994"/><text x="85.2849%" y="703.50"></text></g><g><title>__x64_sys_sendto (7,767 samples, 1.63%)</title><rect x="85.0826%" y="677" width="1.6292%" height="15" fill="rgb(233,19,40)" fg:x="405626" fg:w="7767"/><text x="85.3326%" y="687.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (8,649 samples, 1.81%)</title><rect x="84.8980%" y="821" width="1.8142%" height="15" fill="rgb(247,41,18)" fg:x="404746" fg:w="8649"/><text x="85.1480%" y="831.50">&lt;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (8,634 samples, 1.81%)</title><rect x="84.9011%" y="805" width="1.8110%" height="15" fill="rgb(220,34,34)" fg:x="404761" fg:w="8634"/><text x="85.1511%" y="815.50">m..</text></g><g><title>mio::sys::unix::IoSourceState::do_io (8,634 samples, 1.81%)</title><rect x="84.9011%" y="789" width="1.8110%" height="15" fill="rgb(222,135,32)" fg:x="404761" fg:w="8634"/><text x="85.1511%" y="799.50">m..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (8,634 samples, 1.81%)</title><rect x="84.9011%" y="773" width="1.8110%" height="15" fill="rgb(214,80,19)" fg:x="404761" fg:w="8634"/><text x="85.1511%" y="783.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (8,634 samples, 1.81%)</title><rect x="84.9011%" y="757" width="1.8110%" height="15" fill="rgb(234,54,46)" fg:x="404761" fg:w="8634"/><text x="85.1511%" y="767.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (8,621 samples, 1.81%)</title><rect x="84.9038%" y="741" width="1.8083%" height="15" fill="rgb(251,48,23)" fg:x="404774" fg:w="8621"/><text x="85.1538%" y="751.50">s..</text></g><g><title>std::io::Write::write_all (8,669 samples, 1.82%)</title><rect x="84.8952%" y="837" width="1.8184%" height="15" fill="rgb(254,109,52)" fg:x="404733" fg:w="8669"/><text x="85.1452%" y="847.50">s..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (349 samples, 0.07%)</title><rect x="86.7308%" y="645" width="0.0732%" height="15" fill="rgb(240,186,19)" fg:x="413484" fg:w="349"/><text x="86.9808%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (349 samples, 0.07%)</title><rect x="86.7308%" y="629" width="0.0732%" height="15" fill="rgb(246,187,17)" fg:x="413484" fg:w="349"/><text x="86.9808%" y="639.50"></text></g><g><title>alloc::alloc::realloc (349 samples, 0.07%)</title><rect x="86.7308%" y="613" width="0.0732%" height="15" fill="rgb(212,21,5)" fg:x="413484" fg:w="349"/><text x="86.9808%" y="623.50"></text></g><g><title>realloc (331 samples, 0.07%)</title><rect x="86.7346%" y="597" width="0.0694%" height="15" fill="rgb(225,185,18)" fg:x="413502" fg:w="331"/><text x="86.9846%" y="607.50"></text></g><g><title>[libc-2.31.so] (247 samples, 0.05%)</title><rect x="86.7522%" y="581" width="0.0518%" height="15" fill="rgb(245,114,17)" fg:x="413586" fg:w="247"/><text x="87.0022%" y="591.50"></text></g><g><title>[libc-2.31.so] (210 samples, 0.04%)</title><rect x="86.7600%" y="565" width="0.0440%" height="15" fill="rgb(223,164,24)" fg:x="413623" fg:w="210"/><text x="87.0100%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (356 samples, 0.07%)</title><rect x="86.7296%" y="661" width="0.0747%" height="15" fill="rgb(211,228,3)" fg:x="413478" fg:w="356"/><text x="86.9796%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (386 samples, 0.08%)</title><rect x="86.7239%" y="725" width="0.0810%" height="15" fill="rgb(223,16,38)" fg:x="413451" fg:w="386"/><text x="86.9739%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (386 samples, 0.08%)</title><rect x="86.7239%" y="709" width="0.0810%" height="15" fill="rgb(207,31,54)" fg:x="413451" fg:w="386"/><text x="86.9739%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (379 samples, 0.08%)</title><rect x="86.7254%" y="693" width="0.0795%" height="15" fill="rgb(220,39,11)" fg:x="413458" fg:w="379"/><text x="86.9754%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (378 samples, 0.08%)</title><rect x="86.7256%" y="677" width="0.0793%" height="15" fill="rgb(235,185,0)" fg:x="413459" fg:w="378"/><text x="86.9756%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (421 samples, 0.09%)</title><rect x="86.7220%" y="805" width="0.0883%" height="15" fill="rgb(249,39,18)" fg:x="413442" fg:w="421"/><text x="86.9720%" y="815.50"></text></g><g><title>alloc::string::String::push_str (416 samples, 0.09%)</title><rect x="86.7231%" y="789" width="0.0873%" height="15" fill="rgb(240,110,33)" fg:x="413447" fg:w="416"/><text x="86.9731%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (416 samples, 0.09%)</title><rect x="86.7231%" y="773" width="0.0873%" height="15" fill="rgb(210,92,42)" fg:x="413447" fg:w="416"/><text x="86.9731%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (416 samples, 0.09%)</title><rect x="86.7231%" y="757" width="0.0873%" height="15" fill="rgb(218,215,28)" fg:x="413447" fg:w="416"/><text x="86.9731%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (416 samples, 0.09%)</title><rect x="86.7231%" y="741" width="0.0873%" height="15" fill="rgb(238,215,36)" fg:x="413447" fg:w="416"/><text x="86.9731%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (167 samples, 0.04%)</title><rect x="86.8305%" y="581" width="0.0350%" height="15" fill="rgb(220,31,10)" fg:x="413959" fg:w="167"/><text x="87.0805%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (167 samples, 0.04%)</title><rect x="86.8305%" y="565" width="0.0350%" height="15" fill="rgb(212,93,14)" fg:x="413959" fg:w="167"/><text x="87.0805%" y="575.50"></text></g><g><title>alloc::alloc::realloc (167 samples, 0.04%)</title><rect x="86.8305%" y="549" width="0.0350%" height="15" fill="rgb(254,207,2)" fg:x="413959" fg:w="167"/><text x="87.0805%" y="559.50"></text></g><g><title>realloc (152 samples, 0.03%)</title><rect x="86.8336%" y="533" width="0.0319%" height="15" fill="rgb(205,57,44)" fg:x="413974" fg:w="152"/><text x="87.0836%" y="543.50"></text></g><g><title>[libc-2.31.so] (63 samples, 0.01%)</title><rect x="86.8523%" y="517" width="0.0132%" height="15" fill="rgb(226,151,19)" fg:x="414063" fg:w="63"/><text x="87.1023%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (203 samples, 0.04%)</title><rect x="86.8282%" y="597" width="0.0426%" height="15" fill="rgb(230,72,30)" fg:x="413948" fg:w="203"/><text x="87.0782%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (232 samples, 0.05%)</title><rect x="86.8237%" y="661" width="0.0487%" height="15" fill="rgb(244,0,8)" fg:x="413927" fg:w="232"/><text x="87.0737%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (230 samples, 0.05%)</title><rect x="86.8242%" y="645" width="0.0482%" height="15" fill="rgb(230,192,6)" fg:x="413929" fg:w="230"/><text x="87.0742%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (226 samples, 0.05%)</title><rect x="86.8250%" y="629" width="0.0474%" height="15" fill="rgb(233,207,13)" fg:x="413933" fg:w="226"/><text x="87.0750%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (225 samples, 0.05%)</title><rect x="86.8252%" y="613" width="0.0472%" height="15" fill="rgb(206,227,7)" fg:x="413934" fg:w="225"/><text x="87.0752%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (288 samples, 0.06%)</title><rect x="86.8191%" y="757" width="0.0604%" height="15" fill="rgb(213,217,25)" fg:x="413905" fg:w="288"/><text x="87.0691%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (270 samples, 0.06%)</title><rect x="86.8229%" y="741" width="0.0566%" height="15" fill="rgb(249,75,4)" fg:x="413923" fg:w="270"/><text x="87.0729%" y="751.50"></text></g><g><title>alloc::string::String::push_str (270 samples, 0.06%)</title><rect x="86.8229%" y="725" width="0.0566%" height="15" fill="rgb(225,114,18)" fg:x="413923" fg:w="270"/><text x="87.0729%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (270 samples, 0.06%)</title><rect x="86.8229%" y="709" width="0.0566%" height="15" fill="rgb(211,162,40)" fg:x="413923" fg:w="270"/><text x="87.0729%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (270 samples, 0.06%)</title><rect x="86.8229%" y="693" width="0.0566%" height="15" fill="rgb(206,49,29)" fg:x="413923" fg:w="270"/><text x="87.0729%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (270 samples, 0.06%)</title><rect x="86.8229%" y="677" width="0.0566%" height="15" fill="rgb(244,8,6)" fg:x="413923" fg:w="270"/><text x="87.0729%" y="687.50"></text></g><g><title>alloc::fmt::format (396 samples, 0.08%)</title><rect x="86.8114%" y="805" width="0.0831%" height="15" fill="rgb(231,194,28)" fg:x="413868" fg:w="396"/><text x="87.0614%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (378 samples, 0.08%)</title><rect x="86.8151%" y="789" width="0.0793%" height="15" fill="rgb(210,69,5)" fg:x="413886" fg:w="378"/><text x="87.0651%" y="799.50"></text></g><g><title>core::fmt::write (376 samples, 0.08%)</title><rect x="86.8156%" y="773" width="0.0789%" height="15" fill="rgb(216,186,12)" fg:x="413888" fg:w="376"/><text x="87.0656%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (108 samples, 0.02%)</title><rect x="86.8944%" y="805" width="0.0227%" height="15" fill="rgb(238,61,15)" fg:x="414264" fg:w="108"/><text x="87.1444%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (108 samples, 0.02%)</title><rect x="86.8944%" y="789" width="0.0227%" height="15" fill="rgb(226,104,1)" fg:x="414264" fg:w="108"/><text x="87.1444%" y="799.50"></text></g><g><title>alloc::str::join_generic_copy (108 samples, 0.02%)</title><rect x="86.8944%" y="773" width="0.0227%" height="15" fill="rgb(229,128,15)" fg:x="414264" fg:w="108"/><text x="87.1444%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (409 samples, 0.09%)</title><rect x="86.9716%" y="421" width="0.0858%" height="15" fill="rgb(247,110,15)" fg:x="414632" fg:w="409"/><text x="87.2216%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (409 samples, 0.09%)</title><rect x="86.9716%" y="405" width="0.0858%" height="15" fill="rgb(210,74,48)" fg:x="414632" fg:w="409"/><text x="87.2216%" y="415.50"></text></g><g><title>alloc::alloc::realloc (408 samples, 0.09%)</title><rect x="86.9718%" y="389" width="0.0856%" height="15" fill="rgb(246,121,10)" fg:x="414633" fg:w="408"/><text x="87.2218%" y="399.50"></text></g><g><title>realloc (373 samples, 0.08%)</title><rect x="86.9792%" y="373" width="0.0782%" height="15" fill="rgb(214,156,37)" fg:x="414668" fg:w="373"/><text x="87.2292%" y="383.50"></text></g><g><title>[libc-2.31.so] (217 samples, 0.05%)</title><rect x="87.0119%" y="357" width="0.0455%" height="15" fill="rgb(214,210,34)" fg:x="414824" fg:w="217"/><text x="87.2619%" y="367.50"></text></g><g><title>[libc-2.31.so] (179 samples, 0.04%)</title><rect x="87.0199%" y="341" width="0.0375%" height="15" fill="rgb(237,93,35)" fg:x="414862" fg:w="179"/><text x="87.2699%" y="351.50"></text></g><g><title>__libc_malloc (48 samples, 0.01%)</title><rect x="87.0574%" y="421" width="0.0101%" height="15" fill="rgb(206,36,8)" fg:x="415041" fg:w="48"/><text x="87.3074%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (506 samples, 0.11%)</title><rect x="86.9655%" y="437" width="0.1061%" height="15" fill="rgb(208,151,12)" fg:x="414603" fg:w="506"/><text x="87.2155%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (586 samples, 0.12%)</title><rect x="86.9551%" y="501" width="0.1229%" height="15" fill="rgb(225,133,52)" fg:x="414553" fg:w="586"/><text x="87.2051%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (579 samples, 0.12%)</title><rect x="86.9565%" y="485" width="0.1214%" height="15" fill="rgb(231,71,53)" fg:x="414560" fg:w="579"/><text x="87.2065%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (567 samples, 0.12%)</title><rect x="86.9590%" y="469" width="0.1189%" height="15" fill="rgb(243,76,21)" fg:x="414572" fg:w="567"/><text x="87.2090%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (558 samples, 0.12%)</title><rect x="86.9609%" y="453" width="0.1170%" height="15" fill="rgb(252,144,3)" fg:x="414581" fg:w="558"/><text x="87.2109%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (57 samples, 0.01%)</title><rect x="87.0780%" y="501" width="0.0120%" height="15" fill="rgb(231,199,10)" fg:x="415139" fg:w="57"/><text x="87.3280%" y="511.50"></text></g><g><title>[libc-2.31.so] (54 samples, 0.01%)</title><rect x="87.0786%" y="485" width="0.0113%" height="15" fill="rgb(215,18,11)" fg:x="415142" fg:w="54"/><text x="87.3286%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (671 samples, 0.14%)</title><rect x="86.9496%" y="597" width="0.1407%" height="15" fill="rgb(241,65,24)" fg:x="414527" fg:w="671"/><text x="87.1996%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (649 samples, 0.14%)</title><rect x="86.9542%" y="581" width="0.1361%" height="15" fill="rgb(251,192,38)" fg:x="414549" fg:w="649"/><text x="87.2042%" y="591.50"></text></g><g><title>alloc::string::String::push_str (649 samples, 0.14%)</title><rect x="86.9542%" y="565" width="0.1361%" height="15" fill="rgb(205,9,35)" fg:x="414549" fg:w="649"/><text x="87.2042%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (649 samples, 0.14%)</title><rect x="86.9542%" y="549" width="0.1361%" height="15" fill="rgb(229,225,49)" fg:x="414549" fg:w="649"/><text x="87.2042%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (649 samples, 0.14%)</title><rect x="86.9542%" y="533" width="0.1361%" height="15" fill="rgb(207,125,39)" fg:x="414549" fg:w="649"/><text x="87.2042%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (649 samples, 0.14%)</title><rect x="86.9542%" y="517" width="0.1361%" height="15" fill="rgb(222,78,19)" fg:x="414549" fg:w="649"/><text x="87.2042%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (800 samples, 0.17%)</title><rect x="86.9397%" y="629" width="0.1678%" height="15" fill="rgb(248,207,20)" fg:x="414480" fg:w="800"/><text x="87.1897%" y="639.50"></text></g><g><title>core::fmt::write (784 samples, 0.16%)</title><rect x="86.9431%" y="613" width="0.1644%" height="15" fill="rgb(205,103,49)" fg:x="414496" fg:w="784"/><text x="87.1931%" y="623.50"></text></g><g><title>alloc::fmt::format (861 samples, 0.18%)</title><rect x="86.9276%" y="645" width="0.1806%" height="15" fill="rgb(216,42,28)" fg:x="414422" fg:w="861"/><text x="87.1776%" y="655.50"></text></g><g><title>[libc-2.31.so] (164 samples, 0.03%)</title><rect x="87.1099%" y="533" width="0.0344%" height="15" fill="rgb(213,205,53)" fg:x="415291" fg:w="164"/><text x="87.3599%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (242 samples, 0.05%)</title><rect x="87.1096%" y="565" width="0.0508%" height="15" fill="rgb(239,140,53)" fg:x="415290" fg:w="242"/><text x="87.3596%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (242 samples, 0.05%)</title><rect x="87.1096%" y="549" width="0.0508%" height="15" fill="rgb(248,95,9)" fg:x="415290" fg:w="242"/><text x="87.3596%" y="559.50"></text></g><g><title>cfree (69 samples, 0.01%)</title><rect x="87.1459%" y="533" width="0.0145%" height="15" fill="rgb(254,58,47)" fg:x="415463" fg:w="69"/><text x="87.3959%" y="543.50"></text></g><g><title>&lt;parsed::http::Response as core::convert::Into&lt;alloc::string::String&gt;&gt;::into::{{closure}} (1,117 samples, 0.23%)</title><rect x="86.9263%" y="661" width="0.2343%" height="15" fill="rgb(234,227,14)" fg:x="414416" fg:w="1117"/><text x="87.1763%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Header&gt; (246 samples, 0.05%)</title><rect x="87.1090%" y="645" width="0.0516%" height="15" fill="rgb(205,192,45)" fg:x="415287" fg:w="246"/><text x="87.3590%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (246 samples, 0.05%)</title><rect x="87.1090%" y="629" width="0.0516%" height="15" fill="rgb(253,187,31)" fg:x="415287" fg:w="246"/><text x="87.3590%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (246 samples, 0.05%)</title><rect x="87.1090%" y="613" width="0.0516%" height="15" fill="rgb(222,6,32)" fg:x="415287" fg:w="246"/><text x="87.3590%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (246 samples, 0.05%)</title><rect x="87.1090%" y="597" width="0.0516%" height="15" fill="rgb(249,190,19)" fg:x="415287" fg:w="246"/><text x="87.3590%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (246 samples, 0.05%)</title><rect x="87.1090%" y="581" width="0.0516%" height="15" fill="rgb(251,28,20)" fg:x="415287" fg:w="246"/><text x="87.3590%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,129 samples, 0.24%)</title><rect x="86.9259%" y="677" width="0.2368%" height="15" fill="rgb(210,223,40)" fg:x="414414" fg:w="1129"/><text x="87.1759%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,198 samples, 0.25%)</title><rect x="86.9204%" y="741" width="0.2513%" height="15" fill="rgb(216,137,22)" fg:x="414388" fg:w="1198"/><text x="87.1704%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,197 samples, 0.25%)</title><rect x="86.9207%" y="725" width="0.2511%" height="15" fill="rgb(247,39,34)" fg:x="414389" fg:w="1197"/><text x="87.1707%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,195 samples, 0.25%)</title><rect x="86.9211%" y="709" width="0.2507%" height="15" fill="rgb(239,43,50)" fg:x="414391" fg:w="1195"/><text x="87.1711%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,184 samples, 0.25%)</title><rect x="86.9234%" y="693" width="0.2484%" height="15" fill="rgb(241,212,9)" fg:x="414402" fg:w="1184"/><text x="87.1734%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,245 samples, 0.26%)</title><rect x="86.9177%" y="805" width="0.2611%" height="15" fill="rgb(205,8,2)" fg:x="414375" fg:w="1245"/><text x="87.1677%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,245 samples, 0.26%)</title><rect x="86.9177%" y="789" width="0.2611%" height="15" fill="rgb(217,173,54)" fg:x="414375" fg:w="1245"/><text x="87.1677%" y="799.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1,244 samples, 0.26%)</title><rect x="86.9179%" y="773" width="0.2609%" height="15" fill="rgb(208,149,52)" fg:x="414376" fg:w="1244"/><text x="87.1679%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,233 samples, 0.26%)</title><rect x="86.9202%" y="757" width="0.2586%" height="15" fill="rgb(239,99,40)" fg:x="414387" fg:w="1233"/><text x="87.1702%" y="767.50"></text></g><g><title>[libc-2.31.so] (97 samples, 0.02%)</title><rect x="87.1797%" y="709" width="0.0203%" height="15" fill="rgb(233,214,26)" fg:x="415624" fg:w="97"/><text x="87.4297%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (158 samples, 0.03%)</title><rect x="87.1789%" y="805" width="0.0331%" height="15" fill="rgb(231,225,37)" fg:x="415620" fg:w="158"/><text x="87.4289%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (158 samples, 0.03%)</title><rect x="87.1789%" y="789" width="0.0331%" height="15" fill="rgb(252,55,35)" fg:x="415620" fg:w="158"/><text x="87.4289%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (158 samples, 0.03%)</title><rect x="87.1789%" y="773" width="0.0331%" height="15" fill="rgb(239,43,18)" fg:x="415620" fg:w="158"/><text x="87.4289%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (158 samples, 0.03%)</title><rect x="87.1789%" y="757" width="0.0331%" height="15" fill="rgb(251,125,49)" fg:x="415620" fg:w="158"/><text x="87.4289%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (155 samples, 0.03%)</title><rect x="87.1795%" y="741" width="0.0325%" height="15" fill="rgb(212,83,54)" fg:x="415623" fg:w="155"/><text x="87.4295%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (155 samples, 0.03%)</title><rect x="87.1795%" y="725" width="0.0325%" height="15" fill="rgb(250,75,6)" fg:x="415623" fg:w="155"/><text x="87.4295%" y="735.50"></text></g><g><title>[libc-2.31.so] (67 samples, 0.01%)</title><rect x="87.2128%" y="661" width="0.0141%" height="15" fill="rgb(252,36,40)" fg:x="415782" fg:w="67"/><text x="87.4628%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (99 samples, 0.02%)</title><rect x="87.2124%" y="693" width="0.0208%" height="15" fill="rgb(230,91,51)" fg:x="415780" fg:w="99"/><text x="87.4624%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (99 samples, 0.02%)</title><rect x="87.2124%" y="677" width="0.0208%" height="15" fill="rgb(212,92,28)" fg:x="415780" fg:w="99"/><text x="87.4624%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (102 samples, 0.02%)</title><rect x="87.2120%" y="789" width="0.0214%" height="15" fill="rgb(227,13,22)" fg:x="415778" fg:w="102"/><text x="87.4620%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (102 samples, 0.02%)</title><rect x="87.2120%" y="773" width="0.0214%" height="15" fill="rgb(239,204,32)" fg:x="415778" fg:w="102"/><text x="87.4620%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (101 samples, 0.02%)</title><rect x="87.2122%" y="757" width="0.0212%" height="15" fill="rgb(228,49,41)" fg:x="415779" fg:w="101"/><text x="87.4622%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (101 samples, 0.02%)</title><rect x="87.2122%" y="741" width="0.0212%" height="15" fill="rgb(206,95,6)" fg:x="415779" fg:w="101"/><text x="87.4622%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (101 samples, 0.02%)</title><rect x="87.2122%" y="725" width="0.0212%" height="15" fill="rgb(251,20,14)" fg:x="415779" fg:w="101"/><text x="87.4622%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.02%)</title><rect x="87.2122%" y="709" width="0.0212%" height="15" fill="rgb(214,99,28)" fg:x="415779" fg:w="101"/><text x="87.4622%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (128 samples, 0.03%)</title><rect x="87.2120%" y="805" width="0.0268%" height="15" fill="rgb(239,122,54)" fg:x="415778" fg:w="128"/><text x="87.4620%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (88 samples, 0.02%)</title><rect x="87.2403%" y="757" width="0.0185%" height="15" fill="rgb(218,217,46)" fg:x="415913" fg:w="88"/><text x="87.4903%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (51 samples, 0.01%)</title><rect x="87.2481%" y="741" width="0.0107%" height="15" fill="rgb(249,106,28)" fg:x="415950" fg:w="51"/><text x="87.4981%" y="751.50"></text></g><g><title>&lt;parsed::http::Response as core::convert::Into&lt;alloc::string::String&gt;&gt;::into (2,572 samples, 0.54%)</title><rect x="86.7195%" y="821" width="0.5395%" height="15" fill="rgb(250,158,18)" fg:x="413430" fg:w="2572"/><text x="86.9695%" y="831.50"></text></g><g><title>parsed::http::as_string (96 samples, 0.02%)</title><rect x="87.2389%" y="805" width="0.0201%" height="15" fill="rgb(226,137,29)" fg:x="415906" fg:w="96"/><text x="87.4889%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (95 samples, 0.02%)</title><rect x="87.2391%" y="789" width="0.0199%" height="15" fill="rgb(210,188,1)" fg:x="415907" fg:w="95"/><text x="87.4891%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (93 samples, 0.02%)</title><rect x="87.2395%" y="773" width="0.0195%" height="15" fill="rgb(227,84,42)" fg:x="415909" fg:w="93"/><text x="87.4895%" y="783.50"></text></g><g><title>[libc-2.31.so] (67 samples, 0.01%)</title><rect x="87.2596%" y="725" width="0.0141%" height="15" fill="rgb(222,147,48)" fg:x="416005" fg:w="67"/><text x="87.5096%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (89 samples, 0.02%)</title><rect x="87.2594%" y="821" width="0.0187%" height="15" fill="rgb(241,150,43)" fg:x="416004" fg:w="89"/><text x="87.5094%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (89 samples, 0.02%)</title><rect x="87.2594%" y="805" width="0.0187%" height="15" fill="rgb(206,139,52)" fg:x="416004" fg:w="89"/><text x="87.5094%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (89 samples, 0.02%)</title><rect x="87.2594%" y="789" width="0.0187%" height="15" fill="rgb(230,63,14)" fg:x="416004" fg:w="89"/><text x="87.5094%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.02%)</title><rect x="87.2594%" y="773" width="0.0187%" height="15" fill="rgb(247,8,20)" fg:x="416004" fg:w="89"/><text x="87.5094%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (89 samples, 0.02%)</title><rect x="87.2594%" y="757" width="0.0187%" height="15" fill="rgb(213,115,4)" fg:x="416004" fg:w="89"/><text x="87.5094%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (89 samples, 0.02%)</title><rect x="87.2594%" y="741" width="0.0187%" height="15" fill="rgb(241,79,49)" fg:x="416004" fg:w="89"/><text x="87.5094%" y="751.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (112 samples, 0.02%)</title><rect x="87.3263%" y="661" width="0.0235%" height="15" fill="rgb(222,42,35)" fg:x="416323" fg:w="112"/><text x="87.5763%" y="671.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (98 samples, 0.02%)</title><rect x="87.3293%" y="645" width="0.0206%" height="15" fill="rgb(247,59,23)" fg:x="416337" fg:w="98"/><text x="87.5793%" y="655.50"></text></g><g><title>alloc::fmt::format (207 samples, 0.04%)</title><rect x="87.3077%" y="709" width="0.0434%" height="15" fill="rgb(247,93,18)" fg:x="416234" fg:w="207"/><text x="87.5577%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (171 samples, 0.04%)</title><rect x="87.3152%" y="693" width="0.0359%" height="15" fill="rgb(249,107,47)" fg:x="416270" fg:w="171"/><text x="87.5652%" y="703.50"></text></g><g><title>core::fmt::write (168 samples, 0.04%)</title><rect x="87.3158%" y="677" width="0.0352%" height="15" fill="rgb(219,27,1)" fg:x="416273" fg:w="168"/><text x="87.5658%" y="687.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (209 samples, 0.04%)</title><rect x="87.3074%" y="725" width="0.0438%" height="15" fill="rgb(217,82,32)" fg:x="416233" fg:w="209"/><text x="87.5574%" y="735.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (278 samples, 0.06%)</title><rect x="87.2970%" y="757" width="0.0583%" height="15" fill="rgb(250,129,47)" fg:x="416183" fg:w="278"/><text x="87.5470%" y="767.50"></text></g><g><title>parsed::parser::bytes::{{closure}} (265 samples, 0.06%)</title><rect x="87.2997%" y="741" width="0.0556%" height="15" fill="rgb(253,88,35)" fg:x="416196" fg:w="265"/><text x="87.5497%" y="751.50"></text></g><g><title>alloc::string::String::with_capacity (55 samples, 0.01%)</title><rect x="87.3806%" y="645" width="0.0115%" height="15" fill="rgb(245,221,14)" fg:x="416582" fg:w="55"/><text x="87.6306%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (55 samples, 0.01%)</title><rect x="87.3806%" y="629" width="0.0115%" height="15" fill="rgb(217,119,54)" fg:x="416582" fg:w="55"/><text x="87.6306%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (55 samples, 0.01%)</title><rect x="87.3806%" y="613" width="0.0115%" height="15" fill="rgb(247,128,31)" fg:x="416582" fg:w="55"/><text x="87.6306%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (55 samples, 0.01%)</title><rect x="87.3806%" y="597" width="0.0115%" height="15" fill="rgb(211,99,22)" fg:x="416582" fg:w="55"/><text x="87.6306%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (55 samples, 0.01%)</title><rect x="87.3806%" y="581" width="0.0115%" height="15" fill="rgb(212,20,17)" fg:x="416582" fg:w="55"/><text x="87.6306%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (55 samples, 0.01%)</title><rect x="87.3806%" y="565" width="0.0115%" height="15" fill="rgb(209,159,29)" fg:x="416582" fg:w="55"/><text x="87.6306%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (55 samples, 0.01%)</title><rect x="87.3806%" y="549" width="0.0115%" height="15" fill="rgb(222,177,53)" fg:x="416582" fg:w="55"/><text x="87.6306%" y="559.50"></text></g><g><title>alloc::alloc::alloc (55 samples, 0.01%)</title><rect x="87.3806%" y="533" width="0.0115%" height="15" fill="rgb(234,46,43)" fg:x="416582" fg:w="55"/><text x="87.6306%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (93 samples, 0.02%)</title><rect x="87.3930%" y="645" width="0.0195%" height="15" fill="rgb(208,108,14)" fg:x="416641" fg:w="93"/><text x="87.6430%" y="655.50"></text></g><g><title>core::fmt::write (88 samples, 0.02%)</title><rect x="87.3941%" y="629" width="0.0185%" height="15" fill="rgb(226,78,53)" fg:x="416646" fg:w="88"/><text x="87.6441%" y="639.50"></text></g><g><title>alloc::fmt::format (160 samples, 0.03%)</title><rect x="87.3792%" y="661" width="0.0336%" height="15" fill="rgb(230,20,41)" fg:x="416575" fg:w="160"/><text x="87.6292%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (60 samples, 0.01%)</title><rect x="87.4140%" y="661" width="0.0126%" height="15" fill="rgb(213,195,35)" fg:x="416741" fg:w="60"/><text x="87.6640%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::matcher::MatchError&gt; (56 samples, 0.01%)</title><rect x="87.4148%" y="645" width="0.0117%" height="15" fill="rgb(242,62,36)" fg:x="416745" fg:w="56"/><text x="87.6648%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (56 samples, 0.01%)</title><rect x="87.4148%" y="629" width="0.0117%" height="15" fill="rgb(222,210,37)" fg:x="416745" fg:w="56"/><text x="87.6648%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (56 samples, 0.01%)</title><rect x="87.4148%" y="613" width="0.0117%" height="15" fill="rgb(232,107,19)" fg:x="416745" fg:w="56"/><text x="87.6648%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (56 samples, 0.01%)</title><rect x="87.4148%" y="597" width="0.0117%" height="15" fill="rgb(235,85,17)" fg:x="416745" fg:w="56"/><text x="87.6648%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.01%)</title><rect x="87.4148%" y="581" width="0.0117%" height="15" fill="rgb(219,195,31)" fg:x="416745" fg:w="56"/><text x="87.6648%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (54 samples, 0.01%)</title><rect x="87.4153%" y="565" width="0.0113%" height="15" fill="rgb(231,183,30)" fg:x="416747" fg:w="54"/><text x="87.6653%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (54 samples, 0.01%)</title><rect x="87.4153%" y="549" width="0.0113%" height="15" fill="rgb(212,0,11)" fg:x="416747" fg:w="54"/><text x="87.6653%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (65 samples, 0.01%)</title><rect x="87.4612%" y="501" width="0.0136%" height="15" fill="rgb(249,53,54)" fg:x="416966" fg:w="65"/><text x="87.7112%" y="511.50"></text></g><g><title>[libc-2.31.so] (60 samples, 0.01%)</title><rect x="87.4622%" y="485" width="0.0126%" height="15" fill="rgb(211,118,13)" fg:x="416971" fg:w="60"/><text x="87.7122%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (119 samples, 0.02%)</title><rect x="87.4501%" y="597" width="0.0250%" height="15" fill="rgb(237,42,9)" fg:x="416913" fg:w="119"/><text x="87.7001%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (81 samples, 0.02%)</title><rect x="87.4580%" y="581" width="0.0170%" height="15" fill="rgb(227,68,32)" fg:x="416951" fg:w="81"/><text x="87.7080%" y="591.50"></text></g><g><title>alloc::string::String::push_str (81 samples, 0.02%)</title><rect x="87.4580%" y="565" width="0.0170%" height="15" fill="rgb(238,10,7)" fg:x="416951" fg:w="81"/><text x="87.7080%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (81 samples, 0.02%)</title><rect x="87.4580%" y="549" width="0.0170%" height="15" fill="rgb(224,42,12)" fg:x="416951" fg:w="81"/><text x="87.7080%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (81 samples, 0.02%)</title><rect x="87.4580%" y="533" width="0.0170%" height="15" fill="rgb(252,190,5)" fg:x="416951" fg:w="81"/><text x="87.7080%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (81 samples, 0.02%)</title><rect x="87.4580%" y="517" width="0.0170%" height="15" fill="rgb(220,214,39)" fg:x="416951" fg:w="81"/><text x="87.7080%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (59 samples, 0.01%)</title><rect x="87.4843%" y="597" width="0.0124%" height="15" fill="rgb(247,98,4)" fg:x="417076" fg:w="59"/><text x="87.7343%" y="607.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (59 samples, 0.01%)</title><rect x="87.4843%" y="581" width="0.0124%" height="15" fill="rgb(211,60,12)" fg:x="417076" fg:w="59"/><text x="87.7343%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (260 samples, 0.05%)</title><rect x="87.4438%" y="629" width="0.0545%" height="15" fill="rgb(224,42,10)" fg:x="416883" fg:w="260"/><text x="87.6938%" y="639.50"></text></g><g><title>core::fmt::write (259 samples, 0.05%)</title><rect x="87.4440%" y="613" width="0.0543%" height="15" fill="rgb(217,167,4)" fg:x="416884" fg:w="259"/><text x="87.6940%" y="623.50"></text></g><g><title>alloc::fmt::format (317 samples, 0.07%)</title><rect x="87.4320%" y="645" width="0.0665%" height="15" fill="rgb(253,18,17)" fg:x="416827" fg:w="317"/><text x="87.6820%" y="655.50"></text></g><g><title>[libc-2.31.so] (50 samples, 0.01%)</title><rect x="87.5002%" y="549" width="0.0105%" height="15" fill="rgb(249,186,44)" fg:x="417152" fg:w="50"/><text x="87.7502%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (88 samples, 0.02%)</title><rect x="87.4998%" y="581" width="0.0185%" height="15" fill="rgb(254,124,54)" fg:x="417150" fg:w="88"/><text x="87.7498%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (88 samples, 0.02%)</title><rect x="87.4998%" y="565" width="0.0185%" height="15" fill="rgb(220,124,39)" fg:x="417150" fg:w="88"/><text x="87.7498%" y="575.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (439 samples, 0.09%)</title><rect x="87.4266%" y="661" width="0.0921%" height="15" fill="rgb(225,96,46)" fg:x="416801" fg:w="439"/><text x="87.6766%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (91 samples, 0.02%)</title><rect x="87.4996%" y="645" width="0.0191%" height="15" fill="rgb(221,106,12)" fg:x="417149" fg:w="91"/><text x="87.7496%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (91 samples, 0.02%)</title><rect x="87.4996%" y="629" width="0.0191%" height="15" fill="rgb(227,133,23)" fg:x="417149" fg:w="91"/><text x="87.7496%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (91 samples, 0.02%)</title><rect x="87.4996%" y="613" width="0.0191%" height="15" fill="rgb(216,44,52)" fg:x="417149" fg:w="91"/><text x="87.7496%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 0.02%)</title><rect x="87.4996%" y="597" width="0.0191%" height="15" fill="rgb(239,149,7)" fg:x="417149" fg:w="91"/><text x="87.7496%" y="607.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (837 samples, 0.18%)</title><rect x="87.3672%" y="693" width="0.1756%" height="15" fill="rgb(211,157,31)" fg:x="416518" fg:w="837"/><text x="87.6172%" y="703.50"></text></g><g><title>parsed::parser::single::{{closure}} (830 samples, 0.17%)</title><rect x="87.3687%" y="677" width="0.1741%" height="15" fill="rgb(206,215,22)" fg:x="416525" fg:w="830"/><text x="87.6187%" y="687.50"></text></g><g><title>parsed::stream::ByteStream::next (115 samples, 0.02%)</title><rect x="87.5187%" y="661" width="0.0241%" height="15" fill="rgb(208,113,15)" fg:x="417240" fg:w="115"/><text x="87.7687%" y="671.50"></text></g><g><title>parsed::stream::ByteStream::get (64 samples, 0.01%)</title><rect x="87.5294%" y="645" width="0.0134%" height="15" fill="rgb(207,189,15)" fg:x="417291" fg:w="64"/><text x="87.7794%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (52 samples, 0.01%)</title><rect x="87.5428%" y="693" width="0.0109%" height="15" fill="rgb(231,115,4)" fg:x="417355" fg:w="52"/><text x="87.7928%" y="703.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (975 samples, 0.20%)</title><rect x="87.3628%" y="725" width="0.2045%" height="15" fill="rgb(253,117,2)" fg:x="416497" fg:w="975"/><text x="87.6128%" y="735.50"></text></g><g><title>parsed::parser::exact::{{closure}} (972 samples, 0.20%)</title><rect x="87.3634%" y="709" width="0.2039%" height="15" fill="rgb(248,48,24)" fg:x="416500" fg:w="972"/><text x="87.6134%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (65 samples, 0.01%)</title><rect x="87.5537%" y="693" width="0.0136%" height="15" fill="rgb(241,28,46)" fg:x="417407" fg:w="65"/><text x="87.8037%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (65 samples, 0.01%)</title><rect x="87.5537%" y="677" width="0.0136%" height="15" fill="rgb(216,165,52)" fg:x="417407" fg:w="65"/><text x="87.8037%" y="687.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (64 samples, 0.01%)</title><rect x="87.5539%" y="661" width="0.0134%" height="15" fill="rgb(220,222,34)" fg:x="417408" fg:w="64"/><text x="87.8039%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (56 samples, 0.01%)</title><rect x="87.5556%" y="645" width="0.0117%" height="15" fill="rgb(247,222,49)" fg:x="417416" fg:w="56"/><text x="87.8056%" y="655.50"></text></g><g><title>__libc_malloc (315 samples, 0.07%)</title><rect x="87.6061%" y="405" width="0.0661%" height="15" fill="rgb(240,10,31)" fg:x="417657" fg:w="315"/><text x="87.8561%" y="415.50"></text></g><g><title>[libc-2.31.so] (210 samples, 0.04%)</title><rect x="87.6282%" y="389" width="0.0440%" height="15" fill="rgb(221,199,35)" fg:x="417762" fg:w="210"/><text x="87.8782%" y="399.50"></text></g><g><title>alloc::string::String::with_capacity (326 samples, 0.07%)</title><rect x="87.6057%" y="533" width="0.0684%" height="15" fill="rgb(230,223,11)" fg:x="417655" fg:w="326"/><text x="87.8557%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (325 samples, 0.07%)</title><rect x="87.6059%" y="517" width="0.0682%" height="15" fill="rgb(218,82,45)" fg:x="417656" fg:w="325"/><text x="87.8559%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (325 samples, 0.07%)</title><rect x="87.6059%" y="501" width="0.0682%" height="15" fill="rgb(233,213,33)" fg:x="417656" fg:w="325"/><text x="87.8559%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (325 samples, 0.07%)</title><rect x="87.6059%" y="485" width="0.0682%" height="15" fill="rgb(210,143,52)" fg:x="417656" fg:w="325"/><text x="87.8559%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (325 samples, 0.07%)</title><rect x="87.6059%" y="469" width="0.0682%" height="15" fill="rgb(206,95,4)" fg:x="417656" fg:w="325"/><text x="87.8559%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (325 samples, 0.07%)</title><rect x="87.6059%" y="453" width="0.0682%" height="15" fill="rgb(246,164,46)" fg:x="417656" fg:w="325"/><text x="87.8559%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (325 samples, 0.07%)</title><rect x="87.6059%" y="437" width="0.0682%" height="15" fill="rgb(213,210,47)" fg:x="417656" fg:w="325"/><text x="87.8559%" y="447.50"></text></g><g><title>alloc::alloc::alloc (324 samples, 0.07%)</title><rect x="87.6061%" y="421" width="0.0680%" height="15" fill="rgb(210,12,38)" fg:x="417657" fg:w="324"/><text x="87.8561%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (112 samples, 0.02%)</title><rect x="87.6760%" y="533" width="0.0235%" height="15" fill="rgb(252,192,54)" fg:x="417990" fg:w="112"/><text x="87.9260%" y="543.50"></text></g><g><title>core::fmt::write (107 samples, 0.02%)</title><rect x="87.6770%" y="517" width="0.0224%" height="15" fill="rgb(242,92,6)" fg:x="417995" fg:w="107"/><text x="87.9270%" y="527.50"></text></g><g><title>alloc::fmt::format (452 samples, 0.09%)</title><rect x="87.6049%" y="549" width="0.0948%" height="15" fill="rgb(253,154,15)" fg:x="417651" fg:w="452"/><text x="87.8549%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (48 samples, 0.01%)</title><rect x="87.7012%" y="549" width="0.0101%" height="15" fill="rgb(209,20,43)" fg:x="418110" fg:w="48"/><text x="87.9512%" y="559.50"></text></g><g><title>[libc-2.31.so] (58 samples, 0.01%)</title><rect x="87.7555%" y="373" width="0.0122%" height="15" fill="rgb(232,28,49)" fg:x="418369" fg:w="58"/><text x="88.0055%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (69 samples, 0.01%)</title><rect x="87.7534%" y="389" width="0.0145%" height="15" fill="rgb(248,131,53)" fg:x="418359" fg:w="69"/><text x="88.0034%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (131 samples, 0.03%)</title><rect x="87.7406%" y="485" width="0.0275%" height="15" fill="rgb(214,16,30)" fg:x="418298" fg:w="131"/><text x="87.9906%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (84 samples, 0.02%)</title><rect x="87.7504%" y="469" width="0.0176%" height="15" fill="rgb(245,16,0)" fg:x="418345" fg:w="84"/><text x="88.0004%" y="479.50"></text></g><g><title>alloc::string::String::push_str (84 samples, 0.02%)</title><rect x="87.7504%" y="453" width="0.0176%" height="15" fill="rgb(245,17,35)" fg:x="418345" fg:w="84"/><text x="88.0004%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (84 samples, 0.02%)</title><rect x="87.7504%" y="437" width="0.0176%" height="15" fill="rgb(249,27,53)" fg:x="418345" fg:w="84"/><text x="88.0004%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (84 samples, 0.02%)</title><rect x="87.7504%" y="421" width="0.0176%" height="15" fill="rgb(214,73,24)" fg:x="418345" fg:w="84"/><text x="88.0004%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (84 samples, 0.02%)</title><rect x="87.7504%" y="405" width="0.0176%" height="15" fill="rgb(223,84,37)" fg:x="418345" fg:w="84"/><text x="88.0004%" y="415.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (69 samples, 0.01%)</title><rect x="87.7752%" y="485" width="0.0145%" height="15" fill="rgb(210,109,28)" fg:x="418463" fg:w="69"/><text x="88.0252%" y="495.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (66 samples, 0.01%)</title><rect x="87.7758%" y="469" width="0.0138%" height="15" fill="rgb(208,186,6)" fg:x="418466" fg:w="66"/><text x="88.0258%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (290 samples, 0.06%)</title><rect x="87.7303%" y="517" width="0.0608%" height="15" fill="rgb(235,201,30)" fg:x="418249" fg:w="290"/><text x="87.9803%" y="527.50"></text></g><g><title>core::fmt::write (287 samples, 0.06%)</title><rect x="87.7309%" y="501" width="0.0602%" height="15" fill="rgb(216,198,48)" fg:x="418252" fg:w="287"/><text x="87.9809%" y="511.50"></text></g><g><title>alloc::fmt::format (347 samples, 0.07%)</title><rect x="87.7186%" y="533" width="0.0728%" height="15" fill="rgb(254,186,25)" fg:x="418193" fg:w="347"/><text x="87.9686%" y="543.50"></text></g><g><title>[libc-2.31.so] (78 samples, 0.02%)</title><rect x="87.7920%" y="437" width="0.0164%" height="15" fill="rgb(227,87,5)" fg:x="418543" fg:w="78"/><text x="88.0420%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (112 samples, 0.02%)</title><rect x="87.7920%" y="469" width="0.0235%" height="15" fill="rgb(236,205,25)" fg:x="418543" fg:w="112"/><text x="88.0420%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (112 samples, 0.02%)</title><rect x="87.7920%" y="453" width="0.0235%" height="15" fill="rgb(229,99,32)" fg:x="418543" fg:w="112"/><text x="88.0420%" y="463.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (498 samples, 0.10%)</title><rect x="87.7112%" y="549" width="0.1045%" height="15" fill="rgb(231,177,31)" fg:x="418158" fg:w="498"/><text x="87.9612%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (115 samples, 0.02%)</title><rect x="87.7916%" y="533" width="0.0241%" height="15" fill="rgb(246,15,2)" fg:x="418541" fg:w="115"/><text x="88.0416%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (115 samples, 0.02%)</title><rect x="87.7916%" y="517" width="0.0241%" height="15" fill="rgb(207,39,15)" fg:x="418541" fg:w="115"/><text x="88.0416%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (115 samples, 0.02%)</title><rect x="87.7916%" y="501" width="0.0241%" height="15" fill="rgb(207,44,9)" fg:x="418541" fg:w="115"/><text x="88.0416%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 samples, 0.02%)</title><rect x="87.7916%" y="485" width="0.0241%" height="15" fill="rgb(225,224,33)" fg:x="418541" fg:w="115"/><text x="88.0416%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (63 samples, 0.01%)</title><rect x="87.8167%" y="533" width="0.0132%" height="15" fill="rgb(252,151,3)" fg:x="418661" fg:w="63"/><text x="88.0667%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::next::{{closure}} (48 samples, 0.01%)</title><rect x="87.8199%" y="517" width="0.0101%" height="15" fill="rgb(211,140,13)" fg:x="418676" fg:w="48"/><text x="88.0699%" y="527.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,177 samples, 0.25%)</title><rect x="87.5944%" y="581" width="0.2469%" height="15" fill="rgb(239,225,17)" fg:x="417601" fg:w="1177"/><text x="87.8444%" y="591.50"></text></g><g><title>parsed::parser::single::{{closure}} (1,175 samples, 0.25%)</title><rect x="87.5948%" y="565" width="0.2465%" height="15" fill="rgb(223,170,52)" fg:x="417603" fg:w="1175"/><text x="87.8448%" y="575.50"></text></g><g><title>parsed::stream::ByteStream::next (122 samples, 0.03%)</title><rect x="87.8157%" y="549" width="0.0256%" height="15" fill="rgb(212,64,21)" fg:x="418656" fg:w="122"/><text x="88.0657%" y="559.50"></text></g><g><title>parsed::stream::ByteStream::get (54 samples, 0.01%)</title><rect x="87.8299%" y="533" width="0.0113%" height="15" fill="rgb(236,126,48)" fg:x="418724" fg:w="54"/><text x="88.0799%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (50 samples, 0.01%)</title><rect x="87.8507%" y="581" width="0.0105%" height="15" fill="rgb(209,135,11)" fg:x="418823" fg:w="50"/><text x="88.1007%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (50 samples, 0.01%)</title><rect x="87.8507%" y="565" width="0.0105%" height="15" fill="rgb(228,126,40)" fg:x="418823" fg:w="50"/><text x="88.1007%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (48 samples, 0.01%)</title><rect x="87.8511%" y="549" width="0.0101%" height="15" fill="rgb(205,196,36)" fg:x="418825" fg:w="48"/><text x="88.1011%" y="559.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,292 samples, 0.27%)</title><rect x="87.5904%" y="613" width="0.2710%" height="15" fill="rgb(243,160,33)" fg:x="417582" fg:w="1292"/><text x="87.8404%" y="623.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,283 samples, 0.27%)</title><rect x="87.5923%" y="597" width="0.2691%" height="15" fill="rgb(210,84,20)" fg:x="417591" fg:w="1283"/><text x="87.8423%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (51 samples, 0.01%)</title><rect x="87.8683%" y="501" width="0.0107%" height="15" fill="rgb(228,213,30)" fg:x="418907" fg:w="51"/><text x="88.1183%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (86 samples, 0.02%)</title><rect x="87.8641%" y="549" width="0.0180%" height="15" fill="rgb(252,33,45)" fg:x="418887" fg:w="86"/><text x="88.1141%" y="559.50"></text></g><g><title>parsed::parser::before::{{closure}}::{{closure}} (84 samples, 0.02%)</title><rect x="87.8646%" y="533" width="0.0176%" height="15" fill="rgb(254,227,20)" fg:x="418889" fg:w="84"/><text x="88.1146%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::get (84 samples, 0.02%)</title><rect x="87.8646%" y="517" width="0.0176%" height="15" fill="rgb(228,192,2)" fg:x="418889" fg:w="84"/><text x="88.1146%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (107 samples, 0.02%)</title><rect x="87.9050%" y="485" width="0.0224%" height="15" fill="rgb(233,32,8)" fg:x="419082" fg:w="107"/><text x="88.1550%" y="495.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (94 samples, 0.02%)</title><rect x="87.9078%" y="469" width="0.0197%" height="15" fill="rgb(220,146,47)" fg:x="419095" fg:w="94"/><text x="88.1578%" y="479.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (189 samples, 0.04%)</title><rect x="87.8885%" y="549" width="0.0396%" height="15" fill="rgb(246,194,1)" fg:x="419003" fg:w="189"/><text x="88.1385%" y="559.50"></text></g><g><title>alloc::fmt::format (189 samples, 0.04%)</title><rect x="87.8885%" y="533" width="0.0396%" height="15" fill="rgb(218,203,9)" fg:x="419003" fg:w="189"/><text x="88.1385%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (149 samples, 0.03%)</title><rect x="87.8969%" y="517" width="0.0313%" height="15" fill="rgb(237,97,14)" fg:x="419043" fg:w="149"/><text x="88.1469%" y="527.50"></text></g><g><title>core::fmt::write (149 samples, 0.03%)</title><rect x="87.8969%" y="501" width="0.0313%" height="15" fill="rgb(239,76,15)" fg:x="419043" fg:w="149"/><text x="88.1469%" y="511.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (325 samples, 0.07%)</title><rect x="87.8631%" y="581" width="0.0682%" height="15" fill="rgb(222,53,45)" fg:x="418882" fg:w="325"/><text x="88.1131%" y="591.50"></text></g><g><title>parsed::parser::before::{{closure}} (320 samples, 0.07%)</title><rect x="87.8641%" y="565" width="0.0671%" height="15" fill="rgb(237,88,5)" fg:x="418887" fg:w="320"/><text x="88.1141%" y="575.50"></text></g><g><title>alloc::fmt::format (81 samples, 0.02%)</title><rect x="87.9369%" y="517" width="0.0170%" height="15" fill="rgb(218,223,35)" fg:x="419234" fg:w="81"/><text x="88.1869%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (52 samples, 0.01%)</title><rect x="87.9430%" y="501" width="0.0109%" height="15" fill="rgb(243,229,38)" fg:x="419263" fg:w="52"/><text x="88.1930%" y="511.50"></text></g><g><title>core::fmt::write (50 samples, 0.01%)</title><rect x="87.9434%" y="485" width="0.0105%" height="15" fill="rgb(240,75,41)" fg:x="419265" fg:w="50"/><text x="88.1934%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (64 samples, 0.01%)</title><rect x="87.9728%" y="453" width="0.0134%" height="15" fill="rgb(209,110,37)" fg:x="419405" fg:w="64"/><text x="88.2228%" y="463.50"></text></g><g><title>alloc::fmt::format (181 samples, 0.04%)</title><rect x="87.9613%" y="501" width="0.0380%" height="15" fill="rgb(221,130,46)" fg:x="419350" fg:w="181"/><text x="88.2113%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (144 samples, 0.03%)</title><rect x="87.9690%" y="485" width="0.0302%" height="15" fill="rgb(237,160,20)" fg:x="419387" fg:w="144"/><text x="88.2190%" y="495.50"></text></g><g><title>core::fmt::write (142 samples, 0.03%)</title><rect x="87.9694%" y="469" width="0.0298%" height="15" fill="rgb(234,126,24)" fg:x="419389" fg:w="142"/><text x="88.2194%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (54 samples, 0.01%)</title><rect x="87.9996%" y="437" width="0.0113%" height="15" fill="rgb(207,177,9)" fg:x="419533" fg:w="54"/><text x="88.2496%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (54 samples, 0.01%)</title><rect x="87.9996%" y="421" width="0.0113%" height="15" fill="rgb(231,191,33)" fg:x="419533" fg:w="54"/><text x="88.2496%" y="431.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (251 samples, 0.05%)</title><rect x="87.9585%" y="517" width="0.0526%" height="15" fill="rgb(207,42,1)" fg:x="419337" fg:w="251"/><text x="88.2085%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (56 samples, 0.01%)</title><rect x="87.9994%" y="501" width="0.0117%" height="15" fill="rgb(218,34,50)" fg:x="419532" fg:w="56"/><text x="88.2494%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (56 samples, 0.01%)</title><rect x="87.9994%" y="485" width="0.0117%" height="15" fill="rgb(254,126,39)" fg:x="419532" fg:w="56"/><text x="88.2494%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (56 samples, 0.01%)</title><rect x="87.9994%" y="469" width="0.0117%" height="15" fill="rgb(251,17,26)" fg:x="419532" fg:w="56"/><text x="88.2494%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.01%)</title><rect x="87.9994%" y="453" width="0.0117%" height="15" fill="rgb(252,215,34)" fg:x="419532" fg:w="56"/><text x="88.2494%" y="463.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (437 samples, 0.09%)</title><rect x="87.9313%" y="549" width="0.0917%" height="15" fill="rgb(217,120,44)" fg:x="419207" fg:w="437"/><text x="88.1813%" y="559.50"></text></g><g><title>parsed::parser::single::{{closure}} (431 samples, 0.09%)</title><rect x="87.9325%" y="533" width="0.0904%" height="15" fill="rgb(211,31,11)" fg:x="419213" fg:w="431"/><text x="88.1825%" y="543.50"></text></g><g><title>parsed::stream::ByteStream::next (56 samples, 0.01%)</title><rect x="88.0112%" y="517" width="0.0117%" height="15" fill="rgb(222,69,51)" fg:x="419588" fg:w="56"/><text x="88.2612%" y="527.50"></text></g><g><title>alloc::fmt::format (92 samples, 0.02%)</title><rect x="88.0292%" y="485" width="0.0193%" height="15" fill="rgb(215,229,42)" fg:x="419674" fg:w="92"/><text x="88.2792%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (50 samples, 0.01%)</title><rect x="88.0380%" y="469" width="0.0105%" height="15" fill="rgb(212,102,15)" fg:x="419716" fg:w="50"/><text x="88.2880%" y="479.50"></text></g><g><title>core::fmt::write (49 samples, 0.01%)</title><rect x="88.0382%" y="453" width="0.0103%" height="15" fill="rgb(205,179,41)" fg:x="419717" fg:w="49"/><text x="88.2882%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 samples, 0.01%)</title><rect x="88.0678%" y="421" width="0.0147%" height="15" fill="rgb(219,148,46)" fg:x="419858" fg:w="70"/><text x="88.3178%" y="431.50"></text></g><g><title>alloc::fmt::format (174 samples, 0.04%)</title><rect x="88.0569%" y="469" width="0.0365%" height="15" fill="rgb(243,40,19)" fg:x="419806" fg:w="174"/><text x="88.3069%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (147 samples, 0.03%)</title><rect x="88.0626%" y="453" width="0.0308%" height="15" fill="rgb(208,206,34)" fg:x="419833" fg:w="147"/><text x="88.3126%" y="463.50"></text></g><g><title>core::fmt::write (146 samples, 0.03%)</title><rect x="88.0628%" y="437" width="0.0306%" height="15" fill="rgb(244,184,38)" fg:x="419834" fg:w="146"/><text x="88.3128%" y="447.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (237 samples, 0.05%)</title><rect x="88.0542%" y="485" width="0.0497%" height="15" fill="rgb(244,151,47)" fg:x="419793" fg:w="237"/><text x="88.3042%" y="495.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (453 samples, 0.10%)</title><rect x="88.0231%" y="517" width="0.0950%" height="15" fill="rgb(236,134,42)" fg:x="419645" fg:w="453"/><text x="88.2731%" y="527.50"></text></g><g><title>parsed::parser::single::{{closure}} (450 samples, 0.09%)</title><rect x="88.0238%" y="501" width="0.0944%" height="15" fill="rgb(233,93,22)" fg:x="419648" fg:w="450"/><text x="88.2738%" y="511.50"></text></g><g><title>parsed::stream::ByteStream::next (68 samples, 0.01%)</title><rect x="88.1039%" y="485" width="0.0143%" height="15" fill="rgb(211,202,10)" fg:x="420030" fg:w="68"/><text x="88.3539%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (64 samples, 0.01%)</title><rect x="88.1553%" y="389" width="0.0134%" height="15" fill="rgb(240,63,8)" fg:x="420275" fg:w="64"/><text x="88.4053%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (73 samples, 0.02%)</title><rect x="88.1815%" y="357" width="0.0153%" height="15" fill="rgb(214,9,4)" fg:x="420400" fg:w="73"/><text x="88.4315%" y="367.50"></text></g><g><title>core::fmt::Formatter::pad_integral (101 samples, 0.02%)</title><rect x="88.1968%" y="357" width="0.0212%" height="15" fill="rgb(243,66,45)" fg:x="420473" fg:w="101"/><text x="88.4468%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (241 samples, 0.05%)</title><rect x="88.1693%" y="389" width="0.0506%" height="15" fill="rgb(220,50,42)" fg:x="420342" fg:w="241"/><text x="88.4193%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (201 samples, 0.04%)</title><rect x="88.1777%" y="373" width="0.0422%" height="15" fill="rgb(220,134,27)" fg:x="420382" fg:w="201"/><text x="88.4277%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (350 samples, 0.07%)</title><rect x="88.1502%" y="421" width="0.0734%" height="15" fill="rgb(246,151,50)" fg:x="420251" fg:w="350"/><text x="88.4002%" y="431.50"></text></g><g><title>core::fmt::write (348 samples, 0.07%)</title><rect x="88.1507%" y="405" width="0.0730%" height="15" fill="rgb(238,216,27)" fg:x="420253" fg:w="348"/><text x="88.4007%" y="415.50"></text></g><g><title>alloc::fmt::format (406 samples, 0.09%)</title><rect x="88.1387%" y="437" width="0.0852%" height="15" fill="rgb(250,92,11)" fg:x="420196" fg:w="406"/><text x="88.3887%" y="447.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (421 samples, 0.09%)</title><rect x="88.1372%" y="453" width="0.0883%" height="15" fill="rgb(248,183,6)" fg:x="420189" fg:w="421"/><text x="88.3872%" y="463.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (512 samples, 0.11%)</title><rect x="88.1190%" y="485" width="0.1074%" height="15" fill="rgb(211,204,50)" fg:x="420102" fg:w="512"/><text x="88.3690%" y="495.50"></text></g><g><title>parsed::parser::before::{{closure}} (503 samples, 0.11%)</title><rect x="88.1209%" y="469" width="0.1055%" height="15" fill="rgb(252,55,47)" fg:x="420111" fg:w="503"/><text x="88.3709%" y="479.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (521 samples, 0.11%)</title><rect x="88.1182%" y="501" width="0.1093%" height="15" fill="rgb(240,198,32)" fg:x="420098" fg:w="521"/><text x="88.3682%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (77 samples, 0.02%)</title><rect x="88.2375%" y="437" width="0.0162%" height="15" fill="rgb(224,203,19)" fg:x="420667" fg:w="77"/><text x="88.4875%" y="447.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,868 samples, 0.39%)</title><rect x="87.8620%" y="597" width="0.3918%" height="15" fill="rgb(205,27,16)" fg:x="418877" fg:w="1868"/><text x="88.1120%" y="607.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,538 samples, 0.32%)</title><rect x="87.9313%" y="581" width="0.3226%" height="15" fill="rgb(224,226,17)" fg:x="419207" fg:w="1538"/><text x="88.1813%" y="591.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,538 samples, 0.32%)</title><rect x="87.9313%" y="565" width="0.3226%" height="15" fill="rgb(205,216,54)" fg:x="419207" fg:w="1538"/><text x="88.1813%" y="575.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (1,101 samples, 0.23%)</title><rect x="88.0229%" y="549" width="0.2309%" height="15" fill="rgb(248,168,46)" fg:x="419644" fg:w="1101"/><text x="88.2729%" y="559.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,101 samples, 0.23%)</title><rect x="88.0229%" y="533" width="0.2309%" height="15" fill="rgb(226,111,45)" fg:x="419644" fg:w="1101"/><text x="88.2729%" y="543.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (647 samples, 0.14%)</title><rect x="88.1182%" y="517" width="0.1357%" height="15" fill="rgb(231,15,9)" fg:x="420098" fg:w="647"/><text x="88.3682%" y="527.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (126 samples, 0.03%)</title><rect x="88.2274%" y="501" width="0.0264%" height="15" fill="rgb(243,168,3)" fg:x="420619" fg:w="126"/><text x="88.4774%" y="511.50"></text></g><g><title>parsed::http::as_string (82 samples, 0.02%)</title><rect x="88.2367%" y="485" width="0.0172%" height="15" fill="rgb(221,220,54)" fg:x="420663" fg:w="82"/><text x="88.4867%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (82 samples, 0.02%)</title><rect x="88.2367%" y="469" width="0.0172%" height="15" fill="rgb(232,174,38)" fg:x="420663" fg:w="82"/><text x="88.4867%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (80 samples, 0.02%)</title><rect x="88.2371%" y="453" width="0.0168%" height="15" fill="rgb(205,14,38)" fg:x="420665" fg:w="80"/><text x="88.4871%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (48 samples, 0.01%)</title><rect x="88.2671%" y="469" width="0.0101%" height="15" fill="rgb(234,89,19)" fg:x="420808" fg:w="48"/><text x="88.5171%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (48 samples, 0.01%)</title><rect x="88.2671%" y="453" width="0.0101%" height="15" fill="rgb(216,68,51)" fg:x="420808" fg:w="48"/><text x="88.5171%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (48 samples, 0.01%)</title><rect x="88.2671%" y="437" width="0.0101%" height="15" fill="rgb(213,49,2)" fg:x="420808" fg:w="48"/><text x="88.5171%" y="447.50"></text></g><g><title>alloc::string::String::push (48 samples, 0.01%)</title><rect x="88.2671%" y="421" width="0.0101%" height="15" fill="rgb(242,146,30)" fg:x="420808" fg:w="48"/><text x="88.5171%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (58 samples, 0.01%)</title><rect x="88.2652%" y="501" width="0.0122%" height="15" fill="rgb(224,188,11)" fg:x="420799" fg:w="58"/><text x="88.5152%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (57 samples, 0.01%)</title><rect x="88.2654%" y="485" width="0.0120%" height="15" fill="rgb(213,159,11)" fg:x="420800" fg:w="57"/><text x="88.5154%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (126 samples, 0.03%)</title><rect x="88.2574%" y="533" width="0.0264%" height="15" fill="rgb(229,13,31)" fg:x="420762" fg:w="126"/><text x="88.5074%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (89 samples, 0.02%)</title><rect x="88.2652%" y="517" width="0.0187%" height="15" fill="rgb(209,103,11)" fg:x="420799" fg:w="89"/><text x="88.5152%" y="527.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (2,013 samples, 0.42%)</title><rect x="87.8618%" y="613" width="0.4222%" height="15" fill="rgb(206,3,4)" fg:x="418876" fg:w="2013"/><text x="88.1118%" y="623.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (144 samples, 0.03%)</title><rect x="88.2539%" y="597" width="0.0302%" height="15" fill="rgb(252,10,49)" fg:x="420745" fg:w="144"/><text x="88.5039%" y="607.50"></text></g><g><title>parsed::http::as_string (131 samples, 0.03%)</title><rect x="88.2566%" y="581" width="0.0275%" height="15" fill="rgb(217,160,32)" fg:x="420758" fg:w="131"/><text x="88.5066%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (131 samples, 0.03%)</title><rect x="88.2566%" y="565" width="0.0275%" height="15" fill="rgb(249,196,0)" fg:x="420758" fg:w="131"/><text x="88.5066%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (130 samples, 0.03%)</title><rect x="88.2568%" y="549" width="0.0273%" height="15" fill="rgb(213,17,48)" fg:x="420759" fg:w="130"/><text x="88.5068%" y="559.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (3,308 samples, 0.69%)</title><rect x="87.5904%" y="629" width="0.6939%" height="15" fill="rgb(206,42,46)" fg:x="417582" fg:w="3308"/><text x="87.8404%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (3,351 samples, 0.70%)</title><rect x="87.5904%" y="645" width="0.7029%" height="15" fill="rgb(212,105,24)" fg:x="417582" fg:w="3351"/><text x="87.8404%" y="655.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (57 samples, 0.01%)</title><rect x="88.2973%" y="629" width="0.0120%" height="15" fill="rgb(243,216,30)" fg:x="420952" fg:w="57"/><text x="88.5473%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (57 samples, 0.01%)</title><rect x="88.2973%" y="613" width="0.0120%" height="15" fill="rgb(207,121,3)" fg:x="420952" fg:w="57"/><text x="88.5473%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (49 samples, 0.01%)</title><rect x="88.3113%" y="517" width="0.0103%" height="15" fill="rgb(249,78,0)" fg:x="421019" fg:w="49"/><text x="88.5613%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (49 samples, 0.01%)</title><rect x="88.3113%" y="501" width="0.0103%" height="15" fill="rgb(244,151,32)" fg:x="421019" fg:w="49"/><text x="88.5613%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.01%)</title><rect x="88.3107%" y="613" width="0.0115%" height="15" fill="rgb(228,63,25)" fg:x="421016" fg:w="55"/><text x="88.5607%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (52 samples, 0.01%)</title><rect x="88.3113%" y="597" width="0.0109%" height="15" fill="rgb(231,158,23)" fg:x="421019" fg:w="52"/><text x="88.5613%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (52 samples, 0.01%)</title><rect x="88.3113%" y="581" width="0.0109%" height="15" fill="rgb(248,107,23)" fg:x="421019" fg:w="52"/><text x="88.5613%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (52 samples, 0.01%)</title><rect x="88.3113%" y="565" width="0.0109%" height="15" fill="rgb(215,168,21)" fg:x="421019" fg:w="52"/><text x="88.5613%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (52 samples, 0.01%)</title><rect x="88.3113%" y="549" width="0.0109%" height="15" fill="rgb(227,83,22)" fg:x="421019" fg:w="52"/><text x="88.5613%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.01%)</title><rect x="88.3113%" y="533" width="0.0109%" height="15" fill="rgb(217,118,43)" fg:x="421019" fg:w="52"/><text x="88.5613%" y="543.50"></text></g><g><title>&lt;parsed::matcher::Map&lt;M,T,F&gt; as parsed::matcher::Matcher&lt;U&gt;&gt;::do_match (3,528 samples, 0.74%)</title><rect x="87.5877%" y="661" width="0.7400%" height="15" fill="rgb(229,220,41)" fg:x="417569" fg:w="3528"/><text x="87.8377%" y="671.50"></text></g><g><title>parsed::http::header_parser::{{closure}} (164 samples, 0.03%)</title><rect x="88.2933%" y="645" width="0.0344%" height="15" fill="rgb(254,146,46)" fg:x="420933" fg:w="164"/><text x="88.5433%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (81 samples, 0.02%)</title><rect x="88.3107%" y="629" width="0.0170%" height="15" fill="rgb(233,208,31)" fg:x="421016" fg:w="81"/><text x="88.5607%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (49 samples, 0.01%)</title><rect x="88.3277%" y="645" width="0.0103%" height="15" fill="rgb(222,162,7)" fg:x="421097" fg:w="49"/><text x="88.5777%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (48 samples, 0.01%)</title><rect x="88.3279%" y="629" width="0.0101%" height="15" fill="rgb(230,117,45)" fg:x="421098" fg:w="48"/><text x="88.5779%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (53 samples, 0.01%)</title><rect x="88.3277%" y="661" width="0.0111%" height="15" fill="rgb(239,163,6)" fg:x="421097" fg:w="53"/><text x="88.5777%" y="671.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (3,636 samples, 0.76%)</title><rect x="87.5829%" y="693" width="0.7627%" height="15" fill="rgb(246,130,17)" fg:x="417546" fg:w="3636"/><text x="87.8329%" y="703.50"></text></g><g><title>parsed::parser::repeat::{{closure}} (3,626 samples, 0.76%)</title><rect x="87.5850%" y="677" width="0.7606%" height="15" fill="rgb(216,84,5)" fg:x="417556" fg:w="3626"/><text x="87.8350%" y="687.50"></text></g><g><title>__libc_malloc (92 samples, 0.02%)</title><rect x="88.3713%" y="453" width="0.0193%" height="15" fill="rgb(230,200,21)" fg:x="421305" fg:w="92"/><text x="88.6213%" y="463.50"></text></g><g><title>alloc::string::String::with_capacity (102 samples, 0.02%)</title><rect x="88.3705%" y="581" width="0.0214%" height="15" fill="rgb(224,2,8)" fg:x="421301" fg:w="102"/><text x="88.6205%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (100 samples, 0.02%)</title><rect x="88.3709%" y="565" width="0.0210%" height="15" fill="rgb(238,178,10)" fg:x="421303" fg:w="100"/><text x="88.6209%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (100 samples, 0.02%)</title><rect x="88.3709%" y="549" width="0.0210%" height="15" fill="rgb(242,153,24)" fg:x="421303" fg:w="100"/><text x="88.6209%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (100 samples, 0.02%)</title><rect x="88.3709%" y="533" width="0.0210%" height="15" fill="rgb(242,32,48)" fg:x="421303" fg:w="100"/><text x="88.6209%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (100 samples, 0.02%)</title><rect x="88.3709%" y="517" width="0.0210%" height="15" fill="rgb(227,36,0)" fg:x="421303" fg:w="100"/><text x="88.6209%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (98 samples, 0.02%)</title><rect x="88.3713%" y="501" width="0.0206%" height="15" fill="rgb(251,33,35)" fg:x="421305" fg:w="98"/><text x="88.6213%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (98 samples, 0.02%)</title><rect x="88.3713%" y="485" width="0.0206%" height="15" fill="rgb(232,168,51)" fg:x="421305" fg:w="98"/><text x="88.6213%" y="495.50"></text></g><g><title>alloc::alloc::alloc (98 samples, 0.02%)</title><rect x="88.3713%" y="469" width="0.0206%" height="15" fill="rgb(228,56,10)" fg:x="421305" fg:w="98"/><text x="88.6213%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (48 samples, 0.01%)</title><rect x="88.3996%" y="549" width="0.0101%" height="15" fill="rgb(231,10,26)" fg:x="421440" fg:w="48"/><text x="88.6496%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (104 samples, 0.02%)</title><rect x="88.3927%" y="581" width="0.0218%" height="15" fill="rgb(226,202,12)" fg:x="421407" fg:w="104"/><text x="88.6427%" y="591.50"></text></g><g><title>core::fmt::write (103 samples, 0.02%)</title><rect x="88.3929%" y="565" width="0.0216%" height="15" fill="rgb(251,49,21)" fg:x="421408" fg:w="103"/><text x="88.6429%" y="575.50"></text></g><g><title>alloc::fmt::format (221 samples, 0.05%)</title><rect x="88.3686%" y="597" width="0.0464%" height="15" fill="rgb(206,228,28)" fg:x="421292" fg:w="221"/><text x="88.6186%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (141 samples, 0.03%)</title><rect x="88.4515%" y="533" width="0.0296%" height="15" fill="rgb(205,198,31)" fg:x="421687" fg:w="141"/><text x="88.7015%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (88 samples, 0.02%)</title><rect x="88.4626%" y="517" width="0.0185%" height="15" fill="rgb(213,69,1)" fg:x="421740" fg:w="88"/><text x="88.7126%" y="527.50"></text></g><g><title>alloc::string::String::push_str (88 samples, 0.02%)</title><rect x="88.4626%" y="501" width="0.0185%" height="15" fill="rgb(209,177,9)" fg:x="421740" fg:w="88"/><text x="88.7126%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (88 samples, 0.02%)</title><rect x="88.4626%" y="485" width="0.0185%" height="15" fill="rgb(227,119,30)" fg:x="421740" fg:w="88"/><text x="88.7126%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (88 samples, 0.02%)</title><rect x="88.4626%" y="469" width="0.0185%" height="15" fill="rgb(234,106,41)" fg:x="421740" fg:w="88"/><text x="88.7126%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (88 samples, 0.02%)</title><rect x="88.4626%" y="453" width="0.0185%" height="15" fill="rgb(244,103,47)" fg:x="421740" fg:w="88"/><text x="88.7126%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (71 samples, 0.01%)</title><rect x="88.4661%" y="437" width="0.0149%" height="15" fill="rgb(212,211,25)" fg:x="421757" fg:w="71"/><text x="88.7161%" y="447.50"></text></g><g><title>[libc-2.31.so] (66 samples, 0.01%)</title><rect x="88.4672%" y="421" width="0.0138%" height="15" fill="rgb(208,63,53)" fg:x="421762" fg:w="66"/><text x="88.7172%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (72 samples, 0.02%)</title><rect x="88.4886%" y="533" width="0.0151%" height="15" fill="rgb(213,176,21)" fg:x="421864" fg:w="72"/><text x="88.7386%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (67 samples, 0.01%)</title><rect x="88.4896%" y="517" width="0.0141%" height="15" fill="rgb(243,124,12)" fg:x="421869" fg:w="67"/><text x="88.7396%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (294 samples, 0.06%)</title><rect x="88.4443%" y="565" width="0.0617%" height="15" fill="rgb(239,2,35)" fg:x="421653" fg:w="294"/><text x="88.6943%" y="575.50"></text></g><g><title>core::fmt::write (292 samples, 0.06%)</title><rect x="88.4447%" y="549" width="0.0612%" height="15" fill="rgb(253,169,22)" fg:x="421655" fg:w="292"/><text x="88.6947%" y="559.50"></text></g><g><title>alloc::fmt::format (353 samples, 0.07%)</title><rect x="88.4322%" y="581" width="0.0740%" height="15" fill="rgb(254,51,12)" fg:x="421595" fg:w="353"/><text x="88.6822%" y="591.50"></text></g><g><title>[libc-2.31.so] (59 samples, 0.01%)</title><rect x="88.5077%" y="485" width="0.0124%" height="15" fill="rgb(244,17,47)" fg:x="421955" fg:w="59"/><text x="88.7577%" y="495.50"></text></g><g><title>parsed::matcher::MatchError::unexpected (473 samples, 0.10%)</title><rect x="88.4257%" y="597" width="0.0992%" height="15" fill="rgb(251,45,46)" fg:x="421564" fg:w="473"/><text x="88.6757%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (85 samples, 0.02%)</title><rect x="88.5070%" y="581" width="0.0178%" height="15" fill="rgb(223,87,43)" fg:x="421952" fg:w="85"/><text x="88.7570%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (85 samples, 0.02%)</title><rect x="88.5070%" y="565" width="0.0178%" height="15" fill="rgb(230,132,31)" fg:x="421952" fg:w="85"/><text x="88.7570%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (85 samples, 0.02%)</title><rect x="88.5070%" y="549" width="0.0178%" height="15" fill="rgb(206,99,1)" fg:x="421952" fg:w="85"/><text x="88.7570%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (85 samples, 0.02%)</title><rect x="88.5070%" y="533" width="0.0178%" height="15" fill="rgb(227,110,25)" fg:x="421952" fg:w="85"/><text x="88.7570%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (82 samples, 0.02%)</title><rect x="88.5077%" y="517" width="0.0172%" height="15" fill="rgb(217,182,7)" fg:x="421955" fg:w="82"/><text x="88.7577%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (82 samples, 0.02%)</title><rect x="88.5077%" y="501" width="0.0172%" height="15" fill="rgb(250,176,4)" fg:x="421955" fg:w="82"/><text x="88.7577%" y="511.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (898 samples, 0.19%)</title><rect x="88.3575%" y="629" width="0.1884%" height="15" fill="rgb(244,98,30)" fg:x="421239" fg:w="898"/><text x="88.6075%" y="639.50"></text></g><g><title>parsed::parser::single::{{closure}} (890 samples, 0.19%)</title><rect x="88.3592%" y="613" width="0.1867%" height="15" fill="rgb(228,150,42)" fg:x="421247" fg:w="890"/><text x="88.6092%" y="623.50"></text></g><g><title>parsed::stream::ByteStream::next (100 samples, 0.02%)</title><rect x="88.5249%" y="597" width="0.0210%" height="15" fill="rgb(231,91,46)" fg:x="422037" fg:w="100"/><text x="88.7749%" y="607.50"></text></g><g><title>parsed::stream::ByteStream::get (56 samples, 0.01%)</title><rect x="88.5341%" y="581" width="0.0117%" height="15" fill="rgb(252,161,32)" fg:x="422081" fg:w="56"/><text x="88.7841%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (57 samples, 0.01%)</title><rect x="88.5465%" y="629" width="0.0120%" height="15" fill="rgb(236,69,41)" fg:x="422140" fg:w="57"/><text x="88.7965%" y="639.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,058 samples, 0.22%)</title><rect x="88.3527%" y="661" width="0.2219%" height="15" fill="rgb(212,160,3)" fg:x="421216" fg:w="1058"/><text x="88.6027%" y="671.50"></text></g><g><title>parsed::parser::exact::{{closure}} (1,053 samples, 0.22%)</title><rect x="88.3537%" y="645" width="0.2209%" height="15" fill="rgb(216,5,50)" fg:x="421221" fg:w="1053"/><text x="88.6037%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (76 samples, 0.02%)</title><rect x="88.5586%" y="629" width="0.0159%" height="15" fill="rgb(241,138,25)" fg:x="422198" fg:w="76"/><text x="88.8086%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (76 samples, 0.02%)</title><rect x="88.5586%" y="613" width="0.0159%" height="15" fill="rgb(239,42,18)" fg:x="422198" fg:w="76"/><text x="88.8086%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (72 samples, 0.02%)</title><rect x="88.5595%" y="597" width="0.0151%" height="15" fill="rgb(239,40,7)" fg:x="422202" fg:w="72"/><text x="88.8095%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (65 samples, 0.01%)</title><rect x="88.5609%" y="581" width="0.0136%" height="15" fill="rgb(239,11,31)" fg:x="422209" fg:w="65"/><text x="88.8109%" y="591.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (92 samples, 0.02%)</title><rect x="88.6195%" y="533" width="0.0193%" height="15" fill="rgb(224,77,40)" fg:x="422488" fg:w="92"/><text x="88.8695%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (79 samples, 0.02%)</title><rect x="88.6222%" y="517" width="0.0166%" height="15" fill="rgb(226,15,5)" fg:x="422501" fg:w="79"/><text x="88.8722%" y="527.50"></text></g><g><title>alloc::fmt::format (181 samples, 0.04%)</title><rect x="88.6027%" y="581" width="0.0380%" height="15" fill="rgb(254,188,5)" fg:x="422408" fg:w="181"/><text x="88.8527%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (149 samples, 0.03%)</title><rect x="88.6094%" y="565" width="0.0313%" height="15" fill="rgb(241,148,52)" fg:x="422440" fg:w="149"/><text x="88.8594%" y="575.50"></text></g><g><title>core::fmt::write (149 samples, 0.03%)</title><rect x="88.6094%" y="549" width="0.0313%" height="15" fill="rgb(251,48,36)" fg:x="422440" fg:w="149"/><text x="88.8594%" y="559.50"></text></g><g><title>parsed::matcher::MatchError::over_capacity (184 samples, 0.04%)</title><rect x="88.6025%" y="597" width="0.0386%" height="15" fill="rgb(243,83,13)" fg:x="422407" fg:w="184"/><text x="88.8525%" y="607.50"></text></g><g><title>&lt;F as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (269 samples, 0.06%)</title><rect x="88.5867%" y="629" width="0.0564%" height="15" fill="rgb(210,105,0)" fg:x="422332" fg:w="269"/><text x="88.8367%" y="639.50"></text></g><g><title>parsed::parser::before::{{closure}} (262 samples, 0.05%)</title><rect x="88.5882%" y="613" width="0.0550%" height="15" fill="rgb(239,60,36)" fg:x="422339" fg:w="262"/><text x="88.8382%" y="623.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (110 samples, 0.02%)</title><rect x="88.6446%" y="629" width="0.0231%" height="15" fill="rgb(210,20,0)" fg:x="422608" fg:w="110"/><text x="88.8946%" y="639.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (92 samples, 0.02%)</title><rect x="88.6484%" y="613" width="0.0193%" height="15" fill="rgb(244,26,53)" fg:x="422626" fg:w="92"/><text x="88.8984%" y="623.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (425 samples, 0.09%)</title><rect x="88.5823%" y="645" width="0.0891%" height="15" fill="rgb(240,100,49)" fg:x="422311" fg:w="425"/><text x="88.8323%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (87 samples, 0.02%)</title><rect x="88.6738%" y="581" width="0.0182%" height="15" fill="rgb(250,46,45)" fg:x="422747" fg:w="87"/><text x="88.9238%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (56 samples, 0.01%)</title><rect x="88.6803%" y="565" width="0.0117%" height="15" fill="rgb(220,181,29)" fg:x="422778" fg:w="56"/><text x="88.9303%" y="575.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (555 samples, 0.12%)</title><rect x="88.5760%" y="661" width="0.1164%" height="15" fill="rgb(213,137,33)" fg:x="422281" fg:w="555"/><text x="88.8260%" y="671.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (100 samples, 0.02%)</title><rect x="88.6715%" y="645" width="0.0210%" height="15" fill="rgb(213,27,48)" fg:x="422736" fg:w="100"/><text x="88.9215%" y="655.50"></text></g><g><title>parsed::http::as_string (99 samples, 0.02%)</title><rect x="88.6717%" y="629" width="0.0208%" height="15" fill="rgb(245,180,39)" fg:x="422737" fg:w="99"/><text x="88.9217%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (99 samples, 0.02%)</title><rect x="88.6717%" y="613" width="0.0208%" height="15" fill="rgb(212,158,42)" fg:x="422737" fg:w="99"/><text x="88.9217%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (97 samples, 0.02%)</title><rect x="88.6721%" y="597" width="0.0203%" height="15" fill="rgb(228,193,18)" fg:x="422739" fg:w="97"/><text x="88.9221%" y="607.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (1,654 samples, 0.35%)</title><rect x="88.3487%" y="677" width="0.3469%" height="15" fill="rgb(245,172,29)" fg:x="421197" fg:w="1654"/><text x="88.5987%" y="687.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (1,685 samples, 0.35%)</title><rect x="88.3459%" y="693" width="0.3534%" height="15" fill="rgb(207,98,24)" fg:x="421184" fg:w="1685"/><text x="88.5959%" y="703.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (5,410 samples, 1.13%)</title><rect x="87.5713%" y="725" width="1.1348%" height="15" fill="rgb(249,92,26)" fg:x="417491" fg:w="5410"/><text x="87.8213%" y="735.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (5,387 samples, 1.13%)</title><rect x="87.5761%" y="709" width="1.1300%" height="15" fill="rgb(217,176,26)" fg:x="417514" fg:w="5387"/><text x="87.8261%" y="719.50"></text></g><g><title>&lt;parsed::matcher::Chain&lt;M,N&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (6,445 samples, 1.35%)</title><rect x="87.3593%" y="741" width="1.3519%" height="15" fill="rgb(221,8,39)" fg:x="416480" fg:w="6445"/><text x="87.6093%" y="751.50"></text></g><g><title>&lt;parsed::parser::Skip&lt;M,T,U&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (6,492 samples, 1.36%)</title><rect x="87.3565%" y="757" width="1.3617%" height="15" fill="rgb(208,90,18)" fg:x="416467" fg:w="6492"/><text x="87.6065%" y="767.50"></text></g><g><title>&lt;parsed::stream::ByteStream as parsed::parser::Applicator&gt;::apply (6,924 samples, 1.45%)</title><rect x="87.2814%" y="805" width="1.4524%" height="15" fill="rgb(207,202,30)" fg:x="416109" fg:w="6924"/><text x="87.5314%" y="815.50"></text></g><g><title>&lt;parsed::parser::Save&lt;M,T,U,F&gt; as parsed::matcher::Matcher&lt;T&gt;&gt;::do_match (6,924 samples, 1.45%)</title><rect x="87.2814%" y="789" width="1.4524%" height="15" fill="rgb(231,124,22)" fg:x="416109" fg:w="6924"/><text x="87.5314%" y="799.50"></text></g><g><title>&lt;parsed::matcher::Expose&lt;M,F&gt; as parsed::matcher::Matcher&lt;(T,U)&gt;&gt;::do_match (6,880 samples, 1.44%)</title><rect x="87.2907%" y="773" width="1.4431%" height="15" fill="rgb(206,15,5)" fg:x="416153" fg:w="6880"/><text x="87.5407%" y="783.50"></text></g><g><title>parsed::http::request_parser::{{closure}} (64 samples, 0.01%)</title><rect x="88.7204%" y="757" width="0.0134%" height="15" fill="rgb(239,16,52)" fg:x="422969" fg:w="64"/><text x="88.9704%" y="767.50"></text></g><g><title>parsed::http::get_content_length (64 samples, 0.01%)</title><rect x="88.7204%" y="741" width="0.0134%" height="15" fill="rgb(245,213,29)" fg:x="422969" fg:w="64"/><text x="88.9704%" y="751.50"></text></g><g><title>parsed::http::parse_http_request (6,964 samples, 1.46%)</title><rect x="87.2783%" y="821" width="1.4607%" height="15" fill="rgb(213,203,36)" fg:x="416094" fg:w="6964"/><text x="87.5283%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (85 samples, 0.02%)</title><rect x="88.7501%" y="757" width="0.0178%" height="15" fill="rgb(209,55,18)" fg:x="423111" fg:w="85"/><text x="89.0001%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (85 samples, 0.02%)</title><rect x="88.7501%" y="741" width="0.0178%" height="15" fill="rgb(207,133,49)" fg:x="423111" fg:w="85"/><text x="89.0001%" y="751.50"></text></g><g><title>cfree (73 samples, 0.02%)</title><rect x="88.7527%" y="725" width="0.0153%" height="15" fill="rgb(240,33,46)" fg:x="423123" fg:w="73"/><text x="89.0027%" y="735.50"></text></g><g><title>parsed::stream::ByteStream::pull (139 samples, 0.03%)</title><rect x="88.7390%" y="821" width="0.0292%" height="15" fill="rgb(212,35,2)" fg:x="423058" fg:w="139"/><text x="88.9890%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (88 samples, 0.02%)</title><rect x="88.7497%" y="805" width="0.0185%" height="15" fill="rgb(231,119,28)" fg:x="423109" fg:w="88"/><text x="88.9997%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (88 samples, 0.02%)</title><rect x="88.7497%" y="789" width="0.0185%" height="15" fill="rgb(252,178,7)" fg:x="423109" fg:w="88"/><text x="88.9997%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.02%)</title><rect x="88.7497%" y="773" width="0.0185%" height="15" fill="rgb(251,91,4)" fg:x="423109" fg:w="88"/><text x="88.9997%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.02%)</title><rect x="88.7728%" y="805" width="0.0162%" height="15" fill="rgb(233,122,19)" fg:x="423219" fg:w="77"/><text x="89.0228%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (354 samples, 0.07%)</title><rect x="88.7890%" y="805" width="0.0743%" height="15" fill="rgb(231,208,46)" fg:x="423296" fg:w="354"/><text x="89.0390%" y="815.50"></text></g><g><title>parsed::stream::ByteStream::put (459 samples, 0.10%)</title><rect x="88.7682%" y="821" width="0.0963%" height="15" fill="rgb(243,15,41)" fg:x="423197" fg:w="459"/><text x="89.0182%" y="831.50"></text></g><g><title>__libc_malloc (184 samples, 0.04%)</title><rect x="88.8701%" y="581" width="0.0386%" height="15" fill="rgb(210,32,43)" fg:x="423683" fg:w="184"/><text x="89.1201%" y="591.50"></text></g><g><title>[libc-2.31.so] (57 samples, 0.01%)</title><rect x="88.8968%" y="565" width="0.0120%" height="15" fill="rgb(222,177,15)" fg:x="423810" fg:w="57"/><text x="89.1468%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (203 samples, 0.04%)</title><rect x="88.8693%" y="677" width="0.0426%" height="15" fill="rgb(244,121,34)" fg:x="423679" fg:w="203"/><text x="89.1193%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (203 samples, 0.04%)</title><rect x="88.8693%" y="661" width="0.0426%" height="15" fill="rgb(234,138,4)" fg:x="423679" fg:w="203"/><text x="89.1193%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (203 samples, 0.04%)</title><rect x="88.8693%" y="645" width="0.0426%" height="15" fill="rgb(240,97,48)" fg:x="423679" fg:w="203"/><text x="89.1193%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (203 samples, 0.04%)</title><rect x="88.8693%" y="629" width="0.0426%" height="15" fill="rgb(237,65,54)" fg:x="423679" fg:w="203"/><text x="89.1193%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (203 samples, 0.04%)</title><rect x="88.8693%" y="613" width="0.0426%" height="15" fill="rgb(214,25,24)" fg:x="423679" fg:w="203"/><text x="89.1193%" y="623.50"></text></g><g><title>alloc::alloc::alloc (202 samples, 0.04%)</title><rect x="88.8695%" y="597" width="0.0424%" height="15" fill="rgb(213,5,3)" fg:x="423680" fg:w="202"/><text x="89.1195%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (206 samples, 0.04%)</title><rect x="88.8693%" y="757" width="0.0432%" height="15" fill="rgb(219,81,29)" fg:x="423679" fg:w="206"/><text x="89.1193%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (206 samples, 0.04%)</title><rect x="88.8693%" y="741" width="0.0432%" height="15" fill="rgb(220,43,48)" fg:x="423679" fg:w="206"/><text x="89.1193%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (206 samples, 0.04%)</title><rect x="88.8693%" y="725" width="0.0432%" height="15" fill="rgb(239,157,2)" fg:x="423679" fg:w="206"/><text x="89.1193%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (206 samples, 0.04%)</title><rect x="88.8693%" y="709" width="0.0432%" height="15" fill="rgb(213,104,43)" fg:x="423679" fg:w="206"/><text x="89.1193%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (206 samples, 0.04%)</title><rect x="88.8693%" y="693" width="0.0432%" height="15" fill="rgb(237,84,9)" fg:x="423679" fg:w="206"/><text x="89.1193%" y="703.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (213 samples, 0.04%)</title><rect x="88.8693%" y="805" width="0.0447%" height="15" fill="rgb(252,6,33)" fg:x="423679" fg:w="213"/><text x="89.1193%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (213 samples, 0.04%)</title><rect x="88.8693%" y="789" width="0.0447%" height="15" fill="rgb(251,172,22)" fg:x="423679" fg:w="213"/><text x="89.1193%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (213 samples, 0.04%)</title><rect x="88.8693%" y="773" width="0.0447%" height="15" fill="rgb(244,91,53)" fg:x="423679" fg:w="213"/><text x="89.1193%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (57 samples, 0.01%)</title><rect x="88.9326%" y="741" width="0.0120%" height="15" fill="rgb(219,29,30)" fg:x="423981" fg:w="57"/><text x="89.1826%" y="751.50"></text></g><g><title>alloc::string::String::push_str (52 samples, 0.01%)</title><rect x="88.9337%" y="725" width="0.0109%" height="15" fill="rgb(213,3,15)" fg:x="423986" fg:w="52"/><text x="89.1837%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (52 samples, 0.01%)</title><rect x="88.9337%" y="709" width="0.0109%" height="15" fill="rgb(208,25,28)" fg:x="423986" fg:w="52"/><text x="89.1837%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (52 samples, 0.01%)</title><rect x="88.9337%" y="693" width="0.0109%" height="15" fill="rgb(252,144,25)" fg:x="423986" fg:w="52"/><text x="89.1837%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (52 samples, 0.01%)</title><rect x="88.9337%" y="677" width="0.0109%" height="15" fill="rgb(226,220,25)" fg:x="423986" fg:w="52"/><text x="89.1837%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad_integral (83 samples, 0.02%)</title><rect x="88.9838%" y="645" width="0.0174%" height="15" fill="rgb(212,131,28)" fg:x="424225" fg:w="83"/><text x="89.2338%" y="655.50"></text></g><g><title>core::fmt::run (146 samples, 0.03%)</title><rect x="88.9708%" y="693" width="0.0306%" height="15" fill="rgb(219,143,52)" fg:x="424163" fg:w="146"/><text x="89.2208%" y="703.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (103 samples, 0.02%)</title><rect x="88.9798%" y="677" width="0.0216%" height="15" fill="rgb(215,56,7)" fg:x="424206" fg:w="103"/><text x="89.2298%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (92 samples, 0.02%)</title><rect x="88.9821%" y="661" width="0.0193%" height="15" fill="rgb(239,59,51)" fg:x="424217" fg:w="92"/><text x="89.2321%" y="671.50"></text></g><g><title>chrono::format::format_inner::write_local_minus_utc (194 samples, 0.04%)</title><rect x="88.9618%" y="725" width="0.0407%" height="15" fill="rgb(209,215,4)" fg:x="424120" fg:w="194"/><text x="89.2118%" y="735.50"></text></g><g><title>core::fmt::write (166 samples, 0.03%)</title><rect x="88.9677%" y="709" width="0.0348%" height="15" fill="rgb(221,118,39)" fg:x="424148" fg:w="166"/><text x="89.2177%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (130 samples, 0.03%)</title><rect x="89.0188%" y="517" width="0.0273%" height="15" fill="rgb(236,6,44)" fg:x="424392" fg:w="130"/><text x="89.2688%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (130 samples, 0.03%)</title><rect x="89.0188%" y="501" width="0.0273%" height="15" fill="rgb(216,122,9)" fg:x="424392" fg:w="130"/><text x="89.2688%" y="511.50"></text></g><g><title>alloc::alloc::realloc (130 samples, 0.03%)</title><rect x="89.0188%" y="485" width="0.0273%" height="15" fill="rgb(244,134,42)" fg:x="424392" fg:w="130"/><text x="89.2688%" y="495.50"></text></g><g><title>realloc (128 samples, 0.03%)</title><rect x="89.0193%" y="469" width="0.0268%" height="15" fill="rgb(209,189,35)" fg:x="424394" fg:w="128"/><text x="89.2693%" y="479.50"></text></g><g><title>[libc-2.31.so] (85 samples, 0.02%)</title><rect x="89.0283%" y="453" width="0.0178%" height="15" fill="rgb(250,47,36)" fg:x="424437" fg:w="85"/><text x="89.2783%" y="463.50"></text></g><g><title>[libc-2.31.so] (70 samples, 0.01%)</title><rect x="89.0314%" y="437" width="0.0147%" height="15" fill="rgb(252,112,4)" fg:x="424452" fg:w="70"/><text x="89.2814%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 samples, 0.03%)</title><rect x="89.0182%" y="533" width="0.0281%" height="15" fill="rgb(221,79,51)" fg:x="424389" fg:w="134"/><text x="89.2682%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (154 samples, 0.03%)</title><rect x="89.0149%" y="597" width="0.0323%" height="15" fill="rgb(232,65,53)" fg:x="424373" fg:w="154"/><text x="89.2649%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (150 samples, 0.03%)</title><rect x="89.0157%" y="581" width="0.0315%" height="15" fill="rgb(211,37,7)" fg:x="424377" fg:w="150"/><text x="89.2657%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (142 samples, 0.03%)</title><rect x="89.0174%" y="565" width="0.0298%" height="15" fill="rgb(234,221,18)" fg:x="424385" fg:w="142"/><text x="89.2674%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (142 samples, 0.03%)</title><rect x="89.0174%" y="549" width="0.0298%" height="15" fill="rgb(220,158,26)" fg:x="424385" fg:w="142"/><text x="89.2674%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (214 samples, 0.04%)</title><rect x="89.0098%" y="693" width="0.0449%" height="15" fill="rgb(220,70,6)" fg:x="424349" fg:w="214"/><text x="89.2598%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (191 samples, 0.04%)</title><rect x="89.0146%" y="677" width="0.0401%" height="15" fill="rgb(250,39,48)" fg:x="424372" fg:w="191"/><text x="89.2646%" y="687.50"></text></g><g><title>alloc::string::String::push_str (191 samples, 0.04%)</title><rect x="89.0146%" y="661" width="0.0401%" height="15" fill="rgb(206,40,27)" fg:x="424372" fg:w="191"/><text x="89.2646%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (191 samples, 0.04%)</title><rect x="89.0146%" y="645" width="0.0401%" height="15" fill="rgb(247,80,36)" fg:x="424372" fg:w="191"/><text x="89.2646%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (191 samples, 0.04%)</title><rect x="89.0146%" y="629" width="0.0401%" height="15" fill="rgb(222,9,20)" fg:x="424372" fg:w="191"/><text x="89.2646%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (191 samples, 0.04%)</title><rect x="89.0146%" y="613" width="0.0401%" height="15" fill="rgb(217,26,45)" fg:x="424372" fg:w="191"/><text x="89.2646%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (102 samples, 0.02%)</title><rect x="89.0843%" y="501" width="0.0214%" height="15" fill="rgb(221,67,14)" fg:x="424704" fg:w="102"/><text x="89.3343%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (102 samples, 0.02%)</title><rect x="89.0843%" y="485" width="0.0214%" height="15" fill="rgb(248,100,24)" fg:x="424704" fg:w="102"/><text x="89.3343%" y="495.50"></text></g><g><title>alloc::alloc::realloc (102 samples, 0.02%)</title><rect x="89.0843%" y="469" width="0.0214%" height="15" fill="rgb(230,187,16)" fg:x="424704" fg:w="102"/><text x="89.3343%" y="479.50"></text></g><g><title>realloc (83 samples, 0.02%)</title><rect x="89.0883%" y="453" width="0.0174%" height="15" fill="rgb(205,108,13)" fg:x="424723" fg:w="83"/><text x="89.3383%" y="463.50"></text></g><g><title>__libc_malloc (149 samples, 0.03%)</title><rect x="89.1057%" y="501" width="0.0313%" height="15" fill="rgb(235,71,51)" fg:x="424806" fg:w="149"/><text x="89.3557%" y="511.50"></text></g><g><title>[libc-2.31.so] (105 samples, 0.02%)</title><rect x="89.1149%" y="485" width="0.0220%" height="15" fill="rgb(251,172,48)" fg:x="424850" fg:w="105"/><text x="89.3649%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (274 samples, 0.06%)</title><rect x="89.0816%" y="517" width="0.0575%" height="15" fill="rgb(240,96,49)" fg:x="424691" fg:w="274"/><text x="89.3316%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (304 samples, 0.06%)</title><rect x="89.0774%" y="581" width="0.0638%" height="15" fill="rgb(235,46,36)" fg:x="424671" fg:w="304"/><text x="89.3274%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (303 samples, 0.06%)</title><rect x="89.0776%" y="565" width="0.0636%" height="15" fill="rgb(244,3,49)" fg:x="424672" fg:w="303"/><text x="89.3276%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (297 samples, 0.06%)</title><rect x="89.0788%" y="549" width="0.0623%" height="15" fill="rgb(206,78,54)" fg:x="424678" fg:w="297"/><text x="89.3288%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (296 samples, 0.06%)</title><rect x="89.0790%" y="533" width="0.0621%" height="15" fill="rgb(208,85,42)" fg:x="424679" fg:w="296"/><text x="89.3290%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (329 samples, 0.07%)</title><rect x="89.0763%" y="677" width="0.0690%" height="15" fill="rgb(219,196,21)" fg:x="424666" fg:w="329"/><text x="89.3263%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (326 samples, 0.07%)</title><rect x="89.0769%" y="661" width="0.0684%" height="15" fill="rgb(238,19,9)" fg:x="424669" fg:w="326"/><text x="89.3269%" y="671.50"></text></g><g><title>alloc::string::String::push_str (326 samples, 0.07%)</title><rect x="89.0769%" y="645" width="0.0684%" height="15" fill="rgb(206,86,13)" fg:x="424669" fg:w="326"/><text x="89.3269%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (326 samples, 0.07%)</title><rect x="89.0769%" y="629" width="0.0684%" height="15" fill="rgb(214,123,40)" fg:x="424669" fg:w="326"/><text x="89.3269%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (326 samples, 0.07%)</title><rect x="89.0769%" y="613" width="0.0684%" height="15" fill="rgb(243,53,5)" fg:x="424669" fg:w="326"/><text x="89.3269%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (326 samples, 0.07%)</title><rect x="89.0769%" y="597" width="0.0684%" height="15" fill="rgb(254,186,31)" fg:x="424669" fg:w="326"/><text x="89.3269%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (62 samples, 0.01%)</title><rect x="89.1499%" y="677" width="0.0130%" height="15" fill="rgb(221,216,25)" fg:x="425017" fg:w="62"/><text x="89.3999%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (57 samples, 0.01%)</title><rect x="89.1510%" y="661" width="0.0120%" height="15" fill="rgb(248,107,42)" fg:x="425022" fg:w="57"/><text x="89.4010%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad_integral (148 samples, 0.03%)</title><rect x="89.1755%" y="645" width="0.0310%" height="15" fill="rgb(221,85,43)" fg:x="425139" fg:w="148"/><text x="89.4255%" y="655.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (218 samples, 0.05%)</title><rect x="89.1629%" y="677" width="0.0457%" height="15" fill="rgb(225,34,24)" fg:x="425079" fg:w="218"/><text x="89.4129%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (204 samples, 0.04%)</title><rect x="89.1659%" y="661" width="0.0428%" height="15" fill="rgb(211,119,1)" fg:x="425093" fg:w="204"/><text x="89.4159%" y="671.50"></text></g><g><title>core::fmt::run (727 samples, 0.15%)</title><rect x="89.0564%" y="693" width="0.1525%" height="15" fill="rgb(254,216,46)" fg:x="424571" fg:w="727"/><text x="89.3064%" y="703.50"></text></g><g><title>chrono::format::format_inner (1,262 samples, 0.26%)</title><rect x="88.9463%" y="741" width="0.2647%" height="15" fill="rgb(238,11,38)" fg:x="424046" fg:w="1262"/><text x="89.1963%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (994 samples, 0.21%)</title><rect x="89.0025%" y="725" width="0.2085%" height="15" fill="rgb(233,50,15)" fg:x="424314" fg:w="994"/><text x="89.2525%" y="735.50"></text></g><g><title>core::fmt::write (990 samples, 0.21%)</title><rect x="89.0033%" y="709" width="0.2077%" height="15" fill="rgb(217,181,29)" fg:x="424318" fg:w="990"/><text x="89.2533%" y="719.50"></text></g><g><title>chrono::format::format (1,375 samples, 0.29%)</title><rect x="88.9316%" y="757" width="0.2884%" height="15" fill="rgb(214,56,3)" fg:x="423976" fg:w="1375"/><text x="89.1816%" y="767.50"></text></g><g><title>&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (1,389 samples, 0.29%)</title><rect x="88.9291%" y="773" width="0.2914%" height="15" fill="rgb(230,69,45)" fg:x="423964" fg:w="1389"/><text x="89.1791%" y="783.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,402 samples, 0.29%)</title><rect x="88.9291%" y="789" width="0.2941%" height="15" fill="rgb(224,201,50)" fg:x="423964" fg:w="1402"/><text x="89.1791%" y="799.50"></text></g><g><title>chrono::naive::date::NaiveDate::checked_add_signed (48 samples, 0.01%)</title><rect x="89.2290%" y="693" width="0.0101%" height="15" fill="rgb(217,228,18)" fg:x="425394" fg:w="48"/><text x="89.4790%" y="703.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (112 samples, 0.02%)</title><rect x="89.2255%" y="709" width="0.0235%" height="15" fill="rgb(239,33,44)" fg:x="425377" fg:w="112"/><text x="89.4755%" y="719.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (118 samples, 0.02%)</title><rect x="89.2246%" y="725" width="0.0248%" height="15" fill="rgb(248,210,23)" fg:x="425373" fg:w="118"/><text x="89.4746%" y="735.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::naive_local (125 samples, 0.03%)</title><rect x="89.2238%" y="773" width="0.0262%" height="15" fill="rgb(253,135,8)" fg:x="425369" fg:w="125"/><text x="89.4738%" y="783.50"></text></g><g><title>chrono::offset::fixed::&lt;impl core::ops::arith::Add&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::add (121 samples, 0.03%)</title><rect x="89.2246%" y="757" width="0.0254%" height="15" fill="rgb(217,98,21)" fg:x="425373" fg:w="121"/><text x="89.4746%" y="767.50"></text></g><g><title>chrono::offset::fixed::add_with_leapsecond (121 samples, 0.03%)</title><rect x="89.2246%" y="741" width="0.0254%" height="15" fill="rgb(253,130,21)" fg:x="425373" fg:w="121"/><text x="89.4746%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (68 samples, 0.01%)</title><rect x="89.2674%" y="549" width="0.0143%" height="15" fill="rgb(207,81,54)" fg:x="425577" fg:w="68"/><text x="89.5174%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (80 samples, 0.02%)</title><rect x="89.2664%" y="613" width="0.0168%" height="15" fill="rgb(232,48,33)" fg:x="425572" fg:w="80"/><text x="89.5164%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (80 samples, 0.02%)</title><rect x="89.2664%" y="597" width="0.0168%" height="15" fill="rgb(211,9,35)" fg:x="425572" fg:w="80"/><text x="89.5164%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (80 samples, 0.02%)</title><rect x="89.2664%" y="581" width="0.0168%" height="15" fill="rgb(205,152,21)" fg:x="425572" fg:w="80"/><text x="89.5164%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (79 samples, 0.02%)</title><rect x="89.2666%" y="565" width="0.0166%" height="15" fill="rgb(249,21,27)" fg:x="425573" fg:w="79"/><text x="89.5166%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (111 samples, 0.02%)</title><rect x="89.2647%" y="693" width="0.0233%" height="15" fill="rgb(252,29,24)" fg:x="425564" fg:w="111"/><text x="89.5147%" y="703.50"></text></g><g><title>alloc::string::String::push_str (106 samples, 0.02%)</title><rect x="89.2657%" y="677" width="0.0222%" height="15" fill="rgb(230,130,50)" fg:x="425569" fg:w="106"/><text x="89.5157%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (106 samples, 0.02%)</title><rect x="89.2657%" y="661" width="0.0222%" height="15" fill="rgb(239,144,14)" fg:x="425569" fg:w="106"/><text x="89.5157%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (106 samples, 0.02%)</title><rect x="89.2657%" y="645" width="0.0222%" height="15" fill="rgb(227,111,50)" fg:x="425569" fg:w="106"/><text x="89.5157%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (106 samples, 0.02%)</title><rect x="89.2657%" y="629" width="0.0222%" height="15" fill="rgb(254,84,20)" fg:x="425569" fg:w="106"/><text x="89.5157%" y="639.50"></text></g><g><title>&lt;chrono::offset::utc::Utc as core::fmt::Display&gt;::fmt (173 samples, 0.04%)</title><rect x="89.2531%" y="741" width="0.0363%" height="15" fill="rgb(232,90,48)" fg:x="425509" fg:w="173"/><text x="89.5031%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (165 samples, 0.03%)</title><rect x="89.2548%" y="725" width="0.0346%" height="15" fill="rgb(253,63,47)" fg:x="425517" fg:w="165"/><text x="89.5048%" y="735.50"></text></g><g><title>core::fmt::write (148 samples, 0.03%)</title><rect x="89.2584%" y="709" width="0.0310%" height="15" fill="rgb(251,146,35)" fg:x="425534" fg:w="148"/><text x="89.5084%" y="719.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (181 samples, 0.04%)</title><rect x="89.2531%" y="757" width="0.0380%" height="15" fill="rgb(229,192,35)" fg:x="425509" fg:w="181"/><text x="89.5031%" y="767.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::format_with_items (326 samples, 0.07%)</title><rect x="89.2231%" y="789" width="0.0684%" height="15" fill="rgb(225,68,9)" fg:x="425366" fg:w="326"/><text x="89.4731%" y="799.50"></text></g><g><title>chrono::format::DelayedFormat&lt;I&gt;::new_with_offset (198 samples, 0.04%)</title><rect x="89.2500%" y="773" width="0.0415%" height="15" fill="rgb(214,97,34)" fg:x="425494" fg:w="198"/><text x="89.5000%" y="783.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::to_rfc2822 (1,765 samples, 0.37%)</title><rect x="88.9261%" y="805" width="0.3702%" height="15" fill="rgb(253,31,26)" fg:x="423950" fg:w="1765"/><text x="89.1761%" y="815.50"></text></g><g><title>chrono::offset::utc::Utc::now (261 samples, 0.05%)</title><rect x="89.2964%" y="805" width="0.0547%" height="15" fill="rgb(225,151,47)" fg:x="425715" fg:w="261"/><text x="89.5464%" y="815.50"></text></g><g><title>std::time::SystemTime::now (183 samples, 0.04%)</title><rect x="89.3127%" y="789" width="0.0384%" height="15" fill="rgb(206,185,9)" fg:x="425793" fg:w="183"/><text x="89.5627%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (183 samples, 0.04%)</title><rect x="89.3127%" y="773" width="0.0384%" height="15" fill="rgb(249,65,17)" fg:x="425793" fg:w="183"/><text x="89.5627%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::now (183 samples, 0.04%)</title><rect x="89.3127%" y="757" width="0.0384%" height="15" fill="rgb(220,110,10)" fg:x="425793" fg:w="183"/><text x="89.5627%" y="767.50"></text></g><g><title>__clock_gettime (165 samples, 0.03%)</title><rect x="89.3165%" y="741" width="0.0346%" height="15" fill="rgb(222,198,49)" fg:x="425811" fg:w="165"/><text x="89.5665%" y="751.50"></text></g><g><title>__vdso_clock_gettime (124 samples, 0.03%)</title><rect x="89.3251%" y="725" width="0.0260%" height="15" fill="rgb(239,81,13)" fg:x="425852" fg:w="124"/><text x="89.5751%" y="735.50"></text></g><g><title>[[vdso]] (87 samples, 0.02%)</title><rect x="89.3328%" y="709" width="0.0182%" height="15" fill="rgb(216,128,11)" fg:x="425889" fg:w="87"/><text x="89.5828%" y="719.50"></text></g><g><title>[libc-2.31.so] (64 samples, 0.01%)</title><rect x="89.3524%" y="693" width="0.0134%" height="15" fill="rgb(247,156,8)" fg:x="425982" fg:w="64"/><text x="89.6024%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (112 samples, 0.02%)</title><rect x="89.3524%" y="725" width="0.0235%" height="15" fill="rgb(219,173,1)" fg:x="425982" fg:w="112"/><text x="89.6024%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (112 samples, 0.02%)</title><rect x="89.3524%" y="709" width="0.0235%" height="15" fill="rgb(227,42,24)" fg:x="425982" fg:w="112"/><text x="89.6024%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (114 samples, 0.02%)</title><rect x="89.3521%" y="789" width="0.0239%" height="15" fill="rgb(253,219,50)" fg:x="425981" fg:w="114"/><text x="89.6021%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (114 samples, 0.02%)</title><rect x="89.3521%" y="773" width="0.0239%" height="15" fill="rgb(215,191,54)" fg:x="425981" fg:w="114"/><text x="89.6021%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (114 samples, 0.02%)</title><rect x="89.3521%" y="757" width="0.0239%" height="15" fill="rgb(238,83,12)" fg:x="425981" fg:w="114"/><text x="89.6021%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.02%)</title><rect x="89.3521%" y="741" width="0.0239%" height="15" fill="rgb(205,124,9)" fg:x="425981" fg:w="114"/><text x="89.6021%" y="751.50"></text></g><g><title>[libc-2.31.so] (63 samples, 0.01%)</title><rect x="89.3773%" y="629" width="0.0132%" height="15" fill="rgb(253,174,7)" fg:x="426101" fg:w="63"/><text x="89.6273%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (93 samples, 0.02%)</title><rect x="89.3761%" y="661" width="0.0195%" height="15" fill="rgb(206,134,49)" fg:x="426095" fg:w="93"/><text x="89.6261%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (93 samples, 0.02%)</title><rect x="89.3761%" y="645" width="0.0195%" height="15" fill="rgb(221,89,20)" fg:x="426095" fg:w="93"/><text x="89.6261%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.02%)</title><rect x="89.3761%" y="773" width="0.0197%" height="15" fill="rgb(240,205,13)" fg:x="426095" fg:w="94"/><text x="89.6261%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[parsed::http::Header]&gt; (94 samples, 0.02%)</title><rect x="89.3761%" y="757" width="0.0197%" height="15" fill="rgb(237,174,32)" fg:x="426095" fg:w="94"/><text x="89.6261%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Header&gt; (94 samples, 0.02%)</title><rect x="89.3761%" y="741" width="0.0197%" height="15" fill="rgb(226,12,15)" fg:x="426095" fg:w="94"/><text x="89.6261%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (94 samples, 0.02%)</title><rect x="89.3761%" y="725" width="0.0197%" height="15" fill="rgb(245,160,52)" fg:x="426095" fg:w="94"/><text x="89.6261%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (94 samples, 0.02%)</title><rect x="89.3761%" y="709" width="0.0197%" height="15" fill="rgb(253,80,21)" fg:x="426095" fg:w="94"/><text x="89.6261%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (94 samples, 0.02%)</title><rect x="89.3761%" y="693" width="0.0197%" height="15" fill="rgb(231,225,22)" fg:x="426095" fg:w="94"/><text x="89.6261%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.02%)</title><rect x="89.3761%" y="677" width="0.0197%" height="15" fill="rgb(253,185,12)" fg:x="426095" fg:w="94"/><text x="89.6261%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;parsed::http::Header&gt;&gt; (136 samples, 0.03%)</title><rect x="89.3761%" y="789" width="0.0285%" height="15" fill="rgb(234,197,21)" fg:x="426095" fg:w="136"/><text x="89.6261%" y="799.50"></text></g><g><title>uppercut_mio_server::protocol::process (12,830 samples, 2.69%)</title><rect x="86.7136%" y="837" width="2.6912%" height="15" fill="rgb(210,47,30)" fg:x="413402" fg:w="12830"/><text x="86.9636%" y="847.50">up..</text></g><g><title>uppercut_mio_server::protocol::handle (2,576 samples, 0.54%)</title><rect x="88.8645%" y="821" width="0.5403%" height="15" fill="rgb(246,139,27)" fg:x="423656" fg:w="2576"/><text x="89.1145%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;parsed::http::Request&gt; (256 samples, 0.05%)</title><rect x="89.3511%" y="805" width="0.0537%" height="15" fill="rgb(226,130,16)" fg:x="425976" fg:w="256"/><text x="89.6011%" y="815.50"></text></g><g><title>&lt;uppercut_mio_server::server::Connection as uppercut::api::AnyActor&gt;::receive (24,766 samples, 5.19%)</title><rect x="84.2119%" y="853" width="5.1948%" height="15" fill="rgb(237,208,20)" fg:x="401475" fg:w="24766"/><text x="84.4619%" y="863.50">&lt;upper..</text></g><g><title>__libc_malloc (64 samples, 0.01%)</title><rect x="89.4235%" y="597" width="0.0134%" height="15" fill="rgb(245,186,28)" fg:x="426321" fg:w="64"/><text x="89.6735%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (70 samples, 0.01%)</title><rect x="89.4233%" y="693" width="0.0147%" height="15" fill="rgb(238,105,39)" fg:x="426320" fg:w="70"/><text x="89.6733%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (70 samples, 0.01%)</title><rect x="89.4233%" y="677" width="0.0147%" height="15" fill="rgb(253,228,11)" fg:x="426320" fg:w="70"/><text x="89.6733%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (70 samples, 0.01%)</title><rect x="89.4233%" y="661" width="0.0147%" height="15" fill="rgb(224,136,38)" fg:x="426320" fg:w="70"/><text x="89.6733%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (70 samples, 0.01%)</title><rect x="89.4233%" y="645" width="0.0147%" height="15" fill="rgb(211,3,25)" fg:x="426320" fg:w="70"/><text x="89.6733%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (70 samples, 0.01%)</title><rect x="89.4233%" y="629" width="0.0147%" height="15" fill="rgb(238,66,34)" fg:x="426320" fg:w="70"/><text x="89.6733%" y="639.50"></text></g><g><title>alloc::alloc::alloc (70 samples, 0.01%)</title><rect x="89.4233%" y="613" width="0.0147%" height="15" fill="rgb(223,188,11)" fg:x="426320" fg:w="70"/><text x="89.6733%" y="623.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (82 samples, 0.02%)</title><rect x="89.4233%" y="821" width="0.0172%" height="15" fill="rgb(221,10,35)" fg:x="426320" fg:w="82"/><text x="89.6733%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (82 samples, 0.02%)</title><rect x="89.4233%" y="805" width="0.0172%" height="15" fill="rgb(223,18,44)" fg:x="426320" fg:w="82"/><text x="89.6733%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (82 samples, 0.02%)</title><rect x="89.4233%" y="789" width="0.0172%" height="15" fill="rgb(220,97,41)" fg:x="426320" fg:w="82"/><text x="89.6733%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (82 samples, 0.02%)</title><rect x="89.4233%" y="773" width="0.0172%" height="15" fill="rgb(206,95,45)" fg:x="426320" fg:w="82"/><text x="89.6733%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (82 samples, 0.02%)</title><rect x="89.4233%" y="757" width="0.0172%" height="15" fill="rgb(209,96,13)" fg:x="426320" fg:w="82"/><text x="89.6733%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (82 samples, 0.02%)</title><rect x="89.4233%" y="741" width="0.0172%" height="15" fill="rgb(237,39,34)" fg:x="426320" fg:w="82"/><text x="89.6733%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (82 samples, 0.02%)</title><rect x="89.4233%" y="725" width="0.0172%" height="15" fill="rgb(213,49,47)" fg:x="426320" fg:w="82"/><text x="89.6733%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (82 samples, 0.02%)</title><rect x="89.4233%" y="709" width="0.0172%" height="15" fill="rgb(205,107,27)" fg:x="426320" fg:w="82"/><text x="89.6733%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (91 samples, 0.02%)</title><rect x="89.4665%" y="773" width="0.0191%" height="15" fill="rgb(212,142,9)" fg:x="426526" fg:w="91"/><text x="89.7165%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (75 samples, 0.02%)</title><rect x="89.4698%" y="757" width="0.0157%" height="15" fill="rgb(226,182,0)" fg:x="426542" fg:w="75"/><text x="89.7198%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (75 samples, 0.02%)</title><rect x="89.4698%" y="741" width="0.0157%" height="15" fill="rgb(231,3,53)" fg:x="426542" fg:w="75"/><text x="89.7198%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (75 samples, 0.02%)</title><rect x="89.4698%" y="725" width="0.0157%" height="15" fill="rgb(246,111,28)" fg:x="426542" fg:w="75"/><text x="89.7198%" y="735.50"></text></g><g><title>alloc::alloc::alloc (75 samples, 0.02%)</title><rect x="89.4698%" y="709" width="0.0157%" height="15" fill="rgb(254,183,7)" fg:x="426542" fg:w="75"/><text x="89.7198%" y="719.50"></text></g><g><title>__libc_malloc (75 samples, 0.02%)</title><rect x="89.4698%" y="693" width="0.0157%" height="15" fill="rgb(247,177,28)" fg:x="426542" fg:w="75"/><text x="89.7198%" y="703.50"></text></g><g><title>[libc-2.31.so] (65 samples, 0.01%)</title><rect x="89.4719%" y="677" width="0.0136%" height="15" fill="rgb(244,43,1)" fg:x="426552" fg:w="65"/><text x="89.7219%" y="687.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (219 samples, 0.05%)</title><rect x="89.4461%" y="789" width="0.0459%" height="15" fill="rgb(207,2,35)" fg:x="426429" fg:w="219"/><text x="89.6961%" y="799.50"></text></g><g><title>__sched_yield (56 samples, 0.01%)</title><rect x="89.5139%" y="725" width="0.0117%" height="15" fill="rgb(213,83,22)" fg:x="426752" fg:w="56"/><text x="89.7639%" y="735.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (73 samples, 0.02%)</title><rect x="89.5126%" y="757" width="0.0153%" height="15" fill="rgb(246,212,13)" fg:x="426746" fg:w="73"/><text x="89.7626%" y="767.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (68 samples, 0.01%)</title><rect x="89.5137%" y="741" width="0.0143%" height="15" fill="rgb(213,127,46)" fg:x="426751" fg:w="68"/><text x="89.7637%" y="751.50"></text></g><g><title>futex_wake (150 samples, 0.03%)</title><rect x="89.5420%" y="581" width="0.0315%" height="15" fill="rgb(219,215,39)" fg:x="426886" fg:w="150"/><text x="89.7920%" y="591.50"></text></g><g><title>wake_up_q (126 samples, 0.03%)</title><rect x="89.5470%" y="565" width="0.0264%" height="15" fill="rgb(227,99,17)" fg:x="426910" fg:w="126"/><text x="89.7970%" y="575.50"></text></g><g><title>try_to_wake_up (124 samples, 0.03%)</title><rect x="89.5474%" y="549" width="0.0260%" height="15" fill="rgb(208,155,18)" fg:x="426912" fg:w="124"/><text x="89.7974%" y="559.50"></text></g><g><title>__lock_text_start (123 samples, 0.03%)</title><rect x="89.5476%" y="533" width="0.0258%" height="15" fill="rgb(223,204,38)" fg:x="426913" fg:w="123"/><text x="89.7976%" y="543.50"></text></g><g><title>do_futex (157 samples, 0.03%)</title><rect x="89.5411%" y="597" width="0.0329%" height="15" fill="rgb(212,114,21)" fg:x="426882" fg:w="157"/><text x="89.7911%" y="607.50"></text></g><g><title>__x64_sys_futex (160 samples, 0.03%)</title><rect x="89.5409%" y="613" width="0.0336%" height="15" fill="rgb(250,74,13)" fg:x="426881" fg:w="160"/><text x="89.7909%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (220 samples, 0.05%)</title><rect x="89.5288%" y="741" width="0.0461%" height="15" fill="rgb(234,7,1)" fg:x="426823" fg:w="220"/><text x="89.7788%" y="751.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select::{{closure}} (220 samples, 0.05%)</title><rect x="89.5288%" y="725" width="0.0461%" height="15" fill="rgb(207,138,31)" fg:x="426823" fg:w="220"/><text x="89.7788%" y="735.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (205 samples, 0.04%)</title><rect x="89.5319%" y="709" width="0.0430%" height="15" fill="rgb(215,186,42)" fg:x="426838" fg:w="205"/><text x="89.7819%" y="719.50"></text></g><g><title>std::thread::Thread::unpark (205 samples, 0.04%)</title><rect x="89.5319%" y="693" width="0.0430%" height="15" fill="rgb(229,205,49)" fg:x="426838" fg:w="205"/><text x="89.7819%" y="703.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (205 samples, 0.04%)</title><rect x="89.5319%" y="677" width="0.0430%" height="15" fill="rgb(216,156,32)" fg:x="426838" fg:w="205"/><text x="89.7819%" y="687.50"></text></g><g><title>syscall (204 samples, 0.04%)</title><rect x="89.5321%" y="661" width="0.0428%" height="15" fill="rgb(238,7,21)" fg:x="426839" fg:w="204"/><text x="89.7821%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (176 samples, 0.04%)</title><rect x="89.5380%" y="645" width="0.0369%" height="15" fill="rgb(249,190,22)" fg:x="426867" fg:w="176"/><text x="89.7880%" y="655.50"></text></g><g><title>do_syscall_64 (172 samples, 0.04%)</title><rect x="89.5388%" y="629" width="0.0361%" height="15" fill="rgb(253,51,31)" fg:x="426871" fg:w="172"/><text x="89.7888%" y="639.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (648 samples, 0.14%)</title><rect x="89.4405%" y="821" width="0.1359%" height="15" fill="rgb(237,90,54)" fg:x="426402" fg:w="648"/><text x="89.6905%" y="831.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (632 samples, 0.13%)</title><rect x="89.4438%" y="805" width="0.1326%" height="15" fill="rgb(250,214,33)" fg:x="426418" fg:w="632"/><text x="89.6938%" y="815.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (402 samples, 0.08%)</title><rect x="89.4921%" y="789" width="0.0843%" height="15" fill="rgb(237,10,49)" fg:x="426648" fg:w="402"/><text x="89.7421%" y="799.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (313 samples, 0.07%)</title><rect x="89.5107%" y="773" width="0.0657%" height="15" fill="rgb(241,56,36)" fg:x="426737" fg:w="313"/><text x="89.7607%" y="783.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (227 samples, 0.05%)</title><rect x="89.5288%" y="757" width="0.0476%" height="15" fill="rgb(227,164,12)" fg:x="426823" fg:w="227"/><text x="89.7788%" y="767.50"></text></g><g><title>&lt;uppercut::core::Local as uppercut::api::AnySender&gt;::send (801 samples, 0.17%)</title><rect x="89.4151%" y="837" width="0.1680%" height="15" fill="rgb(249,149,35)" fg:x="426281" fg:w="801"/><text x="89.6651%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (61 samples, 0.01%)</title><rect x="89.5938%" y="661" width="0.0128%" height="15" fill="rgb(238,227,50)" fg:x="427133" fg:w="61"/><text x="89.8438%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (61 samples, 0.01%)</title><rect x="89.5938%" y="645" width="0.0128%" height="15" fill="rgb(235,102,45)" fg:x="427133" fg:w="61"/><text x="89.8438%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (59 samples, 0.01%)</title><rect x="89.5942%" y="629" width="0.0124%" height="15" fill="rgb(211,10,38)" fg:x="427135" fg:w="59"/><text x="89.8442%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (58 samples, 0.01%)</title><rect x="89.5944%" y="613" width="0.0122%" height="15" fill="rgb(219,77,48)" fg:x="427136" fg:w="58"/><text x="89.8444%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (74 samples, 0.02%)</title><rect x="89.5927%" y="757" width="0.0155%" height="15" fill="rgb(246,6,15)" fg:x="427128" fg:w="74"/><text x="89.8427%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (70 samples, 0.01%)</title><rect x="89.5936%" y="741" width="0.0147%" height="15" fill="rgb(207,220,2)" fg:x="427132" fg:w="70"/><text x="89.8436%" y="751.50"></text></g><g><title>alloc::string::String::push_str (70 samples, 0.01%)</title><rect x="89.5936%" y="725" width="0.0147%" height="15" fill="rgb(242,48,14)" fg:x="427132" fg:w="70"/><text x="89.8436%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (70 samples, 0.01%)</title><rect x="89.5936%" y="709" width="0.0147%" height="15" fill="rgb(218,19,27)" fg:x="427132" fg:w="70"/><text x="89.8436%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (70 samples, 0.01%)</title><rect x="89.5936%" y="693" width="0.0147%" height="15" fill="rgb(228,0,35)" fg:x="427132" fg:w="70"/><text x="89.8436%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (70 samples, 0.01%)</title><rect x="89.5936%" y="677" width="0.0147%" height="15" fill="rgb(244,142,54)" fg:x="427132" fg:w="70"/><text x="89.8436%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (123 samples, 0.03%)</title><rect x="89.5902%" y="789" width="0.0258%" height="15" fill="rgb(243,217,40)" fg:x="427116" fg:w="123"/><text x="89.8402%" y="799.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (118 samples, 0.02%)</title><rect x="89.5913%" y="773" width="0.0248%" height="15" fill="rgb(207,114,16)" fg:x="427121" fg:w="118"/><text x="89.8413%" y="783.50"></text></g><g><title>alloc::fmt::format (159 samples, 0.03%)</title><rect x="89.5831%" y="837" width="0.0334%" height="15" fill="rgb(224,33,25)" fg:x="427082" fg:w="159"/><text x="89.8331%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (139 samples, 0.03%)</title><rect x="89.5873%" y="821" width="0.0292%" height="15" fill="rgb(230,93,54)" fg:x="427102" fg:w="139"/><text x="89.8373%" y="831.50"></text></g><g><title>core::fmt::write (138 samples, 0.03%)</title><rect x="89.5875%" y="805" width="0.0289%" height="15" fill="rgb(224,56,24)" fg:x="427103" fg:w="138"/><text x="89.8375%" y="815.50"></text></g><g><title>__fdget (53 samples, 0.01%)</title><rect x="89.6978%" y="725" width="0.0111%" height="15" fill="rgb(235,189,50)" fg:x="427629" fg:w="53"/><text x="89.9478%" y="735.50"></text></g><g><title>__fget_light (53 samples, 0.01%)</title><rect x="89.6978%" y="709" width="0.0111%" height="15" fill="rgb(242,173,8)" fg:x="427629" fg:w="53"/><text x="89.9478%" y="719.50"></text></g><g><title>__fget (53 samples, 0.01%)</title><rect x="89.6978%" y="693" width="0.0111%" height="15" fill="rgb(209,206,10)" fg:x="427629" fg:w="53"/><text x="89.9478%" y="703.50"></text></g><g><title>tcp_poll (68 samples, 0.01%)</title><rect x="89.7884%" y="645" width="0.0143%" height="15" fill="rgb(213,182,44)" fg:x="428061" fg:w="68"/><text x="90.0384%" y="655.50"></text></g><g><title>sock_poll (235 samples, 0.05%)</title><rect x="89.7618%" y="661" width="0.0493%" height="15" fill="rgb(243,51,15)" fg:x="427934" fg:w="235"/><text x="90.0118%" y="671.50"></text></g><g><title>ep_item_poll.isra.0 (326 samples, 0.07%)</title><rect x="89.7450%" y="677" width="0.0684%" height="15" fill="rgb(241,13,14)" fg:x="427854" fg:w="326"/><text x="89.9950%" y="687.50"></text></g><g><title>ep_send_events_proc (416 samples, 0.09%)</title><rect x="89.7303%" y="693" width="0.0873%" height="15" fill="rgb(239,147,24)" fg:x="427784" fg:w="416"/><text x="89.9803%" y="703.50"></text></g><g><title>ep_scan_ready_list.constprop.0 (480 samples, 0.10%)</title><rect x="89.7217%" y="709" width="0.1007%" height="15" fill="rgb(223,129,16)" fg:x="427743" fg:w="480"/><text x="89.9717%" y="719.50"></text></g><g><title>schedule_hrtimeout_range (353 samples, 0.07%)</title><rect x="89.8247%" y="709" width="0.0740%" height="15" fill="rgb(209,169,13)" fg:x="428234" fg:w="353"/><text x="90.0747%" y="719.50"></text></g><g><title>schedule_hrtimeout_range_clock (351 samples, 0.07%)</title><rect x="89.8251%" y="693" width="0.0736%" height="15" fill="rgb(235,159,41)" fg:x="428236" fg:w="351"/><text x="90.0751%" y="703.50"></text></g><g><title>schedule (350 samples, 0.07%)</title><rect x="89.8254%" y="677" width="0.0734%" height="15" fill="rgb(223,219,48)" fg:x="428237" fg:w="350"/><text x="90.0754%" y="687.50"></text></g><g><title>__schedule (349 samples, 0.07%)</title><rect x="89.8256%" y="661" width="0.0732%" height="15" fill="rgb(236,80,13)" fg:x="428238" fg:w="349"/><text x="90.0756%" y="671.50"></text></g><g><title>finish_task_switch (338 samples, 0.07%)</title><rect x="89.8279%" y="645" width="0.0709%" height="15" fill="rgb(213,5,6)" fg:x="428249" fg:w="338"/><text x="90.0779%" y="655.50"></text></g><g><title>ep_poll (892 samples, 0.19%)</title><rect x="89.7119%" y="725" width="0.1871%" height="15" fill="rgb(205,59,21)" fg:x="427696" fg:w="892"/><text x="89.9619%" y="735.50"></text></g><g><title>do_epoll_wait (970 samples, 0.20%)</title><rect x="89.6966%" y="741" width="0.2035%" height="15" fill="rgb(247,137,35)" fg:x="427623" fg:w="970"/><text x="89.9466%" y="751.50"></text></g><g><title>__x64_sys_epoll_wait (983 samples, 0.21%)</title><rect x="89.6953%" y="757" width="0.2062%" height="15" fill="rgb(242,208,28)" fg:x="427617" fg:w="983"/><text x="89.9453%" y="767.50"></text></g><g><title>mio::poll::Poll::poll (1,312 samples, 0.28%)</title><rect x="89.6269%" y="837" width="0.2752%" height="15" fill="rgb(245,62,25)" fg:x="427291" fg:w="1312"/><text x="89.8769%" y="847.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1,310 samples, 0.27%)</title><rect x="89.6273%" y="821" width="0.2748%" height="15" fill="rgb(233,99,54)" fg:x="427293" fg:w="1310"/><text x="89.8773%" y="831.50"></text></g><g><title>epoll_wait (1,283 samples, 0.27%)</title><rect x="89.6330%" y="805" width="0.2691%" height="15" fill="rgb(213,10,37)" fg:x="427320" fg:w="1283"/><text x="89.8830%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,065 samples, 0.22%)</title><rect x="89.6787%" y="789" width="0.2234%" height="15" fill="rgb(235,143,30)" fg:x="427538" fg:w="1065"/><text x="89.9287%" y="799.50"></text></g><g><title>do_syscall_64 (1,051 samples, 0.22%)</title><rect x="89.6817%" y="773" width="0.2205%" height="15" fill="rgb(250,146,33)" fg:x="427552" fg:w="1051"/><text x="89.9317%" y="783.50"></text></g><g><title>__libc_malloc (73 samples, 0.02%)</title><rect x="89.9032%" y="741" width="0.0153%" height="15" fill="rgb(226,198,42)" fg:x="428608" fg:w="73"/><text x="90.1532%" y="751.50"></text></g><g><title>std::panic::catch_unwind (27,215 samples, 5.71%)</title><rect x="84.2106%" y="933" width="5.7085%" height="15" fill="rgb(222,55,6)" fg:x="401469" fg:w="27215"/><text x="84.4606%" y="943.50">std::pa..</text></g><g><title>std::panicking::try (27,215 samples, 5.71%)</title><rect x="84.2106%" y="917" width="5.7085%" height="15" fill="rgb(213,224,31)" fg:x="401469" fg:w="27215"/><text x="84.4606%" y="927.50">std::pa..</text></g><g><title>std::panicking::try::do_call (27,215 samples, 5.71%)</title><rect x="84.2106%" y="901" width="5.7085%" height="15" fill="rgb(226,103,35)" fg:x="401469" fg:w="27215"/><text x="84.4606%" y="911.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27,215 samples, 5.71%)</title><rect x="84.2106%" y="885" width="5.7085%" height="15" fill="rgb(205,66,45)" fg:x="401469" fg:w="27215"/><text x="84.4606%" y="895.50">&lt;core::..</text></g><g><title>uppercut::core::worker_loop::{{closure}} (27,215 samples, 5.71%)</title><rect x="84.2106%" y="869" width="5.7085%" height="15" fill="rgb(226,51,42)" fg:x="401469" fg:w="27215"/><text x="84.4606%" y="879.50">uppercu..</text></g><g><title>&lt;uppercut_mio_server::server::Listener as uppercut::api::AnyActor&gt;::receive (2,443 samples, 0.51%)</title><rect x="89.4067%" y="853" width="0.5124%" height="15" fill="rgb(206,69,1)" fg:x="426241" fg:w="2443"/><text x="89.6567%" y="863.50"></text></g><g><title>uppercut::api::Envelope::of (81 samples, 0.02%)</title><rect x="89.9021%" y="837" width="0.0170%" height="15" fill="rgb(213,228,47)" fg:x="428603" fg:w="81"/><text x="90.1521%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (76 samples, 0.02%)</title><rect x="89.9032%" y="821" width="0.0159%" height="15" fill="rgb(224,204,18)" fg:x="428608" fg:w="76"/><text x="90.1532%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (76 samples, 0.02%)</title><rect x="89.9032%" y="805" width="0.0159%" height="15" fill="rgb(253,187,47)" fg:x="428608" fg:w="76"/><text x="90.1532%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (76 samples, 0.02%)</title><rect x="89.9032%" y="789" width="0.0159%" height="15" fill="rgb(232,61,2)" fg:x="428608" fg:w="76"/><text x="90.1532%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (76 samples, 0.02%)</title><rect x="89.9032%" y="773" width="0.0159%" height="15" fill="rgb(213,132,35)" fg:x="428608" fg:w="76"/><text x="90.1532%" y="783.50"></text></g><g><title>alloc::alloc::alloc (76 samples, 0.02%)</title><rect x="89.9032%" y="757" width="0.0159%" height="15" fill="rgb(247,33,21)" fg:x="428608" fg:w="76"/><text x="90.1532%" y="767.50"></text></g><g><title>worker-5 (72,691 samples, 15.25%)</title><rect x="74.6724%" y="1285" width="15.2474%" height="15" fill="rgb(233,71,46)" fg:x="355996" fg:w="72691"/><text x="74.9224%" y="1295.50">worker-5</text></g><g><title>clone (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1269" width="14.7993%" height="15" fill="rgb(222,173,43)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1279.50">clone</text></g><g><title>start_thread (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1253" width="14.7993%" height="15" fill="rgb(249,218,47)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1263.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1237" width="14.7993%" height="15" fill="rgb(254,185,48)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1247.50">std::sys::unix::thread:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1221" width="14.7993%" height="15" fill="rgb(252,165,50)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1231.50">&lt;alloc::boxed::Box&lt;F,A&gt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1205" width="14.7993%" height="15" fill="rgb(206,219,6)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1215.50">&lt;alloc::boxed::Box&lt;F,A&gt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1189" width="14.7993%" height="15" fill="rgb(212,212,45)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1199.50">core::ops::function::Fn..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1173" width="14.7993%" height="15" fill="rgb(221,31,9)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1183.50">std::thread::Builder::s..</text></g><g><title>std::panic::catch_unwind (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1157" width="14.7993%" height="15" fill="rgb(234,198,39)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1167.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1141" width="14.7993%" height="15" fill="rgb(252,145,46)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1151.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1125" width="14.7993%" height="15" fill="rgb(237,149,0)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1135.50">std::panicking::try::do..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1109" width="14.7993%" height="15" fill="rgb(229,65,5)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1119.50">&lt;core::panic::unwind_sa..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1093" width="14.7993%" height="15" fill="rgb(235,60,36)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1103.50">std::thread::Builder::s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1077" width="14.7993%" height="15" fill="rgb(222,47,18)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1087.50">std::sys_common::backtr..</text></g><g><title>uppercut::pool::Worker::new::{{closure}} (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1061" width="14.7993%" height="15" fill="rgb(235,114,22)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1071.50">uppercut::pool::Worker:..</text></g><g><title>std::panic::catch_unwind (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1045" width="14.7993%" height="15" fill="rgb(209,167,11)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1029" width="14.7993%" height="15" fill="rgb(251,73,18)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (70,555 samples, 14.80%)</title><rect x="75.1204%" y="1013" width="14.7993%" height="15" fill="rgb(217,60,17)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1023.50">std::panicking::try::do..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (70,555 samples, 14.80%)</title><rect x="75.1204%" y="997" width="14.7993%" height="15" fill="rgb(224,36,37)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="1007.50">&lt;core::panic::unwind_sa..</text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (70,555 samples, 14.80%)</title><rect x="75.1204%" y="981" width="14.7993%" height="15" fill="rgb(211,21,32)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="991.50">uppercut::pool::Worker:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (70,555 samples, 14.80%)</title><rect x="75.1204%" y="965" width="14.7993%" height="15" fill="rgb(231,55,48)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="975.50">&lt;alloc::boxed::Box&lt;F,A&gt;..</text></g><g><title>uppercut::core::worker_loop (70,555 samples, 14.80%)</title><rect x="75.1204%" y="949" width="14.7993%" height="15" fill="rgb(227,42,18)" fg:x="358132" fg:w="70555"/><text x="75.3704%" y="959.50">uppercut::core::worker_..</text></g><g><title>net_rx_action (50 samples, 0.01%)</title><rect x="90.0930%" y="805" width="0.0105%" height="15" fill="rgb(217,2,27)" fg:x="429513" fg:w="50"/><text x="90.3430%" y="815.50"></text></g><g><title>__softirqentry_text_start (70 samples, 0.01%)</title><rect x="90.0890%" y="821" width="0.0147%" height="15" fill="rgb(251,138,23)" fg:x="429494" fg:w="70"/><text x="90.3390%" y="831.50"></text></g><g><title>core::time::Duration::checked_div (398 samples, 0.08%)</title><rect x="90.0204%" y="885" width="0.0835%" height="15" fill="rgb(226,184,11)" fg:x="429167" fg:w="398"/><text x="90.2704%" y="895.50"></text></g><g><title>ret_from_intr (71 samples, 0.01%)</title><rect x="90.0890%" y="869" width="0.0149%" height="15" fill="rgb(242,142,12)" fg:x="429494" fg:w="71"/><text x="90.3390%" y="879.50"></text></g><g><title>do_IRQ (71 samples, 0.01%)</title><rect x="90.0890%" y="853" width="0.0149%" height="15" fill="rgb(234,187,18)" fg:x="429494" fg:w="71"/><text x="90.3390%" y="863.50"></text></g><g><title>irq_exit (71 samples, 0.01%)</title><rect x="90.0890%" y="837" width="0.0149%" height="15" fill="rgb(237,44,42)" fg:x="429494" fg:w="71"/><text x="90.3390%" y="847.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::Div&lt;u32&gt;&gt;::div (409 samples, 0.09%)</title><rect x="90.0185%" y="901" width="0.0858%" height="15" fill="rgb(211,90,23)" fg:x="429158" fg:w="409"/><text x="90.2685%" y="911.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (94 samples, 0.02%)</title><rect x="90.1205%" y="885" width="0.0197%" height="15" fill="rgb(207,81,18)" fg:x="429644" fg:w="94"/><text x="90.3705%" y="895.50"></text></g><g><title>core::ptr::write (88 samples, 0.02%)</title><rect x="90.1217%" y="869" width="0.0185%" height="15" fill="rgb(222,107,28)" fg:x="429650" fg:w="88"/><text x="90.3717%" y="879.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (114 samples, 0.02%)</title><rect x="90.1196%" y="901" width="0.0239%" height="15" fill="rgb(237,83,52)" fg:x="429640" fg:w="114"/><text x="90.3696%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::partial_cmp (51 samples, 0.01%)</title><rect x="90.1480%" y="869" width="0.0107%" height="15" fill="rgb(208,67,11)" fg:x="429775" fg:w="51"/><text x="90.3980%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (51 samples, 0.01%)</title><rect x="90.1480%" y="853" width="0.0107%" height="15" fill="rgb(249,157,49)" fg:x="429775" fg:w="51"/><text x="90.3980%" y="863.50"></text></g><g><title>&lt;core::time::Duration as core::cmp::PartialOrd&gt;::partial_cmp (67 samples, 0.01%)</title><rect x="90.1452%" y="885" width="0.0141%" height="15" fill="rgb(243,200,1)" fg:x="429762" fg:w="67"/><text x="90.3952%" y="895.50"></text></g><g><title>core::cmp::PartialOrd::ge (75 samples, 0.02%)</title><rect x="90.1438%" y="901" width="0.0157%" height="15" fill="rgb(225,162,37)" fg:x="429755" fg:w="75"/><text x="90.3938%" y="911.50"></text></g><g><title>[libc-2.31.so] (229 samples, 0.05%)</title><rect x="90.1620%" y="805" width="0.0480%" height="15" fill="rgb(242,92,13)" fg:x="429842" fg:w="229"/><text x="90.4120%" y="815.50"></text></g><g><title>cfree (143 samples, 0.03%)</title><rect x="90.2105%" y="805" width="0.0300%" height="15" fill="rgb(220,43,36)" fg:x="430073" fg:w="143"/><text x="90.4605%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (376 samples, 0.08%)</title><rect x="90.1618%" y="837" width="0.0789%" height="15" fill="rgb(213,165,48)" fg:x="429841" fg:w="376"/><text x="90.4118%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (376 samples, 0.08%)</title><rect x="90.1618%" y="821" width="0.0789%" height="15" fill="rgb(227,200,9)" fg:x="429841" fg:w="376"/><text x="90.4118%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (379 samples, 0.08%)</title><rect x="90.1616%" y="901" width="0.0795%" height="15" fill="rgb(221,222,28)" fg:x="429840" fg:w="379"/><text x="90.4116%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (379 samples, 0.08%)</title><rect x="90.1616%" y="885" width="0.0795%" height="15" fill="rgb(223,142,26)" fg:x="429840" fg:w="379"/><text x="90.4116%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (379 samples, 0.08%)</title><rect x="90.1616%" y="869" width="0.0795%" height="15" fill="rgb(243,46,9)" fg:x="429840" fg:w="379"/><text x="90.4116%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (379 samples, 0.08%)</title><rect x="90.1616%" y="853" width="0.0795%" height="15" fill="rgb(250,56,11)" fg:x="429840" fg:w="379"/><text x="90.4116%" y="863.50"></text></g><g><title>core::time::Duration::from_millis (57 samples, 0.01%)</title><rect x="90.2417%" y="901" width="0.0120%" height="15" fill="rgb(229,113,5)" fg:x="430222" fg:w="57"/><text x="90.4917%" y="911.50"></text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (93 samples, 0.02%)</title><rect x="90.3084%" y="853" width="0.0195%" height="15" fill="rgb(244,108,28)" fg:x="430540" fg:w="93"/><text x="90.5584%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (122 samples, 0.03%)</title><rect x="90.3292%" y="853" width="0.0256%" height="15" fill="rgb(242,119,50)" fg:x="430639" fg:w="122"/><text x="90.5792%" y="863.50"></text></g><g><title>&lt;crossbeam_channel::select::Selected as core::convert::From&lt;usize&gt;&gt;::from (124 samples, 0.03%)</title><rect x="90.3693%" y="757" width="0.0260%" height="15" fill="rgb(224,164,23)" fg:x="430830" fg:w="124"/><text x="90.6193%" y="767.50"></text></g><g><title>__x64_sys_sched_yield (82 samples, 0.02%)</title><rect x="90.8011%" y="709" width="0.0172%" height="15" fill="rgb(214,227,44)" fg:x="432889" fg:w="82"/><text x="91.0511%" y="719.50"></text></g><g><title>_raw_spin_lock (89 samples, 0.02%)</title><rect x="91.2538%" y="533" width="0.0187%" height="15" fill="rgb(238,202,4)" fg:x="435047" fg:w="89"/><text x="91.5038%" y="543.50"></text></g><g><title>native_queued_spin_lock_slowpath (89 samples, 0.02%)</title><rect x="91.2538%" y="517" width="0.0187%" height="15" fill="rgb(213,190,30)" fg:x="435047" fg:w="89"/><text x="91.5038%" y="527.50"></text></g><g><title>free_old_xmit_skbs (62 samples, 0.01%)</title><rect x="91.2725%" y="533" width="0.0130%" height="15" fill="rgb(239,15,2)" fg:x="435136" fg:w="62"/><text x="91.5225%" y="543.50"></text></g><g><title>__schedule (1,293 samples, 0.27%)</title><rect x="91.0155%" y="645" width="0.2712%" height="15" fill="rgb(249,229,4)" fg:x="433911" fg:w="1293"/><text x="91.2655%" y="655.50"></text></g><g><title>ret_from_intr (226 samples, 0.05%)</title><rect x="91.2393%" y="629" width="0.0474%" height="15" fill="rgb(239,75,44)" fg:x="434978" fg:w="226"/><text x="91.4893%" y="639.50"></text></g><g><title>do_IRQ (226 samples, 0.05%)</title><rect x="91.2393%" y="613" width="0.0474%" height="15" fill="rgb(251,206,23)" fg:x="434978" fg:w="226"/><text x="91.4893%" y="623.50"></text></g><g><title>irq_exit (226 samples, 0.05%)</title><rect x="91.2393%" y="597" width="0.0474%" height="15" fill="rgb(215,208,0)" fg:x="434978" fg:w="226"/><text x="91.4893%" y="607.50"></text></g><g><title>__softirqentry_text_start (226 samples, 0.05%)</title><rect x="91.2393%" y="581" width="0.0474%" height="15" fill="rgb(230,75,50)" fg:x="434978" fg:w="226"/><text x="91.4893%" y="591.50"></text></g><g><title>net_rx_action (179 samples, 0.04%)</title><rect x="91.2492%" y="565" width="0.0375%" height="15" fill="rgb(246,180,39)" fg:x="435025" fg:w="179"/><text x="91.4992%" y="575.50"></text></g><g><title>virtnet_poll_tx (166 samples, 0.03%)</title><rect x="91.2519%" y="549" width="0.0348%" height="15" fill="rgb(249,175,24)" fg:x="435038" fg:w="166"/><text x="91.5019%" y="559.50"></text></g><g><title>do_sched_yield (1,525 samples, 0.32%)</title><rect x="90.9675%" y="677" width="0.3199%" height="15" fill="rgb(247,176,22)" fg:x="433682" fg:w="1525"/><text x="91.2175%" y="687.50"></text></g><g><title>schedule (1,317 samples, 0.28%)</title><rect x="91.0111%" y="661" width="0.2762%" height="15" fill="rgb(241,100,24)" fg:x="433890" fg:w="1317"/><text x="91.2611%" y="671.50"></text></g><g><title>__x64_sys_sched_yield (1,532 samples, 0.32%)</title><rect x="90.9675%" y="693" width="0.3213%" height="15" fill="rgb(233,4,35)" fg:x="433682" fg:w="1532"/><text x="91.2175%" y="703.50"></text></g><g><title>_raw_spin_lock (65 samples, 0.01%)</title><rect x="91.3002%" y="597" width="0.0136%" height="15" fill="rgb(211,164,46)" fg:x="435268" fg:w="65"/><text x="91.5502%" y="607.50"></text></g><g><title>native_queued_spin_lock_slowpath (65 samples, 0.01%)</title><rect x="91.3002%" y="581" width="0.0136%" height="15" fill="rgb(242,99,53)" fg:x="435268" fg:w="65"/><text x="91.5502%" y="591.50"></text></g><g><title>virtnet_poll_tx (113 samples, 0.02%)</title><rect x="91.2997%" y="613" width="0.0237%" height="15" fill="rgb(243,45,33)" fg:x="435266" fg:w="113"/><text x="91.5497%" y="623.50"></text></g><g><title>__softirqentry_text_start (145 samples, 0.03%)</title><rect x="91.2932%" y="645" width="0.0304%" height="15" fill="rgb(217,55,21)" fg:x="435235" fg:w="145"/><text x="91.5432%" y="655.50"></text></g><g><title>net_rx_action (117 samples, 0.02%)</title><rect x="91.2991%" y="629" width="0.0245%" height="15" fill="rgb(245,145,46)" fg:x="435263" fg:w="117"/><text x="91.5491%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,492 samples, 0.52%)</title><rect x="90.8011%" y="725" width="0.5227%" height="15" fill="rgb(215,112,45)" fg:x="432889" fg:w="2492"/><text x="91.0511%" y="735.50"></text></g><g><title>do_syscall_64 (2,408 samples, 0.51%)</title><rect x="90.8188%" y="709" width="0.5051%" height="15" fill="rgb(228,104,16)" fg:x="432973" fg:w="2408"/><text x="91.0688%" y="719.50"></text></g><g><title>ret_from_intr (146 samples, 0.03%)</title><rect x="91.2932%" y="693" width="0.0306%" height="15" fill="rgb(239,186,38)" fg:x="435235" fg:w="146"/><text x="91.5432%" y="703.50"></text></g><g><title>do_IRQ (146 samples, 0.03%)</title><rect x="91.2932%" y="677" width="0.0306%" height="15" fill="rgb(228,38,35)" fg:x="435235" fg:w="146"/><text x="91.5432%" y="687.50"></text></g><g><title>irq_exit (146 samples, 0.03%)</title><rect x="91.2932%" y="661" width="0.0306%" height="15" fill="rgb(251,42,40)" fg:x="435235" fg:w="146"/><text x="91.5432%" y="671.50"></text></g><g><title>_raw_spin_lock (136 samples, 0.03%)</title><rect x="91.3448%" y="629" width="0.0285%" height="15" fill="rgb(210,51,19)" fg:x="435481" fg:w="136"/><text x="91.5948%" y="639.50"></text></g><g><title>native_queued_spin_lock_slowpath (136 samples, 0.03%)</title><rect x="91.3448%" y="613" width="0.0285%" height="15" fill="rgb(236,94,42)" fg:x="435481" fg:w="136"/><text x="91.5948%" y="623.50"></text></g><g><title>napi_consume_skb (57 samples, 0.01%)</title><rect x="91.3765%" y="613" width="0.0120%" height="15" fill="rgb(239,167,16)" fg:x="435632" fg:w="57"/><text x="91.6265%" y="623.50"></text></g><g><title>skb_release_all (55 samples, 0.01%)</title><rect x="91.3769%" y="597" width="0.0115%" height="15" fill="rgb(252,175,31)" fg:x="435634" fg:w="55"/><text x="91.6269%" y="607.50"></text></g><g><title>free_old_xmit_skbs (114 samples, 0.02%)</title><rect x="91.3734%" y="629" width="0.0239%" height="15" fill="rgb(206,166,30)" fg:x="435617" fg:w="114"/><text x="91.6234%" y="639.50"></text></g><g><title>virtnet_poll_tx (269 samples, 0.06%)</title><rect x="91.3432%" y="645" width="0.0564%" height="15" fill="rgb(206,209,37)" fg:x="435473" fg:w="269"/><text x="91.5932%" y="655.50"></text></g><g><title>net_rx_action (276 samples, 0.06%)</title><rect x="91.3419%" y="661" width="0.0579%" height="15" fill="rgb(226,91,4)" fg:x="435467" fg:w="276"/><text x="91.5919%" y="671.50"></text></g><g><title>__softirqentry_text_start (364 samples, 0.08%)</title><rect x="91.3239%" y="677" width="0.0764%" height="15" fill="rgb(222,167,0)" fg:x="435381" fg:w="364"/><text x="91.5739%" y="687.50"></text></g><g><title>__sched_yield (4,704 samples, 0.99%)</title><rect x="90.4139%" y="741" width="0.9867%" height="15" fill="rgb(211,70,14)" fg:x="431043" fg:w="4704"/><text x="90.6639%" y="751.50"></text></g><g><title>ret_from_intr (366 samples, 0.08%)</title><rect x="91.3239%" y="725" width="0.0768%" height="15" fill="rgb(214,84,42)" fg:x="435381" fg:w="366"/><text x="91.5739%" y="735.50"></text></g><g><title>do_IRQ (366 samples, 0.08%)</title><rect x="91.3239%" y="709" width="0.0768%" height="15" fill="rgb(235,157,37)" fg:x="435381" fg:w="366"/><text x="91.5739%" y="719.50"></text></g><g><title>irq_exit (366 samples, 0.08%)</title><rect x="91.3239%" y="693" width="0.0768%" height="15" fill="rgb(225,13,6)" fg:x="435381" fg:w="366"/><text x="91.5739%" y="703.50"></text></g><g><title>__softirqentry_text_start (62 samples, 0.01%)</title><rect x="91.4445%" y="661" width="0.0130%" height="15" fill="rgb(205,202,1)" fg:x="435956" fg:w="62"/><text x="91.6945%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (272 samples, 0.06%)</title><rect x="91.4006%" y="741" width="0.0571%" height="15" fill="rgb(232,195,26)" fg:x="435747" fg:w="272"/><text x="91.6506%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (272 samples, 0.06%)</title><rect x="91.4006%" y="725" width="0.0571%" height="15" fill="rgb(208,102,26)" fg:x="435747" fg:w="272"/><text x="91.6506%" y="735.50"></text></g><g><title>ret_from_intr (63 samples, 0.01%)</title><rect x="91.4445%" y="709" width="0.0132%" height="15" fill="rgb(215,41,39)" fg:x="435956" fg:w="63"/><text x="91.6945%" y="719.50"></text></g><g><title>do_IRQ (63 samples, 0.01%)</title><rect x="91.4445%" y="693" width="0.0132%" height="15" fill="rgb(247,139,11)" fg:x="435956" fg:w="63"/><text x="91.6945%" y="703.50"></text></g><g><title>irq_exit (63 samples, 0.01%)</title><rect x="91.4445%" y="677" width="0.0132%" height="15" fill="rgb(243,99,6)" fg:x="435956" fg:w="63"/><text x="91.6945%" y="687.50"></text></g><g><title>_raw_spin_lock (116 samples, 0.02%)</title><rect x="91.6737%" y="597" width="0.0243%" height="15" fill="rgb(230,168,48)" fg:x="437049" fg:w="116"/><text x="91.9237%" y="607.50"></text></g><g><title>native_queued_spin_lock_slowpath (116 samples, 0.02%)</title><rect x="91.6737%" y="581" width="0.0243%" height="15" fill="rgb(238,227,13)" fg:x="437049" fg:w="116"/><text x="91.9237%" y="591.50"></text></g><g><title>free_old_xmit_skbs (64 samples, 0.01%)</title><rect x="91.6981%" y="597" width="0.0134%" height="15" fill="rgb(209,109,13)" fg:x="437165" fg:w="64"/><text x="91.9481%" y="607.50"></text></g><g><title>net_rx_action (203 samples, 0.04%)</title><rect x="91.6700%" y="629" width="0.0426%" height="15" fill="rgb(228,195,1)" fg:x="437031" fg:w="203"/><text x="91.9200%" y="639.50"></text></g><g><title>virtnet_poll_tx (193 samples, 0.04%)</title><rect x="91.6721%" y="613" width="0.0405%" height="15" fill="rgb(230,218,0)" fg:x="437041" fg:w="193"/><text x="91.9221%" y="623.50"></text></g><g><title>ret_from_intr (276 samples, 0.06%)</title><rect x="91.6553%" y="693" width="0.0579%" height="15" fill="rgb(206,1,45)" fg:x="436961" fg:w="276"/><text x="91.9053%" y="703.50"></text></g><g><title>do_IRQ (276 samples, 0.06%)</title><rect x="91.6553%" y="677" width="0.0579%" height="15" fill="rgb(209,124,26)" fg:x="436961" fg:w="276"/><text x="91.9053%" y="687.50"></text></g><g><title>irq_exit (276 samples, 0.06%)</title><rect x="91.6553%" y="661" width="0.0579%" height="15" fill="rgb(220,59,8)" fg:x="436961" fg:w="276"/><text x="91.9053%" y="671.50"></text></g><g><title>__softirqentry_text_start (276 samples, 0.06%)</title><rect x="91.6553%" y="645" width="0.0579%" height="15" fill="rgb(251,41,37)" fg:x="436961" fg:w="276"/><text x="91.9053%" y="655.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1,219 samples, 0.26%)</title><rect x="91.4577%" y="741" width="0.2557%" height="15" fill="rgb(239,152,21)" fg:x="436019" fg:w="1219"/><text x="91.7077%" y="751.50"></text></g><g><title>core::hint::spin_loop (1,219 samples, 0.26%)</title><rect x="91.4577%" y="725" width="0.2557%" height="15" fill="rgb(226,32,1)" fg:x="436019" fg:w="1219"/><text x="91.7077%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1,219 samples, 0.26%)</title><rect x="91.4577%" y="709" width="0.2557%" height="15" fill="rgb(230,154,36)" fg:x="436019" fg:w="1219"/><text x="91.7077%" y="719.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (6,230 samples, 1.31%)</title><rect x="90.4078%" y="757" width="1.3068%" height="15" fill="rgb(208,228,43)" fg:x="431014" fg:w="6230"/><text x="90.6578%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (90 samples, 0.02%)</title><rect x="91.7205%" y="693" width="0.0189%" height="15" fill="rgb(214,203,3)" fg:x="437272" fg:w="90"/><text x="91.9705%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (90 samples, 0.02%)</title><rect x="91.7205%" y="677" width="0.0189%" height="15" fill="rgb(207,149,29)" fg:x="437272" fg:w="90"/><text x="91.9705%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::Thread&gt; (106 samples, 0.02%)</title><rect x="91.7176%" y="741" width="0.0222%" height="15" fill="rgb(250,105,7)" fg:x="437258" fg:w="106"/><text x="91.9676%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt; (106 samples, 0.02%)</title><rect x="91.7176%" y="725" width="0.0222%" height="15" fill="rgb(232,222,16)" fg:x="437258" fg:w="106"/><text x="91.9676%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 0.02%)</title><rect x="91.7176%" y="709" width="0.0222%" height="15" fill="rgb(209,32,24)" fg:x="437258" fg:w="106"/><text x="91.9676%" y="719.50"></text></g><g><title>__lock_text_start (81 samples, 0.02%)</title><rect x="91.9005%" y="565" width="0.0170%" height="15" fill="rgb(225,13,6)" fg:x="438130" fg:w="81"/><text x="92.1505%" y="575.50"></text></g><g><title>hrtimer_start_range_ns (96 samples, 0.02%)</title><rect x="91.8988%" y="581" width="0.0201%" height="15" fill="rgb(245,226,26)" fg:x="438122" fg:w="96"/><text x="92.1488%" y="591.50"></text></g><g><title>hrtimer_sleeper_start_expires (100 samples, 0.02%)</title><rect x="91.8982%" y="597" width="0.0210%" height="15" fill="rgb(229,178,27)" fg:x="438119" fg:w="100"/><text x="92.1482%" y="607.50"></text></g><g><title>_raw_spin_lock (79 samples, 0.02%)</title><rect x="92.3353%" y="453" width="0.0166%" height="15" fill="rgb(205,227,28)" fg:x="440203" fg:w="79"/><text x="92.5853%" y="463.50"></text></g><g><title>native_queued_spin_lock_slowpath (79 samples, 0.02%)</title><rect x="92.3353%" y="437" width="0.0166%" height="15" fill="rgb(210,191,45)" fg:x="440203" fg:w="79"/><text x="92.5853%" y="447.50"></text></g><g><title>free_old_xmit_skbs (85 samples, 0.02%)</title><rect x="92.3519%" y="453" width="0.0178%" height="15" fill="rgb(206,124,16)" fg:x="440282" fg:w="85"/><text x="92.6019%" y="463.50"></text></g><g><title>virtnet_poll_tx (175 samples, 0.04%)</title><rect x="92.3349%" y="469" width="0.0367%" height="15" fill="rgb(210,162,0)" fg:x="440201" fg:w="175"/><text x="92.5849%" y="479.50"></text></g><g><title>net_rx_action (185 samples, 0.04%)</title><rect x="92.3330%" y="485" width="0.0388%" height="15" fill="rgb(211,54,38)" fg:x="440192" fg:w="185"/><text x="92.5830%" y="495.50"></text></g><g><title>__softirqentry_text_start (310 samples, 0.07%)</title><rect x="92.3076%" y="501" width="0.0650%" height="15" fill="rgb(248,192,3)" fg:x="440071" fg:w="310"/><text x="92.5576%" y="511.50"></text></g><g><title>finish_task_switch (2,123 samples, 0.45%)</title><rect x="91.9275%" y="565" width="0.4453%" height="15" fill="rgb(233,187,18)" fg:x="438259" fg:w="2123"/><text x="92.1775%" y="575.50"></text></g><g><title>ret_from_intr (311 samples, 0.07%)</title><rect x="92.3076%" y="549" width="0.0652%" height="15" fill="rgb(237,208,14)" fg:x="440071" fg:w="311"/><text x="92.5576%" y="559.50"></text></g><g><title>do_IRQ (311 samples, 0.07%)</title><rect x="92.3076%" y="533" width="0.0652%" height="15" fill="rgb(212,77,1)" fg:x="440071" fg:w="311"/><text x="92.5576%" y="543.50"></text></g><g><title>irq_exit (311 samples, 0.07%)</title><rect x="92.3076%" y="517" width="0.0652%" height="15" fill="rgb(210,163,22)" fg:x="440071" fg:w="311"/><text x="92.5576%" y="527.50"></text></g><g><title>__schedule (2,141 samples, 0.45%)</title><rect x="91.9242%" y="581" width="0.4491%" height="15" fill="rgb(250,58,28)" fg:x="438243" fg:w="2141"/><text x="92.1742%" y="591.50"></text></g><g><title>futex_wait_queue_me (2,310 samples, 0.48%)</title><rect x="91.8889%" y="613" width="0.4845%" height="15" fill="rgb(254,28,41)" fg:x="438075" fg:w="2310"/><text x="92.1389%" y="623.50"></text></g><g><title>schedule (2,148 samples, 0.45%)</title><rect x="91.9229%" y="597" width="0.4506%" height="15" fill="rgb(237,162,36)" fg:x="438237" fg:w="2148"/><text x="92.1729%" y="607.50"></text></g><g><title>futex_wait_setup (130 samples, 0.03%)</title><rect x="92.3735%" y="613" width="0.0273%" height="15" fill="rgb(232,56,6)" fg:x="440385" fg:w="130"/><text x="92.6235%" y="623.50"></text></g><g><title>hrtimer_cancel (48 samples, 0.01%)</title><rect x="92.4070%" y="613" width="0.0101%" height="15" fill="rgb(216,127,42)" fg:x="440545" fg:w="48"/><text x="92.6570%" y="623.50"></text></g><g><title>hrtimer_init_sleeper (59 samples, 0.01%)</title><rect x="92.4171%" y="613" width="0.0124%" height="15" fill="rgb(241,69,15)" fg:x="440593" fg:w="59"/><text x="92.6671%" y="623.50"></text></g><g><title>__hrtimer_init (53 samples, 0.01%)</title><rect x="92.4184%" y="597" width="0.0111%" height="15" fill="rgb(227,180,19)" fg:x="440599" fg:w="53"/><text x="92.6684%" y="607.50"></text></g><g><title>futex_wait (2,694 samples, 0.57%)</title><rect x="91.8694%" y="629" width="0.5651%" height="15" fill="rgb(231,188,29)" fg:x="437982" fg:w="2694"/><text x="92.1194%" y="639.50"></text></g><g><title>do_futex (2,710 samples, 0.57%)</title><rect x="91.8669%" y="645" width="0.5684%" height="15" fill="rgb(224,176,27)" fg:x="437970" fg:w="2710"/><text x="92.1169%" y="655.50"></text></g><g><title>get_timespec64 (68 samples, 0.01%)</title><rect x="92.4362%" y="645" width="0.0143%" height="15" fill="rgb(249,214,19)" fg:x="440684" fg:w="68"/><text x="92.6862%" y="655.50"></text></g><g><title>ktime_get (59 samples, 0.01%)</title><rect x="92.4505%" y="645" width="0.0124%" height="15" fill="rgb(240,0,4)" fg:x="440752" fg:w="59"/><text x="92.7005%" y="655.50"></text></g><g><title>__x64_sys_futex (2,895 samples, 0.61%)</title><rect x="91.8589%" y="661" width="0.6072%" height="15" fill="rgb(233,28,41)" fg:x="437932" fg:w="2895"/><text x="92.1089%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,093 samples, 0.65%)</title><rect x="91.8252%" y="693" width="0.6488%" height="15" fill="rgb(220,90,51)" fg:x="437771" fg:w="3093"/><text x="92.0752%" y="703.50"></text></g><g><title>do_syscall_64 (3,072 samples, 0.64%)</title><rect x="91.8296%" y="677" width="0.6444%" height="15" fill="rgb(250,52,22)" fg:x="437792" fg:w="3072"/><text x="92.0796%" y="687.50"></text></g><g><title>__softirqentry_text_start (56 samples, 0.01%)</title><rect x="92.4739%" y="645" width="0.0117%" height="15" fill="rgb(231,152,36)" fg:x="440864" fg:w="56"/><text x="92.7239%" y="655.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park_timeout (3,557 samples, 0.75%)</title><rect x="91.7398%" y="741" width="0.7461%" height="15" fill="rgb(250,218,4)" fg:x="437364" fg:w="3557"/><text x="91.9898%" y="751.50"></text></g><g><title>std::sys::unix::futex::futex_wait (3,531 samples, 0.74%)</title><rect x="91.7453%" y="725" width="0.7406%" height="15" fill="rgb(210,38,21)" fg:x="437390" fg:w="3531"/><text x="91.9953%" y="735.50"></text></g><g><title>syscall (3,530 samples, 0.74%)</title><rect x="91.7455%" y="709" width="0.7404%" height="15" fill="rgb(230,75,13)" fg:x="437391" fg:w="3530"/><text x="91.9955%" y="719.50"></text></g><g><title>ret_from_intr (57 samples, 0.01%)</title><rect x="92.4739%" y="693" width="0.0120%" height="15" fill="rgb(250,68,53)" fg:x="440864" fg:w="57"/><text x="92.7239%" y="703.50"></text></g><g><title>do_IRQ (57 samples, 0.01%)</title><rect x="92.4739%" y="677" width="0.0120%" height="15" fill="rgb(250,210,16)" fg:x="440864" fg:w="57"/><text x="92.7239%" y="687.50"></text></g><g><title>irq_exit (57 samples, 0.01%)</title><rect x="92.4739%" y="661" width="0.0120%" height="15" fill="rgb(240,132,5)" fg:x="440864" fg:w="57"/><text x="92.7239%" y="671.50"></text></g><g><title>std::thread::park_timeout (3,729 samples, 0.78%)</title><rect x="91.7157%" y="757" width="0.7822%" height="15" fill="rgb(222,148,48)" fg:x="437249" fg:w="3729"/><text x="91.9657%" y="767.50"></text></g><g><title>std::thread::current (57 samples, 0.01%)</title><rect x="92.4859%" y="741" width="0.0120%" height="15" fill="rgb(247,181,24)" fg:x="440921" fg:w="57"/><text x="92.7359%" y="751.50"></text></g><g><title>std::sys_common::thread_info::current_thread (57 samples, 0.01%)</title><rect x="92.4859%" y="725" width="0.0120%" height="15" fill="rgb(239,5,31)" fg:x="440921" fg:w="57"/><text x="92.7359%" y="735.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with (54 samples, 0.01%)</title><rect x="92.4865%" y="709" width="0.0113%" height="15" fill="rgb(241,152,38)" fg:x="440924" fg:w="54"/><text x="92.7365%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (54 samples, 0.01%)</title><rect x="92.4865%" y="693" width="0.0113%" height="15" fill="rgb(246,200,37)" fg:x="440924" fg:w="54"/><text x="92.7365%" y="703.50"></text></g><g><title>[[vdso]] (61 samples, 0.01%)</title><rect x="92.5046%" y="677" width="0.0128%" height="15" fill="rgb(243,210,26)" fg:x="441010" fg:w="61"/><text x="92.7546%" y="687.50"></text></g><g><title>__vdso_clock_gettime (72 samples, 0.02%)</title><rect x="92.5027%" y="693" width="0.0151%" height="15" fill="rgb(222,22,22)" fg:x="441001" fg:w="72"/><text x="92.7527%" y="703.50"></text></g><g><title>__clock_gettime (94 samples, 0.02%)</title><rect x="92.4987%" y="709" width="0.0197%" height="15" fill="rgb(208,129,28)" fg:x="440982" fg:w="94"/><text x="92.7487%" y="719.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (10,260 samples, 2.15%)</title><rect x="90.3667%" y="773" width="2.1521%" height="15" fill="rgb(254,169,28)" fg:x="430818" fg:w="10260"/><text x="90.6167%" y="783.50">c..</text></g><g><title>std::time::Instant::now (100 samples, 0.02%)</title><rect x="92.4979%" y="757" width="0.0210%" height="15" fill="rgb(225,45,17)" fg:x="440978" fg:w="100"/><text x="92.7479%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (100 samples, 0.02%)</title><rect x="92.4979%" y="741" width="0.0210%" height="15" fill="rgb(232,199,2)" fg:x="440978" fg:w="100"/><text x="92.7479%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::now (100 samples, 0.02%)</title><rect x="92.4979%" y="725" width="0.0210%" height="15" fill="rgb(235,33,40)" fg:x="440978" fg:w="100"/><text x="92.7479%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::utils::SpinlockGuard&lt;crossbeam_channel::waker::Waker&gt;&gt; (104 samples, 0.02%)</title><rect x="92.5222%" y="757" width="0.0218%" height="15" fill="rgb(237,89,50)" fg:x="441094" fg:w="104"/><text x="92.7722%" y="767.50"></text></g><g><title>&lt;crossbeam_channel::utils::SpinlockGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (104 samples, 0.02%)</title><rect x="92.5222%" y="741" width="0.0218%" height="15" fill="rgb(238,126,5)" fg:x="441094" fg:w="104"/><text x="92.7722%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (149 samples, 0.03%)</title><rect x="92.5440%" y="741" width="0.0313%" height="15" fill="rgb(247,214,42)" fg:x="441198" fg:w="149"/><text x="92.7940%" y="751.50"></text></g><g><title>__x64_sys_sched_yield (52 samples, 0.01%)</title><rect x="92.5979%" y="677" width="0.0109%" height="15" fill="rgb(238,60,45)" fg:x="441455" fg:w="52"/><text x="92.8479%" y="687.50"></text></g><g><title>do_sched_yield (52 samples, 0.01%)</title><rect x="92.5979%" y="661" width="0.0109%" height="15" fill="rgb(225,69,44)" fg:x="441455" fg:w="52"/><text x="92.8479%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (86 samples, 0.02%)</title><rect x="92.5910%" y="709" width="0.0180%" height="15" fill="rgb(241,13,44)" fg:x="441422" fg:w="86"/><text x="92.8410%" y="719.50"></text></g><g><title>do_syscall_64 (85 samples, 0.02%)</title><rect x="92.5912%" y="693" width="0.0178%" height="15" fill="rgb(227,121,22)" fg:x="441423" fg:w="85"/><text x="92.8412%" y="703.50"></text></g><g><title>__sched_yield (163 samples, 0.03%)</title><rect x="92.5753%" y="725" width="0.0342%" height="15" fill="rgb(231,160,23)" fg:x="441347" fg:w="163"/><text x="92.8253%" y="735.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (325 samples, 0.07%)</title><rect x="92.5440%" y="757" width="0.0682%" height="15" fill="rgb(250,179,43)" fg:x="441198" fg:w="325"/><text x="92.7940%" y="767.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (176 samples, 0.04%)</title><rect x="92.5753%" y="741" width="0.0369%" height="15" fill="rgb(233,54,46)" fg:x="441347" fg:w="176"/><text x="92.8253%" y="751.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::register (476 samples, 0.10%)</title><rect x="92.5197%" y="773" width="0.0998%" height="15" fill="rgb(247,120,42)" fg:x="441082" fg:w="476"/><text x="92.7697%" y="783.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (10,780 samples, 2.26%)</title><rect x="90.3646%" y="789" width="2.2612%" height="15" fill="rgb(221,219,12)" fg:x="430808" fg:w="10780"/><text x="90.6146%" y="799.50">c..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (10,788 samples, 2.26%)</title><rect x="90.3632%" y="805" width="2.2628%" height="15" fill="rgb(211,126,8)" fg:x="430801" fg:w="10788"/><text x="90.6132%" y="815.50">c..</text></g><g><title>crossbeam_channel::context::Context::with (10,829 samples, 2.27%)</title><rect x="90.3548%" y="853" width="2.2714%" height="15" fill="rgb(218,154,33)" fg:x="430761" fg:w="10829"/><text x="90.6048%" y="863.50">c..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,825 samples, 2.27%)</title><rect x="90.3556%" y="837" width="2.2706%" height="15" fill="rgb(212,199,16)" fg:x="430765" fg:w="10825"/><text x="90.6056%" y="847.50">s..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (10,808 samples, 2.27%)</title><rect x="90.3592%" y="821" width="2.2670%" height="15" fill="rgb(236,215,46)" fg:x="430782" fg:w="10808"/><text x="90.6092%" y="831.50">c..</text></g><g><title>[libc-2.31.so] (193 samples, 0.04%)</title><rect x="92.6627%" y="821" width="0.0405%" height="15" fill="rgb(232,32,22)" fg:x="441764" fg:w="193"/><text x="92.9127%" y="831.50"></text></g><g><title>futex_wake (50 samples, 0.01%)</title><rect x="92.7070%" y="757" width="0.0105%" height="15" fill="rgb(234,79,15)" fg:x="441975" fg:w="50"/><text x="92.9570%" y="767.50"></text></g><g><title>__x64_sys_futex (56 samples, 0.01%)</title><rect x="92.7061%" y="789" width="0.0117%" height="15" fill="rgb(235,187,47)" fg:x="441971" fg:w="56"/><text x="92.9561%" y="799.50"></text></g><g><title>do_futex (54 samples, 0.01%)</title><rect x="92.7066%" y="773" width="0.0113%" height="15" fill="rgb(244,69,37)" fg:x="441973" fg:w="54"/><text x="92.9566%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (73 samples, 0.02%)</title><rect x="92.7032%" y="821" width="0.0153%" height="15" fill="rgb(249,140,25)" fg:x="441957" fg:w="73"/><text x="92.9532%" y="831.50"></text></g><g><title>do_syscall_64 (72 samples, 0.02%)</title><rect x="92.7034%" y="805" width="0.0151%" height="15" fill="rgb(213,69,8)" fg:x="441958" fg:w="72"/><text x="92.9534%" y="815.50"></text></g><g><title>[libc-2.31.so] (402 samples, 0.08%)</title><rect x="92.6394%" y="837" width="0.0843%" height="15" fill="rgb(220,136,2)" fg:x="441653" fg:w="402"/><text x="92.8894%" y="847.50"></text></g><g><title>cfree (53 samples, 0.01%)</title><rect x="92.7259%" y="837" width="0.0111%" height="15" fill="rgb(237,50,36)" fg:x="442065" fg:w="53"/><text x="92.9759%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (402 samples, 0.08%)</title><rect x="92.7385%" y="837" width="0.0843%" height="15" fill="rgb(226,18,11)" fg:x="442125" fg:w="402"/><text x="92.9885%" y="847.50"></text></g><g><title>core::ptr::read (402 samples, 0.08%)</title><rect x="92.7385%" y="821" width="0.0843%" height="15" fill="rgb(243,156,2)" fg:x="442125" fg:w="402"/><text x="92.9885%" y="831.50"></text></g><g><title>ret_from_intr (70 samples, 0.01%)</title><rect x="92.8081%" y="805" width="0.0147%" height="15" fill="rgb(218,8,34)" fg:x="442457" fg:w="70"/><text x="93.0581%" y="815.50"></text></g><g><title>do_IRQ (70 samples, 0.01%)</title><rect x="92.8081%" y="789" width="0.0147%" height="15" fill="rgb(250,94,35)" fg:x="442457" fg:w="70"/><text x="93.0581%" y="799.50"></text></g><g><title>irq_exit (70 samples, 0.01%)</title><rect x="92.8081%" y="773" width="0.0147%" height="15" fill="rgb(229,127,21)" fg:x="442457" fg:w="70"/><text x="93.0581%" y="783.50"></text></g><g><title>__softirqentry_text_start (70 samples, 0.01%)</title><rect x="92.8081%" y="757" width="0.0147%" height="15" fill="rgb(234,49,5)" fg:x="442457" fg:w="70"/><text x="93.0581%" y="767.50"></text></g><g><title>_raw_spin_lock (72 samples, 0.02%)</title><rect x="93.0036%" y="709" width="0.0151%" height="15" fill="rgb(248,12,16)" fg:x="443389" fg:w="72"/><text x="93.2536%" y="719.50"></text></g><g><title>native_queued_spin_lock_slowpath (72 samples, 0.02%)</title><rect x="93.0036%" y="693" width="0.0151%" height="15" fill="rgb(208,220,31)" fg:x="443389" fg:w="72"/><text x="93.2536%" y="703.50"></text></g><g><title>virtnet_poll_tx (117 samples, 0.02%)</title><rect x="93.0027%" y="725" width="0.0245%" height="15" fill="rgb(243,184,0)" fg:x="443385" fg:w="117"/><text x="93.2527%" y="735.50"></text></g><g><title>__softirqentry_text_start (170 samples, 0.04%)</title><rect x="92.9918%" y="757" width="0.0357%" height="15" fill="rgb(217,38,21)" fg:x="443333" fg:w="170"/><text x="93.2418%" y="767.50"></text></g><g><title>net_rx_action (127 samples, 0.03%)</title><rect x="93.0009%" y="741" width="0.0266%" height="15" fill="rgb(239,120,45)" fg:x="443376" fg:w="127"/><text x="93.2509%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (962 samples, 0.20%)</title><rect x="92.8263%" y="837" width="0.2018%" height="15" fill="rgb(235,33,2)" fg:x="442544" fg:w="962"/><text x="93.0763%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_or (962 samples, 0.20%)</title><rect x="92.8263%" y="821" width="0.2018%" height="15" fill="rgb(249,161,5)" fg:x="442544" fg:w="962"/><text x="93.0763%" y="831.50"></text></g><g><title>ret_from_intr (173 samples, 0.04%)</title><rect x="92.9918%" y="805" width="0.0363%" height="15" fill="rgb(250,165,48)" fg:x="443333" fg:w="173"/><text x="93.2418%" y="815.50"></text></g><g><title>do_IRQ (173 samples, 0.04%)</title><rect x="92.9918%" y="789" width="0.0363%" height="15" fill="rgb(221,23,45)" fg:x="443333" fg:w="173"/><text x="93.2418%" y="799.50"></text></g><g><title>irq_exit (173 samples, 0.04%)</title><rect x="92.9918%" y="773" width="0.0363%" height="15" fill="rgb(217,108,46)" fg:x="443333" fg:w="173"/><text x="93.2418%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (69 samples, 0.01%)</title><rect x="93.1787%" y="789" width="0.0145%" height="15" fill="rgb(254,26,35)" fg:x="444224" fg:w="69"/><text x="93.4287%" y="799.50"></text></g><g><title>do_syscall_64 (69 samples, 0.01%)</title><rect x="93.1787%" y="773" width="0.0145%" height="15" fill="rgb(218,223,28)" fg:x="444224" fg:w="69"/><text x="93.4287%" y="783.50"></text></g><g><title>__sched_yield (122 samples, 0.03%)</title><rect x="93.1693%" y="805" width="0.0256%" height="15" fill="rgb(242,27,47)" fg:x="444179" fg:w="122"/><text x="93.4193%" y="815.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (143 samples, 0.03%)</title><rect x="93.1687%" y="821" width="0.0300%" height="15" fill="rgb(218,39,35)" fg:x="444176" fg:w="143"/><text x="93.4187%" y="831.50"></text></g><g><title>__softirqentry_text_start (116 samples, 0.02%)</title><rect x="93.1987%" y="773" width="0.0243%" height="15" fill="rgb(232,127,16)" fg:x="444319" fg:w="116"/><text x="93.4487%" y="783.50"></text></g><g><title>net_rx_action (85 samples, 0.02%)</title><rect x="93.2052%" y="757" width="0.0178%" height="15" fill="rgb(231,219,51)" fg:x="444350" fg:w="85"/><text x="93.4552%" y="767.50"></text></g><g><title>virtnet_poll_tx (81 samples, 0.02%)</title><rect x="93.2060%" y="741" width="0.0170%" height="15" fill="rgb(217,220,46)" fg:x="444354" fg:w="81"/><text x="93.4560%" y="751.50"></text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (895 samples, 0.19%)</title><rect x="93.0357%" y="837" width="0.1877%" height="15" fill="rgb(230,75,1)" fg:x="443542" fg:w="895"/><text x="93.2857%" y="847.50"></text></g><g><title>ret_from_intr (118 samples, 0.02%)</title><rect x="93.1987%" y="821" width="0.0248%" height="15" fill="rgb(218,2,8)" fg:x="444319" fg:w="118"/><text x="93.4487%" y="831.50"></text></g><g><title>do_IRQ (118 samples, 0.02%)</title><rect x="93.1987%" y="805" width="0.0248%" height="15" fill="rgb(206,111,30)" fg:x="444319" fg:w="118"/><text x="93.4487%" y="815.50"></text></g><g><title>irq_exit (118 samples, 0.02%)</title><rect x="93.1987%" y="789" width="0.0248%" height="15" fill="rgb(209,135,6)" fg:x="444319" fg:w="118"/><text x="93.4487%" y="799.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (2,868 samples, 0.60%)</title><rect x="92.6262%" y="853" width="0.6016%" height="15" fill="rgb(205,169,10)" fg:x="441590" fg:w="2868"/><text x="92.8762%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (56 samples, 0.01%)</title><rect x="93.4835%" y="837" width="0.0117%" height="15" fill="rgb(212,204,38)" fg:x="445677" fg:w="56"/><text x="93.7335%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (56 samples, 0.01%)</title><rect x="93.4835%" y="821" width="0.0117%" height="15" fill="rgb(205,199,14)" fg:x="445677" fg:w="56"/><text x="93.7335%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (166 samples, 0.03%)</title><rect x="93.4953%" y="837" width="0.0348%" height="15" fill="rgb(212,4,6)" fg:x="445733" fg:w="166"/><text x="93.7453%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (166 samples, 0.03%)</title><rect x="93.4953%" y="821" width="0.0348%" height="15" fill="rgb(250,15,10)" fg:x="445733" fg:w="166"/><text x="93.7453%" y="831.50"></text></g><g><title>_raw_spin_lock (70 samples, 0.01%)</title><rect x="93.7266%" y="709" width="0.0147%" height="15" fill="rgb(212,49,51)" fg:x="446836" fg:w="70"/><text x="93.9766%" y="719.50"></text></g><g><title>native_queued_spin_lock_slowpath (70 samples, 0.01%)</title><rect x="93.7266%" y="693" width="0.0147%" height="15" fill="rgb(235,21,9)" fg:x="446836" fg:w="70"/><text x="93.9766%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,055 samples, 0.22%)</title><rect x="93.5309%" y="837" width="0.2213%" height="15" fill="rgb(251,31,32)" fg:x="445903" fg:w="1055"/><text x="93.7809%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (1,055 samples, 0.22%)</title><rect x="93.5309%" y="821" width="0.2213%" height="15" fill="rgb(246,23,9)" fg:x="445903" fg:w="1055"/><text x="93.7809%" y="831.50"></text></g><g><title>ret_from_intr (184 samples, 0.04%)</title><rect x="93.7136%" y="805" width="0.0386%" height="15" fill="rgb(225,216,14)" fg:x="446774" fg:w="184"/><text x="93.9636%" y="815.50"></text></g><g><title>do_IRQ (184 samples, 0.04%)</title><rect x="93.7136%" y="789" width="0.0386%" height="15" fill="rgb(215,200,26)" fg:x="446774" fg:w="184"/><text x="93.9636%" y="799.50"></text></g><g><title>irq_exit (184 samples, 0.04%)</title><rect x="93.7136%" y="773" width="0.0386%" height="15" fill="rgb(237,130,47)" fg:x="446774" fg:w="184"/><text x="93.9636%" y="783.50"></text></g><g><title>__softirqentry_text_start (184 samples, 0.04%)</title><rect x="93.7136%" y="757" width="0.0386%" height="15" fill="rgb(247,74,14)" fg:x="446774" fg:w="184"/><text x="93.9636%" y="767.50"></text></g><g><title>net_rx_action (129 samples, 0.03%)</title><rect x="93.7251%" y="741" width="0.0271%" height="15" fill="rgb(254,97,46)" fg:x="446829" fg:w="129"/><text x="93.9751%" y="751.50"></text></g><g><title>virtnet_poll_tx (123 samples, 0.03%)</title><rect x="93.7264%" y="725" width="0.0258%" height="15" fill="rgb(234,191,1)" fg:x="446835" fg:w="123"/><text x="93.9764%" y="735.50"></text></g><g><title>crossbeam_channel::flavors::list::Block&lt;T&gt;::wait_next (57 samples, 0.01%)</title><rect x="93.7528%" y="837" width="0.0120%" height="15" fill="rgb(215,165,14)" fg:x="446961" fg:w="57"/><text x="94.0028%" y="847.50"></text></g><g><title>_raw_spin_lock (88 samples, 0.02%)</title><rect x="93.7839%" y="741" width="0.0185%" height="15" fill="rgb(230,182,6)" fg:x="447109" fg:w="88"/><text x="94.0339%" y="751.50"></text></g><g><title>native_queued_spin_lock_slowpath (88 samples, 0.02%)</title><rect x="93.7839%" y="725" width="0.0185%" height="15" fill="rgb(210,127,39)" fg:x="447109" fg:w="88"/><text x="94.0339%" y="735.50"></text></g><g><title>__softirqentry_text_start (232 samples, 0.05%)</title><rect x="93.7648%" y="789" width="0.0487%" height="15" fill="rgb(223,212,51)" fg:x="447018" fg:w="232"/><text x="94.0148%" y="799.50"></text></g><g><title>net_rx_action (162 samples, 0.03%)</title><rect x="93.7795%" y="773" width="0.0340%" height="15" fill="rgb(226,176,43)" fg:x="447088" fg:w="162"/><text x="94.0295%" y="783.50"></text></g><g><title>virtnet_poll_tx (149 samples, 0.03%)</title><rect x="93.7822%" y="757" width="0.0313%" height="15" fill="rgb(222,155,4)" fg:x="447101" fg:w="149"/><text x="94.0322%" y="767.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (2,794 samples, 0.59%)</title><rect x="93.2278%" y="853" width="0.5861%" height="15" fill="rgb(215,149,7)" fg:x="444458" fg:w="2794"/><text x="93.4778%" y="863.50"></text></g><g><title>ret_from_intr (234 samples, 0.05%)</title><rect x="93.7648%" y="837" width="0.0491%" height="15" fill="rgb(252,199,23)" fg:x="447018" fg:w="234"/><text x="94.0148%" y="847.50"></text></g><g><title>do_IRQ (234 samples, 0.05%)</title><rect x="93.7648%" y="821" width="0.0491%" height="15" fill="rgb(245,52,29)" fg:x="447018" fg:w="234"/><text x="94.0148%" y="831.50"></text></g><g><title>irq_exit (234 samples, 0.05%)</title><rect x="93.7648%" y="805" width="0.0491%" height="15" fill="rgb(221,228,19)" fg:x="447018" fg:w="234"/><text x="94.0148%" y="815.50"></text></g><g><title>__x64_sys_sched_yield (181 samples, 0.04%)</title><rect x="94.8283%" y="805" width="0.0380%" height="15" fill="rgb(253,101,6)" fg:x="452088" fg:w="181"/><text x="95.0783%" y="815.50"></text></g><g><title>__softirqentry_text_start (120 samples, 0.03%)</title><rect x="95.3740%" y="709" width="0.0252%" height="15" fill="rgb(211,130,8)" fg:x="454690" fg:w="120"/><text x="95.6240%" y="719.50"></text></g><g><title>net_rx_action (89 samples, 0.02%)</title><rect x="95.3805%" y="693" width="0.0187%" height="15" fill="rgb(238,37,53)" fg:x="454721" fg:w="89"/><text x="95.6305%" y="703.50"></text></g><g><title>virtnet_poll_tx (80 samples, 0.02%)</title><rect x="95.3824%" y="677" width="0.0168%" height="15" fill="rgb(235,145,5)" fg:x="454730" fg:w="80"/><text x="95.6324%" y="687.50"></text></g><g><title>ret_from_intr (121 samples, 0.03%)</title><rect x="95.3740%" y="757" width="0.0254%" height="15" fill="rgb(244,12,43)" fg:x="454690" fg:w="121"/><text x="95.6240%" y="767.50"></text></g><g><title>do_IRQ (121 samples, 0.03%)</title><rect x="95.3740%" y="741" width="0.0254%" height="15" fill="rgb(246,195,24)" fg:x="454690" fg:w="121"/><text x="95.6240%" y="751.50"></text></g><g><title>irq_exit (121 samples, 0.03%)</title><rect x="95.3740%" y="725" width="0.0254%" height="15" fill="rgb(235,163,6)" fg:x="454690" fg:w="121"/><text x="95.6240%" y="735.50"></text></g><g><title>_raw_spin_lock (226 samples, 0.05%)</title><rect x="96.0635%" y="629" width="0.0474%" height="15" fill="rgb(236,218,17)" fg:x="457977" fg:w="226"/><text x="96.3135%" y="639.50"></text></g><g><title>native_queued_spin_lock_slowpath (226 samples, 0.05%)</title><rect x="96.0635%" y="613" width="0.0474%" height="15" fill="rgb(235,12,38)" fg:x="457977" fg:w="226"/><text x="96.3135%" y="623.50"></text></g><g><title>napi_consume_skb (68 samples, 0.01%)</title><rect x="96.1164%" y="613" width="0.0143%" height="15" fill="rgb(225,195,33)" fg:x="458229" fg:w="68"/><text x="96.3664%" y="623.50"></text></g><g><title>skb_release_all (61 samples, 0.01%)</title><rect x="96.1178%" y="597" width="0.0128%" height="15" fill="rgb(238,54,35)" fg:x="458236" fg:w="61"/><text x="96.3678%" y="607.50"></text></g><g><title>free_old_xmit_skbs (156 samples, 0.03%)</title><rect x="96.1109%" y="629" width="0.0327%" height="15" fill="rgb(238,33,7)" fg:x="458203" fg:w="156"/><text x="96.3609%" y="639.50"></text></g><g><title>virtqueue_get_buf (62 samples, 0.01%)</title><rect x="96.1306%" y="613" width="0.0130%" height="15" fill="rgb(245,5,14)" fg:x="458297" fg:w="62"/><text x="96.3806%" y="623.50"></text></g><g><title>virtqueue_get_buf_ctx (62 samples, 0.01%)</title><rect x="96.1306%" y="597" width="0.0130%" height="15" fill="rgb(251,95,31)" fg:x="458297" fg:w="62"/><text x="96.3806%" y="607.50"></text></g><g><title>virtnet_poll_tx (425 samples, 0.09%)</title><rect x="96.0597%" y="645" width="0.0891%" height="15" fill="rgb(222,15,46)" fg:x="457959" fg:w="425"/><text x="96.3097%" y="655.50"></text></g><g><title>net_rx_action (443 samples, 0.09%)</title><rect x="96.0562%" y="661" width="0.0929%" height="15" fill="rgb(226,182,24)" fg:x="457942" fg:w="443"/><text x="96.3062%" y="671.50"></text></g><g><title>__softirqentry_text_start (588 samples, 0.12%)</title><rect x="96.0268%" y="677" width="0.1233%" height="15" fill="rgb(229,105,41)" fg:x="457802" fg:w="588"/><text x="96.2768%" y="687.50"></text></g><g><title>__schedule (3,532 samples, 0.74%)</title><rect x="95.4095%" y="741" width="0.7409%" height="15" fill="rgb(216,99,53)" fg:x="454859" fg:w="3532"/><text x="95.6595%" y="751.50"></text></g><g><title>ret_from_intr (589 samples, 0.12%)</title><rect x="96.0268%" y="725" width="0.1235%" height="15" fill="rgb(253,26,20)" fg:x="457802" fg:w="589"/><text x="96.2768%" y="735.50"></text></g><g><title>do_IRQ (589 samples, 0.12%)</title><rect x="96.0268%" y="709" width="0.1235%" height="15" fill="rgb(249,155,28)" fg:x="457802" fg:w="589"/><text x="96.2768%" y="719.50"></text></g><g><title>irq_exit (589 samples, 0.12%)</title><rect x="96.0268%" y="693" width="0.1235%" height="15" fill="rgb(241,221,2)" fg:x="457802" fg:w="589"/><text x="96.2768%" y="703.50"></text></g><g><title>do_sched_yield (4,231 samples, 0.89%)</title><rect x="95.2652%" y="773" width="0.8875%" height="15" fill="rgb(219,124,6)" fg:x="454171" fg:w="4231"/><text x="95.5152%" y="783.50"></text></g><g><title>schedule (3,591 samples, 0.75%)</title><rect x="95.3994%" y="757" width="0.7532%" height="15" fill="rgb(233,37,6)" fg:x="454811" fg:w="3591"/><text x="95.6494%" y="767.50"></text></g><g><title>__x64_sys_sched_yield (4,255 samples, 0.89%)</title><rect x="95.2650%" y="789" width="0.8925%" height="15" fill="rgb(238,20,14)" fg:x="454170" fg:w="4255"/><text x="95.5150%" y="799.50"></text></g><g><title>_raw_spin_lock (152 samples, 0.03%)</title><rect x="96.1919%" y="693" width="0.0319%" height="15" fill="rgb(232,106,27)" fg:x="458589" fg:w="152"/><text x="96.4419%" y="703.50"></text></g><g><title>native_queued_spin_lock_slowpath (152 samples, 0.03%)</title><rect x="96.1919%" y="677" width="0.0319%" height="15" fill="rgb(246,157,24)" fg:x="458589" fg:w="152"/><text x="96.4419%" y="687.50"></text></g><g><title>napi_consume_skb (49 samples, 0.01%)</title><rect x="96.2261%" y="677" width="0.0103%" height="15" fill="rgb(214,153,10)" fg:x="458752" fg:w="49"/><text x="96.4761%" y="687.50"></text></g><g><title>free_old_xmit_skbs (106 samples, 0.02%)</title><rect x="96.2238%" y="693" width="0.0222%" height="15" fill="rgb(212,94,6)" fg:x="458741" fg:w="106"/><text x="96.4738%" y="703.50"></text></g><g><title>virtnet_poll_tx (277 samples, 0.06%)</title><rect x="96.1906%" y="709" width="0.0581%" height="15" fill="rgb(254,25,27)" fg:x="458583" fg:w="277"/><text x="96.4406%" y="719.50"></text></g><g><title>net_rx_action (292 samples, 0.06%)</title><rect x="96.1877%" y="725" width="0.0612%" height="15" fill="rgb(250,43,52)" fg:x="458569" fg:w="292"/><text x="96.4377%" y="735.50"></text></g><g><title>__softirqentry_text_start (394 samples, 0.08%)</title><rect x="96.1671%" y="741" width="0.0826%" height="15" fill="rgb(221,226,40)" fg:x="458471" fg:w="394"/><text x="96.4171%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6,781 samples, 1.42%)</title><rect x="94.8283%" y="821" width="1.4224%" height="15" fill="rgb(235,162,34)" fg:x="452088" fg:w="6781"/><text x="95.0783%" y="831.50"></text></g><g><title>do_syscall_64 (6,585 samples, 1.38%)</title><rect x="94.8694%" y="805" width="1.3812%" height="15" fill="rgb(239,24,26)" fg:x="452284" fg:w="6585"/><text x="95.1194%" y="815.50"></text></g><g><title>ret_from_intr (398 samples, 0.08%)</title><rect x="96.1671%" y="789" width="0.0835%" height="15" fill="rgb(244,226,11)" fg:x="458471" fg:w="398"/><text x="96.4171%" y="799.50"></text></g><g><title>do_IRQ (398 samples, 0.08%)</title><rect x="96.1671%" y="773" width="0.0835%" height="15" fill="rgb(225,23,10)" fg:x="458471" fg:w="398"/><text x="96.4171%" y="783.50"></text></g><g><title>irq_exit (398 samples, 0.08%)</title><rect x="96.1671%" y="757" width="0.0835%" height="15" fill="rgb(249,125,6)" fg:x="458471" fg:w="398"/><text x="96.4171%" y="767.50"></text></g><g><title>_raw_spin_lock (396 samples, 0.08%)</title><rect x="96.3202%" y="725" width="0.0831%" height="15" fill="rgb(246,212,12)" fg:x="459201" fg:w="396"/><text x="96.5702%" y="735.50"></text></g><g><title>native_queued_spin_lock_slowpath (396 samples, 0.08%)</title><rect x="96.3202%" y="709" width="0.0831%" height="15" fill="rgb(230,43,32)" fg:x="459201" fg:w="396"/><text x="96.5702%" y="719.50"></text></g><g><title>skb_release_head_state (61 samples, 0.01%)</title><rect x="96.4138%" y="677" width="0.0128%" height="15" fill="rgb(210,95,23)" fg:x="459647" fg:w="61"/><text x="96.6638%" y="687.50"></text></g><g><title>tcp_wfree (55 samples, 0.01%)</title><rect x="96.4151%" y="661" width="0.0115%" height="15" fill="rgb(229,103,33)" fg:x="459653" fg:w="55"/><text x="96.6651%" y="671.50"></text></g><g><title>napi_consume_skb (91 samples, 0.02%)</title><rect x="96.4083%" y="709" width="0.0191%" height="15" fill="rgb(222,104,27)" fg:x="459621" fg:w="91"/><text x="96.6583%" y="719.50"></text></g><g><title>skb_release_all (85 samples, 0.02%)</title><rect x="96.4096%" y="693" width="0.0178%" height="15" fill="rgb(239,221,23)" fg:x="459627" fg:w="85"/><text x="96.6596%" y="703.50"></text></g><g><title>free_old_xmit_skbs (194 samples, 0.04%)</title><rect x="96.4033%" y="725" width="0.0407%" height="15" fill="rgb(222,98,21)" fg:x="459597" fg:w="194"/><text x="96.6533%" y="735.50"></text></g><g><title>virtqueue_get_buf (79 samples, 0.02%)</title><rect x="96.4274%" y="709" width="0.0166%" height="15" fill="rgb(231,101,20)" fg:x="459712" fg:w="79"/><text x="96.6774%" y="719.50"></text></g><g><title>virtqueue_get_buf_ctx (79 samples, 0.02%)</title><rect x="96.4274%" y="693" width="0.0166%" height="15" fill="rgb(215,150,22)" fg:x="459712" fg:w="79"/><text x="96.6774%" y="703.50"></text></g><g><title>detach_buf_split (58 samples, 0.01%)</title><rect x="96.4318%" y="677" width="0.0122%" height="15" fill="rgb(248,3,34)" fg:x="459733" fg:w="58"/><text x="96.6818%" y="687.50"></text></g><g><title>kfree (51 samples, 0.01%)</title><rect x="96.4333%" y="661" width="0.0107%" height="15" fill="rgb(220,141,21)" fg:x="459740" fg:w="51"/><text x="96.6833%" y="671.50"></text></g><g><title>virtnet_poll_tx (644 samples, 0.14%)</title><rect x="96.3161%" y="741" width="0.1351%" height="15" fill="rgb(223,41,48)" fg:x="459181" fg:w="644"/><text x="96.5661%" y="751.50"></text></g><g><title>net_rx_action (681 samples, 0.14%)</title><rect x="96.3095%" y="757" width="0.1428%" height="15" fill="rgb(247,12,5)" fg:x="459150" fg:w="681"/><text x="96.5595%" y="767.50"></text></g><g><title>__softirqentry_text_start (965 samples, 0.20%)</title><rect x="96.2506%" y="773" width="0.2024%" height="15" fill="rgb(206,173,10)" fg:x="458869" fg:w="965"/><text x="96.5006%" y="783.50"></text></g><g><title>__sched_yield (12,341 samples, 2.59%)</title><rect x="93.8657%" y="837" width="2.5886%" height="15" fill="rgb(233,214,37)" fg:x="447499" fg:w="12341"/><text x="94.1157%" y="847.50">__..</text></g><g><title>ret_from_intr (971 samples, 0.20%)</title><rect x="96.2506%" y="821" width="0.2037%" height="15" fill="rgb(238,86,43)" fg:x="458869" fg:w="971"/><text x="96.5006%" y="831.50"></text></g><g><title>do_IRQ (971 samples, 0.20%)</title><rect x="96.2506%" y="805" width="0.2037%" height="15" fill="rgb(212,182,8)" fg:x="458869" fg:w="971"/><text x="96.5006%" y="815.50"></text></g><g><title>irq_exit (971 samples, 0.20%)</title><rect x="96.2506%" y="789" width="0.2037%" height="15" fill="rgb(240,91,47)" fg:x="458869" fg:w="971"/><text x="96.5006%" y="799.50"></text></g><g><title>__softirqentry_text_start (100 samples, 0.02%)</title><rect x="96.5661%" y="757" width="0.0210%" height="15" fill="rgb(209,138,26)" fg:x="460373" fg:w="100"/><text x="96.8161%" y="767.50"></text></g><g><title>net_rx_action (80 samples, 0.02%)</title><rect x="96.5703%" y="741" width="0.0168%" height="15" fill="rgb(231,163,20)" fg:x="460393" fg:w="80"/><text x="96.8203%" y="751.50"></text></g><g><title>virtnet_poll_tx (75 samples, 0.02%)</title><rect x="96.5713%" y="725" width="0.0157%" height="15" fill="rgb(214,91,54)" fg:x="460398" fg:w="75"/><text x="96.8213%" y="735.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (634 samples, 0.13%)</title><rect x="96.4543%" y="837" width="0.1330%" height="15" fill="rgb(230,32,17)" fg:x="459840" fg:w="634"/><text x="96.7043%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (634 samples, 0.13%)</title><rect x="96.4543%" y="821" width="0.1330%" height="15" fill="rgb(231,34,34)" fg:x="459840" fg:w="634"/><text x="96.7043%" y="831.50"></text></g><g><title>ret_from_intr (101 samples, 0.02%)</title><rect x="96.5661%" y="805" width="0.0212%" height="15" fill="rgb(224,228,27)" fg:x="460373" fg:w="101"/><text x="96.8161%" y="815.50"></text></g><g><title>do_IRQ (101 samples, 0.02%)</title><rect x="96.5661%" y="789" width="0.0212%" height="15" fill="rgb(219,35,40)" fg:x="460373" fg:w="101"/><text x="96.8161%" y="799.50"></text></g><g><title>irq_exit (101 samples, 0.02%)</title><rect x="96.5661%" y="773" width="0.0212%" height="15" fill="rgb(234,42,8)" fg:x="460373" fg:w="101"/><text x="96.8161%" y="783.50"></text></g><g><title>_raw_spin_lock (218 samples, 0.05%)</title><rect x="97.1572%" y="693" width="0.0457%" height="15" fill="rgb(226,75,22)" fg:x="463191" fg:w="218"/><text x="97.4072%" y="703.50"></text></g><g><title>native_queued_spin_lock_slowpath (218 samples, 0.05%)</title><rect x="97.1572%" y="677" width="0.0457%" height="15" fill="rgb(242,203,28)" fg:x="463191" fg:w="218"/><text x="97.4072%" y="687.50"></text></g><g><title>skb_release_head_state (49 samples, 0.01%)</title><rect x="97.2075%" y="645" width="0.0103%" height="15" fill="rgb(221,3,9)" fg:x="463431" fg:w="49"/><text x="97.4575%" y="655.50"></text></g><g><title>napi_consume_skb (69 samples, 0.01%)</title><rect x="97.2037%" y="677" width="0.0145%" height="15" fill="rgb(214,34,31)" fg:x="463413" fg:w="69"/><text x="97.4537%" y="687.50"></text></g><g><title>skb_release_all (68 samples, 0.01%)</title><rect x="97.2040%" y="661" width="0.0143%" height="15" fill="rgb(252,119,15)" fg:x="463414" fg:w="68"/><text x="97.4540%" y="671.50"></text></g><g><title>virtqueue_get_buf (52 samples, 0.01%)</title><rect x="97.2182%" y="677" width="0.0109%" height="15" fill="rgb(244,224,31)" fg:x="463482" fg:w="52"/><text x="97.4682%" y="687.50"></text></g><g><title>virtqueue_get_buf_ctx (52 samples, 0.01%)</title><rect x="97.2182%" y="661" width="0.0109%" height="15" fill="rgb(215,8,51)" fg:x="463482" fg:w="52"/><text x="97.4682%" y="671.50"></text></g><g><title>free_old_xmit_skbs (126 samples, 0.03%)</title><rect x="97.2029%" y="693" width="0.0264%" height="15" fill="rgb(207,24,1)" fg:x="463409" fg:w="126"/><text x="97.4529%" y="703.50"></text></g><g><title>virtnet_poll_tx (365 samples, 0.08%)</title><rect x="97.1549%" y="709" width="0.0766%" height="15" fill="rgb(245,90,0)" fg:x="463180" fg:w="365"/><text x="97.4049%" y="719.50"></text></g><g><title>net_rx_action (380 samples, 0.08%)</title><rect x="97.1519%" y="725" width="0.0797%" height="15" fill="rgb(246,43,48)" fg:x="463166" fg:w="380"/><text x="97.4019%" y="735.50"></text></g><g><title>__softirqentry_text_start (510 samples, 0.11%)</title><rect x="97.1257%" y="741" width="0.1070%" height="15" fill="rgb(252,218,10)" fg:x="463041" fg:w="510"/><text x="97.3757%" y="751.50"></text></g><g><title>ret_from_intr (512 samples, 0.11%)</title><rect x="97.1257%" y="789" width="0.1074%" height="15" fill="rgb(231,24,35)" fg:x="463041" fg:w="512"/><text x="97.3757%" y="799.50"></text></g><g><title>do_IRQ (512 samples, 0.11%)</title><rect x="97.1257%" y="773" width="0.1074%" height="15" fill="rgb(225,66,19)" fg:x="463041" fg:w="512"/><text x="97.3757%" y="783.50"></text></g><g><title>irq_exit (512 samples, 0.11%)</title><rect x="97.1257%" y="757" width="0.1074%" height="15" fill="rgb(214,96,51)" fg:x="463041" fg:w="512"/><text x="97.3757%" y="767.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (3,081 samples, 0.65%)</title><rect x="96.5873%" y="837" width="0.6463%" height="15" fill="rgb(251,151,47)" fg:x="460474" fg:w="3081"/><text x="96.8373%" y="847.50"></text></g><g><title>core::hint::spin_loop (3,081 samples, 0.65%)</title><rect x="96.5873%" y="821" width="0.6463%" height="15" fill="rgb(236,79,14)" fg:x="460474" fg:w="3081"/><text x="96.8373%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (3,081 samples, 0.65%)</title><rect x="96.5873%" y="805" width="0.6463%" height="15" fill="rgb(210,205,11)" fg:x="460474" fg:w="3081"/><text x="96.8373%" y="815.50"></text></g><g><title>__softirqentry_text_start (52 samples, 0.01%)</title><rect x="97.2335%" y="789" width="0.0109%" height="15" fill="rgb(233,142,53)" fg:x="463555" fg:w="52"/><text x="97.4835%" y="799.50"></text></g><g><title>ret_from_intr (54 samples, 0.01%)</title><rect x="97.2335%" y="837" width="0.0113%" height="15" fill="rgb(212,116,48)" fg:x="463555" fg:w="54"/><text x="97.4835%" y="847.50"></text></g><g><title>do_IRQ (54 samples, 0.01%)</title><rect x="97.2335%" y="821" width="0.0113%" height="15" fill="rgb(234,55,33)" fg:x="463555" fg:w="54"/><text x="97.4835%" y="831.50"></text></g><g><title>irq_exit (54 samples, 0.01%)</title><rect x="97.2335%" y="805" width="0.0113%" height="15" fill="rgb(253,92,27)" fg:x="463555" fg:w="54"/><text x="97.4835%" y="815.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (16,361 samples, 3.43%)</title><rect x="93.8172%" y="853" width="3.4318%" height="15" fill="rgb(220,7,35)" fg:x="447268" fg:w="16361"/><text x="94.0672%" y="863.50">cro..</text></g><g><title>[[vdso]] (128 samples, 0.03%)</title><rect x="97.2621%" y="773" width="0.0268%" height="15" fill="rgb(246,124,6)" fg:x="463691" fg:w="128"/><text x="97.5121%" y="783.50"></text></g><g><title>__vdso_clock_gettime (140 samples, 0.03%)</title><rect x="97.2602%" y="789" width="0.0294%" height="15" fill="rgb(212,111,51)" fg:x="463682" fg:w="140"/><text x="97.5102%" y="799.50"></text></g><g><title>__clock_gettime (175 samples, 0.04%)</title><rect x="97.2543%" y="805" width="0.0367%" height="15" fill="rgb(253,116,7)" fg:x="463654" fg:w="175"/><text x="97.5043%" y="815.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (33,412 samples, 7.01%)</title><rect x="90.2837%" y="869" width="7.0084%" height="15" fill="rgb(213,145,18)" fg:x="430422" fg:w="33412"/><text x="90.5337%" y="879.50">crossbeam..</text></g><g><title>std::time::Instant::now (192 samples, 0.04%)</title><rect x="97.2518%" y="853" width="0.0403%" height="15" fill="rgb(219,149,7)" fg:x="463642" fg:w="192"/><text x="97.5018%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (191 samples, 0.04%)</title><rect x="97.2520%" y="837" width="0.0401%" height="15" fill="rgb(225,156,20)" fg:x="463643" fg:w="191"/><text x="97.5020%" y="847.50"></text></g><g><title>std::sys::unix::time::inner::now (191 samples, 0.04%)</title><rect x="97.2520%" y="821" width="0.0401%" height="15" fill="rgb(211,98,19)" fg:x="463643" fg:w="191"/><text x="97.5020%" y="831.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv_deadline (33,521 samples, 7.03%)</title><rect x="90.2644%" y="885" width="7.0312%" height="15" fill="rgb(231,192,31)" fg:x="430330" fg:w="33521"/><text x="90.5144%" y="895.50">crossbeam..</text></g><g><title>net_rx_action (85 samples, 0.02%)</title><rect x="97.5037%" y="709" width="0.0178%" height="15" fill="rgb(249,95,19)" fg:x="464843" fg:w="85"/><text x="97.7537%" y="719.50"></text></g><g><title>virtnet_poll_tx (81 samples, 0.02%)</title><rect x="97.5045%" y="693" width="0.0170%" height="15" fill="rgb(247,101,36)" fg:x="464847" fg:w="81"/><text x="97.7545%" y="703.50"></text></g><g><title>__softirqentry_text_start (118 samples, 0.02%)</title><rect x="97.4970%" y="725" width="0.0248%" height="15" fill="rgb(221,45,43)" fg:x="464811" fg:w="118"/><text x="97.7470%" y="735.50"></text></g><g><title>[[vdso]] (735 samples, 0.15%)</title><rect x="97.3678%" y="789" width="0.1542%" height="15" fill="rgb(220,42,1)" fg:x="464195" fg:w="735"/><text x="97.6178%" y="799.50"></text></g><g><title>ret_from_intr (119 samples, 0.02%)</title><rect x="97.4970%" y="773" width="0.0250%" height="15" fill="rgb(236,19,24)" fg:x="464811" fg:w="119"/><text x="97.7470%" y="783.50"></text></g><g><title>do_IRQ (119 samples, 0.02%)</title><rect x="97.4970%" y="757" width="0.0250%" height="15" fill="rgb(225,192,6)" fg:x="464811" fg:w="119"/><text x="97.7470%" y="767.50"></text></g><g><title>irq_exit (119 samples, 0.02%)</title><rect x="97.4970%" y="741" width="0.0250%" height="15" fill="rgb(242,30,19)" fg:x="464811" fg:w="119"/><text x="97.7470%" y="751.50"></text></g><g><title>__vdso_clock_gettime (831 samples, 0.17%)</title><rect x="97.3514%" y="805" width="0.1743%" height="15" fill="rgb(240,36,6)" fg:x="464117" fg:w="831"/><text x="97.6014%" y="815.50"></text></g><g><title>__clock_gettime (942 samples, 0.20%)</title><rect x="97.3319%" y="821" width="0.1976%" height="15" fill="rgb(246,40,28)" fg:x="464024" fg:w="942"/><text x="97.5819%" y="831.50"></text></g><g><title>std::time::Instant::now (1,006 samples, 0.21%)</title><rect x="97.3218%" y="869" width="0.2110%" height="15" fill="rgb(225,155,33)" fg:x="463976" fg:w="1006"/><text x="97.5718%" y="879.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (997 samples, 0.21%)</title><rect x="97.3237%" y="853" width="0.2091%" height="15" fill="rgb(240,65,18)" fg:x="463985" fg:w="997"/><text x="97.5737%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::now (997 samples, 0.21%)</title><rect x="97.3237%" y="837" width="0.2091%" height="15" fill="rgb(217,0,48)" fg:x="463985" fg:w="997"/><text x="97.5737%" y="847.50"></text></g><g><title>crossbeam_channel::utils::convert_timeout_to_deadline (1,224 samples, 0.26%)</title><rect x="97.2956%" y="885" width="0.2567%" height="15" fill="rgb(217,80,15)" fg:x="463851" fg:w="1224"/><text x="97.5456%" y="895.50"></text></g><g><title>std::time::SystemTime::checked_add (93 samples, 0.02%)</title><rect x="97.5328%" y="869" width="0.0195%" height="15" fill="rgb(253,43,51)" fg:x="464982" fg:w="93"/><text x="97.7828%" y="879.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv_timeout (34,803 samples, 7.30%)</title><rect x="90.2537%" y="901" width="7.3001%" height="15" fill="rgb(246,60,4)" fg:x="430279" fg:w="34803"/><text x="90.5037%" y="911.50">crossbeam_..</text></g><g><title>[libc-2.31.so] (99 samples, 0.02%)</title><rect x="97.7602%" y="837" width="0.0208%" height="15" fill="rgb(230,40,54)" fg:x="466066" fg:w="99"/><text x="98.0102%" y="847.50"></text></g><g><title>[libc-2.31.so] (75 samples, 0.02%)</title><rect x="97.7929%" y="757" width="0.0157%" height="15" fill="rgb(208,20,44)" fg:x="466222" fg:w="75"/><text x="98.0429%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (243 samples, 0.05%)</title><rect x="97.7602%" y="853" width="0.0510%" height="15" fill="rgb(230,22,22)" fg:x="466066" fg:w="243"/><text x="98.0102%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (144 samples, 0.03%)</title><rect x="97.7810%" y="837" width="0.0302%" height="15" fill="rgb(207,57,4)" fg:x="466165" fg:w="144"/><text x="98.0310%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (144 samples, 0.03%)</title><rect x="97.7810%" y="821" width="0.0302%" height="15" fill="rgb(242,130,33)" fg:x="466165" fg:w="144"/><text x="98.0310%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (144 samples, 0.03%)</title><rect x="97.7810%" y="805" width="0.0302%" height="15" fill="rgb(218,66,43)" fg:x="466165" fg:w="144"/><text x="98.0310%" y="815.50"></text></g><g><title>alloc::alloc::alloc (143 samples, 0.03%)</title><rect x="97.7812%" y="789" width="0.0300%" height="15" fill="rgb(236,105,16)" fg:x="466166" fg:w="143"/><text x="98.0312%" y="799.50"></text></g><g><title>__libc_malloc (143 samples, 0.03%)</title><rect x="97.7812%" y="773" width="0.0300%" height="15" fill="rgb(230,46,15)" fg:x="466166" fg:w="143"/><text x="98.0312%" y="783.50"></text></g><g><title>_raw_spin_lock (57 samples, 0.01%)</title><rect x="97.8313%" y="757" width="0.0120%" height="15" fill="rgb(251,172,40)" fg:x="466405" fg:w="57"/><text x="98.0813%" y="767.50"></text></g><g><title>native_queued_spin_lock_slowpath (57 samples, 0.01%)</title><rect x="97.8313%" y="741" width="0.0120%" height="15" fill="rgb(225,217,32)" fg:x="466405" fg:w="57"/><text x="98.0813%" y="751.50"></text></g><g><title>virtnet_poll_tx (91 samples, 0.02%)</title><rect x="97.8307%" y="773" width="0.0191%" height="15" fill="rgb(243,10,29)" fg:x="466402" fg:w="91"/><text x="98.0807%" y="783.50"></text></g><g><title>net_rx_action (98 samples, 0.02%)</title><rect x="97.8294%" y="789" width="0.0206%" height="15" fill="rgb(207,102,10)" fg:x="466396" fg:w="98"/><text x="98.0794%" y="799.50"></text></g><g><title>__softirqentry_text_start (142 samples, 0.03%)</title><rect x="97.8204%" y="805" width="0.0298%" height="15" fill="rgb(241,125,5)" fg:x="466353" fg:w="142"/><text x="98.0704%" y="815.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (1,270 samples, 0.27%)</title><rect x="97.5840%" y="869" width="0.2664%" height="15" fill="rgb(230,125,29)" fg:x="465226" fg:w="1270"/><text x="97.8340%" y="879.50"></text></g><g><title>ret_from_intr (143 samples, 0.03%)</title><rect x="97.8204%" y="853" width="0.0300%" height="15" fill="rgb(223,65,44)" fg:x="466353" fg:w="143"/><text x="98.0704%" y="863.50"></text></g><g><title>do_IRQ (143 samples, 0.03%)</title><rect x="97.8204%" y="837" width="0.0300%" height="15" fill="rgb(224,188,28)" fg:x="466353" fg:w="143"/><text x="98.0704%" y="847.50"></text></g><g><title>irq_exit (143 samples, 0.03%)</title><rect x="97.8204%" y="821" width="0.0300%" height="15" fill="rgb(254,197,27)" fg:x="466353" fg:w="143"/><text x="98.0704%" y="831.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (514 samples, 0.11%)</title><rect x="97.8504%" y="869" width="0.1078%" height="15" fill="rgb(220,200,25)" fg:x="466496" fg:w="514"/><text x="98.1004%" y="879.50"></text></g><g><title>ret_from_intr (64 samples, 0.01%)</title><rect x="97.9448%" y="853" width="0.0134%" height="15" fill="rgb(239,225,54)" fg:x="466946" fg:w="64"/><text x="98.1948%" y="863.50"></text></g><g><title>do_IRQ (64 samples, 0.01%)</title><rect x="97.9448%" y="837" width="0.0134%" height="15" fill="rgb(211,59,40)" fg:x="466946" fg:w="64"/><text x="98.1948%" y="847.50"></text></g><g><title>irq_exit (64 samples, 0.01%)</title><rect x="97.9448%" y="821" width="0.0134%" height="15" fill="rgb(213,176,46)" fg:x="466946" fg:w="64"/><text x="98.1948%" y="831.50"></text></g><g><title>__softirqentry_text_start (64 samples, 0.01%)</title><rect x="97.9448%" y="805" width="0.0134%" height="15" fill="rgb(226,99,4)" fg:x="466946" fg:w="64"/><text x="98.1948%" y="815.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1,846 samples, 0.39%)</title><rect x="97.5731%" y="885" width="0.3872%" height="15" fill="rgb(239,203,43)" fg:x="465174" fg:w="1846"/><text x="97.8231%" y="895.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1,955 samples, 0.41%)</title><rect x="97.5538%" y="901" width="0.4101%" height="15" fill="rgb(246,1,45)" fg:x="465082" fg:w="1955"/><text x="97.8038%" y="911.50"></text></g><g><title>ret_from_intr (92 samples, 0.02%)</title><rect x="97.9639%" y="901" width="0.0193%" height="15" fill="rgb(231,42,52)" fg:x="467037" fg:w="92"/><text x="98.2139%" y="911.50"></text></g><g><title>do_IRQ (92 samples, 0.02%)</title><rect x="97.9639%" y="885" width="0.0193%" height="15" fill="rgb(240,13,50)" fg:x="467037" fg:w="92"/><text x="98.2139%" y="895.50"></text></g><g><title>irq_exit (92 samples, 0.02%)</title><rect x="97.9639%" y="869" width="0.0193%" height="15" fill="rgb(225,81,14)" fg:x="467037" fg:w="92"/><text x="98.2139%" y="879.50"></text></g><g><title>__softirqentry_text_start (92 samples, 0.02%)</title><rect x="97.9639%" y="853" width="0.0193%" height="15" fill="rgb(216,182,23)" fg:x="467037" fg:w="92"/><text x="98.2139%" y="863.50"></text></g><g><title>net_rx_action (66 samples, 0.01%)</title><rect x="97.9694%" y="837" width="0.0138%" height="15" fill="rgb(233,137,19)" fg:x="467063" fg:w="66"/><text x="98.2194%" y="847.50"></text></g><g><title>virtnet_poll_tx (62 samples, 0.01%)</title><rect x="97.9702%" y="821" width="0.0130%" height="15" fill="rgb(242,61,46)" fg:x="467067" fg:w="62"/><text x="98.2202%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (64 samples, 0.01%)</title><rect x="98.0029%" y="773" width="0.0134%" height="15" fill="rgb(221,168,51)" fg:x="467223" fg:w="64"/><text x="98.2529%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (112 samples, 0.02%)</title><rect x="98.0224%" y="757" width="0.0235%" height="15" fill="rgb(238,48,15)" fg:x="467316" fg:w="112"/><text x="98.2724%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (75 samples, 0.02%)</title><rect x="98.0459%" y="757" width="0.0157%" height="15" fill="rgb(216,13,16)" fg:x="467428" fg:w="75"/><text x="98.2959%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (226 samples, 0.05%)</title><rect x="98.0163%" y="773" width="0.0474%" height="15" fill="rgb(223,185,34)" fg:x="467287" fg:w="226"/><text x="98.2663%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (354 samples, 0.07%)</title><rect x="97.9910%" y="821" width="0.0743%" height="15" fill="rgb(228,94,42)" fg:x="467166" fg:w="354"/><text x="98.2410%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (354 samples, 0.07%)</title><rect x="97.9910%" y="805" width="0.0743%" height="15" fill="rgb(218,166,43)" fg:x="467166" fg:w="354"/><text x="98.2410%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (354 samples, 0.07%)</title><rect x="97.9910%" y="789" width="0.0743%" height="15" fill="rgb(232,30,50)" fg:x="467166" fg:w="354"/><text x="98.2410%" y="799.50"></text></g><g><title>core::hash::sip::u8to64_le (69 samples, 0.01%)</title><rect x="98.0881%" y="725" width="0.0145%" height="15" fill="rgb(245,206,45)" fg:x="467629" fg:w="69"/><text x="98.3381%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (105 samples, 0.02%)</title><rect x="98.0818%" y="757" width="0.0220%" height="15" fill="rgb(220,56,22)" fg:x="467599" fg:w="105"/><text x="98.3318%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (105 samples, 0.02%)</title><rect x="98.0818%" y="741" width="0.0220%" height="15" fill="rgb(239,129,38)" fg:x="467599" fg:w="105"/><text x="98.3318%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (117 samples, 0.02%)</title><rect x="98.0795%" y="773" width="0.0245%" height="15" fill="rgb(207,68,41)" fg:x="467588" fg:w="117"/><text x="98.3295%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (134 samples, 0.03%)</title><rect x="98.1080%" y="741" width="0.0281%" height="15" fill="rgb(221,21,7)" fg:x="467724" fg:w="134"/><text x="98.3580%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (134 samples, 0.03%)</title><rect x="98.1080%" y="725" width="0.0281%" height="15" fill="rgb(240,33,25)" fg:x="467724" fg:w="134"/><text x="98.3580%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (138 samples, 0.03%)</title><rect x="98.1074%" y="757" width="0.0289%" height="15" fill="rgb(242,119,10)" fg:x="467721" fg:w="138"/><text x="98.3574%" y="767.50"></text></g><g><title>core::hash::Hasher::write_u8 (157 samples, 0.03%)</title><rect x="98.1040%" y="773" width="0.0329%" height="15" fill="rgb(214,149,40)" fg:x="467705" fg:w="157"/><text x="98.3540%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (296 samples, 0.06%)</title><rect x="98.0751%" y="821" width="0.0621%" height="15" fill="rgb(228,25,36)" fg:x="467567" fg:w="296"/><text x="98.3251%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (296 samples, 0.06%)</title><rect x="98.0751%" y="805" width="0.0621%" height="15" fill="rgb(222,59,15)" fg:x="467567" fg:w="296"/><text x="98.3251%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (283 samples, 0.06%)</title><rect x="98.0778%" y="789" width="0.0594%" height="15" fill="rgb(218,170,0)" fg:x="467580" fg:w="283"/><text x="98.3278%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (726 samples, 0.15%)</title><rect x="97.9855%" y="853" width="0.1523%" height="15" fill="rgb(232,173,23)" fg:x="467140" fg:w="726"/><text x="98.2355%" y="863.50"></text></g><g><title>core::hash::BuildHasher::hash_one (723 samples, 0.15%)</title><rect x="97.9861%" y="837" width="0.1517%" height="15" fill="rgb(218,116,1)" fg:x="467143" fg:w="723"/><text x="98.2361%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (232 samples, 0.05%)</title><rect x="98.1479%" y="725" width="0.0487%" height="15" fill="rgb(207,34,4)" fg:x="467914" fg:w="232"/><text x="98.3979%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (234 samples, 0.05%)</title><rect x="98.1476%" y="757" width="0.0491%" height="15" fill="rgb(229,54,52)" fg:x="467913" fg:w="234"/><text x="98.3976%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (234 samples, 0.05%)</title><rect x="98.1476%" y="741" width="0.0491%" height="15" fill="rgb(211,86,23)" fg:x="467913" fg:w="234"/><text x="98.3976%" y="751.50"></text></g><g><title>[libc-2.31.so] (323 samples, 0.07%)</title><rect x="98.2032%" y="693" width="0.0678%" height="15" fill="rgb(254,153,34)" fg:x="468178" fg:w="323"/><text x="98.4532%" y="703.50"></text></g><g><title>ret_from_intr (53 samples, 0.01%)</title><rect x="98.2599%" y="677" width="0.0111%" height="15" fill="rgb(219,220,14)" fg:x="468448" fg:w="53"/><text x="98.5099%" y="687.50"></text></g><g><title>do_IRQ (53 samples, 0.01%)</title><rect x="98.2599%" y="661" width="0.0111%" height="15" fill="rgb(247,8,26)" fg:x="468448" fg:w="53"/><text x="98.5099%" y="671.50"></text></g><g><title>irq_exit (53 samples, 0.01%)</title><rect x="98.2599%" y="645" width="0.0111%" height="15" fill="rgb(213,129,42)" fg:x="468448" fg:w="53"/><text x="98.5099%" y="655.50"></text></g><g><title>__softirqentry_text_start (53 samples, 0.01%)</title><rect x="98.2599%" y="629" width="0.0111%" height="15" fill="rgb(225,95,41)" fg:x="468448" fg:w="53"/><text x="98.5099%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (591 samples, 0.12%)</title><rect x="98.1476%" y="789" width="0.1240%" height="15" fill="rgb(215,134,24)" fg:x="467913" fg:w="591"/><text x="98.3976%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (591 samples, 0.12%)</title><rect x="98.1476%" y="773" width="0.1240%" height="15" fill="rgb(235,23,54)" fg:x="467913" fg:w="591"/><text x="98.3976%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (357 samples, 0.07%)</title><rect x="98.1967%" y="757" width="0.0749%" height="15" fill="rgb(229,96,31)" fg:x="468147" fg:w="357"/><text x="98.4467%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (357 samples, 0.07%)</title><rect x="98.1967%" y="741" width="0.0749%" height="15" fill="rgb(206,111,12)" fg:x="468147" fg:w="357"/><text x="98.4467%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (357 samples, 0.07%)</title><rect x="98.1967%" y="725" width="0.0749%" height="15" fill="rgb(222,177,8)" fg:x="468147" fg:w="357"/><text x="98.4467%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (357 samples, 0.07%)</title><rect x="98.1967%" y="709" width="0.0749%" height="15" fill="rgb(251,36,52)" fg:x="468147" fg:w="357"/><text x="98.4467%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (593 samples, 0.12%)</title><rect x="98.1476%" y="805" width="0.1244%" height="15" fill="rgb(216,182,29)" fg:x="467913" fg:w="593"/><text x="98.3976%" y="815.50"></text></g><g><title>hashbrown::raw::h2 (65 samples, 0.01%)</title><rect x="98.2819%" y="805" width="0.0136%" height="15" fill="rgb(241,145,50)" fg:x="468553" fg:w="65"/><text x="98.5319%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (138 samples, 0.03%)</title><rect x="98.2955%" y="805" width="0.0289%" height="15" fill="rgb(231,71,35)" fg:x="468618" fg:w="138"/><text x="98.5455%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (138 samples, 0.03%)</title><rect x="98.2955%" y="789" width="0.0289%" height="15" fill="rgb(218,22,17)" fg:x="468618" fg:w="138"/><text x="98.5455%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (138 samples, 0.03%)</title><rect x="98.2955%" y="773" width="0.0289%" height="15" fill="rgb(225,227,6)" fg:x="468618" fg:w="138"/><text x="98.5455%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (85 samples, 0.02%)</title><rect x="98.3245%" y="805" width="0.0178%" height="15" fill="rgb(224,204,17)" fg:x="468756" fg:w="85"/><text x="98.5745%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (85 samples, 0.02%)</title><rect x="98.3245%" y="789" width="0.0178%" height="15" fill="rgb(227,61,28)" fg:x="468756" fg:w="85"/><text x="98.5745%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (984 samples, 0.21%)</title><rect x="98.1378%" y="853" width="0.2064%" height="15" fill="rgb(242,148,23)" fg:x="467866" fg:w="984"/><text x="98.3878%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (984 samples, 0.21%)</title><rect x="98.1378%" y="837" width="0.2064%" height="15" fill="rgb(237,105,33)" fg:x="467866" fg:w="984"/><text x="98.3878%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (984 samples, 0.21%)</title><rect x="98.1378%" y="821" width="0.2064%" height="15" fill="rgb(238,218,40)" fg:x="467866" fg:w="984"/><text x="98.3878%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1,729 samples, 0.36%)</title><rect x="97.9832%" y="901" width="0.3627%" height="15" fill="rgb(209,126,11)" fg:x="467129" fg:w="1729"/><text x="98.2332%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1,729 samples, 0.36%)</title><rect x="97.9832%" y="885" width="0.3627%" height="15" fill="rgb(245,90,11)" fg:x="467129" fg:w="1729"/><text x="98.2332%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1,726 samples, 0.36%)</title><rect x="97.9838%" y="869" width="0.3620%" height="15" fill="rgb(211,195,10)" fg:x="467132" fg:w="1726"/><text x="98.2338%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (54 samples, 0.01%)</title><rect x="98.3666%" y="789" width="0.0113%" height="15" fill="rgb(231,45,45)" fg:x="468957" fg:w="54"/><text x="98.6166%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (87 samples, 0.02%)</title><rect x="98.3605%" y="837" width="0.0182%" height="15" fill="rgb(246,100,43)" fg:x="468928" fg:w="87"/><text x="98.6105%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (87 samples, 0.02%)</title><rect x="98.3605%" y="821" width="0.0182%" height="15" fill="rgb(241,193,8)" fg:x="468928" fg:w="87"/><text x="98.6105%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (87 samples, 0.02%)</title><rect x="98.3605%" y="805" width="0.0182%" height="15" fill="rgb(208,76,19)" fg:x="468928" fg:w="87"/><text x="98.6105%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (52 samples, 0.01%)</title><rect x="98.3861%" y="757" width="0.0109%" height="15" fill="rgb(223,69,40)" fg:x="469050" fg:w="52"/><text x="98.6361%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (52 samples, 0.01%)</title><rect x="98.3861%" y="741" width="0.0109%" height="15" fill="rgb(207,120,39)" fg:x="469050" fg:w="52"/><text x="98.6361%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (56 samples, 0.01%)</title><rect x="98.3857%" y="773" width="0.0117%" height="15" fill="rgb(212,209,28)" fg:x="469048" fg:w="56"/><text x="98.6357%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (83 samples, 0.02%)</title><rect x="98.3803%" y="837" width="0.0174%" height="15" fill="rgb(246,82,29)" fg:x="469022" fg:w="83"/><text x="98.6303%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (83 samples, 0.02%)</title><rect x="98.3803%" y="821" width="0.0174%" height="15" fill="rgb(239,6,40)" fg:x="469022" fg:w="83"/><text x="98.6303%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (82 samples, 0.02%)</title><rect x="98.3805%" y="805" width="0.0172%" height="15" fill="rgb(228,181,35)" fg:x="469023" fg:w="82"/><text x="98.6305%" y="815.50"></text></g><g><title>core::hash::Hasher::write_u8 (59 samples, 0.01%)</title><rect x="98.3853%" y="789" width="0.0124%" height="15" fill="rgb(238,151,2)" fg:x="469046" fg:w="59"/><text x="98.6353%" y="799.50"></text></g><g><title>hashbrown::map::make_insert_hash (191 samples, 0.04%)</title><rect x="98.3587%" y="869" width="0.0401%" height="15" fill="rgb(236,94,18)" fg:x="468919" fg:w="191"/><text x="98.6087%" y="879.50"></text></g><g><title>core::hash::BuildHasher::hash_one (190 samples, 0.04%)</title><rect x="98.3589%" y="853" width="0.0399%" height="15" fill="rgb(208,38,14)" fg:x="468920" fg:w="190"/><text x="98.6089%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (176 samples, 0.04%)</title><rect x="98.3987%" y="869" width="0.0369%" height="15" fill="rgb(234,215,27)" fg:x="469110" fg:w="176"/><text x="98.6487%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (176 samples, 0.04%)</title><rect x="98.3987%" y="853" width="0.0369%" height="15" fill="rgb(254,211,53)" fg:x="469110" fg:w="176"/><text x="98.6487%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (176 samples, 0.04%)</title><rect x="98.3987%" y="837" width="0.0369%" height="15" fill="rgb(216,175,11)" fg:x="469110" fg:w="176"/><text x="98.6487%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (110 samples, 0.02%)</title><rect x="98.4356%" y="869" width="0.0231%" height="15" fill="rgb(246,179,26)" fg:x="469286" fg:w="110"/><text x="98.6856%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (544 samples, 0.11%)</title><rect x="98.3478%" y="885" width="0.1141%" height="15" fill="rgb(249,19,52)" fg:x="468867" fg:w="544"/><text x="98.5978%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (555 samples, 0.12%)</title><rect x="98.3459%" y="901" width="0.1164%" height="15" fill="rgb(230,42,52)" fg:x="468858" fg:w="555"/><text x="98.5959%" y="911.50"></text></g><g><title>__softirqentry_text_start (106 samples, 0.02%)</title><rect x="98.5972%" y="709" width="0.0222%" height="15" fill="rgb(221,171,0)" fg:x="470056" fg:w="106"/><text x="98.8472%" y="719.50"></text></g><g><title>net_rx_action (74 samples, 0.02%)</title><rect x="98.6039%" y="693" width="0.0155%" height="15" fill="rgb(222,177,40)" fg:x="470088" fg:w="74"/><text x="98.8539%" y="703.50"></text></g><g><title>virtnet_poll_tx (72 samples, 0.02%)</title><rect x="98.6043%" y="677" width="0.0151%" height="15" fill="rgb(247,34,16)" fg:x="470090" fg:w="72"/><text x="98.8543%" y="687.50"></text></g><g><title>[libc-2.31.so] (741 samples, 0.16%)</title><rect x="98.4644%" y="773" width="0.1554%" height="15" fill="rgb(213,217,37)" fg:x="469423" fg:w="741"/><text x="98.7144%" y="783.50"></text></g><g><title>ret_from_intr (108 samples, 0.02%)</title><rect x="98.5972%" y="757" width="0.0227%" height="15" fill="rgb(231,189,24)" fg:x="470056" fg:w="108"/><text x="98.8472%" y="767.50"></text></g><g><title>do_IRQ (108 samples, 0.02%)</title><rect x="98.5972%" y="741" width="0.0227%" height="15" fill="rgb(214,22,9)" fg:x="470056" fg:w="108"/><text x="98.8472%" y="751.50"></text></g><g><title>irq_exit (108 samples, 0.02%)</title><rect x="98.5972%" y="725" width="0.0227%" height="15" fill="rgb(212,70,22)" fg:x="470056" fg:w="108"/><text x="98.8472%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,056 samples, 0.22%)</title><rect x="98.4631%" y="869" width="0.2215%" height="15" fill="rgb(249,64,51)" fg:x="469417" fg:w="1056"/><text x="98.7131%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,056 samples, 0.22%)</title><rect x="98.4631%" y="853" width="0.2215%" height="15" fill="rgb(249,148,20)" fg:x="469417" fg:w="1056"/><text x="98.7131%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,056 samples, 0.22%)</title><rect x="98.4631%" y="837" width="0.2215%" height="15" fill="rgb(246,46,48)" fg:x="469417" fg:w="1056"/><text x="98.7131%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,056 samples, 0.22%)</title><rect x="98.4631%" y="821" width="0.2215%" height="15" fill="rgb(217,34,48)" fg:x="469417" fg:w="1056"/><text x="98.7131%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,051 samples, 0.22%)</title><rect x="98.4642%" y="805" width="0.2205%" height="15" fill="rgb(222,45,26)" fg:x="469422" fg:w="1051"/><text x="98.7142%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (1,051 samples, 0.22%)</title><rect x="98.4642%" y="789" width="0.2205%" height="15" fill="rgb(230,201,36)" fg:x="469422" fg:w="1051"/><text x="98.7142%" y="799.50"></text></g><g><title>cfree (295 samples, 0.06%)</title><rect x="98.6227%" y="773" width="0.0619%" height="15" fill="rgb(217,30,43)" fg:x="470178" fg:w="295"/><text x="98.8727%" y="783.50"></text></g><g><title>ret_from_intr (48 samples, 0.01%)</title><rect x="98.6746%" y="757" width="0.0101%" height="15" fill="rgb(230,197,40)" fg:x="470425" fg:w="48"/><text x="98.9246%" y="767.50"></text></g><g><title>do_IRQ (48 samples, 0.01%)</title><rect x="98.6746%" y="741" width="0.0101%" height="15" fill="rgb(239,181,18)" fg:x="470425" fg:w="48"/><text x="98.9246%" y="751.50"></text></g><g><title>irq_exit (48 samples, 0.01%)</title><rect x="98.6746%" y="725" width="0.0101%" height="15" fill="rgb(222,60,39)" fg:x="470425" fg:w="48"/><text x="98.9246%" y="735.50"></text></g><g><title>__softirqentry_text_start (48 samples, 0.01%)</title><rect x="98.6746%" y="709" width="0.0101%" height="15" fill="rgb(210,60,22)" fg:x="470425" fg:w="48"/><text x="98.9246%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (51 samples, 0.01%)</title><rect x="98.6987%" y="757" width="0.0107%" height="15" fill="rgb(239,213,48)" fg:x="470540" fg:w="51"/><text x="98.9487%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (93 samples, 0.02%)</title><rect x="98.6955%" y="773" width="0.0195%" height="15" fill="rgb(253,214,23)" fg:x="470525" fg:w="93"/><text x="98.9455%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (136 samples, 0.03%)</title><rect x="98.6873%" y="821" width="0.0285%" height="15" fill="rgb(211,98,45)" fg:x="470486" fg:w="136"/><text x="98.9373%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (136 samples, 0.03%)</title><rect x="98.6873%" y="805" width="0.0285%" height="15" fill="rgb(239,130,44)" fg:x="470486" fg:w="136"/><text x="98.9373%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (136 samples, 0.03%)</title><rect x="98.6873%" y="789" width="0.0285%" height="15" fill="rgb(222,181,35)" fg:x="470486" fg:w="136"/><text x="98.9373%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (108 samples, 0.02%)</title><rect x="98.7186%" y="821" width="0.0227%" height="15" fill="rgb(219,219,49)" fg:x="470635" fg:w="108"/><text x="98.9686%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (108 samples, 0.02%)</title><rect x="98.7186%" y="805" width="0.0227%" height="15" fill="rgb(227,161,51)" fg:x="470635" fg:w="108"/><text x="98.9686%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (103 samples, 0.02%)</title><rect x="98.7196%" y="789" width="0.0216%" height="15" fill="rgb(239,112,27)" fg:x="470640" fg:w="103"/><text x="98.9696%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u8 (55 samples, 0.01%)</title><rect x="98.7297%" y="773" width="0.0115%" height="15" fill="rgb(248,122,18)" fg:x="470688" fg:w="55"/><text x="98.9797%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (266 samples, 0.06%)</title><rect x="98.6861%" y="853" width="0.0558%" height="15" fill="rgb(245,130,23)" fg:x="470480" fg:w="266"/><text x="98.9361%" y="863.50"></text></g><g><title>core::hash::BuildHasher::hash_one (266 samples, 0.06%)</title><rect x="98.6861%" y="837" width="0.0558%" height="15" fill="rgb(211,225,28)" fg:x="470480" fg:w="266"/><text x="98.9361%" y="847.50"></text></g><g><title>[libc-2.31.so] (359 samples, 0.08%)</title><rect x="98.7769%" y="693" width="0.0753%" height="15" fill="rgb(242,105,44)" fg:x="470913" fg:w="359"/><text x="99.0269%" y="703.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (375 samples, 0.08%)</title><rect x="98.7742%" y="789" width="0.0787%" height="15" fill="rgb(216,183,46)" fg:x="470900" fg:w="375"/><text x="99.0242%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (375 samples, 0.08%)</title><rect x="98.7742%" y="773" width="0.0787%" height="15" fill="rgb(227,112,9)" fg:x="470900" fg:w="375"/><text x="99.0242%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (362 samples, 0.08%)</title><rect x="98.7769%" y="757" width="0.0759%" height="15" fill="rgb(244,21,0)" fg:x="470913" fg:w="362"/><text x="99.0269%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (362 samples, 0.08%)</title><rect x="98.7769%" y="741" width="0.0759%" height="15" fill="rgb(236,185,14)" fg:x="470913" fg:w="362"/><text x="99.0269%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (362 samples, 0.08%)</title><rect x="98.7769%" y="725" width="0.0759%" height="15" fill="rgb(236,170,30)" fg:x="470913" fg:w="362"/><text x="99.0269%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (362 samples, 0.08%)</title><rect x="98.7769%" y="709" width="0.0759%" height="15" fill="rgb(209,198,51)" fg:x="470913" fg:w="362"/><text x="99.0269%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (470 samples, 0.10%)</title><rect x="98.7576%" y="805" width="0.0986%" height="15" fill="rgb(205,171,26)" fg:x="470821" fg:w="470"/><text x="99.0076%" y="815.50"></text></g><g><title>hashbrown::raw::h2 (282 samples, 0.06%)</title><rect x="98.8625%" y="805" width="0.0592%" height="15" fill="rgb(246,41,49)" fg:x="471321" fg:w="282"/><text x="99.1125%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (53 samples, 0.01%)</title><rect x="98.9216%" y="805" width="0.0111%" height="15" fill="rgb(240,229,12)" fg:x="471603" fg:w="53"/><text x="99.1716%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (53 samples, 0.01%)</title><rect x="98.9216%" y="789" width="0.0111%" height="15" fill="rgb(212,8,54)" fg:x="471603" fg:w="53"/><text x="99.1716%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (53 samples, 0.01%)</title><rect x="98.9216%" y="773" width="0.0111%" height="15" fill="rgb(230,114,13)" fg:x="471603" fg:w="53"/><text x="99.1716%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (884 samples, 0.19%)</title><rect x="98.7526%" y="821" width="0.1854%" height="15" fill="rgb(229,130,28)" fg:x="470797" fg:w="884"/><text x="99.0026%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (890 samples, 0.19%)</title><rect x="98.7515%" y="837" width="0.1867%" height="15" fill="rgb(206,139,15)" fg:x="470792" fg:w="890"/><text x="99.0015%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (976 samples, 0.20%)</title><rect x="98.7419%" y="853" width="0.2047%" height="15" fill="rgb(241,188,35)" fg:x="470746" fg:w="976"/><text x="98.9919%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1,250 samples, 0.26%)</title><rect x="98.6846%" y="869" width="0.2622%" height="15" fill="rgb(208,224,26)" fg:x="470473" fg:w="1250"/><text x="98.9346%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (2,312 samples, 0.48%)</title><rect x="98.4623%" y="901" width="0.4850%" height="15" fill="rgb(251,131,28)" fg:x="469413" fg:w="2312"/><text x="98.7123%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (2,312 samples, 0.48%)</title><rect x="98.4623%" y="885" width="0.4850%" height="15" fill="rgb(208,153,1)" fg:x="469413" fg:w="2312"/><text x="98.7123%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (60 samples, 0.01%)</title><rect x="98.9783%" y="741" width="0.0126%" height="15" fill="rgb(234,33,36)" fg:x="471873" fg:w="60"/><text x="99.2283%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (138 samples, 0.03%)</title><rect x="98.9716%" y="757" width="0.0289%" height="15" fill="rgb(246,42,29)" fg:x="471841" fg:w="138"/><text x="99.2216%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (211 samples, 0.04%)</title><rect x="98.9575%" y="805" width="0.0443%" height="15" fill="rgb(251,114,16)" fg:x="471774" fg:w="211"/><text x="99.2075%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (211 samples, 0.04%)</title><rect x="98.9575%" y="789" width="0.0443%" height="15" fill="rgb(233,13,38)" fg:x="471774" fg:w="211"/><text x="99.2075%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (211 samples, 0.04%)</title><rect x="98.9575%" y="773" width="0.0443%" height="15" fill="rgb(247,120,19)" fg:x="471774" fg:w="211"/><text x="99.2075%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (226 samples, 0.05%)</title><rect x="99.1501%" y="693" width="0.0474%" height="15" fill="rgb(205,11,16)" fg:x="472692" fg:w="226"/><text x="99.4001%" y="703.50"></text></g><g><title>virtnet_poll_tx (72 samples, 0.02%)</title><rect x="99.2048%" y="613" width="0.0151%" height="15" fill="rgb(228,185,19)" fg:x="472953" fg:w="72"/><text x="99.4548%" y="623.50"></text></g><g><title>net_rx_action (78 samples, 0.02%)</title><rect x="99.2038%" y="629" width="0.0164%" height="15" fill="rgb(239,88,52)" fg:x="472948" fg:w="78"/><text x="99.4538%" y="639.50"></text></g><g><title>__softirqentry_text_start (109 samples, 0.02%)</title><rect x="99.1975%" y="645" width="0.0229%" height="15" fill="rgb(219,23,1)" fg:x="472918" fg:w="109"/><text x="99.4475%" y="655.50"></text></g><g><title>core::hash::sip::u8to64_le (926 samples, 0.19%)</title><rect x="99.0265%" y="709" width="0.1942%" height="15" fill="rgb(253,177,16)" fg:x="472103" fg:w="926"/><text x="99.2765%" y="719.50"></text></g><g><title>ret_from_intr (111 samples, 0.02%)</title><rect x="99.1975%" y="693" width="0.0233%" height="15" fill="rgb(225,150,40)" fg:x="472918" fg:w="111"/><text x="99.4475%" y="703.50"></text></g><g><title>do_IRQ (111 samples, 0.02%)</title><rect x="99.1975%" y="677" width="0.0233%" height="15" fill="rgb(208,108,30)" fg:x="472918" fg:w="111"/><text x="99.4475%" y="687.50"></text></g><g><title>irq_exit (111 samples, 0.02%)</title><rect x="99.1975%" y="661" width="0.0233%" height="15" fill="rgb(214,122,4)" fg:x="472918" fg:w="111"/><text x="99.4475%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (977 samples, 0.20%)</title><rect x="99.0169%" y="757" width="0.2049%" height="15" fill="rgb(229,74,37)" fg:x="472057" fg:w="977"/><text x="99.2669%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (973 samples, 0.20%)</title><rect x="99.0177%" y="741" width="0.2041%" height="15" fill="rgb(233,61,41)" fg:x="472061" fg:w="973"/><text x="99.2677%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (973 samples, 0.20%)</title><rect x="99.0177%" y="725" width="0.2041%" height="15" fill="rgb(238,191,5)" fg:x="472061" fg:w="973"/><text x="99.2677%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (117 samples, 0.02%)</title><rect x="99.2235%" y="741" width="0.0245%" height="15" fill="rgb(233,78,24)" fg:x="473042" fg:w="117"/><text x="99.4735%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (111 samples, 0.02%)</title><rect x="99.2247%" y="725" width="0.0233%" height="15" fill="rgb(211,142,8)" fg:x="473048" fg:w="111"/><text x="99.4747%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (111 samples, 0.02%)</title><rect x="99.2247%" y="709" width="0.0233%" height="15" fill="rgb(253,38,53)" fg:x="473048" fg:w="111"/><text x="99.4747%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u8 (126 samples, 0.03%)</title><rect x="99.2218%" y="757" width="0.0264%" height="15" fill="rgb(234,63,51)" fg:x="473034" fg:w="126"/><text x="99.4718%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,133 samples, 0.24%)</title><rect x="99.0116%" y="805" width="0.2377%" height="15" fill="rgb(205,23,31)" fg:x="472032" fg:w="1133"/><text x="99.2616%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1,133 samples, 0.24%)</title><rect x="99.0116%" y="789" width="0.2377%" height="15" fill="rgb(210,184,50)" fg:x="472032" fg:w="1133"/><text x="99.2616%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,115 samples, 0.23%)</title><rect x="99.0154%" y="773" width="0.2339%" height="15" fill="rgb(222,112,26)" fg:x="472050" fg:w="1115"/><text x="99.2654%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (1,426 samples, 0.30%)</title><rect x="98.9510%" y="837" width="0.2991%" height="15" fill="rgb(250,98,18)" fg:x="471743" fg:w="1426"/><text x="99.2010%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,425 samples, 0.30%)</title><rect x="98.9512%" y="821" width="0.2989%" height="15" fill="rgb(250,34,12)" fg:x="471744" fg:w="1425"/><text x="99.2012%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (161 samples, 0.03%)</title><rect x="99.2579%" y="741" width="0.0338%" height="15" fill="rgb(236,141,30)" fg:x="473206" fg:w="161"/><text x="99.5079%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (161 samples, 0.03%)</title><rect x="99.2579%" y="725" width="0.0338%" height="15" fill="rgb(246,134,38)" fg:x="473206" fg:w="161"/><text x="99.5079%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (161 samples, 0.03%)</title><rect x="99.2579%" y="709" width="0.0338%" height="15" fill="rgb(240,114,4)" fg:x="473206" fg:w="161"/><text x="99.5079%" y="719.50"></text></g><g><title>net_rx_action (54 samples, 0.01%)</title><rect x="99.3988%" y="597" width="0.0113%" height="15" fill="rgb(243,113,39)" fg:x="473878" fg:w="54"/><text x="99.6488%" y="607.50"></text></g><g><title>virtnet_poll_tx (52 samples, 0.01%)</title><rect x="99.3993%" y="581" width="0.0109%" height="15" fill="rgb(239,215,4)" fg:x="473880" fg:w="52"/><text x="99.6493%" y="591.50"></text></g><g><title>__softirqentry_text_start (81 samples, 0.02%)</title><rect x="99.3938%" y="613" width="0.0170%" height="15" fill="rgb(236,229,45)" fg:x="473854" fg:w="81"/><text x="99.6438%" y="623.50"></text></g><g><title>[libc-2.31.so] (504 samples, 0.11%)</title><rect x="99.3053%" y="677" width="0.1057%" height="15" fill="rgb(242,2,6)" fg:x="473432" fg:w="504"/><text x="99.5553%" y="687.50"></text></g><g><title>ret_from_intr (82 samples, 0.02%)</title><rect x="99.3938%" y="661" width="0.0172%" height="15" fill="rgb(239,108,21)" fg:x="473854" fg:w="82"/><text x="99.6438%" y="671.50"></text></g><g><title>do_IRQ (82 samples, 0.02%)</title><rect x="99.3938%" y="645" width="0.0172%" height="15" fill="rgb(215,168,34)" fg:x="473854" fg:w="82"/><text x="99.6438%" y="655.50"></text></g><g><title>irq_exit (82 samples, 0.02%)</title><rect x="99.3938%" y="629" width="0.0172%" height="15" fill="rgb(238,31,17)" fg:x="473854" fg:w="82"/><text x="99.6438%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (743 samples, 0.16%)</title><rect x="99.2579%" y="773" width="0.1558%" height="15" fill="rgb(220,133,11)" fg:x="473206" fg:w="743"/><text x="99.5079%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (743 samples, 0.16%)</title><rect x="99.2579%" y="757" width="0.1558%" height="15" fill="rgb(212,158,23)" fg:x="473206" fg:w="743"/><text x="99.5079%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (582 samples, 0.12%)</title><rect x="99.2917%" y="741" width="0.1221%" height="15" fill="rgb(223,172,7)" fg:x="473367" fg:w="582"/><text x="99.5417%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (582 samples, 0.12%)</title><rect x="99.2917%" y="725" width="0.1221%" height="15" fill="rgb(244,3,52)" fg:x="473367" fg:w="582"/><text x="99.5417%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (582 samples, 0.12%)</title><rect x="99.2917%" y="709" width="0.1221%" height="15" fill="rgb(207,69,27)" fg:x="473367" fg:w="582"/><text x="99.5417%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (582 samples, 0.12%)</title><rect x="99.2917%" y="693" width="0.1221%" height="15" fill="rgb(213,136,45)" fg:x="473367" fg:w="582"/><text x="99.5417%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (745 samples, 0.16%)</title><rect x="99.2579%" y="789" width="0.1563%" height="15" fill="rgb(218,79,17)" fg:x="473206" fg:w="745"/><text x="99.5079%" y="799.50"></text></g><g><title>hashbrown::raw::h2 (50 samples, 0.01%)</title><rect x="99.4213%" y="789" width="0.0105%" height="15" fill="rgb(216,106,36)" fg:x="473985" fg:w="50"/><text x="99.6713%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (122 samples, 0.03%)</title><rect x="99.4318%" y="789" width="0.0256%" height="15" fill="rgb(251,27,45)" fg:x="474035" fg:w="122"/><text x="99.6818%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (122 samples, 0.03%)</title><rect x="99.4318%" y="773" width="0.0256%" height="15" fill="rgb(232,21,34)" fg:x="474035" fg:w="122"/><text x="99.6818%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (122 samples, 0.03%)</title><rect x="99.4318%" y="757" width="0.0256%" height="15" fill="rgb(249,191,16)" fg:x="474035" fg:w="122"/><text x="99.6818%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (64 samples, 0.01%)</title><rect x="99.4574%" y="789" width="0.0134%" height="15" fill="rgb(224,88,20)" fg:x="474157" fg:w="64"/><text x="99.7074%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (64 samples, 0.01%)</title><rect x="99.4574%" y="773" width="0.0134%" height="15" fill="rgb(237,93,27)" fg:x="474157" fg:w="64"/><text x="99.7074%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,057 samples, 0.22%)</title><rect x="99.2501%" y="837" width="0.2217%" height="15" fill="rgb(226,198,48)" fg:x="473169" fg:w="1057"/><text x="99.5001%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,057 samples, 0.22%)</title><rect x="99.2501%" y="821" width="0.2217%" height="15" fill="rgb(207,162,53)" fg:x="473169" fg:w="1057"/><text x="99.5001%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1,057 samples, 0.22%)</title><rect x="99.2501%" y="805" width="0.2217%" height="15" fill="rgb(207,169,9)" fg:x="473169" fg:w="1057"/><text x="99.5001%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (153 samples, 0.03%)</title><rect x="99.4718%" y="837" width="0.0321%" height="15" fill="rgb(224,166,46)" fg:x="474226" fg:w="153"/><text x="99.7218%" y="847.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2,661 samples, 0.56%)</title><rect x="98.9472%" y="901" width="0.5582%" height="15" fill="rgb(233,26,6)" fg:x="471725" fg:w="2661"/><text x="99.1972%" y="911.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2,661 samples, 0.56%)</title><rect x="98.9472%" y="885" width="0.5582%" height="15" fill="rgb(218,106,45)" fg:x="471725" fg:w="2661"/><text x="99.1972%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2,661 samples, 0.56%)</title><rect x="98.9472%" y="869" width="0.5582%" height="15" fill="rgb(240,217,4)" fg:x="471725" fg:w="2661"/><text x="99.1972%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,661 samples, 0.56%)</title><rect x="98.9472%" y="853" width="0.5582%" height="15" fill="rgb(246,171,10)" fg:x="471725" fg:w="2661"/><text x="99.1972%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (65 samples, 0.01%)</title><rect x="99.5507%" y="805" width="0.0136%" height="15" fill="rgb(223,197,30)" fg:x="474602" fg:w="65"/><text x="99.8007%" y="815.50"></text></g><g><title>core::cmp::PartialOrd::ge (65 samples, 0.01%)</title><rect x="99.5507%" y="789" width="0.0136%" height="15" fill="rgb(207,92,16)" fg:x="474602" fg:w="65"/><text x="99.8007%" y="799.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (64 samples, 0.01%)</title><rect x="99.5509%" y="773" width="0.0134%" height="15" fill="rgb(211,6,44)" fg:x="474603" fg:w="64"/><text x="99.8009%" y="783.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (64 samples, 0.01%)</title><rect x="99.5509%" y="757" width="0.0134%" height="15" fill="rgb(219,139,2)" fg:x="474603" fg:w="64"/><text x="99.8009%" y="767.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (64 samples, 0.01%)</title><rect x="99.5509%" y="741" width="0.0134%" height="15" fill="rgb(224,103,21)" fg:x="474603" fg:w="64"/><text x="99.8009%" y="751.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (238 samples, 0.05%)</title><rect x="99.5253%" y="885" width="0.0499%" height="15" fill="rgb(254,110,48)" fg:x="474481" fg:w="238"/><text x="99.7753%" y="895.50"></text></g><g><title>std::time::Instant::duration_since (238 samples, 0.05%)</title><rect x="99.5253%" y="869" width="0.0499%" height="15" fill="rgb(212,88,19)" fg:x="474481" fg:w="238"/><text x="99.7753%" y="879.50"></text></g><g><title>std::time::Instant::checked_duration_since (238 samples, 0.05%)</title><rect x="99.5253%" y="853" width="0.0499%" height="15" fill="rgb(248,103,6)" fg:x="474481" fg:w="238"/><text x="99.7753%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (238 samples, 0.05%)</title><rect x="99.5253%" y="837" width="0.0499%" height="15" fill="rgb(214,53,46)" fg:x="474481" fg:w="238"/><text x="99.7753%" y="847.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (209 samples, 0.04%)</title><rect x="99.5314%" y="821" width="0.0438%" height="15" fill="rgb(236,190,24)" fg:x="474510" fg:w="209"/><text x="99.7814%" y="831.50"></text></g><g><title>[[vdso]] (655 samples, 0.14%)</title><rect x="99.6105%" y="805" width="0.1374%" height="15" fill="rgb(254,58,28)" fg:x="474887" fg:w="655"/><text x="99.8605%" y="815.50"></text></g><g><title>ret_from_intr (100 samples, 0.02%)</title><rect x="99.7269%" y="789" width="0.0210%" height="15" fill="rgb(243,63,27)" fg:x="475442" fg:w="100"/><text x="99.9769%" y="799.50"></text></g><g><title>do_IRQ (100 samples, 0.02%)</title><rect x="99.7269%" y="773" width="0.0210%" height="15" fill="rgb(206,81,20)" fg:x="475442" fg:w="100"/><text x="99.9769%" y="783.50"></text></g><g><title>irq_exit (100 samples, 0.02%)</title><rect x="99.7269%" y="757" width="0.0210%" height="15" fill="rgb(252,69,51)" fg:x="475442" fg:w="100"/><text x="99.9769%" y="767.50"></text></g><g><title>__softirqentry_text_start (100 samples, 0.02%)</title><rect x="99.7269%" y="741" width="0.0210%" height="15" fill="rgb(222,213,4)" fg:x="475442" fg:w="100"/><text x="99.9769%" y="751.50"></text></g><g><title>net_rx_action (76 samples, 0.02%)</title><rect x="99.7319%" y="725" width="0.0159%" height="15" fill="rgb(226,198,12)" fg:x="475466" fg:w="76"/><text x="99.9819%" y="735.50"></text></g><g><title>virtnet_poll_tx (73 samples, 0.02%)</title><rect x="99.7326%" y="709" width="0.0153%" height="15" fill="rgb(248,115,11)" fg:x="475469" fg:w="73"/><text x="99.9826%" y="719.50"></text></g><g><title>__vdso_clock_gettime (736 samples, 0.15%)</title><rect x="99.5962%" y="821" width="0.1544%" height="15" fill="rgb(221,148,54)" fg:x="474819" fg:w="736"/><text x="99.8462%" y="831.50"></text></g><g><title>__clock_gettime (819 samples, 0.17%)</title><rect x="99.5815%" y="837" width="0.1718%" height="15" fill="rgb(214,209,51)" fg:x="474749" fg:w="819"/><text x="99.8315%" y="847.50"></text></g><g><title>std::time::Instant::elapsed (1,183 samples, 0.25%)</title><rect x="99.5067%" y="901" width="0.2481%" height="15" fill="rgb(249,116,53)" fg:x="474392" fg:w="1183"/><text x="99.7567%" y="911.50"></text></g><g><title>std::time::Instant::now (837 samples, 0.18%)</title><rect x="99.5792%" y="885" width="0.1756%" height="15" fill="rgb(248,170,1)" fg:x="474738" fg:w="837"/><text x="99.8292%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (837 samples, 0.18%)</title><rect x="99.5792%" y="869" width="0.1756%" height="15" fill="rgb(244,105,10)" fg:x="474738" fg:w="837"/><text x="99.8292%" y="879.50"></text></g><g><title>std::sys::unix::time::inner::now (837 samples, 0.18%)</title><rect x="99.5792%" y="853" width="0.1756%" height="15" fill="rgb(229,100,5)" fg:x="474738" fg:w="837"/><text x="99.8292%" y="863.50"></text></g><g><title>[[vdso]] (862 samples, 0.18%)</title><rect x="99.8058%" y="821" width="0.1808%" height="15" fill="rgb(233,221,39)" fg:x="475818" fg:w="862"/><text x="100.0558%" y="831.50"></text></g><g><title>ret_from_intr (125 samples, 0.03%)</title><rect x="99.9604%" y="805" width="0.0262%" height="15" fill="rgb(233,88,21)" fg:x="476555" fg:w="125"/><text x="100.2104%" y="815.50"></text></g><g><title>do_IRQ (125 samples, 0.03%)</title><rect x="99.9604%" y="789" width="0.0262%" height="15" fill="rgb(206,13,0)" fg:x="476555" fg:w="125"/><text x="100.2104%" y="799.50"></text></g><g><title>irq_exit (125 samples, 0.03%)</title><rect x="99.9604%" y="773" width="0.0262%" height="15" fill="rgb(242,15,35)" fg:x="476555" fg:w="125"/><text x="100.2104%" y="783.50"></text></g><g><title>__softirqentry_text_start (125 samples, 0.03%)</title><rect x="99.9604%" y="757" width="0.0262%" height="15" fill="rgb(247,142,41)" fg:x="476555" fg:w="125"/><text x="100.2104%" y="767.50"></text></g><g><title>net_rx_action (84 samples, 0.02%)</title><rect x="99.9690%" y="741" width="0.0176%" height="15" fill="rgb(245,51,29)" fg:x="476596" fg:w="84"/><text x="100.2190%" y="751.50"></text></g><g><title>virtnet_poll_tx (79 samples, 0.02%)</title><rect x="99.9700%" y="725" width="0.0166%" height="15" fill="rgb(228,209,43)" fg:x="476601" fg:w="79"/><text x="100.2200%" y="735.50"></text></g><g><title>__vdso_clock_gettime (957 samples, 0.20%)</title><rect x="99.7905%" y="837" width="0.2007%" height="15" fill="rgb(233,185,9)" fg:x="475745" fg:w="957"/><text x="100.0405%" y="847.50"></text></g><g><title>__clock_gettime (1,093 samples, 0.23%)</title><rect x="99.7674%" y="853" width="0.2293%" height="15" fill="rgb(226,93,0)" fg:x="475635" fg:w="1093"/><text x="100.0174%" y="863.50"></text></g><g><title>std::time::Instant::now (1,166 samples, 0.24%)</title><rect x="99.7548%" y="901" width="0.2446%" height="15" fill="rgb(245,194,43)" fg:x="475575" fg:w="1166"/><text x="100.0048%" y="911.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1,156 samples, 0.24%)</title><rect x="99.7569%" y="885" width="0.2425%" height="15" fill="rgb(211,145,34)" fg:x="475585" fg:w="1156"/><text x="100.0069%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::now (1,156 samples, 0.24%)</title><rect x="99.7569%" y="869" width="0.2425%" height="15" fill="rgb(231,228,28)" fg:x="475585" fg:w="1156"/><text x="100.0069%" y="879.50"></text></g><g><title>worker-6 (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1285" width="10.0800%" height="15" fill="rgb(236,149,4)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1295.50">worker-6</text></g><g><title>clone (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1269" width="10.0800%" height="15" fill="rgb(234,114,38)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1279.50">clone</text></g><g><title>start_thread (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1253" width="10.0800%" height="15" fill="rgb(246,132,51)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1263.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1237" width="10.0800%" height="15" fill="rgb(251,137,22)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1247.50">std::sys::unix:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1221" width="10.0800%" height="15" fill="rgb(243,59,52)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1231.50">&lt;alloc::boxed::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1205" width="10.0800%" height="15" fill="rgb(239,56,28)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1215.50">&lt;alloc::boxed::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1189" width="10.0800%" height="15" fill="rgb(218,168,27)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1199.50">core::ops::func..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1173" width="10.0800%" height="15" fill="rgb(232,165,11)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1183.50">std::thread::Bu..</text></g><g><title>std::panic::catch_unwind (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1157" width="10.0800%" height="15" fill="rgb(253,55,41)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1167.50">std::panic::cat..</text></g><g><title>std::panicking::try (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1141" width="10.0800%" height="15" fill="rgb(233,206,24)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1151.50">std::panicking:..</text></g><g><title>std::panicking::try::do_call (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1125" width="10.0800%" height="15" fill="rgb(220,199,8)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1135.50">std::panicking:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1109" width="10.0800%" height="15" fill="rgb(254,65,26)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1119.50">&lt;core::panic::u..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1093" width="10.0800%" height="15" fill="rgb(253,102,23)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1103.50">std::thread::Bu..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1077" width="10.0800%" height="15" fill="rgb(231,103,35)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1087.50">std::sys_common..</text></g><g><title>uppercut::pool::Worker::new::{{closure}} (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1061" width="10.0800%" height="15" fill="rgb(238,26,10)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1071.50">uppercut::pool:..</text></g><g><title>std::panic::catch_unwind (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1045" width="10.0800%" height="15" fill="rgb(234,191,34)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1055.50">std::panic::cat..</text></g><g><title>std::panicking::try (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1029" width="10.0800%" height="15" fill="rgb(206,210,9)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1039.50">std::panicking:..</text></g><g><title>std::panicking::try::do_call (48,056 samples, 10.08%)</title><rect x="89.9197%" y="1013" width="10.0800%" height="15" fill="rgb(219,155,3)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1023.50">std::panicking:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (48,056 samples, 10.08%)</title><rect x="89.9197%" y="997" width="10.0800%" height="15" fill="rgb(221,62,52)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="1007.50">&lt;core::panic::u..</text></g><g><title>uppercut::pool::Worker::new::{{closure}}::{{closure}} (48,056 samples, 10.08%)</title><rect x="89.9197%" y="981" width="10.0800%" height="15" fill="rgb(215,197,36)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="991.50">uppercut::pool:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (48,056 samples, 10.08%)</title><rect x="89.9197%" y="965" width="10.0800%" height="15" fill="rgb(226,222,6)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="975.50">&lt;alloc::boxed::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (48,056 samples, 10.08%)</title><rect x="89.9197%" y="949" width="10.0800%" height="15" fill="rgb(215,58,28)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="959.50">core::ops::func..</text></g><g><title>uppercut::core::start_actor_runtime::{{closure}} (48,056 samples, 10.08%)</title><rect x="89.9197%" y="933" width="10.0800%" height="15" fill="rgb(212,148,2)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="943.50">uppercut::core:..</text></g><g><title>uppercut::core::event_loop (48,056 samples, 10.08%)</title><rect x="89.9197%" y="917" width="10.0800%" height="15" fill="rgb(208,21,42)" fg:x="428687" fg:w="48056"/><text x="90.1697%" y="927.50">uppercut::core:..</text></g><g><title>all (476,744 samples, 100%)</title><rect x="0.0000%" y="1301" width="100.0000%" height="15" fill="rgb(209,107,26)" fg:x="0" fg:w="476744"/><text x="0.2500%" y="1311.50"></text></g></svg></svg>